<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.Reporting</name>
    </assembly>
    <members>
        <member name="T:Telerik.Reporting.Barcodes.Encoder">
            <summary>
            Defines the base class for all barcode encoders.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Barcodes.Encoder.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Encoder1D">
            <summary>
            Defines the base class for all 1D barcode encoders.
            </summary>    
        </member>
        <member name="M:Telerik.Reporting.Barcodes.Encoder1D.#ctor">
            <summary>
            Represents the default constructor of the <see cref="T:Telerik.Reporting.Barcodes.Encoder1D"></see> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Barcodes.Encoder1D.ShowText">
            <summary>
            Gets or sets a value indicating whether the barcode should display a 
            human-readable text representation of the encoded value.
            </summary>
            <value>
            <B>true</B> if the barcode should display text, otherwise <B>false</B>.
            </value>
            <example>
            This example illustrates how to set the ShowText property.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_Common_Settings" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_Common_Settings" />
            </example>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Product1DEncoder">
            <summary>
            Defines the Product1 encoder class.
            </summary>    
        </member>
        <member name="T:Telerik.Reporting.Barcodes.UPCAEncoder">
            <summary>
            Defines the UPCA encoder class.
            </summary>    
        </member>
        <member name="T:Telerik.Reporting.Barcodes.UPCEEncoder">
            <summary>
            Defines the UPCE encoder class.
            </summary>    
        </member>
        <member name="T:Telerik.Reporting.Barcodes.EAN13Encoder">
            <summary>
            Defines the EAN13 encoder class.
            </summary>    
        </member>
        <member name="T:Telerik.Reporting.Barcodes.EAN8Encoder">
            <summary>
            Defines the EAN8 encoder class.
            </summary>    
        </member>
        <member name="T:Telerik.Reporting.Barcodes.CodabarEncoder">
            <summary>
            Defines the Codabar encoder class.
            </summary>    
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Code11Encoder">
            <summary>
            Defines the Code11 encoder class.
            </summary>    
        </member>
        <member name="T:Telerik.Reporting.Barcodes.CodeMSIEncoder">
            <summary>
            Defines the CodeMSI encoder class.
            </summary>    
        </member>
        <member name="T:Telerik.Reporting.Barcodes.PostnetEncoder">
            <summary>
            Defines the Postnet encoder class.
            </summary>    
        </member>
        <member name="T:Telerik.Reporting.Barcodes.UPCSupplement2Encoder">
            <summary>
            Defines the UPCSupplement2 encoder class.
            </summary>    
        </member>
        <member name="T:Telerik.Reporting.Barcodes.UPCSupplement5Encoder">
            <summary>
            Defines the UPCSupplement5 encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Code128Encoder">
            <summary>
            Defines the Code128 encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Code128CEncoder">
            <summary>
            Defines the Code128C encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.EAN128CEncoder">
            <summary>
            Defines the EAN128C encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.EAN128Encoder">
            <summary>
            Defines the EAN128 encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Code128AEncoder">
            <summary>
            Defines the Code128A encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.EAN128AEncoder">
            <summary>
            Defines the EAN128A encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Code128BEncoder">
            <summary>
            Defines the Code128B encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.EAN128BEncoder">
            <summary>
            Defines the EAN128B encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Code25Encoder">
            <summary>
            Defines the Code25 encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Code25InterleavedEncoder">
            <summary>
            Defines the Code25Interleaved encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Code25StandardEncoder">
            <summary>
            Defines the Code25Standard encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Code93Encoder">
            <summary>
            Defines the Code93 encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Code93ExtendedEncoder">
            <summary>
            Defines the Code93Extended encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Code39Encoder">
            <summary>
            Defines the Code39 encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Code39ExtendedEncoder">
            <summary>
            Defines the Code39Extended encoder class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.Encoder2D">
            <summary>
            Defines the base class for all 2D barcode encoders.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.PDF417Encoder">
            <summary>
            Defines the PDF417 encoder class.
            </summary>    
        </member>
        <member name="M:Telerik.Reporting.Barcodes.PDF417Encoder.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Telerik.Reporting.Barcodes.PDF417Encoder"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Barcodes.PDF417Encoder.Columns">
            <summary>
            Gets or sets the number of the columns.
            </summary>
            <example>
            This example illustrates how to set the Columns property.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_PDF417Encoder_Settings" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_PDF417Encoder_Settings" />
            </example>
        </member>
        <member name="P:Telerik.Reporting.Barcodes.PDF417Encoder.Rows">
            <summary>
            Gets or sets the number of the rows.
            </summary>
            <example>
            This example illustrates how to set the Rows property.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_PDF417Encoder_Settings" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_PDF417Encoder_Settings" />
            </example>
        </member>
        <member name="P:Telerik.Reporting.Barcodes.PDF417Encoder.Encoding">
            <summary>
            Gets or sets the encoding mode.
            </summary>
            <example>
            This example illustrates how to set the Encoding property.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_PDF417Encoder_Settings" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_PDF417Encoder_Settings" />
            </example>
        </member>
        <member name="P:Telerik.Reporting.Barcodes.PDF417Encoder.ErrorCorrectionLevel">
            <summary>
            Gets or sets the error correction level.
            </summary>
            <example>
            This example illustrates how to set the ErrorCorrectionLevel property.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_PDF417Encoder_Settings" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_PDF417Encoder_Settings" />
            </example>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.PDF417.EncodingMode">
            <summary>
            The EncodingMode enumeration determines the type of the acceptable data.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.PDF417.EncodingMode.Auto">
            <summary>
            Auto mode.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.PDF417.EncodingMode.Byte">
            <summary>
            Accepts byte data.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.PDF417.EncodingMode.Text">
            <summary>
            Allows text data.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.PDF417.EncodingMode.Numeric">
            <summary>
            Allows numeric data.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.PDF417.TextSubMode.Upper">
            <summary>
            Switch to "Uppercase".
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.PDF417.TextSubMode.Lower">
            <summary>
            Switch to "Lowercase".
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.PDF417.TextSubMode.Mixed">
            <summary>
            Switch to "Mixed".
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.PDF417.TextSubMode.Punctuation">
            <summary>
            Switch to "Punctuation" only for next character.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.QRCodeEncoder">
            <summary>
            Defines the QRCode encoder class.
            </summary>    
        </member>
        <member name="M:Telerik.Reporting.Barcodes.QRCodeEncoder.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Telerik.Reporting.Barcodes.QRCodeEncoder"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Barcodes.QRCodeEncoder.Mode">
            <summary>
            Determines the type of code, such as Numeric, Alphanumeric, Byte or Kanji.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Barcodes.QRCodeEncoder.Version">
            <summary>
            Gets or sets the Version entered by the user.
            </summary>
            <example>
            This example illustrates how to set the Version property.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_QRCodeEncoder_Settings" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_QRCodeEncoder_Settings" />
            </example>
        </member>
        <member name="P:Telerik.Reporting.Barcodes.QRCodeEncoder.ErrorCorrectionLevel">
            <summary>
            Gets or sets the error correction Level.
            </summary>
            <example>
            This example illustrates how to set the ErrorCorrectionLevel property.        
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_QRCodeEncoder_Settings" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_QRCodeEncoder_Settings" />
            </example>
        </member>
        <member name="P:Telerik.Reporting.Barcodes.QRCodeEncoder.ECI">
            <summary>
            Gets or sets the Extended Channel Interpretation (ECI) mode.
            </summary>
            <example>
            This example illustrates how to set the ECI property.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_QRCodeEncoder_Settings" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_QRCodeEncoder_Settings" />
            </example>
        </member>
        <member name="P:Telerik.Reporting.Barcodes.QRCodeEncoder.FNC1">
            <summary>
            Gets or sets the FNC1 entered by the user.
            </summary>
            <example>
            This example illustrates how to set the FNC1 property.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_QRCodeEncoder_Settings" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_QRCodeEncoder_Settings" />
            </example>
        </member>
        <member name="P:Telerik.Reporting.Barcodes.QRCodeEncoder.ApplicationIndicator">
            <summary>
            Gets or sets the ApplicationIndicator entered by the user.
            </summary>
            This example illustrates how to set the ApplicationIndicator property.
            <example>
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_QRCodeEncoder_Settings" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_QRCodeEncoder_Settings" />
            </example>
        </member>
        <member name="M:Telerik.Reporting.Barcodes.QRCode.AlphaNumeric.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Barcodes.QRCode.AlphaNumeric"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.QRCode.KanjiMode">
            <summary>
            Provides methods for encoding and validation of double-byte Kanji characters.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Barcodes.QRCode.KanjiMode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Barcodes.QRCode.KanjiMode"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Barcodes.QRCode.KanjiMode.EncodeData(System.String)">
            <summary>
            This method encodes the data for the Kanji Mode.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Barcodes.QRCode.KanjiMode.ValidateData(System.String)">
            <summary>
            Validates the data,  to ensure no invalid characters are present.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.QRCode.CodeMode">
            <summary>
            Determines the type of code, such as Numeric, Alphanumeric, Byte or Kanji.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.CodeMode.Byte">
            <summary>
            Byte Mode.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.CodeMode.Numeric">
            <summary>
            Allows Numbers [0-9].
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.CodeMode.Alphanumeric">
            <summary>
            Allows characters or numbers.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.CodeMode.Kanji">
            <summary>
            Kanji Mode.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.QRCode.ErrorCorrectionLevel">
            <summary>
            Determines how much data is available for error correction.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ErrorCorrectionLevel.L">
            <summary>
            Low.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ErrorCorrectionLevel.M">
            <summary>
            Medium.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ErrorCorrectionLevel.Q">
            <summary>
            Quartile.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ErrorCorrectionLevel.H">
            <summary>
            High.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.QRCode.ECIMode">
            <summary>
            Determines the Extended Channel Interpretation (ECI) mode, which allows for encoding of characters from other sets.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.ISO8859_7">
            <summary>
            ECI 9.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.ISO8859_6">
            <summary>
            ECI 8.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.ISO8859_5">
            <summary>
            ECI 7.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.ISO8859_4">
            <summary>
            ECI 6.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.ISO8859_3">
            <summary>
            ECI 5.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.ISO8859_2">
            <summary>
            ECI 4.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.ISO8859_1En">
            <summary>
            ECI 3.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.CP437">
            <summary>
            ECI 2.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.ISO8859_1">
            <summary>
            ECI 1.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.ISO8859_8">
            <summary>
            ECI 10.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.ISO8859_9">
            <summary>
            ECI 11.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.ISO8859_11">
            <summary>
            ECI 13.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.ISO8859_13">
            <summary>
            ECI 15.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.ISO8859_15">
            <summary>
            ECI 17.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.Windows1250">
            <summary>
            ECI 21.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.Windows1251">
            <summary>
            ECI 22.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.Windows1252">
            <summary>
            ECI 23.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.Windows1256">
            <summary>
            ECI 24.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.UTF8">
            <summary>
            UTF-8.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.ECIMode.ISO646US">
            <summary>
            ECI 27.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcodes.QRCode.FNC1Mode">
            <summary>
            Signifies application of special formatting to the code data.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.FNC1Mode.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.FNC1Mode.FirstPosition">
            <summary>
            FNC 1 in first position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Barcodes.QRCode.FNC1Mode.SecondPosition">
            <summary>
            FNC 1 in second position.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.IExtension">
            <summary>
            Telerik Reporting extension
            </summary>
        </member>
        <member name="M:Telerik.Reporting.IExtension.Initialize(System.Collections.Hashtable)">
            <summary>
            Initializes the current extension with default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.IRenderingExtension.Render(Telerik.Reporting.Processing.Report,System.Collections.Hashtable,System.Collections.Hashtable,Telerik.Reporting.Processing.CreateStream,Telerik.Reporting.Processing.EvaluateHeaderFooterExpressions)">
            <summary>
            Provides the mechanism for implementing new rendering extension.
            </summary>
            <param name="report">The report that has to be rendered.</param>
            <param name="renderingContext">Contains entries for rendering engine internal usage.</param>
            <param name="deviceInfo">The rendering extension parameters.</param>
            <param name="createStreamCallback">A <see cref="T:Telerik.Reporting.Processing.CreateStream"/> delegate.</param>
            <param name="evalHeaderFooterCallback">A <see cref="T:Telerik.Reporting.Processing.EvaluateHeaderFooterExpressions"/> delegate.</param>
            <returns><B>True</B> if the rendering operation is successfull; otherwise returns <B>False</B>.</returns>
            <remarks>The stream created by the CreateStream delegate is used by the Reporting 
            engine and for best performance it is not advisable to be closed (it will be closed by the Reporting engine).</remarks>
        </member>
        <member name="T:Telerik.Reporting.Cache.Interfaces.ICache">
            <summary>
            Provides a mechanism for managing the internal cache used by the reporting engine and the viewers.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.ICache.HasValue(System.String)">
            <summary>
            Determines if a value with the specified key exists in the cache.
            </summary>
            <param name="key">
            Specifies the key used to identify the value in the cache.
            </param>
            <returns>
            True - if a value with the specified key exists, False - otherwise.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.ICache.GetValue(System.String)">
            <summary>
            Retrieves the value with the specified key from the cache.
            </summary>
            <param name="key">
            Specifies the key used to identify the value in the cache.
            </param>
            <returns>
            The value with the specified key, or null if no such value exists.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.ICache.SetValue(System.String,System.Byte[])">
            <summary>
            Stores the specified value with the given key in the cache.
            </summary>
            <param name="key">
            Specifies the key used to identify the value in the cache.
            </param>
            <param name="value">
            Specifies the value to store in the cache with the given key.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.ICache.Clear">
            <summary>
            Clears all values and their corresponding keys from the cache.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Cache.Interfaces.ICacheProvider">
            <summary>
            Provides a mechanism for creating a specific instance of a cache.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.ICacheProvider.CreateCache(System.Collections.IDictionary)">
            <summary>
            Creates a new cache using the specified cache information.
            </summary>
            <param name="parameters">
            Specifies the parameters used to create the cache.
            </param>
            <returns>
            The newly created instance of the cache.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.Cache.Interfaces.IStorage">
            <summary>
            Represents a storage object used from the reporting engine to store
            internal state and caching rendered reports
            </summary>
            <remarks>
            Implement this interface using a storage technology of your flavor 
            in order to have your reporting engine instance storing its state and cached report in it.<br/>
            The storage may store single values - string or byte array, and a set of unordered string values.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorage.AcquireLock(System.String)">
            <summary>
            Acquires a lock on a named resource.
            </summary>
            <remarks>
            Acquires a lock on a named resource and returns a disposable lock object.
            When the lock object owner disposes it, the lock is released.
            </remarks>
            <param name="key">
            The name of the lock. When a lock with particular key is acquired,
            a subsequent call on AcuireLock with the same key should wait until the original lock is 
            released (disposed).
            </param>
            <returns>
            A disposable lock object. When disposed from the lock object owner, 
            the lock of the used key is released.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorage.SetString(System.String,System.String)">
            <summary>
            Stores a string value under particular key.
            </summary>
            <param name="key">The key that denotes the stored string value.</param>
            <param name="value">The value that is stored.</param>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorage.SetBytes(System.String,System.Byte[])">
            <summary>
            Stores a byte array value under particular key.
            </summary>
            <param name="key">The key that denotes the stored byte array value.</param>
            <param name="value">The value that is stored.</param>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorage.GetString(System.String)">
            <summary>
            Retrieves a string value stored under particular key.
            </summary>
            <param name="key">The key that denotes the stored string value.</param>
            <returns>
            The string value stored under the given key. If no such key is found, null (Nothing).
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorage.GetBytes(System.String)">
            <summary>
            Retrieves a byte array value stored under particular key.
            </summary>
            <param name="key">The key that denotes the stored byte array value.</param>
            <returns>
            The byte array value stored under the given key. If no such key is found, null (Nothing).
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorage.Delete(System.String)">
            <summary>
            Deletes a key with its value (string or byte array) from the storage.
            </summary>
            <param name="key">
            The key that denotes the stored value that should be removed.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorage.Exists(System.String)">
            <summary>
            Retrieves a value indicating if a single value (string or byte array)
            exists in the storage.
            </summary>
            <param name="key">
            The key that denotes the stored value.
            </param>
            <returns>
            True if the key with its value exists in the storage,
            otherwise false.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorage.ExistsInSet(System.String,System.String)">
            <summary>
            Retrieves a value indicating if a set of values 
            exists in the storage.
            </summary>
            <param name="key">
            The key that denotes the stored set value.
            </param>
            <returns>
            True if the key with its value exists in the storage,
            otherwise false.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorage.GetCountInSet(System.String)">
            <summary>
            Retrieves the count of the values in a set value stored in the storage.
            </summary>
            <param name="key">
            The key that denotes the stored set value.
            </param>
            <returns>The count of the values in the set. If no such set exists, zero.</returns>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorage.GetAllMembersInSet(System.String)">
            <summary>
            Retrieves all members in a set of string values.
            </summary>
            <param name="key">
            The key that denotes the stored set value.
            </param>
            <returns>
            An enumerable retrieving each value of the set denoted from the given key.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorage.AddInSet(System.String,System.String)">
            <summary>
            Adds a single string value to a set of values denoted from the given key.
            </summary>
            <remarks>
            If a set with the given key does not exist in the storage, such set is created
            and the value is added as its member.
            </remarks>
            <param name="key">
            The key that denotes the stored set value.
            </param>
            <param name="value">
            The value that is added to the set.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorage.DeleteInSet(System.String,System.String)">
            <summary>
            Deletes a single string value from a set of values denoted from the given key.
            </summary>
            <param name="key">
            The key that denotes the stored set value.
            </param>
            <param name="value">
            The value that should be deleted from the given set.
            </param>
            <returns>
            True if set with the given key is found and it contained the given value before deleted.
            Otherwise false.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorage.DeleteSet(System.String)">
            <summary>
            Deletes set of values denoted by the given key.
            </summary>
            <param name="key">
            The key that denotes the stored set.
            </param>
            <returns>
            True if the given key is found before deleted.
            Otherwise false.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.Cache.Interfaces.IStorageProvider">
            <summary>
            Represents an object which creates instances of particular storage implementation.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorageProvider.CreateStorage">
            <summary>
            Creates an instance of storage.
            </summary>
            <returns>The newly created storage instance.</returns>
        </member>
        <member name="M:Telerik.Reporting.Cache.Interfaces.IStorageProvider.Initialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes the provider instance with parameters used 
            to configure each newly created storage instance
            </summary>
            <param name="parameters">Dictionary of name-value pairs
            representing storage configuration parameters.</param>
        </member>
        <member name="T:Telerik.Reporting.Cache.MsSqlServerStorage">
            <summary>
            <see cref="T:Telerik.Reporting.Cache.Interfaces.IStorage"/>
            implementation utilizing the MS SQL server database engine.
            </summary>
            <remarks>
            <para>
            MsSqlServerStorage connects to SQL server using the 
            .NET Framework Data Provider for SQL Server
            (<a href="http://msdn.microsoft.com/en-us/library/system.data.sqlclient(v=vs.100).aspx">System.Data.SqlClient Namespace</a>).
            </para>
            <para>
            The storage needs a host database with specific tables and 
            stored procedures which may be created in dedicated or shared
            database. The necessary SQL objects may be created using the 
            DatabaseCacheConfigurator tool (located under the Telerik
            Reporting installation folder / Tools) or manually executing
            the follow DDL script. It adds all needed objects to an existing
            MS SQL database (execute in the context of existing database):
            <code lang="SQL" source="CodeSnippets\CS\API\Telerik\Reporting\Cache\MsSqlServerStorage\DDL.sql"/>
            </para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.#ctor(System.String)">
            <summary>
            Creates and initializes an instance of 
            MsSqlServerStorage.
            </summary>
            <param name="connectionString">
            The connection string to the backend storage.
            <a href="http://msdn.microsoft.com/en-us/library/ms254978(v=vs.110).aspx">Connection Strings in ADO.NET</a>
            </param>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.AcquireLock(System.String)">
            <summary>
            Acquires a lock on a named resource.
            </summary>
            <seealso cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.AcquireLock(System.String)"/>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.Exists(System.String)">
            <summary>
            Retrieves a value indicating if a single value (string or byte array)
            exists in the storage.
            </summary>
            <seealso cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.Exists(System.String)"/>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.SetString(System.String,System.String)">
            <summary>
            Stores a string value under particular key.
            </summary>
            <seealso cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.SetString(System.String,System.String)"/>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.SetBytes(System.String,System.Byte[])">
            <summary>
            Stores a byte array value under particular key.
            </summary>
            <seealso cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.SetBytes(System.String,System.Byte[])"/>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.GetString(System.String)">
            <summary>
            Retrieves a string value stored under particular key.
            </summary>
            <seealso cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.GetString(System.String)"/>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.GetBytes(System.String)">
            <summary>
            Retrieves a byte array value stored under particular key.
            </summary>
            <seealso cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.GetBytes(System.String)"/>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.Delete(System.String)">
            <summary>
            Deletes a key with its value (string or byte array) from the storage.
            </summary>
            <seealso cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.Delete(System.String)"/>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.ExistsInSet(System.String,System.String)">
            <summary>
            Retrieves a value indicating if a set of values 
            exists in the storage.
            </summary>
            <seealso cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.ExistsInSet(System.String,System.String)"/>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.GetCountInSet(System.String)">
            <summary>
            Retrieves the count of the values in a set value stored in the storage.
            </summary>
            <seealso cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.GetCountInSet(System.String)"/>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.GetAllMembersInSet(System.String)">
            <summary>
            Retrieves all members in a set of string values.
            </summary>
            <seealso cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.GetAllMembersInSet(System.String)"/>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.AddInSet(System.String,System.String)">
            <summary>
            Adds a single string value to a set of values denoted from the given key.
            </summary>
            <seealso cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.AddInSet(System.String,System.String)"/>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.DeleteInSet(System.String,System.String)">
            <summary>
            Deletes a single string value from a set of values denoted from the given key.
            </summary>
            <seealso cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.DeleteInSet(System.String,System.String)"/>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.DeleteSet(System.String)">
            <summary>
            Deletes a set of values denoted by the given key.
            </summary>
            <seealso cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.DeleteInSet(System.String,System.String)"/>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.CreateSchema">
            <summary>
            Utility method. Creates the data schema (tables and stored procedures) needed from the storage.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Cache.MsSqlServerStorage.ClearAllData">
            <summary>
            Utility method. Clears all data from the storage data tables.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Telerik.Reporting.Cache.CacheStorage" -->
        <member name="M:Telerik.Reporting.Cache.CacheStorage.#ctor(Telerik.Reporting.Cache.Interfaces.ICache)">
            <summary>
            Creates an instance of the storage.
            </summary>
            <param name="cache">The target cache instance which will contain the stored values.</param>
        </member>
        <member name="M:Telerik.Reporting.Cache.CacheStorage.AcquireLock(System.String)">
            <summary>
            Acquires a lock on a named resource.
            </summary>
            <param name="key">
            The name of the lock. 
            </param>
            <returns>
            A disposable lock object.
            </returns>
            <remarks>
            Implements the <see cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.AcquireLock(System.String)"/> interface member.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Cache.CacheStorage.Exists(System.String)">
            <summary>
            Retrieves a value indicating if a single value (string or byte array)
            exists in the storage.
            </summary>
            <param name="key">
            The key that denotes the stored value.
            </param>
            <returns>
            True if the key with its value exists in the storage,
            otherwise false.
            </returns>
            <remarks>
            Implements the <see cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.Exists(System.String)"/> interface member.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Cache.CacheStorage.SetString(System.String,System.String)">
            <summary>
            Stores a string value under particular key.
            </summary>
            <param name="key">The key that denotes the stored string value.</param>
            <param name="value">The value that is stored.</param>
            <remarks>
            Implements the <see cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.SetString(System.String,System.String)"/> interface member.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Cache.CacheStorage.SetBytes(System.String,System.Byte[])">
            <summary>
            Stores a byte array value under particular key.
            </summary>
            <param name="key">The key that denotes the stored byte array value.</param>
            <param name="value">The value that is stored.</param>
            <remarks>
            Implements the <see cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.SetBytes(System.String,System.Byte[])"/> interface member.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Cache.CacheStorage.GetString(System.String)">
            <summary>
            Retrieves a string value stored under particular key.
            </summary>
            <param name="key">The key that denotes the stored string value.</param>
            <returns>
            The string value stored under the given key. If no such key is found, null (Nothing).
            </returns>
            <remarks>
            Implements the <see cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.GetString(System.String)"/> interface member.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Cache.CacheStorage.GetBytes(System.String)">
            <summary>
            Retrieves a byte array value stored under particular key.
            </summary>
            <param name="key">The key that denotes the stored byte array value.</param>
            <returns>
            The byte array value stored under the given key. If no such key is found, null (Nothing).
            </returns>
            <remarks>
            Implements the <see cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.GetBytes(System.String)"/> interface member.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Cache.CacheStorage.Delete(System.String)">
            <summary>
            Deletes a key with its value (string or byte array) from the storage.
            </summary>
            <param name="key">
            The key that denotes the stored value that should be removed.
            </param>
            <remarks>
            Implements the <see cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.Delete(System.String)"/> interface member.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Cache.CacheStorage.ExistsInSet(System.String,System.String)">
            <summary>
            Retrieves a value indicating if a set of values 
            exists in the storage.
            </summary>
            <param name="key">
            The key that denotes the stored set value.
            </param>
            <returns>
            True if the key with its value exists in the storage,
            otherwise false.
            </returns>
            <remarks>
            Implements the <see cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.ExistsInSet(System.String,System.String)"/> interface member.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Cache.CacheStorage.GetCountInSet(System.String)">
            <summary>
            Retrieves the count of the values in a set value stored in the storage.
            </summary>
            <param name="key">
            The key that denotes the stored set value.
            </param>
            <returns>The count of the values in the set. If no such set exists, zero.</returns>
            <remarks>
            Implements the <see cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.GetCountInSet(System.String)"/> interface member.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Cache.CacheStorage.GetAllMembersInSet(System.String)">
            <summary>
            Retrieves all members in a set of string values.
            </summary>
            <param name="key">
            The key that denotes the stored set value.
            </param>
            <returns>
            An enumerable retrieving each value of the set denoted from the given key.
            </returns>
            <remarks>
            Implements the <see cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.GetAllMembersInSet(System.String)"/> interface member.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Cache.CacheStorage.AddInSet(System.String,System.String)">
            <summary>
            Adds a single string value to a set of values denoted from the given key.
            </summary>
            <param name="key">
            The key that denotes the stored set value.
            </param>
            <param name="value">
            The value that is added to the set.
            </param>
            <remarks>
            Implements the <see cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.AddInSet(System.String,System.String)"/> interface member.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Cache.CacheStorage.DeleteInSet(System.String,System.String)">
            <summary>
            Deletes a single string value from a set of values denoted from the given key.
            </summary>
            <param name="key">
            The key that denotes the stored set value.
            </param>
            <param name="value">
            The value that should be deleted from the given set.
            </param>
            <returns>
            True if set with the given key is found and it contained the given value before deleted.
            Otherwise false.
            </returns>
            <remarks>
            Implements the <see cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.DeleteInSet(System.String,System.String)"/> interface member.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Cache.CacheStorage.DeleteSet(System.String)">
            <summary>
            Deletes set of values denoted by the given key.
            </summary>
            <param name="key">
            The key that denotes the stored set.
            </param>
            <returns>
            True if set with the given key is found before deleted.
            Otherwise false.
            </returns>
            <remarks>
            Implements the <see cref="M:Telerik.Reporting.Cache.Interfaces.IStorage.DeleteSet(System.String)"/> interface member.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.Cache.File.FileStorage">
            <summary>
            <see cref="T:Telerik.Reporting.Cache.Interfaces.IStorage"/>
            implementation utilizing the file system storage.
            </summary>
            <remarks>
            FileStorage is appropriate for
            single instance deployment scenario only.
            </remarks>
            <seealso cref="T:Telerik.Reporting.Cache.MsSqlServerStorage"/>
            <seealso cref="T:Telerik.Reporting.Cache.StackExchangeRedis.RedisStorage"/>
        </member>
        <member name="M:Telerik.Reporting.Cache.File.FileStorage.#ctor">
            <summary>
            Creates an instance of the storage. The files representing the stored values
            go under the current user's temporary folder.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Cache.File.FileStorage.#ctor(System.String)">
            <summary>
            Creates an instance of the storage.
            </summary>
            <param name="directory">The directory which will contain the files representing 
            the stored values.</param>
        </member>
        <member name="P:Telerik.Reporting.Cache.File.FileStorage.Directory">
            <summary>
            Gets the root directory where data will be stored.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Cache.LockMonitor">
            <summary>
            Class for locking used under Linux, because Semaphores are Windows-specific.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.RegionClickEventArgs">
            <summary>
            Event arguments when a chart element is clicked.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.RegionClickEventArgs.activeRegion">
            <summary>
            Reverse link to a parent
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RegionClickEventArgs.#ctor(Telerik.Reporting.Charting.IActiveRegion)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Charting.RegionClickEventArgs"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.RegionClickEventArgs.Element">
            <summary>
            Reverse link to a parent
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ActiveRegion">
            <summary>Represents the active region of the chart element/item.</summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.StateManagedObject">
            <summary>
            Base class implements IStateManager
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.IChartingStateManagedItem">
            <summary>
            Common interface for a State managed collection items
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.IChartingStateManager">
            <summary>
            The common interface for all chart elements support View State tracking
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.IChartingStateManager.LoadViewState(System.Object)">
            <summary>
            Loads data from a View State
            </summary>
            <param name="state">View Sate to load data from</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.IChartingStateManager.SaveViewState">
            <summary>
            Saves object data to a View State
            </summary>
            <returns>Saved View State</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.IChartingStateManager.TrackViewState">
            <summary>
            Tracks view state changes
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.IChartingStateManagedItem.SetDirty">
            <summary>
            Sets item dirty state
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.StateManagedObject.Telerik#Reporting#Charting#IChartingStateManager#LoadViewState(System.Object)">
            <summary>
            Loads data from a view state
            </summary>
            <param name="state">View state to load data from</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.StateManagedObject.Telerik#Reporting#Charting#IChartingStateManager#SaveViewState">
            <summary>
            Saves object data to a view state
            </summary>
            <returns>Saved view state object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.StateManagedObject.Telerik#Reporting#Charting#IChartingStateManager#TrackViewState">
            <summary>
            Tracks view state changes
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.StateManagedObject.CloneState">
            <summary>
            Makes a view state clone
            </summary>
            <returns>StateBag</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.StateManagedObject.SaveViewState">
            <summary>
            Saves object data to a view state
            </summary>
            <returns>Saved view state object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.StateManagedObject.TrackViewState">
            <summary>
            Tracks view state changes
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.StateManagedObject.LoadViewState(System.Object)">
            <summary>
            Loads data from a view state
            </summary>
            <param name="state">View state to load data from</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.StateManagedObject.SetDirty">
            <summary>
            Sets the item dirty state
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.StateManagedObject.ToString">
            <exclude/>
            <excludetoc/>
            <summary>
            ToString() override. Used in the properties grid to avoid object type showing.
            </summary>
            <returns>Empty string</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.StateManagedObject.ViewStateIgnoresCase">
            <summary>
            Gets if view sate should ignore case
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.StateManagedObject.ViewState">
            <summary>
            Sate bag to store view state content
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.StateManagedObject.Telerik#Reporting#Charting#IChartingStateManager#IsTrackingViewState">
            <summary>
            Is view state tracking changes
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ActiveRegion.activeRegionParent">
            <summary>
            Parent chart element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ActiveRegion.activeRegionList">
            <summary>
            List contains all regions for element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ActiveRegion.#ctor">
            <summary>Creates a new instance of the class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ActiveRegion.#ctor(System.Object)">
            <summary>Creates a new instance of the class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ActiveRegion.CheckPoint(System.Drawing.PointF,System.Boolean)">
            <summary>
            Checks whether point lies inside region
            </summary>
            <param name="point">The point.</param>
            <param name="onclick">if set to <c>true</c> [onclick].</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ActiveRegion.CheckPoint(System.Drawing.PointF)">
            <summary>
            Checks whether point lies inside region
            </summary>
            <param name="point">The point.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ActiveRegion.GoToUrl">
            <summary>
            Opens a web browser to the specified URL
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ActiveRegion.IsEmpty">
            <summary>
            Returns true if ActiveRegion contains no data
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ActiveRegion.GetActiveRegions(System.Drawing.PointF,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Determine on which elements(if its visually intersect) of chart click occur
            </summary>
            <param name="point">Click coordinates</param>
            <param name="container">Container object</param>
            <returns>Active region object collection</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ActiveRegion.HasClickEvent">
            <summary>
            Has click event or not
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ActiveRegion.OnClick">
            <summary>
            Called after a Click event
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ActiveRegion.OnClick(System.Object)">
            <summary>
            Called when [click].
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ActiveRegion.Parent">
            <summary>Reference to the parent.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ActiveRegion.Region">
            <summary>
             Define a graphic path
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ActiveRegion.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ActiveRegion.Tooltip">
            <summary>
            Tooltip
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ActiveRegion.Attributes">
            <summary>
            Attributes
            </summary>
        </member>
        <member name="E:Telerik.Reporting.Charting.ActiveRegion.Click">
            <summary>
            Fires when the chart element to which the active region belongs is
            clicked.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.IActiveRegion">
            <exclude/>
            <excludetoc/>
            <summary>Base Interface for classes which support click feature</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.IActiveRegion.ActiveRegion">
            <summary>
            Active region object
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartGraphics">
            <summary>
            Chart graphics class. Wrapper over the System.Drawing.Graphics.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartGraphics.chartGraphicsGraphics">
            <summary>
            Base System.Drawing.Graphics object
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartGraphics.translateTransformDefaultX">
            <summary>
            Fixed displacement for X coordinate
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartGraphics.translateTransformDefaultY">
            <summary>
            Fixed displacement for Y coordinate
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartGraphics.translateTransformDefaultOrder">
            <summary>
            Default translate transform order
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.TranslateTransformDefault">
            <summary>
            Apply TranslateTransform with fixed displacements
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DropTranslateTransformDefault">
            <summary>
            Apply TranslateTransform with fixed negative displacements
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.#ctor(System.Drawing.Graphics)">
            <summary>
            Create instance of class
            </summary>
            <param name="graphics">System.Drawing.Graphics object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.TranslateTransformDefault(System.Single,System.Single)">
            <summary>
            Apply TranslateTransform with fixed displacements and sets its
            </summary>
            <param name="dx">Fixed displacement for X coordinate</param>
            <param name="dy">Fixed displacement for Y coordinate</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.TranslateTransformDefault(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
            Apply TranslateTransform with fixed displacements and sets its
            </summary>
            <param name="dx">Fixed displacement for X coordinate</param>
            <param name="dy">Fixed displacement for Y coordinate</param>
            <param name="order">Matrix order</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.TranslateTransformDefaultAdd(System.Single,System.Single)">
            <summary>
            Changing fixed displacements
            </summary>
            <param name="dx">Fixed displacement for X coordinate</param>
            <param name="dy">Fixed displacement for Y coordinate</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.AddMetafileComment(System.Byte[])">
            <summary>
            Adds a comment to the current System.Drawing.Imaging.Metafile.
            </summary>
            <param name="data">Array of bytes that contains the comment.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.BeginContainer">
            <summary>
            Saves a graphics container with the current state of this System.Drawing.Graphics
                and opens and uses a new graphics container.
            </summary>
            <return>
            This method returns a System.Drawing.Drawing2D.GraphicsContainer that represents
                the state of this System.Drawing.Graphics at the time of the method call.
            </return>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.BeginContainer(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
            <summary>
            Saves a graphics container with the current state of this System.Drawing.Graphics
                and opens and uses a new graphics container with the specified scale transformation.
            </summary>
            <param name="dstrect">System.Drawing.Rectangle structure that, together with the srcrect parameter,
                specifies a scale transformation for the container.</param>
            <param name="srcrect">System.Drawing.Rectangle structure that, together with the dstrect parameter,
                specifies a scale transformation for the container.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure for the container.</param>
            <returns>This method returns a System.Drawing.Drawing2D.GraphicsContainer that represents
                the state of this System.Drawing.Graphics at the time of the method call.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.BeginContainer(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
            <summary>
            Saves a graphics container with the current state of this System.Drawing.Graphics
                and opens and uses a new graphics container with the specified scale transformation.
            </summary>
            <param name="dstrect">System.Drawing.RectangleF structure that, together with the srcrect parameter,
                specifies a scale transformation for the new graphics container.</param>
            <param name="srcrect">System.Drawing.RectangleF structure that, together with the dstrect parameter,
                specifies a scale transformation for the new graphics container.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure for the container.</param>
            <returns>This method returns a System.Drawing.Drawing2D.GraphicsContainer that represents
                the state of this System.Drawing.Graphics at the time of the method call.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.Clear(System.Drawing.Color)">
            <summary>
            Clears the entire drawing surface and fills it with the specified background
                color.
            </summary>
            <param name="color">System.Drawing.Color structure that represents the background color of the
                drawing surface.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size)">
            <summary>
            Performs a bit-block transfer of color data, corresponding to a rectangle
                of pixels, from the screen to the drawing surface of the System.Drawing.Graphics.
            </summary>
            <param name="upperLeftSource">The point at the upper-left corner of the source rectangle.</param>
            <param name="upperLeftDestination">The point at the upper-left corner of the destination rectangle.</param>
            <param name="blockRegionSize">The size of the area to be transferred.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.CopyFromScreen(System.Drawing.Point,System.Drawing.Point,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
             <summary>
             Performs a bit-block transfer of color data, corresponding to a rectangle
                 of pixels, from the screen to the drawing surface of the System.Drawing.Graphics.
             </summary>
             <param name="upperLeftSource">The point at the upper-left corner of the source rectangle.</param>
             <param name="upperLeftDestination">The point at the upper-left corner of the destination rectangle.</param>
             <param name="blockRegionSize">The size of the area to be transferred.</param>
             <param name="copyPixelOperation">One of the System.Drawing.CopyPixelOperation values.</param>
             <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">CopyPixelOperation is not a member of System.Drawing.CopyPixelOperation.</exception>
             <exception cref="T:System.ComponentModel.Win32Exception">The operation failed.</exception>
            
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
            <summary>
            Performs a bit-block transfer of the color data, corresponding to a rectangle
                of pixels, from the screen to the drawing surface of the System.Drawing.Graphics.
            </summary>
            <param name="sourceX">The x-coordinate of the point at the upper-left corner of the source rectangle.</param>
            <param name="sourceY">The y-coordinate of the point at the upper-left corner of the source rectangle.</param>
            <param name="destinationX">The x-coordinate of the point at the upper-left corner of the destination
                rectangle.</param>
            <param name="destinationY">The y-coordinate of the point at the upper-left corner of the destination
                rectangle.</param>
            <param name="blockRegionSize">The size of the area to be transferred.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.CopyFromScreen(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Size,System.Drawing.CopyPixelOperation)">
            <summary>
            Performs a bit-block transfer of the color data, corresponding to a rectangle
                of pixels, from the screen to the drawing surface of the System.Drawing.Graphics.
            </summary>
            <param name="sourceX">The x-coordinate of the point at the upper-left corner of the source rectangle.</param>
            <param name="sourceY">The y-coordinate of the point at the upper-left corner of the source rectangle</param>
            <param name="destinationX">The x-coordinate of the point at the upper-left corner of the destination
                rectangle.</param>
            <param name="destinationY">The y-coordinate of the point at the upper-left corner of the destination
                rectangle.</param>
            <param name="blockRegionSize">The size of the area to be transferred.</param>
            <param name="copyPixelOperation">One of the System.Drawing.CopyPixelOperation values.</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">copyPixelOperation is not a member of System.Drawing.CopyPixelOperation.</exception>
            <exception cref="T:System.ComponentModel.Win32Exception">The operation failed</exception>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.Dispose">
            <summary>
            Releases all resources used by this System.Drawing.Graphics.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawArc(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a System.Drawing.Rectangle
                structure.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the arc.</param>
            <param name="rect">System.Drawing.RectangleF structure that defines the boundaries of the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point
                of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending
                point of the arc.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawArc(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a System.Drawing.RectangleF
                structure.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the arc.</param>
            <param name="rect">System.Drawing.RectangleF structure that defines the boundaries of the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point
                of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending
                point of the arc.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of
                coordinates, a width, and a height.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the arc.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle that defines the
                ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle that defines the
                ellipse.</param>
            <param name="width">Width of the rectangle that defines the ellipse.</param>
            <param name="height">Height of the rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point
                of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending
                point of the arc.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawArc(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of
                coordinates, a width, and a height.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the arc.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle that defines the
                ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle that defines the
                ellipse.</param>
            <param name="width">Width of the rectangle that defines the ellipse.</param>
            <param name="height">Height of the rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point
                of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending
                point of the arc.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawBezier(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Draws a Bézier spline defined by four System.Drawing.Point structures.
            </summary>
            <param name="pen">System.Drawing.Pen structure that determines the color, width, and style
                of the curve.</param>
            <param name="pt1">System.Drawing.Point structure that represents the starting point of the
                curve.</param>
            <param name="pt2">System.Drawing.Point structure that represents the first control point for
                the curve.</param>
            <param name="pt3">System.Drawing.Point structure that represents the second control point for
                the curve.</param>
            <param name="pt4"> System.Drawing.Point structure that represents the ending point of the curve.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawBezier(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a Bezier spline defined by four System.Drawing.PointF structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the curve.</param>
            <param name="pt1">System.Drawing.PointF structure that represents the starting point of the
                curve.</param>
            <param name="pt2">System.Drawing.PointF structure that represents the first control point for
                the curve.</param>
            <param name="pt3">System.Drawing.PointF structure that represents the second control point
                for the curve.</param>
            <param name="pt4">System.Drawing.PointF structure that represents the ending point of the curve.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawBezier(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a Bézier spline defined by four ordered pairs of coordinates that represent
                points.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the curve.</param>
            <param name="x1">The x-coordinate of the starting point of the curve.</param>
            <param name="y1">The y-coordinate of the starting point of the curve.</param>
            <param name="x2">The x-coordinate of the first control point of the curve.</param>
            <param name="y2">The y-coordinate of the first control point of the curve.</param>
            <param name="x3">The x-coordinate of the second control point of the curve.</param>
            <param name="y3">The y-coordinate of the second control point of the curve.</param>
            <param name="x4">The x-coordinate of the ending point of the curve.</param>
            <param name="y4">The y-coordinate of the ending point of the curve.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawBeziers(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
            Draws a series of Bézier splines from an array of System.Drawing.Point structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the curve.</param>
            <param name="points">Array of System.Drawing.Point structures that represent the points that determine
                the curve.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawBeziers(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a series of Bézier splines from an array of System.Drawing.PointF structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the curve.</param>
            <param name="points">Array of System.Drawing.PointF structures that represent the points that
                determine the curve.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
            Draws a closed cardinal spline defined by an array of System.Drawing.Point
                structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a closed cardinal spline defined by an array of System.Drawing.PointF
                structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single,System.Drawing.Drawing2D.FillMode)">
            <summary>
            Draws a closed cardinal spline defined by an array of System.Drawing.Point
                structures using a specified tension.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
            <param name="fillmode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                how the curve is filled. This parameter is required but ignored.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawClosedCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single,System.Drawing.Drawing2D.FillMode)">
            <summary>
            Draws a closed cardinal spline defined by an array of System.Drawing.PointF
                structures using a specified tension.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
            <param name="fillmode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                how the curve is filled. This parameter is required but is ignored.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
            Draws a cardinal spline through a specified array of System.Drawing.Point
                structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a cardinal spline through a specified array of System.Drawing.PointF
                structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of System.Drawing.Point
                structures using a specified tension.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of System.Drawing.PointF
                structures using a specified tension.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.PointF structures that represent the points that
                define the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32)">
            <summary>
            Draws a cardinal spline through a specified array of System.Drawing.PointF
                structures. The drawing begins offset from the beginning of the array.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the
                starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.Point[],System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of System.Drawing.Point
                structures using a specified tension.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the
                starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of System.Drawing.PointF
                structures using a specified tension. The drawing begins offset from the
                beginning of the array.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and height of the curve</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the
                starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawEllipse(System.Drawing.Pen,System.Drawing.Rectangle)">
            <summary>
            Draws an ellipse specified by a bounding System.Drawing.Rectangle structure.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the ellipse.</param>
            <param name="rect">System.Drawing.Rectangle structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse defined by a bounding System.Drawing.RectangleF.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the ellipse.</param>
            <param name="rect">System.Drawing.RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates,
                a height, and a width.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the ellipse.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawEllipse(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates,
                a height, and a width.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the ellipse.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawIcon(System.Drawing.Icon,System.Drawing.Rectangle)">
            <summary>
            Draws the image represented by the specified System.Drawing.Icon within the
                area specified by a System.Drawing.Rectangle structure.
            </summary>
            <param name="icon">System.Drawing.Icon to draw.</param>
            <param name="targetRect">System.Drawing.Rectangle structure that specifies the location and size of
                the resulting image on the display surface. The image contained in the icon
                parameter is scaled to the dimensions of this rectangular area.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawIcon(System.Drawing.Icon,System.Int32,System.Int32)">
            <summary>
            Draws the image represented by the specified System.Drawing.Icon at the specified
                coordinates.
            </summary>
            <param name="icon"> System.Drawing.Icon to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawIconUnstretched(System.Drawing.Icon,System.Drawing.Rectangle)">
            <summary>
            Draws the image represented by the specified System.Drawing.Icon without
                scaling the image.
            </summary>
            <param name="icon">System.Drawing.Icon to draw.</param>
            <param name="targetRect">System.Drawing.Rectangle structure that specifies the location and size of
                the resulting image. The image is not scaled to fit this rectangle, but retains
                its original size. If the image is larger than the rectangle, it is clipped
                to fit inside it.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Point)">
            <summary>
            Draws the specified System.Drawing.Image, using its original physical size,
                at the specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw</param>
            <param name="point">System.Drawing.Point structure that represents the location of the upper-left
                corner of the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Point[])">
            <summary>
            Draws the specified System.Drawing.Image at the specified location and with
                the specified shape and size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.PointF)">
            <summary>
             Draws the specified System.Drawing.Image, using its original physical size,
                at the specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="point">System.Drawing.PointF structure that represents the upper-left corner of
                the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[])">
            <summary>
            Draws the specified System.Drawing.Image at the specified location and with
            the specified shape and size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Draws the specified System.Drawing.Image at the specified location and with
                the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="rect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Draws the specified System.Drawing.Image at the specified location and with
                the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="rect">System.Drawing.RectangleF structure that specifies the location and size
                of the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Single,System.Single)">
            <summary>
            Draws the specified System.Drawing.Image, using its original physical size,
                at the specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Draws the specified image, using its original physical size, at the location
                specified by a coordinate pair.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.RectangleF structure that specifies the location and size
                of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws the specified System.Drawing.Image at the specified location and with
                the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
            <param name="width">Width of the drawn image.</param>
            <param name="height">Height of the drawn image</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Single,System.Single,System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
            <summary>
            Draws a portion of an image at a specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the System.Drawing.Image
                to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the specified System.Drawing.Image at the specified location and with
                the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
            <param name="width">Width of the drawn image.</param>
            <param name="height">Height of the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.GraphicsUnit)">
            <summary>
            Draws a portion of an image at a specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
                method according to application-determined criteria.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
                method according to application-determined criteria.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
                method according to application-determined criteria.</param>
            <param name="callbackData">Value specifying additional data for the System.Drawing.Graphics.DrawImageAbort
                delegate to use when checking whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
                method.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destPoints"> Array of three System.Drawing.PointF structures that define a parallelogram.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the image
                object to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used by the srcRect parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
                method according to application-determined criteria.</param>
            <param name="callbackData">Value specifying additional data for the System.Drawing.Graphics.DrawImageAbort
                delegate to use when checking whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.Int32)
                method.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect"> System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
                method according to application-determined criteria.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for image.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort)
                method according to application-determined criteria.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth"> Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
                method according to application-determined criteria.</param>
            <param name="callbackData">Value specifying additional data for the System.Drawing.Graphics.DrawImageAbort
                delegate to use when checking whether to stop execution of the DrawImage
                method.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)">
            <summary>
            Draws the specified portion of the specified System.Drawing.Image at the
                specified location and with the specified size.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image
                to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">System.Drawing.Imaging.ImageAttributes that specifies recoloring and gamma
                information for the image object.</param>
            <param name="callback">System.Drawing.Graphics.DrawImageAbort delegate that specifies a method to
                call during the drawing of the image. This method is called frequently to
                check whether to stop execution of the System.Drawing.Graphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes,System.Drawing.Graphics.DrawImageAbort,System.IntPtr)
                method according to application-determined criteria.</param>
            <param name="callbackData">Value specifying additional data for the System.Drawing.Graphics.DrawImageAbort
                delegate to use when checking whether to stop execution of the DrawImage
                method.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Point)">
            <summary>
            Draws a specified image using its original physical size at a specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="point">System.Drawing.Point structure that specifies the upper-left corner of the
                drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImageUnscaled(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Draws a specified image using its original physical size at a specified location.
            </summary>
            <param name="image"> System.Drawing.Image to draw.</param>
            <param name="rect">System.Drawing.Rectangle that specifies the upper-left corner of the drawn
                image. The X and Y properties of the rectangle specify the upper-left corner.
                The Width and Height properties are ignored.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Draws the specified image using its original physical size at the location
                specified by a coordinate pair.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImageUnscaled(System.Drawing.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a specified image using its original physical size at a specified location.
            </summary>
            <param name="image">System.Drawing.Image to draw.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
            <param name="width">Not used.</param>
            <param name="height">Not used.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawImageUnscaledAndClipped(System.Drawing.Image,System.Drawing.Rectangle)">
            <summary>
            Draws the specified image without scaling and clips it, if necessary, to
                fit in the specified rectangle.
            </summary>
            <param name="image">The System.Drawing.Image to draw.</param>
            <param name="rect">The System.Drawing.Rectangle in which to draw the image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawLine(System.Drawing.Pen,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Draws a line connecting two System.Drawing.Point structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the line.</param>
            <param name="pt1">System.Drawing.Point structure that represents the first point to connect.</param>
            <param name="pt2">System.Drawing.Point structure that represents the second point to connect.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting two System.Drawing.PointF structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the line.</param>
            <param name="pt1">System.Drawing.PointF structure that represents the first point to connect.</param>
            <param name="pt2">System.Drawing.PointF structure that represents the second point to connect.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line connecting the two points specified by the coordinate pairs.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the line.</param>
            <param name="x1">The x-coordinate of the first point.</param>
            <param name="y1">The y-coordinate of the first point.</param>
            <param name="x2">The x-coordinate of the second point.</param>
            <param name="y2">The y-coordinate of the second point.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawLine(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a line connecting the two points specified by the coordinate pairs.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the line.</param>
            <param name="x1">The x-coordinate of the first point.</param>
            <param name="y1">The y-coordinate of the first point.</param>
            <param name="x2">The x-coordinate of the second point.</param>
            <param name="y2">The y-coordinate of the second point.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawLines(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
            Draws a series of line segments that connect an array of System.Drawing.Point
                structures.
            </summary>
            <param name="pen"> System.Drawing.Pen that determines the color, width, and style of the line
                segments.</param>
            <param name="points">Array of System.Drawing.Point structures that represent the points to connect.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a series of line segments that connect an array of System.Drawing.PointF
                structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the line
                segments.</param>
            <param name="points">Array of System.Drawing.PointF structures that represent the points to connect.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws a System.Drawing.Drawing2D.GraphicsPath.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the path.</param>
            <param name="path">System.Drawing.Drawing2D.GraphicsPath to draw.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawPie(System.Drawing.Pen,System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a System.Drawing.Rectangle
                structure and two radial lines.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the pie
                shape.</param>
            <param name="rect">System.Drawing.Rectangle structure that represents the bounding rectangle
                that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of
                the pie shape.</param>
            <param name="sweepAngle"> Angle measured in degrees clockwise from the startAngle parameter to the
                second side of the pie shape.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawPie(System.Drawing.Pen,System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a System.Drawing.RectangleF
                structure and two radial lines.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the pie
                shape.</param>
            <param name="rect">System.Drawing.RectangleF structure that represents the bounding rectangle
                that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle"> Angle measured in degrees clockwise from the x-axis to the first side of
                the pie shape.</param>
            <param name="sweepAngle"> Angle measured in degrees clockwise from the startAngle parameter to the
                second side of the pie shape.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair, a
                width, a height, and two radial lines.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the pie
                shape.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie shape comes.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie
                shape comes.</param>
            <param name="height"> Height of the bounding rectangle that defines the ellipse from which the
                pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of
                the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the
                second side of the pie shape.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawPie(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair, a
                width, a height, and two radial lines.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the pie
                shape.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie shape comes.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie
                shape comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the
                pie shape comes.</param>
            <param name="startAngle"> Angle measured in degrees clockwise from the x-axis to the first side of
                the pie shape.</param>
            <param name="sweepAngle"> Angle measured in degrees clockwise from the startAngle parameter to the
                second side of the pie shape.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawPolygon(System.Drawing.Pen,System.Drawing.Point[])">
            <summary>
             Draws a polygon defined by an array of System.Drawing.Point structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the polygon.</param>
            <param name="points">Array of System.Drawing.Point structures that represent the vertices of the
                polygon.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by an array of System.Drawing.PointF structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the polygon.</param>
            <param name="points">Array of System.Drawing.PointF structures that represent the vertices of
                the polygon.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawRectangle(System.Drawing.Pen,System.Drawing.Rectangle)">
            <summary>
             Draws a rectangle specified by a System.Drawing.Rectangle structure.
            </summary>
            <param name="pen"> A System.Drawing.Pen that determines the color, width, and style of the rectangle.</param>
            <param name="rect">A System.Drawing.Rectangle structure that represents the rectangle to draw.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawRectangle(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws a rectangle specified by a System.Drawing.RectangleF structure.
                ChartGraphics custom method
            </summary>
            <param name="pen">A System.Drawing.Pen that determines the color, width, and style of the rectangle.</param>
            <param name="rect"> A System.Drawing.RectangleF structure that represents the rectangle to draw.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">A System.Drawing.Pen that determines the color, width, and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">The width of the rectangle to draw.</param>
            <param name="height">The height of the rectangle to draw.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height"> Height of the rectangle to draw.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawRectangles(System.Drawing.Pen,System.Drawing.Rectangle[])">
            <summary>
            Draws a series of rectangles specified by System.Drawing.Rectangle structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the outlines
                of the rectangles.</param>
            <param name="rects">Array of System.Drawing.Rectangle structures that represent the rectangles
                to draw.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawRectangles(System.Drawing.Pen,System.Drawing.RectangleF[])">
            <summary>
            Draws a series of rectangles specified by System.Drawing.RectangleF structures.
            </summary>
            <param name="pen">System.Drawing.Pen that determines the color, width, and style of the outlines
                of the rectangles.</param>
            <param name="rects">Array of System.Drawing.RectangleF structures that represent the rectangles
                to draw.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF)">
            <summary>
            Draws the specified text string at the specified location with the specified
                System.Drawing.Brush and System.Drawing.Font objects.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
            <param name="point">System.Drawing.PointF structure that specifies the upper-left corner of the
                drawn text.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Draws the specified text string in the specified rectangle with the specified
                System.Drawing.Brush and System.Drawing.Font objects.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle">System.Drawing.RectangleF structure that specifies the location of the drawn
                text.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single)">
            <summary>
            Draws the specified text string at the specified location with the specified
                System.Drawing.Brush and System.Drawing.Font objects.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location with the specified
                System.Drawing.Brush and System.Drawing.Font objects using the formatting
                attributes of the specified System.Drawing.StringFormat.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
            <param name="point">System.Drawing.PointF structure that specifies the upper-left corner of the
                drawn text.</param>
            <param name="format">System.Drawing.StringFormat that specifies formatting attributes, such as
                line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string in the specified rectangle with the specified
                System.Drawing.Brush and System.Drawing.Font objects using the formatting
                attributes of the specified System.Drawing.StringFormat.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle">System.Drawing.RectangleF structure that specifies the location of the drawn
                text.</param>
            <param name="format">System.Drawing.StringFormat that specifies formatting attributes, such as
                line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Single,System.Single,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location with the specified
                System.Drawing.Brush and System.Drawing.Font objects using the formatting
                attributes of the specified System.Drawing.StringFormat.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font"> System.Drawing.Font that defines the text format of the string.</param>
            <param name="brush">System.Drawing.Brush that determines the color and texture of the drawn text.</param>
            <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
            <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
            <param name="format">System.Drawing.StringFormat that specifies formatting attributes, such as
                line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EndContainer(System.Drawing.Drawing2D.GraphicsContainer)">
            <summary>
             Closes the current graphics container and restores the state of this System.Drawing.Graphics
                to the state saved by a call to the System.Drawing.Graphics.BeginContainer()
                method.
            </summary>
            <param name="container">System.Drawing.Drawing2D.GraphicsContainer that represents the container
                this method restores.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint"> System.Drawing.Point structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
               method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified parallelogram.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
             Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint"> System.Drawing.PointF structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified parallelogram.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="callback"> System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
               method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records of the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified rectangle.
            </summary>
            <param name="metafile"> System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
             Sends the records of the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified rectangle.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.RectangleF structure that specifies the location and size
                of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
               method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.Point structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified parallelogram.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints"> Array of three System.Drawing.Point structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.PointF structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData"> Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" -->
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records of the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified rectangle.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect"> System.Drawing.Rectangle structure that specifies the location and size of
                the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
             Sends the records of the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified rectangle.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.RectangleF structure that specifies the location and size
                of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display at a specified point using specified
                image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.Point structure that specifies the location of the upper-left corner of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero for this parameter.</param>
            <param name="imageAttr"> System.Drawing.Imaging.ImageAttributes that specifies image attribute information for the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.Point structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified parallelogram using
                specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified parallelogram.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display at a specified point using specified
                image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.PointF structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.PointF structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified parallelogram using
                specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData"> Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified parallelogram.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structures that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records of the specified System.Drawing.Imaging.Metafile, one at
                a time, to a callback method for display in a specified rectangle using specified
                image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn metafile.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData"> Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records of a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified rectangle.
            </summary>
            <param name="metafile"> System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)" -->
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc)">
            <summary>
            Sends the records of a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified rectangle.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.RectangleF structure that specifies the location and size
                of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.Point structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified parallelogram.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display at a specified point.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.PointF structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
             Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified parallelogram.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback"> System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)" -->
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr)">
            <summary>
            Sends the records of a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified rectangle.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.RectangleF structure that specifies the location and size
                of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="srcUnit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display at a specified point using
                specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.Point structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Point[],System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified parallelogram
                using specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.Point structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
               for the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display at a specified point using
                specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoint">System.Drawing.PointF structure that specifies the location of the upper-left
                corner of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records in a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified parallelogram
                using specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destPoints">Array of three System.Drawing.PointF structures that define a parallelogram
                that determines the size and location of the drawn metafile.</param>
            <param name="srcRect"> System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records of a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified rectangle
                using specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.Rectangle structure that specifies the location and size of
                the drawn metafile.</param>
            <param name="srcRect">System.Drawing.Rectangle structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.EnumerateMetafile(System.Drawing.Imaging.Metafile,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.GraphicsUnit,System.Drawing.Graphics.EnumerateMetafileProc,System.IntPtr,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Sends the records of a selected rectangle from a System.Drawing.Imaging.Metafile,
                one at a time, to a callback method for display in a specified rectangle
                using specified image attributes.
            </summary>
            <param name="metafile">System.Drawing.Imaging.Metafile to enumerate.</param>
            <param name="destRect">System.Drawing.RectangleF structure that specifies the location and size
                of the drawn metafile.</param>
            <param name="srcRect">System.Drawing.RectangleF structure that specifies the portion of the metafile,
                relative to its upper-left corner, to draw.</param>
            <param name="unit">Member of the System.Drawing.GraphicsUnit enumeration that specifies the
                unit of measure used to determine the portion of the metafile that the rectangle
                specified by the srcRect parameter contains.</param>
            <param name="callback">System.Drawing.Graphics.EnumerateMetafileProc delegate that specifies the
                method to which the metafile records are sent.</param>
            <param name="callbackData">Internal pointer that is required, but ignored. You can pass System.IntPtr.Zero
                for this parameter.</param>
            <param name="imageAttr">System.Drawing.Imaging.ImageAttributes that specifies image attribute information
                for the drawn image.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.ChartGraphics.ExcludeClip(System.Drawing.Rectangle)" -->
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.ExcludeClip(System.Drawing.Region)">
            <summary>
            Updates the clip region of this System.Drawing.Graphics to exclude the area
                specified by a System.Drawing.Region.
            </summary>
            <param name="region">System.Drawing.Region that specifies the region to exclude from the clip region.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[])">
            <summary>
            Fills the interior of a closed cardinal spline curve defined by an array
                of System.Drawing.Point structures.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a closed cardinal spline curve defined by an array
                of System.Drawing.PointF structures.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
            <summary>
            Fills the interior of a closed cardinal spline curve defined by an array
                of System.Drawing.Point structures using the specified fill mode.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
            <param name="fillmode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                how the curve is filled.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
            <summary>
            Fills the interior of a closed cardinal spline curve defined by an array
                of System.Drawing.PointF structures using the specified fill mode.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
            <param name="fillmode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                how the curve is filled.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode,System.Single)">
            <summary>
            Fills the interior of a closed cardinal spline curve defined by an array
                of System.Drawing.Point structures using the specified fill mode and tension
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.Point structures that define the spline.</param>
            <param name="fillmode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                how the curve is filled.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillClosedCurve(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode,System.Single)">
            <summary>
            Fills the interior of a closed cardinal spline curve defined by an array
                of System.Drawing.PointF structures using the specified fill mode and tension.
            </summary>
            <param name="brush">A System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.PointF structures that define the spline.</param>
            <param name="fillmode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                how the curve is filled.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillEllipse(System.Drawing.Brush,System.Drawing.Rectangle)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle specified
                by a System.Drawing.Rectangle structure.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="rect">System.Drawing.Rectangle structure that represents the bounding rectangle
                that defines the ellipse.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle specified
                by a System.Drawing.RectangleF structure.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="rect">System.Drawing.RectangleF structure that represents the bounding rectangle
                that defines the ellipse.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillEllipse(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle specified
                by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillEllipse(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Fills the interior of an ellipse defined by a bounding rectangle specified
                by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fills the interior of a System.Drawing.Drawing2D.GraphicsPath.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="path">System.Drawing.Drawing2D.GraphicsPath that represents the path to fill.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillPie(System.Drawing.Brush,System.Drawing.Rectangle,System.Single,System.Single)">
            <summary>
            Fills the interior of a pie section defined by an ellipse specified by a
                System.Drawing.RectangleF structure and two radial lines.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="rect">System.Drawing.Rectangle structure that represents the bounding rectangle
                that defines the ellipse from which the pie section comes.</param>
            <param name="startAngle"> Angle in degrees measured clockwise from the x-axis to the first side of
                the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the
                second side of the pie section.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a pie section defined by an ellipse specified by a
                pair of coordinates, a width, a height, and two radial lines.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie section comes.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie section comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie
                section comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the
                pie section comes.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of
                the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the
                second side of the pie section.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillPie(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fills the interior of a pie section defined by an ellipse specified by a
                pair of coordinates, a width, a height, and two radial lines.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie section comes.</param>
            <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that
                defines the ellipse from which the pie section comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie
                section comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the
                pie section comes.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of
                the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the
                second side of the pie section.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by
                System.Drawing.Point structures.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.Point structures that represent the vertices of the
                polygon to fill.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by
                System.Drawing.PointF structures.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.PointF structures that represent the vertices of
                the polygon to fill.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.Point[],System.Drawing.Drawing2D.FillMode)">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by
                System.Drawing.Point structures using the specified fill mode.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.Point structures that represent the vertices of the
                polygon to fill.</param>
            <param name="fillMode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                the style of the fill.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[],System.Drawing.Drawing2D.FillMode)">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by
                System.Drawing.PointF structures using the specified fill mode.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="points">Array of System.Drawing.PointF structures that represent the vertices of
                the polygon to fill.</param>
            <param name="fillMode">Member of the System.Drawing.Drawing2D.FillMode enumeration that determines
                the style of the fill.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.Rectangle)">
            <summary>
            Fills the interior of a rectangle specified by a System.Drawing.Rectangle
                structure.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="rect">System.Drawing.Rectangle structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of a rectangle specified by a System.Drawing.RectangleF
                structure.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="rect">System.Drawing.RectangleF structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width,
                and a height.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="width">Width of the rectangle to fill.</param>
            <param name="height">Height of the rectangle to fill.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillRectangle(System.Drawing.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width,
                and a height.
            </summary>
            <param name="brush"> System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="width">Width of the rectangle to fill.</param>
            <param name="height">Height of the rectangle to fill.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillRectangles(System.Drawing.Brush,System.Drawing.Rectangle[])">
            <summary>
            Fills the interiors of a series of rectangles specified by System.Drawing.Rectangle
                structures.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="rects">Array of System.Drawing.Rectangle structures that represent the rectangles
                to fill.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillRectangles(System.Drawing.Brush,System.Drawing.RectangleF[])">
            <summary>
            Fills the interiors of a series of rectangles specified by System.Drawing.RectangleF
                structures.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="rects">Array of System.Drawing.RectangleF structures that represent the rectangles
                to fill.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
            <summary>
            Fills the interior of a System.Drawing.Region.
            </summary>
            <param name="brush">System.Drawing.Brush that determines the characteristics of the fill.</param>
            <param name="region">System.Drawing.Region that represents the area to fill.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.Flush">
            <summary>
            Forces execution of all pending graphics operations and returns immediately without waiting for the operations to finish.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.Flush(System.Drawing.Drawing2D.FlushIntention)">
            <summary>
            Forces execution of all pending graphics operations with the method waiting
                or not waiting, as specified, to return before the operations finish.
            </summary>
            <param name="intention">Member of the System.Drawing.Drawing2D.FlushIntention enumeration that specifies
                whether the method returns immediately or waits for any existing operations
                to finish.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.GetContextInfo">
            <summary>
            XML comment contains invalid XML: End tag 'doc' does not match the start tag 'member'.
            </summary>
            <returns>Object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.GetHdc">
            <summary>
            Gets the handle to the device context associated with this System.Drawing.Graphics.
            </summary>
            <returns>Handle to the device context associated with this System.Drawing.Graphics.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.GetNearestColor(System.Drawing.Color)">
            <summary>
            Gets the nearest color to the specified System.Drawing.Color structure.
            </summary>
            <param name="color">System.Drawing.Color structure for which to find a match.</param>
            <returns>A System.Drawing.Color structure that represents the nearest color to the one specified with the color parameter.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.IntersectClip(System.Drawing.Rectangle)">
            <summary>
            Updates the clip region of this System.Drawing.Graphics to the intersection
                of the current clip region and the specified System.Drawing.Rectangle structure.
            </summary>
            <param name="rect">System.Drawing.Rectangle structure to intersect with the current clip region.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.IntersectClip(System.Drawing.RectangleF)">
            <summary>
            Updates the clip region of this System.Drawing.Graphics to the intersection
                of the current clip region and the specified System.Drawing.Rectangle structure.
            </summary>
            <param name="rect">System.Drawing.Rectangle structure to intersect with the current clip region.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.IntersectClip(System.Drawing.Region)">
            <summary>
            Updates the clip region of this System.Drawing.Graphics to the intersection
                of the current clip region and the specified System.Drawing.Region.
            </summary>
            <param name="region">System.Drawing.Region to intersect with the current region.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.IsVisible(System.Drawing.Point)">
            <summary>
            Indicates whether the specified System.Drawing.Point structure is contained
                within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="point">System.Drawing.Point structure to test for visibility.</param>
            <returns>true if the point specified by the point parameter is contained within the
                visible clip region of this System.Drawing.Graphics; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.IsVisible(System.Drawing.PointF)">
            <summary>
            Indicates whether the specified System.Drawing.PointF structure is contained
                within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="point">System.Drawing.PointF structure to test for visibility.</param>
            <returns>true if the point specified by the point parameter is contained within the
                visible clip region of this System.Drawing.Graphics; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.IsVisible(System.Drawing.Rectangle)">
            <summary>
            Indicates whether the rectangle specified by a System.Drawing.Rectangle structure
                is contained within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="rect">System.Drawing.Rectangle structure to test for visibility.</param>
            <returns> true if the rectangle specified by the rect parameter is contained within
                the visible clip region of this System.Drawing.Graphics; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.IsVisible(System.Drawing.RectangleF)">
            <summary>
            Indicates whether the rectangle specified by a System.Drawing.RectangleF
                structure is contained within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="rect">System.Drawing.RectangleF structure to test for visibility.</param>
            <returns>true if the rectangle specified by the rect parameter is contained within
                the visible clip region of this System.Drawing.Graphics; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.IsVisible(System.Single,System.Single)">
            <summary>
            Indicates whether the point specified by a pair of coordinates is contained
                within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="x">The x-coordinate of the point to test for visibility.</param>
            <param name="y">The y-coordinate of the point to test for visibility.</param>
            <returns> true if the point defined by the x and y parameters is contained within the
                visible clip region of this System.Drawing.Graphics; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.IsVisible(System.Int32,System.Int32)">
            <summary>
             Indicates whether the point specified by a pair of coordinates is contained
                within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="x">The x-coordinate of the point to test for visibility.</param>
            <param name="y">The y-coordinate of the point to test for visibility.</param>
            <returns> true if the point defined by the x and y parameters is contained within the
                visible clip region of this System.Drawing.Graphics; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.IsVisible(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Indicates whether the rectangle specified by a pair of coordinates, a width,
                and a height is contained within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to test for visibility.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to test for visibility.</param>
            <param name="width">Width of the rectangle to test for visibility.</param>
            <param name="height">Height of the rectangle to test for visibility.</param>
            <returns>true if the rectangle defined by the x, y, width, and height parameters is
                contained within the visible clip region of this System.Drawing.Graphics;
                otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Indicates whether the rectangle specified by a pair of coordinates, a width,
                and a height is contained within the visible clip region of this System.Drawing.Graphics.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to test for visibility.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to test for visibility.</param>
            <param name="width">Width of the rectangle to test for visibility.</param>
            <param name="height">Height of the rectangle to test for visibility.</param>
            <returns>true if the rectangle defined by the x, y, width, and height parameters is
                contained within the visible clip region of this System.Drawing.Graphics;
                otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.MeasureCharacterRanges(System.String,System.Drawing.Font,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Gets an array of System.Drawing.Region objects, each of which bounds a range
                of character positions within the specified string.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="layoutRect">System.Drawing.RectangleF structure that specifies the layout rectangle for
                the string.</param>
            <param name="stringFormat">System.Drawing.StringFormat that represents formatting information, such
                as line spacing, for the string.</param>
            <returns>This method returns an array of System.Drawing.Region objects, each of which
                bounds a range of character positions within the specified string.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.MeasureString(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified string when drawn with the specified System.Drawing.Font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <returns>This method returns a System.Drawing.SizeF structure that represents the
                size, in the units specified by the System.Drawing.Graphics.PageUnit property,
                of the string specified by the text parameter as drawn with the font parameter.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.MeasureString(System.String,System.Drawing.Font,System.Int32)">
            <summary>
            Measures the specified string when drawn with the specified System.Drawing.Font.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font that defines the format of the string.</param>
            <param name="width">Maximum width of the string in pixels.</param>
            <returns>This method returns a System.Drawing.SizeF structure that represents the
                size, in the units specified by the System.Drawing.Graphics.PageUnit property,
                of the string specified in the text parameter as drawn with the font parameter.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF)">
            <summary>
            Measures the specified string when drawn with the specified System.Drawing.Font
                within the specified layout area.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font defines the text format of the string.</param>
            <param name="layoutArea">System.Drawing.SizeF structure that specifies the maximum layout area for
                the text.</param>
            <returns>This method returns a System.Drawing.SizeF structure that represents the
                size, in the units specified by the System.Drawing.Graphics.PageUnit property,
                of the string specified by the text parameter as drawn with the font parameter.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.MeasureString(System.String,System.Drawing.Font,System.Int32,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified System.Drawing.Font
                and formatted with the specified System.Drawing.StringFormat.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="width">Maximum width of the string.</param>
            <param name="format">System.Drawing.StringFormat that represents formatting information, such
                as line spacing, for the string.</param>
            <returns>This method returns a System.Drawing.SizeF structure that represents the
                size, in the units specified by the System.Drawing.Graphics.PageUnit property,
                of the string specified in the text parameter as drawn with the font parameter
                and the stringFormat parameter.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified System.Drawing.Font
                and formatted with the specified System.Drawing.StringFormat.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font defines the text format of the string.</param>
            <param name="origin">System.Drawing.PointF structure that represents the upper-left corner of
                the string.</param>
            <param name="stringFormat">System.Drawing.StringFormat that represents formatting information, such
                as line spacing, for the string.</param>
            <returns>This method returns a System.Drawing.SizeF structure that represents the
                size, in the units specified by the System.Drawing.Graphics.PageUnit property,
                of the string specified by the text parameter as drawn with the font parameter
                and the stringFormat parameter.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified System.Drawing.Font
                and formatted with the specified System.Drawing.StringFormat.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font defines the text format of the string.</param>
            <param name="layoutArea">System.Drawing.SizeF structure that specifies the maximum layout area for
                the text.</param>
            <param name="stringFormat">System.Drawing.StringFormat that represents formatting information, such
                as line spacing, for the string.</param>
            <returns>This method returns a System.Drawing.SizeF structure that represents the
                size, in the units specified by the System.Drawing.Graphics.PageUnit property,
                of the string specified in the text parameter as drawn with the font parameter
                and the stringFormat parameter.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat,System.Int32@,System.Int32@)">
            <summary>
            Measures the specified string when drawn with the specified System.Drawing.Font
                and formatted with the specified System.Drawing.StringFormat.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">System.Drawing.Font that defines the text format of the string.</param>
            <param name="layoutArea">System.Drawing.SizeF structure that specifies the maximum layout area for
                the text.</param>
            <param name="stringFormat">System.Drawing.StringFormat that represents formatting information, such
                as line spacing, for the string.</param>
            <param name="charactersFitted">Number of characters in the string</param>
            <param name="linesFilled">Number of text lines in the string.</param>
            <returns>This method returns a System.Drawing.SizeF structure that represents the
                size of the string, in the units specified by the System.Drawing.Graphics.PageUnit
                property, of the text parameter as drawn with the font parameter and the
                stringFormat parameter.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
            <summary>
            Multiplies the world transformation of this System.Drawing.Graphics and specified
                the System.Drawing.Drawing2D.Matrix.
            </summary>
            <param name="matrix">4x4 System.Drawing.Drawing2D.Matrix that multiplies the world transformation.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
            Multiplies the world transformation of this System.Drawing.Graphics and specified
                the System.Drawing.Drawing2D.Matrix in the specified order.
            </summary>
            <param name="matrix">4x4 System.Drawing.Drawing2D.Matrix that multiplies the world transformation.</param>
            <param name="order">Member of the System.Drawing.Drawing2D.MatrixOrder enumeration that determines
                the order of the multiplication.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.ReleaseHdc">
            <summary>
            Releases a device context handle obtained by a previous call to the System.Drawing.Graphics.GetHdc()
                method of this System.Drawing.Graphics.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.ReleaseHdc(System.IntPtr)">
            <summary>
            Releases a device context handle obtained by a previous call to the System.Drawing.Graphics.GetHdc()
                method of this System.Drawing.Graphics.
            </summary>
            <param name="hdc">Handle to a device context obtained by a previous call to the System.Drawing.Graphics.GetHdc()
                method of this System.Drawing.Graphics.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.ReleaseHdcInternal(System.IntPtr)">
            <summary>
            Releases a handle to a device context.
            </summary>
            <param name="hdc">Handle to a device context.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.ResetClip">
            <summary>
            Resets the clip region of this System.Drawing.Graphics to an infinite region.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.ResetTransform">
            <summary>
            Resets the world transformation matrix of this System.Drawing.Graphics to
                the identity matrix.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
            <summary>
            Restores the state of this System.Drawing.Graphics to the state represented
                by a System.Drawing.Drawing2D.GraphicsState.
            </summary>
            <param name="gstate">System.Drawing.Drawing2D.GraphicsState that represents the state to which
                to restore this System.Drawing.Graphics.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.RotateTransform(System.Single)">
            <summary>
            Applies the specified rotation to the transformation matrix of this System.Drawing.Graphics.
            </summary>
            <param name="angle">Angle of rotation in degrees.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
            Applies the specified rotation to the transformation matrix of this System.Drawing.Graphics
                in the specified order.
            </summary>
            <param name="angle">Angle of rotation in degrees.</param>
            <param name="order">Member of the System.Drawing.Drawing2D.MatrixOrder enumeration that specifies
                whether the rotation is appended or prepended to the matrix transformation.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.Save">
            <summary>
            Saves the current state of this System.Drawing.Graphics and identifies the
                saved state with a System.Drawing.Drawing2D.GraphicsState.
            </summary>
            <returns>This method returns a System.Drawing.Drawing2D.GraphicsState that represents
                the saved state of this System.Drawing.Graphics.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.ScaleTransform(System.Single,System.Single)">
            <summary>
            Applies the specified scaling operation to the transformation matrix of this
                System.Drawing.Graphics by prepending it to the object's transformation matrix.
            </summary>
            <param name="sx">Scale factor in the x direction.</param>
            <param name="sy">Scale factor in the y direction.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
            Applies the specified scaling operation to the transformation matrix of this
                System.Drawing.Graphics in the specified order.
            </summary>
            <param name="sx">Scale factor in the x direction.</param>
            <param name="sy">Scale factor in the y direction.</param>
            <param name="order">Member of the System.Drawing.Drawing2D.MatrixOrder enumeration that specifies
                whether the scaling operation is prepended or appended to the transformation
                matrix.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.SetClip(System.Drawing.Graphics)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the Clip property
                of the specified System.Drawing.Graphics.
            </summary>
            <param name="g">System.Drawing.Graphics from which to take the new clip region.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.SetClip(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the specified
                System.Drawing.Drawing2D.GraphicsPath.
            </summary>
            <param name="path">System.Drawing.Drawing2D.GraphicsPath that represents the new clip region.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.SetClip(System.Drawing.Rectangle)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the rectangle
                specified by a System.Drawing.Rectangle structure.
            </summary>
            <param name="rect">System.Drawing.Rectangle structure that represents the new clip region.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the rectangle
                specified by a System.Drawing.RectangleF structure.
            </summary>
            <param name="rect">System.Drawing.RectangleF structure that represents the new clip region.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.ChartGraphics.SetClip(System.Drawing.Graphics,System.Drawing.Drawing2D.CombineMode)" -->
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.ChartGraphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)" -->
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.SetClip(System.Drawing.Rectangle,System.Drawing.Drawing2D.CombineMode)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the result of
                the specified operation combining the current clip region and the rectangle
                specified by a System.Drawing.Rectangle structure.
            </summary>
            <param name="rect">System.Drawing.Rectangle structure to combine.</param>
            <param name="combineMode">Member of the System.Drawing.Drawing2D.CombineMode enumeration that specifies
                the combining operation to use.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.SetClip(System.Drawing.RectangleF,System.Drawing.Drawing2D.CombineMode)">
            <summary>
            Sets the clipping region of this System.Drawing.Graphics to the result of
                the specified operation combining the current clip region and the rectangle
                specified by a System.Drawing.RectangleF structure.
            </summary>
            <param name="rect">System.Drawing.RectangleF structure to combine.</param>
            <param name="combineMode">Member of the System.Drawing.Drawing2D.CombineMode enumeration that specifies
                the combining operation to use.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.ChartGraphics.SetClip(System.Drawing.Region,System.Drawing.Drawing2D.CombineMode)" -->
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Point[])">
            <summary>
            Transforms an array of points from one coordinate space to another using
                the current world and page transformations of this System.Drawing.Graphics.
            </summary>
            <param name="destSpace">Member of the System.Drawing.Drawing2D.CoordinateSpace enumeration that specifies
                the destination coordinate space.</param>
            <param name="srcSpace">Member of the System.Drawing.Drawing2D.CoordinateSpace enumeration that specifies
                the source coordinate space.</param>
            <param name="pts">Array of System.Drawing.Point structures that represents the points to transformation.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.TransformPoints(System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.Drawing2D.CoordinateSpace,System.Drawing.PointF[])">
            <summary>
            Transforms an array of points from one coordinate space to another using
                the current world and page transformations of this System.Drawing.Graphics.
            </summary>
            <param name="destSpace">Member of the System.Drawing.Drawing2D.CoordinateSpace enumeration that specifies
                the destination coordinate space.</param>
            <param name="srcSpace">Member of the System.Drawing.Drawing2D.CoordinateSpace enumeration that specifies
                the source coordinate space.</param>
            <param name="pts">Array of System.Drawing.PointF structures that represent the points to transform.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.TranslateClip(System.Single,System.Single)">
            <summary>
                Translates the clipping region of this System.Drawing.Graphics by specified
                amounts in the horizontal and vertical directions.
            </summary>
            <param name="dx">The x-coordinate of the translation.</param>
            <param name="dy">The y-coordinate of the translation.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.TranslateClip(System.Int32,System.Int32)">
            <summary>
                Translates the clipping region of this System.Drawing.Graphics by specified
                amounts in the horizontal and vertical directions.
            </summary>
            <param name="dx">The x-coordinate of the translation.</param>
            <param name="dy">The y-coordinate of the translation. </param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.TranslateTransform(System.Single,System.Single)">
            <summary>
                Changes the origin of the coordinate system by prepending the specified translation
                to the transformation matrix of this System.Drawing.Graphics.
            </summary>
            <param name="dx">The x-coordinate of the translation.</param>
            <param name="dy">The y-coordinate of the translation.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartGraphics.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
            <summary>
                Changes the origin of the coordinate system by applying the specified translation
                to the transformation matrix of this System.Drawing.Graphics in the specified
                order.
            </summary>
            <param name="dx">The x-coordinate of the translation.</param>
            <param name="dy">The y-coordinate of the translation.</param>
            <param name="order">Member of the System.Drawing.Drawing2D.MatrixOrder enumeration that specifies
                whether the translation is pretended or appended to the transformation matrix.</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.Graphics">
            <summary>
            Base System.Drawing.Graphics object
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.Clip">
             <summary>
             Gets or sets a System.Drawing.Region that limits the drawing region of this System.Drawing.Graphics.
             </summary>
             <return> 
             A System.Drawing.Region that limits the portion of this System.Drawing.Graphics that is currently available for drawing.
            </return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.ClipBounds">
            <summary>
            Gets a System.Drawing.RectangleF structure that bounds the clipping region of this System.Drawing.Graphics.
            </summary>
            <return>
            A System.Drawing.RectangleF structure that represents a bounding rectangle for the clipping region of this System.Drawing.Graphics.
            </return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.CompositingMode">
            <summary>
            Gets a value that specifies how composited images are drawn to this System.Drawing.Graphics.
            </summary>
            <return>
            This property specifies a member of the System.Drawing.Drawing2D.CompositingMode enumeration.
            </return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.CompositingQuality">
            <summary>
            Gets or sets the rendering quality of composited images drawn to this System.Drawing.Graphics.
            </summary>
            <return>This property specifies a member of the System.Drawing.Drawing2D.CompositingQuality enumeration.</return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.DpiX">
            <summary>
            Gets the horizontal resolution of this System.Drawing.Graphics.
            </summary>
            <return>
            The value, in dots per inch, for the horizontal resolution supported by this System.Drawing.Graphics.
            </return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.DpiY">
            <summary>
            Gets the vertical resolution of this System.Drawing.Graphics.
            </summary>
            <return>
            The value, in dots per inch, for the vertical resolution supported by this
                System.Drawing.Graphics.
            </return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.InterpolationMode">
            <summary>
            Gets or sets the interpolation mode associated with this System.Drawing.Graphics.
            </summary>
            <return>
            One of the System.Drawing.Drawing2D.InterpolationMode values.
            </return>        
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.IsClipEmpty">
            <summary>
            Gets a value indicating whether the clipping region of this System.Drawing.Graphics
                is empty.
            </summary>
            <return>
             true if the clipping region of this System.Drawing.Graphics is empty; otherwise,
                false.
            </return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.IsVisibleClipEmpty">
            <summary>
            Gets a value indicating whether the visible clipping region of this System.Drawing.Graphics
                is empty.
            </summary>
            <return>
            true if the visible portion of the clipping region of this System.Drawing.Graphics
                is empty; otherwise, false.
            </return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.PageScale">
            <summary>
            Gets or sets the scaling between world units and page units for this System.Drawing.Graphics.
            </summary>
            <return>
            This property specifies a value for the scaling between world units and page
                units for this System.Drawing.Graphics.
            </return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.PageUnit">
             <summary>
             Gets or sets the unit of measure used for page coordinates in this System.Drawing.Graphics.
             </summary>
             <return>
             One of the System.Drawing.GraphicsUnit values other than System.Drawing.GraphicsUnit.World.
             </return>
             <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
             System.Drawing.Graphics.PageUnit is set to System.Drawing.GraphicsUnit.World,
                 which is not a physical unit.
            </exception>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.PixelOffsetMode">
            <summary>
            Gets or set a value specifying how pixels are offset during rendering of
                this System.Drawing.Graphics.
            </summary>
            <return>
            This property specifies a member of the System.Drawing.Drawing2D.PixelOffsetMode
                enumeration
            </return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.RenderingOrigin">
            <summary>
            Gets or sets the rendering origin of this System.Drawing.Graphics for dithering
                and for hatch brushes.
            </summary>
            <return>
            A System.Drawing.Point structure that represents the dither origin for 8-bits-per-pixel
                and 16-bits-per-pixel dithering and is also used to set the origin for hatch
                brushes.
            </return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.SmoothingMode">
            <summary>
            Gets or sets the rendering quality for this System.Drawing.Graphics.
            </summary>
            <return>
            One of the System.Drawing.Drawing2D.SmoothingMode values.
            </return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.TextContrast">
            <summary>
            Gets or sets the gamma correction value for rendering text.
            </summary>
            <return>
            The gamma correction value used for rendering anti aliased and ClearType text.
            </return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.TextRenderingHint">
            <summary>
            Gets or sets the rendering mode for text associated with this System.Drawing.Graphics.
            </summary>
            <return>
            One of the System.Drawing.Text.TextRenderingHint values.
            </return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.Transform">
            <summary>
             Gets or sets a copy of the geometric world transformation for this System.Drawing.Graphics.
            </summary>
            <return>
            A copy of the System.Drawing.Drawing2D.Matrix that represents the geometric
                world transformation for this System.Drawing.Graphics.
            </return>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartGraphics.VisibleClipBounds">
            <summary>
            Gets the bounding rectangle of the visible clipping region of this System.Drawing.Graphics.
            </summary>
            <return>
            A System.Drawing.RectangleF structure that represents a bounding rectangle
                for the visible clipping region of this System.Drawing.Graphics.
            </return>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartZoomEventArgs">
            <summary>
            Provides data for RadChart.Zoom event.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.LayoutElement">
            <summary>
            Base class for all objects being calculated
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.RenderedObject">
            <summary>
            Base class for all objects being rendered
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.IOrdering">
            <summary>
            Common interface for an order list element of rendering container
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.IOrdering.GetOrder">
            <summary>
            Gets elements order position
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.IOrdering.SetOrder(System.Int32)">
            <summary>
            Sets this object in new render order position
            </summary>
            <param name="index">new position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.IOrdering.Remove">
            <summary>
            Remove element from  render order list
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.IOrdering.BringForward">
            <summary>
            Send element at one step forward in the render order list
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.IOrdering.BringToFront">
            <summary>
            Sets element at the first position in render order list
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.IOrdering.SendBackward">
            <summary>
            Send element at one step back in the render order list
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.IOrdering.SendToBack">
            <summary>
            Send element at the end of render order list
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.IOrdering.Container">
            <summary>
            Gets or sets the container element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.RenderedObject.objectContainer">
            <summary>
            Container, that contains the render order for taken up elements
            (For  property)
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderedObject.GetOrder">
            <summary>
            Get this elements order position in container
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderedObject.SetOrder(System.Int32)">
            <summary>
            Set this object in new render order position
            </summary>
            <param name="index">New position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderedObject.Remove">
            <summary>
            Remove this  element from  render order list
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderedObject.BringForward">
            <summary>
            Send element at one step forward in the render order list
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderedObject.BringToFront">
            <summary>
            Set element at the first position in render order list
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderedObject.SendBackward">
            <summary>
            Send element at one step back in the render order list
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderedObject.SendToBack">
            <summary>
            Send element at the end of render order list
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderedObject.OnRender">
            <summary>
            Called after rendering
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.RenderedObject.Container">
            <summary>
            Link to container element
            </summary>
        </member>
        <member name="E:Telerik.Reporting.Charting.RenderedObject.RenderEventHandler">
            <summary>
            Rendering event handler
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutElement.#ctor(Telerik.Reporting.Charting.IContainer)">
            <summary>
            Creates new class instance
            </summary>
            <param name="container">Container</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutElement.#ctor(Telerik.Reporting.Charting.Styles.LayoutStyle,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Creates new class instance
            </summary>
            <param name="appearance">Appearance</param>
            <param name="container">Container object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutElement.GetOffset(System.Object,Telerik.Reporting.Charting.LayoutElement.OffsetCalculationDelegate)">
            <summary>
            Gets element offset
            </summary>
            <param name="oelement">Element</param>
            <param name="calcMethod">Offset calculation method delegate (left, right, top, bottom)</param>
            <returns>Offset value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutElement.GetOffsetLeft(System.Object)">
            <summary>
            Gets left offset
            </summary>
            <param name="oelement">Element to get an offset of</param>
            <returns>Offset value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutElement.GetOffsetTop(System.Object)">
            <summary>
            Gets top offset
            </summary>
            <param name="element">Element to get an offset of</param>
            <returns>Offset value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutElement.GetOffsetRight(System.Object)">
            <summary>
            Gets right offset
            </summary>
            <param name="element">Element to get an offset of</param>
            <returns>Offset value</returns>        
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutElement.GetOffsetBottom(System.Object)">
            <summary>
            Gets bottom offset
            </summary>
            <param name="element">Element to get an offset of</param>
            <returns>Offset value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutElement.CalculatePosition(Telerik.Reporting.Charting.Styles.ISizesAndPaddings)">
            <summary>
            Calculates element position in container
            </summary>
            <param name="containerDimensions">Rendering container dimensions</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutElement.CalculatePosition(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Calculates element position. Makes an additional check for a container object type 
            </summary>
            <param name="renderEngine"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutElement.TrackViewState">
            <summary>
            Tracking view state changes
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutElement.LoadViewState(System.Object)">
            <summary>
            Loads data from a view state
            </summary>
            <param name="savedState">Views state to load from</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutElement.SaveViewState">
            <summary>
            Saves settings to a view state
            </summary>
            <returns>Saved view state</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutElement.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.LayoutElement.OffsetCalculationDelegate">
            <summary>
            Offset calculation method delegate
            </summary>
            <param name="prevElem">Previous element in a container's order list</param>
            <param name="container">Rendering container</param>
            <param name="prevElemPosition">Previous element's position in a container order list</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.IContainer">
            <summary>
            Common interface for a rendering container objects
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.IContainer.GetOrder(Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Get elements order position
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.IContainer.Add(Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Add element at the end of list
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.IContainer.Insert(System.Int32,Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Insert element at specific position in list
            </summary>
            <param name="order">Element</param>
            <param name="element">Position index</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.IContainer.Remove(Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Remove  element from list
            </summary>
            <param name="element">Element for removing</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.IContainer.RemoveAt(System.Int32)">
            <summary>
            Remove  element from list by it's index
            </summary>
            <param name="index">Elements index for remove</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.IContainer.ReIndex">
            <summary>
            Re index order list
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.IContainer.OrderList">
            <summary>
            List, that is represent the render order for taken up elements
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.IContainer.NextPosition">
            <summary>
            Get a next free order position
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Chart.chartTitle">
            <summary>
            Title for chart
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Chart.chartLegend">
            <summary>
            Chart legend
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Chart.chartPlotArea">
            <summary>
            Chart plot area
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Chart.chartComponent">
            <summary>
            Control holder
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Chart.chartOrderList">
            <summary>
            List, that is represent the render order for taken up elements
            (For IContainer.OrderList property)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Chart.chartDesignTime">
            <summary>
            Provides information whether the chart is used in design-time mode.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Chart.chartDataManager">
            <summary>
            Data Manager for data binding
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Chart.chartSeriesCollection">
            <summary>
            Series collection
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Chart.chartDesignTimeSeriesCollection">
            <summary>
            Temporary series collection in design time
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Chart.chartOriginalSeriesCollection">
            <summary>
            Temporary copy of original series collection in design time
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Chart.chartCustomPalettes">
            <summary>
            Custom palettes collection
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Chart.chartCustomFigures">
            <summary>
            Users custom figures collection
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Chart.chartFigures">
            <summary>
            Default figures collection
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Chart.chartSkinsCollection">
            <summary>
            Skins Collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.#ctor">
            <summary>
            Default constructor for Chart
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.Chart_BeforeLayout(System.Object,System.EventArgs)">
            <summary>
            Default method for BeforeLayout event handler
            </summary>
            <param name="sender">Object</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.Chart_PrePaint(System.Object,System.EventArgs)">
            <summary>
            Default method for PrePaint event handler
            </summary>
            <param name="sender">Object</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.#ctor(Telerik.Reporting.Charting.IChartComponent)">
            <summary>
            Constructor from different chart controls
            </summary>
            <param name="component">IChartComponent</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.CallRegionEvent(System.Drawing.PointF,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Determine on which element of chart click occur
            </summary>
            <param name="point">Click coordinates</param>
            <param name="container">Container object</param>
            <returns>Active region object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.ChangeSeriesType">
            <summary>
            Set type for all series as DefaultType
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.ApplyPalette(System.String)">
            <summary>
            Apply palette for chart
            </summary>
            <param name="paletteName">Palette name</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.ApplySkin(System.String)">
            <summary>
            Apply skin for chart
            </summary>
            <param name="skinName">Skin name</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.ShouldApplyTextWrapping(Telerik.Reporting.Charting.Styles.AutoTextWrap)">
            <summary>
            Specifies should apply text wrapping or not
            </summary>
            <param name="textBlockAutoTextWrap">AutoTextWrap from text block</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.Clone">
            <summary>
            Makes a chart's clone 
            </summary>
            <returns>Chart's clone</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.UpdateDesign">
            <summary>
            Update design-time preview
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.SetDataGroupColumn(System.String)">
            <summary>
            Changes the DataGroupColumn property without DataBind method call
            </summary>
            <param name="columnName">Column Name</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetTextQuality">
            <summary>
            Provide relation between enums TextQuality(Teleriks) and TextRenderingHint(.Net)
            </summary>
            <returns>TextRenderingHint value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetImageQuality">
            <summary>
            Provide relation between enums ImageQuality(Teleriks) and SmoothingMode(.Net)
            </summary>
            <returns>SmoothingMode value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.OnlyPieSeries">
            <summary>
            Returns true if only pie series present
            </summary>
            <returns>Boolean</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.MapPath(System.String)">
            <summary>
            MapPath functionality
            </summary>
            <param name="filePath">path</param>
            <returns>path</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.InitDesignTime">
            <summary>
            Initialize design-time mode
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.FinalizeDesignTime">
            <summary>
            Finalize design-time mode
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.ClearSkin(System.Object)">
            <summary>
            Clearing skin settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.IsDefaultValue(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Checking property on a default value
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetDefaultPropertyValue(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Return a default value of a property
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetPropertyValue(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Return a value of a property
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.LoadSkin(System.Object,System.IO.TextWriter)">
            <summary>
            Load skin from
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.SaveSkin(System.Object)">
            <summary>
            Saving skin
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.LoadChart(System.Object,System.IO.TextReader)">
            <summary>
            Loading chart from XML string wrapped in TextWriter
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.SaveChart(System.Object)">
            <summary>
            Exports chart to a XML string wrapped in TextWriter
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.ResolvePhysicalLocation(System.String)">
            <summary>
            Return a full path
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.LocalDataFilePathToGlobal(System.Web.UI.WebControls.AccessDataSource)">
            <summary>
            Return a full path for a data source object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.LocalDataFilePathToGlobal(System.Web.UI.WebControls.XmlDataSource)">
            <summary>
            Return a full path for a data source object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.Init">
            <summary>
            Initialize chart and its properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.CalculateChart">
            <summary>
            Chart calculations: Binding series to legend for BeforeLayout Event
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.ReCalculateChart">
            <summary>
            Chart recalculation
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.OnBeforeLayout(System.Object,System.EventArgs)">
            <summary>
            Execute BeforeLayoutEventHandler
            </summary>
            <param name="chart">Chart</param>
            <param name="args">Arguments</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.OnPrePaint(System.Object,System.EventArgs)">
            <summary>
            Execute PrePaintEventHandler
            </summary>
            <param name="chart">Chart</param>
            <param name="args">Arguments</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetImage">
            <summary>Returns the chart image</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetImage(Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit)">
            <summary>Returns the chart image</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetImage(System.Int32,System.Int32)">
            <summary>Returns the chart image</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetStaticArea(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Returns the chart static area as image for zoom feature</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetPlotArea(System.Int32,System.Int32,System.Single,System.Single,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit)">
            <summary>Returns the chart plot area part as image for zoom feature</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetScaledImageWidth(System.Single,System.Single)">
            <summary>
            Get image width when scaling enabled
            </summary>
            <param name="xScale">X scale coefficient</param>
            <param name="yScale">Y scale coefficient</param>
            <returns>Width in pixels</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetScaledImageHeight(System.Single,System.Single)">
            <summary>
            Get image height when scaling enabled
            </summary>
            <param name="xScale">X scale coefficient</param>
            <param name="yScale">Y scale coefficient</param>
            <returns>Height in pixels</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.PrepareForScale(System.Single,System.Single)">
            <summary>Preapare chart for zooming</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.RestoreAfterScale(System.Int32,System.Int32)">
            <summary>Restore chart after zooming</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.CheckLimitations">
            <summary>
            Checking restrictions for when some charts modes enabled
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.PrepareForAutoLayout">
            <summary>
            Prepare chart elements for AutoLayout feature
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.RestoreAutoLayoutChanges">
            <summary>
            Restore chart elements setting after drawing in AutoLayout mode
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetAxis(System.Int32,System.Int32,System.Single,System.Single,Telerik.Reporting.Charting.ChartAxisType)">
            <summary>Returns an axis image only with ticks and axis items</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetException(Telerik.Reporting.Charting.RenderEngine,System.Exception)">
            <summary>Returns crash-exception image if any</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.CallRegionEvent(System.Int32,System.Int32)">
            <summary>
            Determine on which element of chart click occur
            </summary>
            <param name="x">Click x coodrinate</param>
            <param name="y">Click y coodrinate</param>
            <returns>Active region object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.CallRegionEvent(System.Single,System.Single)">
            <summary>
            Determine on which element of chart click occur
            </summary>
            <param name="x">Click x coodrinate</param>
            <param name="y">Click y coodrinate</param>
            <returns>Active region object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.CallRegionEvent(System.Drawing.Point)">
            <summary>
            Determine on which element of chart click occur
            </summary>
            <param name="point">Click coodrinates</param>
            <returns>Active region object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.CallRegionEvent(System.Drawing.PointF)">
            <summary>
            Determine on which element of chart click occur
            </summary>
            <param name="point">Click coodrinates</param>
            <returns>Active region object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetSeries(System.String)">
            <summary>
            Get series
            </summary>
            <param name="name">Series name</param>
            <returns>Series or null</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetSeries(System.Int32)">
            <summary>
            Get series
            </summary>
            <param name="index">Series index</param>
            <returns>Series or null</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetSeries(System.Drawing.Color)">
            <summary>
            Gets a reference to the data first series by specifying data series color.
            </summary>
            <param name="seriesColor">Series color</param>
            <returns>Series or null</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.AddChartSeries(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Adds a new data series to the chart's data series collection.
            </summary>
            <param name="series">Series for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.AddSeries(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Add series
            </summary>
            <param name="series">Series to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.AddSeries(Telerik.Reporting.Charting.ChartSeriesCollection)">
            <summary>
            Add series
            </summary>
            <param name="chartSeries">Series for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.AddSeries(Telerik.Reporting.Charting.ChartSeries[])">
            <summary>
            Add series
            </summary>
            <param name="chartSeries">Series for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.AddSeries(System.Collections.Generic.List{Telerik.Reporting.Charting.ChartSeries})">
            <summary>
            Add series
            </summary>
            <param name="seriesList">Series for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.AddSeries(Telerik.Reporting.Charting.ChartSeries,Telerik.Reporting.Charting.ChartSeries[])">
            <summary>
            Add series
            </summary>
            <param name="chartSeries">Series for adding</param>
            <param name="chartSeriesArray">Series for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.RemoveAllSeries">
            <summary>
            Clear series collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.RemoveSeries(Telerik.Reporting.Charting.ChartSeries,Telerik.Reporting.Charting.ChartSeries[])">
            <summary>
            Remove series
            </summary>
            <param name="chartSeries">Series</param>
            <param name="chartSeriesArray">Series</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.RemoveSeries(System.String,System.String[])">
            <summary>
            Remove series
            </summary>
            <param name="seriesName">Series name</param>
            <param name="seriesNames">Series names</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.RemoveSeriesAt(System.Int32,System.Int32[])">
            <summary>
            Remove series
            </summary>
            <param name="index">Series index</param>
            <param name="indexes">Series indexes</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.GetOrder(Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Get elements order position
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.Add(Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Add element at the end of list
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.Insert(System.Int32,Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Insert element at specific position in list
            </summary>
            <param name="order">Position</param>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.Remove(Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Remove  element from list
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.RemoveAt(System.Int32)">
            <summary>
            Remove  element from list by it's index
            </summary>
            <param name="index">Position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.ReIndex">
            <summary>
            Re-index order list
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.TrackViewState">
            <summary>
            Tracking ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.LoadViewState(System.Object)">
            <summary>
            Loading ViewState data
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.SaveViewState">
            <summary>
            Saving ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Chart.CopyFrom(Telerik.Reporting.Charting.Chart)">
            <summary>
            Copy chart setting
            </summary>
            <param name="baseChart">Base chart</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.Figures">
            <summary>Contains a figures collection .</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.CustomFigures">
            <summary>Contains a collection of custom figures.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.CustomPalettes">
            <summary>
            Contains a collection of custom palettes
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.DesignTime">
            <summary>Provides information whether the chart is used in design-time mode.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.ChartTitle">
            <summary>Provides access to the title element of the chart.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.Legend">
            <summary>Provides access to the legend element of the chart.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.Appearance">
            <summary>Contains appearance related settings.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.PlotArea">
            <summary>Contains a chart plot area element.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.DefaultType">
            <summary>Specifies the default series type.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.Bitmap">
            <summary>Use this property to access the chart bitmap.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.DataGroupColumn">
            <summary>
            Specifies a column which will be used for group by clause. A new series will be
            created for each unique record in this column.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.Series">
            <summary>
            Gets or sets the RadChart's chart series collection object.
            </summary>  
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.SeriesPalette">
            <summary>
            Specifies the series palette
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.SeriesPaletteWrapper">
            <summary>
            Added just temporary to avoid build warnings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.AutoLayout">
            <summary>
            Specifies AutoLayout mode to all items on the chart control.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.AutoLayoutWrapper">
            <summary>
            Added just temporary to avoid build warnings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.AutoTextWrap">
            <summary>
            Specifies AutoTextWrap mode for all wrappable text blocks of the chart control.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.AutoTextWrapWrapper">
            <summary>
            Added just temporary to avoid build warnings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.Skin">
            <summary>Specifies the skin to use.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.SkinsOverrideStyles">
            <summary>
            When true and using a skin, user will not be able to override any of the skin
            appearance.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.DataManager">
            <summary>
            Exposes advanced data binding options. You can use this property to perform custom
            data binding at runtime.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.SeriesOrientation">
            <summary>
            Specifies the orientation of chart series on the plot area.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.IntelligentLabelsEnabled">
            <summary>Toggles the use of the IntelligentLabels feature.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.ApplicationPath">
            <summary>Parent application path.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.TempImagePath">
            <summary>Temporary images path.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.ImageFormat">
            <summary>Specifies the image rendering format.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.BitmapResolution">
            <summary>Specifies the bitmap resolution.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.TextWrapFactor">
            <summary>
            Return factor for wrap mechanism for fixed sides proportion wrap type
            </summary>
        </member>
        <member name="E:Telerik.Reporting.Charting.Chart.BeforeLayoutEventHandler">
            <summary>
             Event handle for BeforeLayout Event
            </summary>
        </member>
        <member name="E:Telerik.Reporting.Charting.Chart.PrePaintEventHandler">
            <summary>
             Event handle for PrePaint Event
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.DesignTimeSeriesCollection">
            <summary>
            Specifies a design-time series collection
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.OriginalSeriesCollection">
            <summary>
            Specifies a temporary copy of original series in design-time mode
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.Parent">
            <summary>
            Parent chart element
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.ScaleEnabled">
            <summary>
            Show enable scale or not
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.OrderList">
            <summary>List containing the render order of elements.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="P:Telerik.Reporting.Charting.Chart.NextPosition">
            <summary>Gets the next free order position.</summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="T:Telerik.Reporting.Charting.IChartComponent">
            <summary>
            Common chart components definitions
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Reporting.Charting.IChartComponent.MapPath(System.String)">
            <summary>
            MapMath method
            </summary>
            <param name="filePath">path</param>
            <returns>path</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.IChartComponent.Clone">
            <summary>
            Control clone
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.IChartComponent.Chart">
            <summary>
            Chart object
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.IChartSupportsScaling.ScaleEnabled">
            <summary>
            Gets a value indicating whether scaling is enabled.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.IChartDesigner">
            <summary>
            Charting component
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Reporting.Charting.IChartDesigner.Update">
            <summary>
            Updating designer
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartException">
            <summary>
            Common charting error
            </summary>
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartException.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="message">Message</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message">Message</param>
            <param name="inner">Parent Error</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartException.WrappedByWidth(Telerik.Reporting.Charting.ChartGraphics,System.String,System.Drawing.Font,System.Single)">
            <summary>
            For chart exceptions drawing
            </summary>
            <param name="graphics">Graphics</param>
            <param name="text">Message</param>
            <param name="font">Font</param>
            <param name="width">Width</param>
            <returns>string</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartSeriesType">
            <summary>Supported series types.</summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.Bar">
            <summary>
            Specifies a bar data series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.StackedBar">
            <summary>
            Specifies a stacked bar data series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.StackedBar100">
            <summary>
            Specifies a stacked 100 bar data series.
            </summary>        
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.Line">
            /// <summary>
            Specifies a line data series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.Area">
            <summary>
            Specifies an area data series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.StackedArea">
            <summary>
            Specifies a stacked area data series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.StackedArea100">
            <summary>
            Specifies a stacked 100 area data series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.Pie">
            /// <summary>
            Specifies a pie data series.
            </summary>        
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.Gantt">
            /// <summary>
            Specifies a gantt data series.
            </summary>       
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.Bezier">
            <summary>
            Specifies a bezier data series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.Spline">
            <summary>
            Specifies a spline data series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.Bubble">
            <summary>
            Specifies a bubble data series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.Point">
            <summary>
            Specifies a point data series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.SplineArea">
            <summary>
            Specifies an spline area data series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.StackedSplineArea">
            <summary>
            Specifies a stacked spline area data series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.StackedSplineArea100">
            <summary>
            Specifies a stacked 100 spline area data series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.CandleStick">
            <summary>Specifies a candlestick data series.</summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.StackedLine">
            <summary>Specifies a stacked line data series.</summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesType.StackedSpline">
            <summary>Specifies a stacked spline data series.</summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.TableRenderType">
            <summary>
            RenderType of DataTable
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ContentHorizontalAlign">
            <summary>
            Horizontal Alignment of text in DataTable cells
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ContentVerticalAlign">
            <summary>
            Vertical Alignment of text in DataTable cells
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartDataTable">
            <summary>
            DataTable. Shows the series data in a tabular format.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartDataTable.dataTableData">
            <summary>
            Contains DataTable data
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartDataTable.dataTablePlotArea">
            <summary>
            PlotArea to which DataTable related to
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartDataTable.dataTableSizesW">
            <summary>
            Cells' width
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartDataTable.dataTableSizesH">
            <summary>
            Cells' height
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartDataTable.seriesMarkers">
            <summary>
            Markers of series
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartDataTable.dataTableShouldCalculate">
            <summary>
            Should be recalculated when AutoLayout
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDataTable.FillData(Telerik.Reporting.Charting.ChartSeriesCollection)">
            <summary>
            Fill data by series' items values
            </summary>
            <param name="seriesCollection"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDataTable.Reset">
            <summary>
            Reset to default
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDataTable.Initilaize">
            <summary>
            Initialize DataTable's data
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDataTable.WrapText(System.String,Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Wrap DataTable text using factor for wrap mechanism
            </summary>
            <param name="str">Text that should be wrapped</param>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Wrapped string</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDataTable.WrapText(System.String,Telerik.Reporting.Charting.RenderEngine,System.Single)">
            <summary>
            Wrap DataTable text
            </summary>
            <param name="str">Text that should be wrapped</param>
            <param name="renderEngine">RenderEngine of chart</param>
            <param name="width">Fixed width of wrapped text</param>
            <returns>Wrapped string</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDataTable.Measure(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Calculate size of DataTable
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDataTable.CalculatePosition(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Calculate position
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDataTable.#ctor(Telerik.Reporting.Charting.ChartPlotArea)">
            <summary>
            Create new instance of ChartDataTable class
            </summary>
            <param name="plotArea">PlotArea to which DataTable is related to</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDataTable.#ctor(Telerik.Reporting.Charting.ChartPlotArea,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of ChartDataTable class
            </summary>
            <param name="plotArea">PlotArea to which DataTable is related to</param>
            <param name="container">Container of DataTable</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartDataTable.SizesW">
            <summary>
            Cells' widths array
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartDataTable.SizesH">
            <summary>
            Cells' heights array
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartDataTable.PlotArea">
            <summary>
            Plot area to which DataTable is related
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartDataTable.Data">
            <summary>
            Data stored in cells
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartDataTable.Visible">
            <summary>
            Visibility of DataTable
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartDataTable.IsVisible">
            <summary>
            Visible and not calculate
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartDataTable.Appearance">
            <summary>
            Appearance options
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartDataTable.SeriesMarkers">
            <summary>
            Markers of series
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ArrayDataHelper">
            <summary>
            Helper class used for an Arrays data binding
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.DataHelper">
            <summary>
            Common helper class. Implements most of ICommonDataHelper members
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ICommonDataHelper">
            <summary>
            Contains common members that should be implemented in the data source helpers for supported data sources
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.GetColumnIndex(System.String)">
            <summary>
            Gets the column index by column name in the Data Source object 
            </summary>
            <param name="columnName">Column name</param>
            <returns>Column index if column found or -1 if column not found</returns>
            <remarks>This method is not supported by all data sources</remarks>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.GetColumnName(System.Int32)">
            <summary>
            Gets the column name if it is supported by data source
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Column name if found or an empty string</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.GetDoubleValue(System.Int32,System.Int32)">
            <summary>
            Return the double value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>Double value at given column and row</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.GetObjectValue(System.Int32,System.Int32)">
            <summary>
            Return the object value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>Object value at given column and row from data source</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.GetStringValue(System.Int32,System.Int32)">
            <summary>
            Return the string value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>String value at given column and row of a data source</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.GetFilteredColumn(System.Int32)">
            <summary>
            Return unique column's content
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Objects array with unique column values</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.GetSortedAndFilteredColumn(System.Int32)">
            <summary>
            Return sorted unique column's content
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Objects array with unique column values sorted ascending</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.IsColumnNumeric(System.Int32)">
            <summary>
            Returns true if given column contains numeric values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains numeric values</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.IsColumnString(System.Int32)">
            <summary>
            Returns true if given column contains string type values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains string values</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.IsItemNumeric(System.Int32,System.Int32)">
            <summary>
            Returns true if value at the given position is numeric
            </summary>
            <param name="rowIndex">Row position index of data item in a data source</param>
            <param name="columnIndex">Column index of data item in a data source</param>
            <returns>True if data item contains numeric value at given row and column</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.GetGroupsColumnIndex">
            <summary>
            Returns possible groups column used for automatic data binding
            </summary>
            <returns>Automatically found possible column with repeating values for a data grouping</returns>
            <remarks>Only the first found numeric column will be checked. 
            If such column is not found or does not contain repeatable values the -1 will be returned
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.GetLabelsColumnIndex(System.Int32)">
            <summary>
            Returns possible column used as labels source when group column present
            </summary>
            <param name="groupColumn">DataGroupColumn index in a data source</param>
            <returns>Column index that can be used as a series item labels source</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.GetValuesXColumnIndex">
            <summary>
            Returns possible series items X values column
            </summary>
            <returns>Possible series items X values column's index or -1 if no proper column found</returns>      
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.GetValuesYColumnIndex">
            <summary>
            Returns possible series items Y values column
            </summary>
            <returns>Possible numeric columns array available for a data binding</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.GetValuesYColumns">
            <summary>
            Returns all possible series items Y values columns
            </summary>
            <returns>Possible numeric columns array available for a data binding</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ICommonDataHelper.GetGanttValuesColumns">
            <summary>
            Returns possible Gantt series items values columns array
            </summary>
            <returns>Data source columns array available for a Gantt series data binding (X, Y, X2, Y2 values)</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ICommonDataHelper.RowsCount">
            <summary>
            Gets the data source rows count
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ICommonDataHelper.ColumnsCount">
            <summary>
            Gets the data source columns count
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ICommonDataHelper.ColumnNameSupported">
            <summary>
            Returns true if data source supports columns naming or false in other cases
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.GetDoubleValue(System.Int32,System.Int32)">
            <summary>
            Return the double value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>Double value at given column and row</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.GetObjectValue(System.Int32,System.Int32)">
            <summary>
            Return the object value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>Object value at given column and row from data source</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.GetStringValue(System.Int32,System.Int32)">
            <summary>
            Return the string value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>String value at given column and row of a data source</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.IsColumnNumeric(System.Int32)">
            <summary>
            Returns true if given column contains numeric values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains numeric values</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.IsColumnString(System.Int32)">
            <summary>
            Returns true if given column contains string type values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains string values</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.GetColumnIndex(System.String)">
            <summary>
            Gets the column index by column name in the Data Source object 
            </summary>
            <param name="columnName">Column name</param>
            <returns>Column index if column found or -1 if column not found</returns>
            <remarks>This method is not supported by all data sources</remarks>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.GetColumnName(System.Int32)">
            <summary>
            Gets the column name if it is supported by data source
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Column name if supported by a data source</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.IsItemNumeric(System.Int32,System.Int32)">
            <summary>
            Returns true if value at the given position is numeric
            </summary>
            <param name="rowIndex">Row position index of data item in a data source</param>
            <param name="columnIndex">Column index of data item in a data source</param>
            <returns>True if data item contains numeric value at given row and column</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.GetLabelsColumnIndex(System.Int32)">
            <summary>
            Returns possible column used as labels source when group column present
            </summary>
            <param name="groupColumn">DataGroupColumn index in a data source</param>
            <returns>Column index that can be used as a series item labels source</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.GetGroupsColumnIndex">
            <summary>
            Returns possible groups column used for automatic data binding
            </summary>
            <returns>Automatically found possible column with repeating values for a data grouping</returns>
            <remarks>Only the first found numeric column will be checked. 
            If such column is not found or does not contain repeatable values the -1 will be returned
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.GetFilteredColumn(System.Int32)">
            <summary>
            Return unique column's content
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Objects array with unique column values</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.GetSortedAndFilteredColumn(System.Int32)">
            <summary>
            Return sorted unique column's content
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Objects array with unique column values sorted ascending</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.GetValuesXColumnIndex">
            <summary>
            Gets possible series items X values column
            </summary>
            <returns>Possible series items X values column's index or -1 if no proper column found</returns>      
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.GetValuesYColumnIndex">
            <summary>
            Gets possible series items Y values column
            </summary>
            <returns>Possible series items Y values column's index or -1 if no proper column found</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.GetValuesYColumns">
            <summary>
            Returns all possible series items Y values columns
            </summary>
            <returns>Possible numeric columns array available for a data binding</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.GetGanttValuesColumns">
            <summary>
            Returns all possible data source columns that could be used as Gantt series items
            </summary>
            <returns>Data source columns array available for a Gantt series data binding</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.IsNullableType(System.Type)">
            <summary>
            Checks is given type is Nullable
            </summary>
            <param name="type">Type to check</param>
            <returns>True if type is Nullable, or False</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.IsTypeNumeric(System.Type)">
            <summary>
            Checks whether the type given is numeric
            </summary>
            <param name="type">Type to check</param>
            <returns>True if Type is numeric</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.IsValueNumeric(System.Object)">
            <summary>
            Checks whether the value's type is numeric
            </summary>
            <param name="obj">Value to check</param>
            <returns>True if given object can be converted to number</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.IsTypeString(System.Type)">
            <summary>
            Checks whether the type given is string type
            </summary>
            <param name="type">Type to check</param>
            <returns>True if given type is string</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.IsValueString(System.Object)">
            <summary>
            Checks whether the value's type is String
            </summary>
            <param name="obj">Object to check</param>
            <returns>True if object can be converted to string</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataHelper.CreateDataHelper(System.Object,System.String,System.Boolean)">
            <summary>
            Returns the data helper class accordingly to the data source type 
            </summary>
            <param name="dataSource">Data source</param>
            <param name="dataMember">Data Member (i.e. Table name)</param>
            <param name="isDesign">Design mode pointer</param>
            <returns>ICommonDataHelper-compartable object</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataHelper.RowsCount">
            <summary>
            Returns the data source rows count
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataHelper.ColumnsCount">
            <summary>
            Returns the data source columns count
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataHelper.ColumnNameSupported">
            <summary>
            Returns true if data source supports columns naming or false in other cases
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ArrayDataHelper.indicies(System.Int32)">
            <summary>
            Indices matrix accordingly to a data array Rank
            </summary>
            <param name="columnIndex">Data column index</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ArrayDataHelper.#ctor(System.Array)">
            <summary>
            Array DataHelper constructor
            </summary>
            <param name="array">Data array</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ArrayDataHelper.GetObjectValue(System.Int32,System.Int32)">
            <summary>
            Return the object value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ArrayDataHelper.IsColumnNumeric(System.Int32)">
            <summary>
            Returns true if given column contains numeric values
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ArrayDataHelper.IsColumnString(System.Int32)">
            <summary>
            Returns true if given column contains string type values
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ArrayDataHelper.GetColumnIndex(System.String)">
            <summary>
            Returns column index in a data array by column name
            </summary>
            <param name="columnName">Column name in data array</param>
            <remarks>Unsupported by current DataHelper</remarks>
            <returns>Always returns -1</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ArrayDataHelper.GetColumnName(System.Int32)">
            <summary>
            Returns column name in a data array by column index
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Empty string, because it is unsupported by current DataHelper</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ArrayDataHelper.RowsCount">
            <summary>
            Gets the data source rows count
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ArrayDataHelper.ColumnsCount">
            <summary>
            Gets the data source columns count
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ArrayDataHelper.ColumnNameSupported">
            <summary>
            Returns false, because current data source does not support columns naming
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.DataManager">
            <summary>
            Acquires and manipulates data from databases or other sources. 
            Populates the SeriesCollection of the chart control. 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.DataManager.DESIGN_ROWS_AFFECTED">
            <summary>
            Top data sources rows used during design-time data binding
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.GetColumnIndex(System.String,Telerik.Reporting.Charting.DataManager.ColumnType)">
            <summary>
            General column's index detection method
            </summary>
            <param name="column">Column index or name</param>
            <param name="columnType">Data source column type accordingly to ColumnType enumeration</param>
            <returns>Column index in a data source</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.FindPossibleColumnIndex(System.Int32,Telerik.Reporting.Charting.DataManager.ColumnType)">
            <summary>
            Returns possible column index in data source
            </summary>
            <param name="groupColumn">DataGroupColumn index if present or -1 if not</param>
            <param name="type">Data source column type accordingly to ColumnType enumeration</param>
            <returns>Column index or -1 if impossible to find column</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.GetGroupsColumn(System.String)">
            <summary>
            Gets the groups column index from data source
            </summary>
            <param name="groupsColumn">DataGroupColumn index if present or -1 if not</param>
            <returns>Groups column index or -1 if data grouping disabled</returns>
            <remarks>When the groups column has not been set it will be found automatically</remarks> 
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.GetLabelsColumn(System.String)">
            <summary>
            Gets the labels column index in data source
            </summary>
            <param name="labelsColumn">DataLabelsColumn index if present or -1 if not</param>
            <returns>Series labels column index</returns>
            <remarks>When the labels column has not been set it will be found automatically</remarks> 
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.GetValuesColumn(System.Int32,System.String,Telerik.Reporting.Charting.DataManager.ColumnType,System.Boolean)">
            <summary>
            Gets the series X, Y, X2, Y2, Y3, Y4 values columns 
            </summary>
            <param name="groupsColumn">DataGroupColumn index if present or -1 if not</param>
            <param name="column">Column name</param>
            <param name="columnType">Data source column type accordingly to ColumnType enumeration</param>
            <returns>Column with numeric values. It can be used as X, Y, X2, Y2, Y3, Y4 values source. 
            If impossible to find a column or data helper is NULL it returns -1</returns>
            <remarks>When the series X, X2 or Y2 values column has not been set it will be found automatically</remarks> 
            <param name="auto">Should automatic column search be used or not</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.GetValuesYColumns(System.String[],System.Boolean)">
            <summary>
            Gets the series Y values columns array
            </summary>
            <param name="valuesYColumns">Y values columns array. Can contain as column names as indexes</param>
            <param name="auto">Should auto mode be applied</param>
            <returns>Y values columns indexes array</returns>
            <remarks>When the series Y values column has not been set it will be found automatically</remarks>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.GetAxisLabelsColumn(System.String)">
            <summary>
            Gets the axis labels column index
            </summary>
            <param name="axisLabelsColumn">Axis labels column index or name</param>
            <returns>Column index</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.GetItemName(System.Int32,System.Boolean,System.Int32,System.Int32[],System.Int32,System.Int32,Telerik.Reporting.Charting.DataManager.ItemType)">
            <summary>
            Returns either chart series name or series item name
            </summary>
            <param name="groupColumn">DataGroupColumn index</param>
            <param name="isGroupColumnNumeric">True if group column contains numeric values only</param>
            <param name="labelsColumn">Series Labels column index</param>
            <param name="valuesYColumns">Y Values columns array</param>
            <param name="row">Data item's row index in a data source</param>
            <param name="column">Data item's column index in a data source</param>
            <param name="itemType">Item type Series or SeriesItem</param>
            <returns>Chart item name for an auto created Series or SeriesItem</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.DataBindXAxes(System.Int32)">
            <summary>
            Data bind X Axis labels
            </summary>
            <param name="groupColumn">DataGroupColumn index if present or -1 in other case</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.ItemsEqual(Telerik.Reporting.Charting.ChartSeriesItem,Telerik.Reporting.Charting.ChartSeriesItem)">
            <summary>
            Compares two series items
            </summary>
            <param name="item1">Item to compare</param>
            <param name="item2">Item to compare</param>
            <returns>True if items represent the same data and have same names</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.DataBindSeries(System.Int32)">
            <summary>
            Populates existing chart series collection with data.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.DataBindAuto(System.Int32)">
            <summary>
            Automatically populates chart series collection with data.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.CreateSeries(System.Int32,System.Boolean,System.Int32,System.Int32,Telerik.Reporting.Charting.DataManager.ValuesColumns)">
            <summary>
            Returns new chart series 
            </summary>
            <param name="groupColumn">DataGroupColumn index or -1 if grouping is not used</param>
            <param name="isGroupColumnNumeric">True if group column contains numeric values only</param>
            <param name="row">Data item's row index in a data source</param>
            <param name="column">Data item's column index in a data source</param>
            <param name="vColumns">Values columns array</param>
            <returns>New ChartSeries instance</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.CreateSeriesItem(System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Reporting.Charting.DataManager.ValuesColumns,System.Boolean)">
            <summary>
            Creates new Chart Series item from data source
            </summary>
            <param name="row">Data item's row index in a data source</param>
            <param name="column">Data item's column index in a data source</param>
            <param name="groupColumn">DataGroupColumn index or -1 if grouping is not used</param>
            <param name="labelsColumn">Series items labels column</param>
            <param name="vColumns">Values columns array</param>
            <param name="useLabels">Assign name and label for a series item or not</param>
            <returns>New ChartSeriesItem instance with data from a data source</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.GetDataItem(System.Int32)">
            <summary>
            Returns a Data item from a data source
            </summary>
            <param name="row">Data item's row index in a data source</param>
            <returns>Data item row or null in other cases</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.ValidateDataSource(System.Object)">
            <summary>
            Validates data source object passed
            </summary>
            <param name="dataSource">Data Source</param>
            <remarks>The data source should implement the IEnumerable interface</remarks>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.OnItemDataBound(Telerik.Reporting.Charting.ChartSeries,Telerik.Reporting.Charting.ChartSeriesItem,System.Object)">
            <summary>
            Calls an ItemDataBound event
            </summary>
            <param name="chartSeries">Series</param>
            <param name="chartSeriesItem">Series item</param>
            <param name="dataItem">Data Source</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.DataBind">
            <summary>
            Forces the data to be refreshed
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.ClearDataSource">
            <summary>
            Clears the Data Source used
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.CopyFrom(Telerik.Reporting.Charting.DataManager)">
            <summary>
            Copies settings from another data manager
            </summary>
            <param name="manager">Source DataManager to copy settings from</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataManager.#ctor(Telerik.Reporting.Charting.Chart)">
            <summary>
            Default constructor
            </summary>
            <param name="chart">Parent chart object</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.UseAutoBind">
            <summary>
            Sets the necessary using or not the automatic data binding at the design time
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.IsChartSupportsXAxisDataBinding">
            <summary>
            Returns true if possible to use the automatic X Axis data binding
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.IsSeriesSupportsXValues">
            <summary>
            Does the chart series support the X Values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.IsSeriesSupportsY2Values">
            <summary>
            Does the chart series support the Y2 Values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.IsSeriesSupportsX2Values">
            <summary>
            Does the chart series support the X2 Values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.IsSeriesSupportsX2Y2Values">
            <summary>
            Does the chart series support the X2 and Y2 Values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.IsSeriesSupportsY3Values">
            <summary>
            Does the chart series support the Y3 Values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.IsSeriesSupportsY4Values">
            <summary>
            Does the chart series support the Y4 Values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.CurrentSeriesType">
            <summary>
            Type of the currently processed series
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.CurrentDataHelper">
            <summary>
            Active DataHelper
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.ParentChart">
            <summary>
            Parent Chart object's reference
            </summary>
        </member>
        <member name="E:Telerik.Reporting.Charting.DataManager.ItemDataBound">
            <summary>
            Event raised after the each series item's data binding  
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.DataSource">
            <summary>
            Chart Data Source object
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.DataMember">
            <summary>
            Gets or sets the name of the list of data that the data-bound control binds to, in cases where the data source contains more than one distinct list of data items.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.IsDataBindCalled">
            <summary>
            Returns true if DataBind method has been called
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.LabelsColumn">
            <summary>
            The data source column used as chart labels source
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.ValuesXColumn">
            <summary>
            The data source column used as series items X coordinate
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.ValuesYColumns">
            <summary>
            The data source columns array used as series items Y coordinate source
            </summary>
            <remarks>This array could be used to set the Gantt chart data source columns. 
            The columns should be added in the following order: X, Y, X2, Y2 </remarks>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataManager.UseSeriesGrouping">
            <summary>
            Enables or disables the series grouping feature
            </summary>
            <remarks>Default value is True</remarks>
        </member>
        <member name="T:Telerik.Reporting.Charting.DataManager.ValuesColumns">
            <summary>
            Data source columns indexes used for a series data binding
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.DataManager.ColumnType">
            <summary>
            Possible data source columns' types 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.DataManager.ItemType">
            <summary>
            Chart item type Series or SeriesItem
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartItemDataBoundEventArgs">
            <summary>
            Class containing event data for an ItemDataBound event
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartItemDataBoundEventArgs.#ctor(Telerik.Reporting.Charting.ChartSeriesItem,Telerik.Reporting.Charting.ChartSeries,System.Object)">
            <summary>
            Class constructor
            </summary>
            <param name="seriesItem">Data bound series item</param>
            <param name="chartSeries">Parent series</param>
            <param name="dataItem">Current data source object</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartItemDataBoundEventArgs.DataItem">
            <summary>
            Real data source object for a chart. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartItemDataBoundEventArgs.ChartSeries">
            <summary>
            Chart series 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartItemDataBoundEventArgs.SeriesItem">
            <summary>
            Series item
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.DataTableDataHelper">
            <summary>
            DataTable data source helper class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataTableDataHelper.#ctor(System.Data.DataTable)">
            <summary>
            Default constructor
            </summary>
            <param name="data">DataTable objects as chart's data source</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataTableDataHelper.GetObjectValue(System.Int32,System.Int32)">
            <summary>
            Return the object value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>Object value at given column and row from data source</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataTableDataHelper.IsColumnNumeric(System.Int32)">
            <summary>
            Returns true if given column contains numeric values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains numeric values</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataTableDataHelper.IsColumnString(System.Int32)">
            <summary>
            Returns true if given column contains string type values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains string values</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataTableDataHelper.GetColumnIndex(System.String)">
            <summary>
            Gets the column index by column name in the Data Source object 
            </summary>
            <param name="columnName">Column name</param>
            <returns>Column index if column found or -1 if column not found</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataTableDataHelper.GetColumnName(System.Int32)">
            <summary>
            Gets the column name 
            </summary>
            <param name="columnIndex">Column index</param>
            <returns></returns>        
        </member>
        <member name="P:Telerik.Reporting.Charting.DataTableDataHelper.RowsCount">
            <summary>
            Gets the data source rows count
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataTableDataHelper.ColumnsCount">
            <summary>
            Gets the data source columns count
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataTableDataHelper.ColumnNameSupported">
            <summary>
            Returns true, because current data source supports columns naming
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DataTableDataHelper.DataTable">
            <summary>
            Gets the DataTable object
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Product">
            <summary>
            Sample object. Used for a data binding demonstration only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ProductsBL">
            <summary>
            Sample business logic object. Used for a data binding demonstration only
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ProductsBL.GetProductsList">
            <summary>
            Returns products list
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.DataSetClass">
            <summary>
            Sample class returns DataSet for an ObjectDataSource data binding demo
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataSetClass.#ctor">
            <summary>
            Constructor. Loads sample data in DataSet
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataSetClass.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataSetClass.GetData">
            <summary>
            Gets data as DataSet object
            </summary>
            <returns>DataSet with sample data</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.ComplexDataSetClass">
            <summary>
            Sample class returns DataSet with several columns which could be used as Y values source. Used for a data binding demonstration only
            </summary>
            <remarks>Shows products sales by month.</remarks>
        </member>
        <member name="M:Telerik.Reporting.Charting.ComplexDataSetClass.#ctor">
            <summary>
            Constructor. Loads sample data in DataSet
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ComplexDataSetClass.Finalize">
            <summary>
            Class destructor
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ComplexDataSetClass.GetData">
            <summary>
            Gets data
            </summary>
            <returns>DataSet with sample multicolumn data</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.ProductsList">
            <summary>
            IBindingList example. Used for a data binding demonstration only
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ProductsList.LoadProducts">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ProductsList.Add(Telerik.Reporting.Charting.Product)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ProductsList.AddNew">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ProductsList.Remove(Telerik.Reporting.Charting.Product)">
            <summary>
            
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ProductsList.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="ev"></param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ProductsList.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.DoubleCollection">
            <summary>
            Collection base object example. Used for a data binding demostration only
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DoubleCollection.InitData">
            <summary>
            Data load method
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.DemoData">
            <summary>
            Simple data sources examples class. Used for a data binding demonstration only
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.DemoData.DoubleArray">
            <summary>
            Double Array example
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.DemoData.ObjectsArray">
            <summary>
            Object array without groups column example
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.DemoData.ObjectsArrayCat">
            <summary>
            Object array with groups column example
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DemoData.#ctor">
            <summary>
            Main class constructor
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.DemoData.DoubleList">
            <summary>
            Strong typed double list example
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ListDataHelper">
            <summary>
            Helper class for data binding on the strongly typed lists of objects that can be accessed by index
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListDataHelper.#ctor(System.Collections.IList)">
            <summary>
            Constructor
            </summary>
            <param name="list">Data source that implements IList interface</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListDataHelper.GetObjectValue(System.Int32,System.Int32)">
            <summary>
            Return the object value at the given row and column
            </summary>
            <param name="rowIndex">Row position index</param>
            <param name="columnIndex">Column index</param>
            <returns>Object value at given column and row from data source</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListDataHelper.IsColumnNumeric(System.Int32)">
            <summary>
            Returns true if given column contains numeric values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains numeric values</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListDataHelper.IsColumnString(System.Int32)">
            <summary>
            Returns true if given column contains string type values
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>True if data source column contains string values</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListDataHelper.GetColumnIndex(System.String)">
            <summary>
            Returns column index in a data list by column name
            </summary>
            <param name="columnName">Column name in data list</param>
            <remarks>Unsupported by current DataHelper</remarks>
            <returns>Always returns -1</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListDataHelper.GetColumnName(System.Int32)">
            <summary>
            Returns column name in a data list by column index
            </summary>
            <param name="columnIndex">Column index</param>
            <returns>Empty string, because it is unsupported by current DataHelper</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ListDataHelper.RowsCount">
            <summary>
            Gets the data source rows count
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ListDataHelper.ColumnsCount">
            <summary>
            Gets the data source columns count
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ListDataHelper.ColumnNameSupported">
            <summary>
            Returns false, because current data source does not support columns naming
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartBaseLabel">
            <summary>
            Base class for all labels
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartBaseLabel.chartBaseLabelTextBlock">
            <summary>
            ChartLabel text
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartBaseLabel.chartBaseLabelMarker">
            <summary>
            Graphic marker
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartBaseLabel.chartBaseLabelParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartBaseLabel.chartBaseLabelOrderList">
            <summary>
            List, that represent the render order for taken up elements
            (For IContainer.OrderList property)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartBaseLabel.chartBaseLabelActiveRegion">
            <summary>
            Active region
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.#ctor">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.#ctor(Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
            <param name="container">Container of the label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.#ctor(System.Object,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container of the label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.#ctor(System.Object)">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.#ctor(System.String)">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
            <param name="text">Text of TextBlock</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.#ctor(Telerik.Reporting.Charting.TextBlock)">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
            <param name="textBlock">TextBlock</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.#ctor(System.Object,Telerik.Reporting.Charting.IContainer,Telerik.Reporting.Charting.TextBlock)">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container of the label</param>
            <param name="textBlock">TextBlock</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.#ctor(System.Object,Telerik.Reporting.Charting.IContainer,Telerik.Reporting.Charting.TextBlock,Telerik.Reporting.Charting.Styles.LayoutStyle)">
            <summary>
            Create new instance of ChartBaseLabel class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container of the label</param>
            <param name="textBlock">TextBlock</param>
            <param name="appearance">Style of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.IsVisible">
            <summary>
            Gets whether Label is real visible
            </summary>
            <returns>Label's visibility</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.Measure(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Measure label
            </summary>
            <param name="renderEngine">Render Engine of chart</param>
            <returns>Calculated size of Label</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.CalculatePosition(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Calculates position
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.GetOrder(Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Gets elements order position
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.Add(Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Add element at the end of list
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.Insert(System.Int32,Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Insert element at specific position in list
            </summary>
            <param name="order">Position</param>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.Remove(Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Remove  element from list
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.RemoveAt(System.Int32)">
            <summary>
            Remove  element from list by it's index
            </summary>
            <param name="index">Position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.ReIndex">
            <summary>
            Re-index order list
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.LoadViewState(System.Object)">
            <summary>
            Load ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.SaveViewState">
            <summary>
            Save to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartBaseLabel.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of ChartBaseLabel class with the same fields as this object</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartBaseLabel.TextBlock">
            <summary>
            ChartLabel TextBlock
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartBaseLabel.Marker">
            <summary>
            Graphic marker of label
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartBaseLabel.Parent">
            <summary>
            Gets and sets Parent element
            </summary>
            <value>Element that should be Parent for this</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartBaseLabel.PlacementDirection">
            <summary>
            Gets and sets Direction of label position in auto mode
            </summary>
            <value>Direction of label position.</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartBaseLabel.ActiveRegion">
             <summary>
            Gets and sets Active region
             </summary>
             <value>Active region to set</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartBaseLabel.Visible">
            <summary>
            Gets and sets label's visibility
            </summary>
            <value>Visible label or not</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartBaseLabel.OrderList">
            <summary>
            List, that represent the render order for taken up elements
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartBaseLabel.NextPosition">
            <summary>
            Gets a next free order position
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartLabel">
            <summary>
            Base class for labels with style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabel.#ctor">
            <summary>
            Create new instance of ChartLabel class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabel.#ctor(System.Object)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="parent">Parent Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabel.#ctor(System.String)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="text">Text of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabel.#ctor(Telerik.Reporting.Charting.Styles.StyleLabel)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="appearance">Style of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabel.#ctor(Telerik.Reporting.Charting.Styles.StyleLabel,System.Object)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabel.#ctor(Telerik.Reporting.Charting.Styles.StyleLabel,System.String)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabel.#ctor(Telerik.Reporting.Charting.Styles.StyleLabel,Telerik.Reporting.Charting.TextBlock)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="textBlock">TextBlock of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabel.#ctor(Telerik.Reporting.Charting.Styles.StyleLabel,Telerik.Reporting.Charting.TextBlock,System.Object)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="textBlock">TextBlock of label</param>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabel.#ctor(Telerik.Reporting.Charting.Chart,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabel.#ctor(System.Object,Telerik.Reporting.Charting.IContainer,Telerik.Reporting.Charting.Styles.StyleLabel,Telerik.Reporting.Charting.TextBlock,System.String)">
            <summary>
            Create new instance of ChartLabel class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="appearance">Style of chart</param>
            <param name="textBlock">TextBlock of label</param>
            <param name="text">Text of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabel.IsVisible">
            <summary>
            Gets visibility of label
            </summary>
            <returns>Visible or not </returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartLabel.Appearance">
            <summary>
            Link to visualization and design properties
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ExtendedLabel">
            <summary>
            Base class for extended labels
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ExtendedLabel.extendedLabelItems">
            <summary>
            Inside labels collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.#ctor">
            <summary>
            Create new instance of Extended label class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.#ctor(System.Object)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.#ctor(System.String)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="text">Text of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.#ctor(Telerik.Reporting.Charting.Styles.StyleExtendedLabel)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="appearance">Style of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.#ctor(Telerik.Reporting.Charting.Styles.StyleExtendedLabel,System.Object)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.#ctor(Telerik.Reporting.Charting.Styles.StyleExtendedLabel,System.String)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.#ctor(Telerik.Reporting.Charting.TextBlock)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="textBlock">TextBlock</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.#ctor(System.Object,Telerik.Reporting.Charting.IContainer,Telerik.Reporting.Charting.TextBlock)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container</param>
            <param name="textBlock">TextBlock</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.#ctor(System.Object,Telerik.Reporting.Charting.IContainer,Telerik.Reporting.Charting.Styles.StyleExtendedLabel,Telerik.Reporting.Charting.TextBlock,System.String)">
            <summary>
            Create new instance of Extended label class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container</param>
            <param name="appearance">Style of label</param>
            <param name="textBlock">TextBlock</param>
            <param name="text">Text of elemnt</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.GetMaxAvailableContentSize">
            <summary>
            Gets Available Content Size
            </summary>
            <returns>Size without margins and paddings</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.IsVisible">
            <summary>
            Gets visibility of label
            </summary>
            <returns>Visibility of label</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.Measure(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Measure label
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of label</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.Clear">
            <summary>
            Clear LabelItems collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.AddLabel(Telerik.Reporting.Charting.LabelItem,Telerik.Reporting.Charting.LabelItem[])">
            <summary>
            Add inside labels
            </summary>
            <param name="Label">Inside label to add</param>
            <param name="chartLabels">Inside labels to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.AddLabel(Telerik.Reporting.Charting.ChartLabelsCollection)">
            <summary>
            Add inside labels
            </summary>
            <param name="chartLabels">Inside labels to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.AddLabel(Telerik.Reporting.Charting.LabelItem[])">
            <summary>
            Add inside labels
            </summary>
            <param name="chartLabels">Inside labels to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.AddLabel(System.Collections.Generic.List{Telerik.Reporting.Charting.LabelItem})">
            <summary>
            Add inside labels
            </summary>
            <param name="chartLabels">Inside labels to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.GetLabel(System.Int32)">
            <summary>
            Get inner label at specified position
            </summary>
            <param name="index">Position to get label</param>
            <returns>Label at specified position</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.RemoveAllLabels">
            <summary>
            Removes all inner labels
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.RemoveLabel(Telerik.Reporting.Charting.LabelItem,Telerik.Reporting.Charting.LabelItem[])">
            <summary>
            Removes inner labels
            </summary>
            <param name="Label">Label to remove</param>
            <param name="chartLabels">Labels to remove</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.RemoveLabel(System.Int32,System.Int32[])">
            <summary>
            Removes inner labels
            </summary>
            <param name="index">Position where label should be removed</param>
            <param name="indexes">Positions where labels should be removed</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.LoadViewState(System.Object)">
            <summary>
            load ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.SaveViewState">
            <summary>
            Save ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ExtendedLabel.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ExtendedLabel.Appearance">
             <summary>
            Gets style of label
             </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ExtendedLabel.Item(System.Int32)">
            <summary>
            Gets and sets LabelItem at specified position
            </summary>
            <param name="itemIndex">Item position</param>
            <returns>Item at specified position</returns>
            <value>Item to set at specified position</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.ExtendedLabel.Items">
            <summary>
            Items collection.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.LabelItem">
            <summary>
            Base class for labels in label collection
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.LabelItem.labelItemIsBound">
            <summary>
            Whether item is bound to series
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.LabelItem.#ctor">
            <summary>
            New instance of LabelItem class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.LabelItem.#ctor(System.Object)">
            <summary>
             New instance of LabelItem class.
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LabelItem.#ctor(System.String)">
            <summary>
             New instance of LabelItem class.
            </summary>
            <param name="text">Text of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LabelItem.#ctor(Telerik.Reporting.Charting.Styles.StyleLabel)">
            <summary>
             New instance of LabelItem class.
            </summary>
            <param name="appearance">Style of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LabelItem.#ctor(Telerik.Reporting.Charting.Styles.StyleLabel,System.Object)">
            <summary>
             New instance of LabelItem class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LabelItem.#ctor(Telerik.Reporting.Charting.Styles.StyleLabel,System.String)">
            <summary>
             New instance of LabelItem class.
            </summary>
            <param name="appearance">Style of chart</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LabelItem.#ctor(Telerik.Reporting.Charting.Styles.StyleLabel,Telerik.Reporting.Charting.TextBlockLabelItem)">
            <summary>
             New instance of LabelItem class.
            </summary>
            <param name="appearance">Style of chart</param>
            <param name="textBlock">TextBlock</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LabelItem.#ctor(System.Object,Telerik.Reporting.Charting.Styles.StyleLabel,Telerik.Reporting.Charting.TextBlockLabelItem,System.String)">
            <summary>
             New instance of LabelItem class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="appearance">Style of chart</param>
            <param name="textBlock">TextBlock</param>
            <param name="text">Text of label</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.LabelItem.Name">
             <summary>
            Gets and sets Label name in collection
             </summary>
             <value>Name of label</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.LabelItem.IsBound">
            <summary>
            Is current item bound item or custom item
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.BindableLegendItem">
            <summary>
            Class for bindable legend items
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.BindableLegendItem.bindableLegendItemSource">
            <summary>
            Object to which items are bindable
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.BindableLegendItem.#ctor(Telerik.Reporting.Charting.Styles.StyleLabel,System.Object)">
            <summary>
            Create new instance of BindableLegendItem class.
            </summary>
            <param name="appearance">Style of label</param>
            <param name="parent">Parent element</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.BindableLegendItem.BindableLegendItemSource">
            <summary>
            Source object item bound to
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.SeriesItemLabel">
            <summary>
            Series item label
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.SeriesItemLabel.seriesItemLabelConnectionPoint">
            <summary>
            Connection point for label
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.SeriesItemLabel.seriesItemLabelConnectionMidPoint">
            <summary>
            Center of label
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.SeriesItemLabel.seriesItemLabelRectangle">
            <summary>
            Rectangle of label
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.SeriesItemLabel.#ctor">
            <summary>
            Create new instance of SeriesItemLabel class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.SeriesItemLabel.#ctor(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
             Create new instance of SeriesItemLabel class.
            </summary>
            <param name="series">Series to which label belongs</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.SeriesItemLabel.CheckPlotAreaIntersection(Telerik.Reporting.Charting.ChartPlotArea)">
            <summary>
            Checks if label intersect bounds of PlotArea
            </summary>
            <param name="plotArea">PlotArea for checking</param>
            <returns>Whether label intersect bounds of PlotArea</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.SeriesItemLabel.AdjustPositionByPlotArea(Telerik.Reporting.Charting.ChartPlotArea,System.Int32)">
            <summary>
            Move part of label in PlotArea
            </summary>
            <param name="plotArea">PlotArea to move in</param>
            <param name="side">Side of label which is not in PlotArea</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.SeriesItemLabel.SetOutsideCoordinates(System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Set label outside item
            </summary>
            <param name="rect">Item rectangle</param>
            <param name="isAuto">If Location is auto(Location - Auto, Outside, Inside)</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.SeriesItemLabel.SetInsideCoordinates(System.Drawing.RectangleF)">
            <summary>
            Set label inside item
            </summary>
            <param name="rect">Item rectangle</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.SeriesItemLabel.IsVisible(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Visibility of label
            </summary>
            <param name="series">Series to which label belongs</param>
            <returns>Visibility of label</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.SeriesItemLabel.CalculateLayout(System.Drawing.PointF,System.Drawing.PointF,System.Boolean,Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Calculate position
            </summary>
            <param name="locationPoint">Location point</param>
            <param name="connectionPoint">Connection point</param>
            <param name="showLabelConnectors">Visibilit of label connectors</param>
            <param name="engine">RenderEngine of chart</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.SeriesItemLabel.Adjust(Telerik.Reporting.Charting.ChartPlotArea)">
            <summary>
            Moves label inside PlotArea
            </summary>
            <param name="plotArea">PlotArea</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.SeriesItemLabel.AdjustLabelConnectionPointForPie(System.Double,System.Drawing.PointF)">
            <summary>
            Relocate connection point for pie series 
            </summary>
            <param name="rotationAngle">Angle of  pie part</param>
            <param name="connectionPoint">Connection point</param>
            <returns>Corrected connection point</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.SeriesItemLabel.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Create new instance of SeriesItemLabel class with the same fields as this object</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.SeriesItemLabel.ConnectionPoint">
            <summary>
            Connection point for label
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.SeriesItemLabel.ConnectionMidPoint">
            <summary>
            Center of label to connect to 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.SeriesItemLabel.Appearance">
            <summary>
            Visualization and design properties
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.AxisLabelHidden">
            <summary>
            Axis label base
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisLabelHidden.#ctor">
            <summary>
            Create new instance of AxisLabelHidden
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisLabelHidden.#ctor(System.Object)">
            <summary>
            Create new instance of AxisLabelHidden
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisLabelHidden.#ctor(System.String)">
            <summary>
            Create new instance of AxisLabelHidden
            </summary>
            <param name="text">Text of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisLabelHidden.#ctor(System.Object,Telerik.Reporting.Charting.IContainer,Telerik.Reporting.Charting.Styles.StyleLabelHidden,Telerik.Reporting.Charting.TextBlock,System.String)">
            <summary>
            Create new instance of AxisLabelHidden
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="appearance">Style of label</param>
            <param name="textBlock">TextBlock</param>
            <param name="text">Text of label</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.AxisLabelHidden.Visible">
            <summary>
            Gets and sets Visibility of label
            </summary>
            <value>Visibility of label</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.AxisLabel">
            <summary>
            X Axis label
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisLabel.#ctor">
            <summary>
            Create new instance of AxisLabel
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisLabel.#ctor(System.Object,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of AxisLabel
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.AxisYLabel">
            <summary>
            Y axis label
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisYLabel.#ctor">
            <summary>
            Create new instance of AxisYLabel
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisYLabel.#ctor(System.Object,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of AxisYLabel
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.MarkedZoneLabel">
            <summary>
            MarkedZone label class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.MarkedZoneLabel.#ctor">
            <summary>
            Create new instance of MarkedZoneLabel
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.MarkedZoneLabel.#ctor(Telerik.Reporting.Charting.Styles.StyleLabel)">
            <summary>
            Create new instance of MarkedZoneLabel
            </summary>
            <param name="appearance">Style of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.MarkedZoneLabel.#ctor(Telerik.Reporting.Charting.Styles.StyleLabel,System.Object)">
            <summary>
            Create new instance of MarkedZoneLabel
            </summary>
            <param name="appearance">Style of label</param>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.MarkedZoneLabel.#ctor(Telerik.Reporting.Charting.Styles.StyleLabel,System.String)">
            <summary>
            Create new instance of MarkedZoneLabel
            </summary>
            <param name="appearance">Style of label</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.MarkedZoneLabel.#ctor(Telerik.Reporting.Charting.Chart,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of MarkedZoneLabel
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartLabelsCollection">
            <summary>
            Collection of labels
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartingStateManagedCollection`1">
            <summary>
            Base class for all collections support view state tracking
            </summary>
            <typeparam name="T">Collection item type</typeparam>
        </member>
        <member name="T:Telerik.Reporting.Charting.IDeserializableCollection">
            <summary>
            Describes the elements collection which can be de-serialized using StyleSerializer
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.IDeserializableCollection.PopulateFromXml(System.Xml.XmlElement)">
            <summary>
            Populates collection with items from imported Xml code
            </summary>
            <param name="rootElement">XmlElement to import from</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.IndexOf(`0)">
            <summary>
            Item index in collection
            </summary>
            <param name="item">Item to get index of</param>
            <returns>Index</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts item at the given index
            </summary>
            <param name="index">Index</param>
            <param name="item">Item to insert</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes item from collection at given index
            </summary>
            <param name="index">Index to remove at</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.Add(`0)">
            <summary>
            Adds new item in collection
            </summary>
            <param name="item">Item to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.AddRange(`0[])">
            <summary>
            Adds items range in collection
            </summary>
            <param name="itemsToAdd">Items array to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.Clear">
            <summary>
            Clears collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.Contains(`0)">
            <summary>
            Checks does collection contain the given item
            </summary>
            <param name="item">Item to check</param>
            <returns>True if item is a collection member</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.CopyTo(`0[],System.Int32)" -->
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.Remove(`0)">
            <summary>
            Removes item from collection
            </summary>
            <param name="item">Item to remove</param>
            <returns>True in case of success</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.GetEnumerator" -->
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection
            </summary>
            <returns>An System.Collections.IEnumerator object that can be used to iterate through the collection</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.Telerik#Reporting#Charting#IChartingStateManager#LoadViewState(System.Object)">
            <summary>
            Loads collection from view state
            </summary>
            <param name="state">View state to load from</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.LoadViewState(System.Object)">
            <summary>
            Loads collection from view state
            </summary>
            <param name="state">View state to load from</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.SaveViewState">
            <summary>
            Saves collection to a view state
            </summary>
            <returns>Saved state bag object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.Telerik#Reporting#Charting#IChartingStateManager#SaveViewState">
            <summary>
            Saves collection to a view state
            </summary>
            <returns>Saved state bag object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.Telerik#Reporting#Charting#IChartingStateManager#TrackViewState">
            <summary>
            Tracks view state changes
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.SetDirty">
            <summary>
            Sets is item in the dirty state
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.SetItemDirty(`0)">
            <summary>
            Marks collection item dirty
            </summary>
            <param name="item">Item to mark</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds new item in the IList
            </summary>
            <param name="value">Item to add</param>
            <returns>Item index in IList</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#IList#Clear">
            <summary>
            Clears IList items
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#IList#Contains(System.Object)">
            <summary>
            Checks does IList contain the given value
            </summary>
            <param name="value">Value to check</param>
            <returns>True if contains</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Gets the index of the object value in an IList
            </summary>
            <param name="value">Value to check</param>
            <returns>Index in IList or -1 if IList does not contain given value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts new value in IList at given index
            </summary>
            <param name="index">Index to insert to</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes value from IList
            </summary>
            <param name="value">Value to remove</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes value from IList at the given index
            </summary>
            <param name="index">Index to remove value at</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
                Copies the entire ICollection to a compatible one-dimensional
                array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.OnInsert(System.Int32,System.Object)">
            <summary>
            Item before insert event
            </summary>
            <param name="index">Index to insert at</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Item after insert event
            </summary>
            <param name="index">Index to insert at</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.OnRemove(System.Int32,System.Object)">
            <summary>
            Item before remove event
            </summary>
            <param name="index">Index to insert at</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Item after remove event
            </summary>
            <param name="index">Index to insert at</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.OnClear">
            <summary>
            Before collection clearing event
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.OnClearComplete">
            <summary>
            Collection after clean event
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.Telerik#Reporting#Charting#IDeserializableCollection#PopulateFromXml(System.Xml.XmlElement)">
            <summary>
            Populates collection from XML element
            </summary>
            <param name="rootElement">XmlElement to import from</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.PopulateFromXml(System.Xml.XmlElement)">
            <summary>
            Populates collection from XML element
            </summary>
            <param name="rootElement">XmlElement to import from</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.ToString">
            <exclude/>
            <excludetoc/>
            <summary>
            ToString() override. Used in the properties grid to avoid object type showing.
            </summary>
            <returns>Empty string</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.List">
            <summary>
            Items list
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.First">
            <summary>
            Link to first item in collection
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.Last">
            <summary>
            Link to last item in collection
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.Item(System.Int32)">
            <summary>
            Gets the collection item at given index
            </summary>
            <param name="index">Index</param>
            <returns>Item of type "T"</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.Count">
            <summary>
            Gets items count in collection
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.IsReadOnly">
            <summary>
            Gets true if collection is read-only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.Telerik#Reporting#Charting#IChartingStateManager#IsTrackingViewState">
            <summary>
            Gets the view state tracking status
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#IList#IsFixedSize">
            <summary>
            Is IList fixed size. Returns False
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#IList#IsReadOnly">
            <summary>
            Is IList is read-only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the value from/to IList at the give index
            </summary>
            <param name="index">Index to give element at</param>
            <returns>Value from IList</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#ICollection#Count">
            <summary>
            Gets the collection items count
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#ICollection#IsSynchronized">
            <summary>
            Checks is collection synchronized
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartingStateManagedCollection`1.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets the collection root
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartLabelsCollection.labelsCollectionParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabelsCollection.#ctor">
            <summary>
            Create new instance of ChartLabelsCollection class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabelsCollection.ClearBindableItems">
            <summary>
            Clear bindable items from collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabelsCollection.CopyBindableItemsTo(Telerik.Reporting.Charting.ChartLabelsCollection)">
            <summary>
            Copy bindable items to collection
            </summary>
            <param name="items">Collection of items copy to</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabelsCollection.IsVisible">
            <summary>
            Visibility of items collection 
            </summary>
            <returns>Whether any item is visible</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabelsCollection.Add(Telerik.Reporting.Charting.LabelItem)">
            <summary>
            Add LabelItem at the collection
            </summary>
            <param name="item">LabelItem for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabelsCollection.Clear">
            <summary>
            Clear collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabelsCollection.Insert(System.Int32,Telerik.Reporting.Charting.LabelItem)">
            <summary>
            Insert LabelItem in collection at the specific position
            </summary>
            <param name="index">Position</param>
            <param name="item">LabelItem</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabelsCollection.Remove(Telerik.Reporting.Charting.LabelItem)">
            <summary>
            Remove LabelItem from collection
            </summary>
            <param name="item">LabelItem</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabelsCollection.RemoveAt(System.Int32)">
            <summary>
            Remove LabelItem in the specific position from collection
            </summary>
            <param name="index">Position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabelsCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Remove item at specified index
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabelsCollection.OnClearComplete">
            <summary>
            Clear items
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabelsCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Insert item in collection
            </summary>
            <param name="index">Index to insert in</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabelsCollection.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLabelsCollection.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="state">ViewState with data</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartLabelsCollection.Parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartLabelsCollection.Item(System.Int32)">
            <summary>
            Gets or sets a LabelItem at the specific position in Labels collection.
            </summary>
            <param name="index">Position in the collection</param>
            <returns>LabelItem at the specific position </returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartMarker">
            <summary>
            Base class for a different markers representation
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartMarker.chartMarkerParent">
            <summary>
            Parent Chart element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartMarker.chartMarkerActiveRegion">
            <summary>
            Active region
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarker.#ctor">
            <summary>
            Create new instance of ChartMarker class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarker.#ctor(System.Object)">
            <summary>
            Create new instance of ChartMarker class.
            </summary>
            <param name="parent">Parent lement</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarker.#ctor(Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of ChartMarker class.
            </summary>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarker.#ctor(System.Object,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of ChartMarker class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarker.CopyFrom(Telerik.Reporting.Charting.ChartMarker)">
            <summary>
            Copy fields from specified object
            </summary>
            <param name="marker">Marker to copy from</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarker.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarker.LoadViewState(System.Object)">
            <summary>
            Load data to ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarker.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarker.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarker.Visible">
            <summary>
            Gets and sets visibility
            </summary>
            <value>Visibility of marker</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarker.Parent">
             <summary>
            Gets and sets  Parent element
             </summary>
             <value>Parent element</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarker.Appearance">
            <summary>
            LabelAppearance properties
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarker.ActiveRegion">
            <summary>
            Active region
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.IntelligentEngine">
            <summary>
            Intelligence labels engine. Used to automatically series labels relocation to avoid their overlapping.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.IntelligentEngine.Distribute(System.Collections.Generic.List{Telerik.Reporting.Charting.SeriesItemLabel},System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Distribute labels
            </summary>
            <param name="rects">PlotArea rectangle</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.IntelligentEngine.Distribute(System.Drawing.RectangleF[],Telerik.Reporting.Charting.SeriesItemLabel,System.Boolean)">
            <summary>
            Distribute labels
            </summary>
            <param name="rects">Labels' rectangles</param>
            <param name="moveRect">Label to move</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.IntelligentEngine.IsLocateInVisibleArea(Telerik.Reporting.Charting.SeriesItemLabel,System.Drawing.RectangleF)">
            <summary>
            Filters labels
            </summary>
            <param name="labels">Label for checking whether it is in visible part of chart</param>
            <param name="area">Visible area</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.IntelligentEngine.HitTest(System.Drawing.RectangleF[],System.Drawing.RectangleF,System.Nullable{System.Drawing.PointF}@,System.Nullable{System.Drawing.RectangleF}@)">
            <summary>
            Intersection testing
            </summary>
            <param name="rects">Rectangles for checking whether intersection takes place</param>
            <param name="rect">Rectangle to check intersection with other rectangles</param>
            <param name="cPoint">Point of rectangle that intersect other rectangle</param>
            <param name="cRect">Rectangle that specified rectangle intersects</param>
            <returns>True if rectangle intersect specified rectangles</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.IntelligentEngine.MoveTo(System.Drawing.RectangleF@,System.Drawing.PointF)">
            <summary>
            Move rect to new location
            </summary>
            <param name="rect">Rectangle to move</param>
            <param name="point">New point location</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.IntelligentEngine.GetDistance(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calculates distance between two points
            </summary>
            <param name="point1">First point</param>
            <param name="point2">Second point</param>
            <returns>Distance between two points</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.IntelligentEngine.GetMoveData(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.PointF)">
            <summary>
            Define an object that containes an information about moving required
            </summary>
            <param name="rect">One label rectangle</param>
            <param name="rect2">Second label rectangle</param>
            <param name="ipoint">Intersection point</param>
            <returns>MoveData object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.IntelligentEngine.GetMoveDataVerticalyOnly(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.PointF)">
            <summary>
            Define an object that containes an information about moving required
            </summary>
            <param name="rect">One label rectangle</param>
            <param name="rect2">Second label rectangle</param>
            <param name="ipoint">Intersection point</param>
            <returns>MoveData object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.IntelligentEngine.GetValueIndex(System.Single[])">
            <summary>
            Define a side in which moving require
            </summary>
            <param name="dims">Array of distances</param>
            <returns>Index for Direction enum</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.IntelligentEngine.IsVertical(Telerik.Reporting.Charting.IntelligentEngine.Direction)">
            <summary>
            Check if vertical moving takes place
            </summary>
            <param name="direction">Direction to move</param>
            <returns>True if vertical moving takes place</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.IntelligentEngine.Direction">
            <summary>
            Where label should be moved
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.IntelligentEngine.MoveData">
            <summary>
            Moving related data holder
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.IntelligentEngine.MoveData.moveDataDistance">
            <summary>
            Distance to move label
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.IntelligentEngine.MoveData.moveDataDirection">
            <summary>
            Direction where to move
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.IntelligentEngine.MoveData.Distance">
            <summary>
            Gets and sets Moving distance
            </summary>
            <value>Distance for moving</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.IntelligentEngine.MoveData.Direction">
            <summary>
            Gets and sets Moving direction
            </summary>
            <value>Direction for moving</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.TextBlock">
            <summary>
            Label text properties
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.TextBlock.textBlockCalculatedMaxLength">
            <summary>
            Max length of text
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.TextBlock.textBlockWrapContext">
            <summary>
            Contains specified parameters for wrapping text 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.TextBlock.textBlockWrappedText">
            <summary>
            Wrapped text
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.TextBlock.textBlockParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.TextBlock.DEFAULT_TEXT">
            <summary>
            Default text of text block
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlock.#ctor">
            <summary>
            Create new instance of TextBlock class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlock.#ctor(Telerik.Reporting.Charting.Styles.StyleTextBlock)">
            <summary>
            Create new instance of TextBlock class.
            </summary>
            <param name="appearance">Style of TextBlock</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlock.#ctor(System.String)">
            <summary>
            Create new instance of TextBlock class.
            </summary>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlock.#ctor(Telerik.Reporting.Charting.Styles.StyleTextBlock,System.String)">
            <summary>
            Create new instance of TextBlock class.
            </summary>
            <param name="appearance">Style of TextBlock</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlock.#ctor(Telerik.Reporting.Charting.ChartBaseLabel,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of TextBlock class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlock.#ctor(Telerik.Reporting.Charting.ChartBaseLabel,Telerik.Reporting.Charting.IContainer,System.String)">
            <summary>
            Create new instance of TextBlock class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlock.#ctor(Telerik.Reporting.Charting.ChartBaseLabel,Telerik.Reporting.Charting.IContainer,Telerik.Reporting.Charting.Styles.StyleTextBlock)">
            <summary>
            Create new instance of TextBlock class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="appearance">Style of TextBlock</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlock.#ctor(Telerik.Reporting.Charting.ChartBaseLabel,Telerik.Reporting.Charting.IContainer,Telerik.Reporting.Charting.Styles.StyleTextBlock,System.String)">
            <summary>
            Create new instance of TextBlock class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="appearance">Style of textblock</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlock.CheckToolTip">
            <summary>
            Forms ToolTip if text length greater than max length
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlock.CheckToolTip(System.String)">
            <summary>
            Forms ToolTip if text length greater than max length
            </summary>
            <param name="oldText">Text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlock.textBlockAppearance_MaxLengthChanged(System.Object,System.EventArgs)">
            <summary>
            Check if tooltip should be changed when max length changed
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlock.Measure(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlock.CalculatePosition(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Calculate TextBlock position
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.TextBlock.Visible">
            <summary>
            get a and sets visibility of TextBlock
            </summary>
            <value>Visibility of TextBlock</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.TextBlock.Parent">
            <summary>
            Parent chart element
            </summary>
            <value>Parent element</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.TextBlock.Text">
            <summary>
            Contained text data
            </summary>
            <value>Text</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.TextBlock.Appearance">
            <summary>
            Text field style
            </summary>
            <value>Style of TextBlock</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.TextBlock.VisibleText">
            <summary>
            Visible text with MaxLength applied
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.TextBlock.IsVisible">
            <summary>
            Gets TextBlock visibility
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.TextBlockTitle">
            <summary>
            Chart title text container properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockTitle.#ctor">
            <summary>
            Create new instance of TextBlockTitle class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockTitle.#ctor(Telerik.Reporting.Charting.ChartTitle,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of TextBlockTitle class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockTitle.Measure(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.TextBlockTitle.Text">
            <summary>
            Contained text data
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.TextBlockEmptySeriesMessage">
            <summary>
            Empty Series message text container properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockEmptySeriesMessage.#ctor">
            <summary>
            Create new instance of TextBlockEmptySeriesMessage class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockEmptySeriesMessage.#ctor(Telerik.Reporting.Charting.EmptySeriesMessage,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of TextBlockEmptySeriesMessage class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockEmptySeriesMessage.Measure(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.TextBlockEmptySeriesMessage.Text">
            <summary>
            Contained text data
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.TextBlockAxisItem">
            <summary>
            Axis item text container properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockAxisItem.#ctor">
            <summary>
            Create new instance of TextBlockAxisItem class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockAxisItem.#ctor(Telerik.Reporting.Charting.ChartAxisItem,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of TextBlockAxisItem class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockAxisItem.DefineMaxLengthAuto(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Define Max Length
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockAxisItem.Measure(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.TextBlockSeriesItem">
            <summary>
            Series label text container properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockSeriesItem.#ctor">
            <summary>
            Create new instance of TextBlockSeriesItem class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockSeriesItem.#ctor(Telerik.Reporting.Charting.SeriesItemLabel,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of TextBlockSeriesItem class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.TextBlockHidden">
            <summary>
            Chart title text container properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockHidden.#ctor">
            <summary>
            Create new instance of TextBlockHidden class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockHidden.#ctor(Telerik.Reporting.Charting.ChartBaseLabel,Telerik.Reporting.Charting.IContainer)">
            <summary>
             Create new instance of TextBlockHidden class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.TextBlockHidden.Visible">
            <summary>
            Gets and sets visibility of TextBlock
            </summary>
            <value>Visibility of TextBlock</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.TextBlockYAxisLabel">
            <summary>
            Chart Y Axis text container properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockYAxisLabel.#ctor">
            <summary>
            Create new instance of TextBlockYAxisLabel class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockYAxisLabel.#ctor(Telerik.Reporting.Charting.AxisYLabel,Telerik.Reporting.Charting.IContainer)">
            <summary>
             Create new instance of TextBlockYAxisLabel class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockYAxisLabel.Measure(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.TextBlockYAxisLabel.Text">
            <summary>
            Contained text data
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.TextBlockXAxisLabel">
            <summary>
            Chart X Axis text container properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockXAxisLabel.#ctor">
            <summary>
             Create new instance of TextBlockXAxisLabel class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockXAxisLabel.#ctor(Telerik.Reporting.Charting.AxisLabel,Telerik.Reporting.Charting.IContainer)">
            <summary>
             Create new instance of TextBlockXAxisLabel class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockXAxisLabel.Measure(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.TextBlockXAxisLabel.Text">
            <summary>
            Contained text data
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.TextBlockLabelItem">
            <summary>
            Legend item's text block
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockLabelItem.#ctor">
            <summary>
             Create new instance of TextBlockLabelItem class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockLabelItem.#ctor(Telerik.Reporting.Charting.Styles.StyleTextBlock)">
            <summary>
            Create new instance of TextBlockLabelItem class.
            </summary>
            <param name="appearance">Style of TextBlock</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockLabelItem.#ctor(System.String)">
            <summary>
            Create new instance of TextBlockLabelItem class.
            </summary>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockLabelItem.#ctor(Telerik.Reporting.Charting.Styles.StyleTextBlock,System.String)">
            <summary>
            Create new instance of TextBlockLabelItem class.
            </summary>
            <param name="appearance">Style of chart</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockLabelItem.#ctor(Telerik.Reporting.Charting.ChartBaseLabel,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of TextBlockLabelItem class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockLabelItem.#ctor(Telerik.Reporting.Charting.ChartBaseLabel,Telerik.Reporting.Charting.IContainer,System.String)">
            <summary>
            Create new instance of TextBlockLabelItem class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockLabelItem.#ctor(Telerik.Reporting.Charting.ChartBaseLabel,Telerik.Reporting.Charting.IContainer,Telerik.Reporting.Charting.Styles.StyleTextBlock)">
            <summary>
            Create new instance of TextBlockLabelItem class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="appearance">Style of TextBlock</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockLabelItem.#ctor(Telerik.Reporting.Charting.ChartBaseLabel,Telerik.Reporting.Charting.IContainer,Telerik.Reporting.Charting.Styles.StyleTextBlock,System.String)">
            <summary>
            Create new instance of TextBlockLabelItem class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
            <param name="appearance">Style of TextBlock</param>
            <param name="text">Text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockLabelItem.Measure(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.TextBlockLegend">
            <summary>
            Chart title text container properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockLegend.#ctor">
            <summary>
            Create new instance of TextBlockLegend class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockLegend.#ctor(Telerik.Reporting.Charting.ExtendedLabel,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of TextBlockLegend class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockLegend.Measure(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>Size of TextBlock</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.TextBlockMarkedZone">
            <summary>
            MarkedZone label's text container properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockMarkedZone.#ctor">
            <summary>
            Create new instance of TextBlockMarkedZone class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockMarkedZone.#ctor(Telerik.Reporting.Charting.MarkedZoneLabel,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create new instance of TextBlockMarkedZone class.
            </summary>
            <param name="parent">Parent element</param>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.TextBlockMarkedZone.Measure(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Measure TextBlock
            </summary>
            <param name="renderEngine">RenderEngine of chart</param>
            <returns>size of TextBlock</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartString">
            <summary>
            The helper class for a text wrapping feature. Represents the text string
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartString.isFirst">
            <summary>
            Defines whether it is first string or not
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartString.isLast">
            <summary>
            Defines whether it is last string or not
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartString.parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartString.words">
            <summary>
            Collection of words in text
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartString.height">
            <summary>
            Height of string
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartString.width">
            <summary>
            Width of string
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartString.#ctor">
            <summary>
            Create instance of ChartString
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartString.#ctor(System.Single)">
            <summary>
            Create instance of ChartString with specified height
            </summary>
            <param name="height">Height of string</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartString.WidthCalculate">
            <summary>
            Calculate string width
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartString.MoveLastWordToNextString">
            <summary>
            Move last word to next string
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartString.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance with the same properties values as current class instance</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartString.IsFirst">
            <summary>
            Defines whether it is first string or not
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartString.IsLast">
            <summary>
            Defines whether it is last string or not
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartString.Parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartString.NextString">
            <summary>
            Get next string
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartString.Previous">
            <summary>
            Get previous string
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartString.Width">
            <summary>
            Get width of string
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartString.Height">
            <summary>
            Get height of string
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartString.Words">
            <summary>
            Collection of words
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartStringCollection">
            <summary>
            Strings collection
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartStringCollection.parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartStringCollection.#ctor(Telerik.Reporting.Charting.ChartText)">
            <summary>
            Create new instance of ChartStringCollection class
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartStringCollection.Add(Telerik.Reporting.Charting.ChartString)">
            <summary>
             Add new string to collection
            </summary>
            <param name="str">String to add</param>
            <returns>Index of added string</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartStringCollection.GetNext(Telerik.Reporting.Charting.ChartString)">
            <summary>
            Get next string after specified one
            </summary>
            <param name="str">String for search</param>
            <returns>Next string after specified one</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartStringCollection.GetPrevious(Telerik.Reporting.Charting.ChartString)">
            <summary>
            Get previous string before specified one
            </summary>
            <param name="str">String for search</param>
            <returns>Previous string before specified one</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartStringCollection.Clone">
            <summary>
            Clone of this object
            </summary>
            <returns>New instance with the same fields</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartStringCollection.Item(System.Int32)">
            <summary>
            Get string with specified index
            </summary>
            <param name="index">Index to get string</param>
            <returns>String with specified index</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartStringCollection.First">
            <summary>
            Get the first string
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartStringCollection.Last">
            <summary>
            Get the last string
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartStringCollection.Parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartText">
            <summary>
            Helper class for a text wrapping feature. Represents the text to wrap
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartText.space">
            <summary>
            Word separator
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartText.strings">
            <summary>
            Text divided into strings
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartText.text">
            <summary>
            Inner text
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartText.font">
            <summary>
            Font of text
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartText.graphics">
            <summary>
            Used for measuring text
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartText.#ctor">
            <summary>
            Create new instance of the class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartText.#ctor(System.String,System.Drawing.Font,Telerik.Reporting.Charting.ChartGraphics)">
            <summary>
            Create new instance of the class.
            </summary>
            <param name="text">Text</param>
            <param name="font">Font of text</param>
            <param name="graphics">Graphics object for measuring string</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartText.Distibute(System.Single,Telerik.Reporting.Charting.WrapContext)">
            <summary>
            Breaks text into lines
            </summary>
            <param name="factor">Used to make decision for breaking</param>
            <param name="context">Determines which of parameters(height, width) is fixed</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartText.Distibute(System.Single,System.Single)">
            <summary>
            Breaks text into lines
            </summary>
            <param name="factor">Used to make decision for breaking</param>
            <param name="needWidth">Fixed width of text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartText.Distibute(System.Single)">
            <summary>
             Breaks text into lines
            </summary>
            <param name="factor">Used to make decision for breaking</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartText.ToString">
            <summary>
            String representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartText.FixedProportionDistibution(System.Single)">
            <summary>
            Breaks text into lines with fixed proportions
            </summary>
            <param name="factor">Factor(Height-Width proportion) to make decision</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartText.FixedHeightDistibution(System.Single,System.Int32)">
            <summary>
            Breaks text into lines with fixed Height
            </summary>
            <param name="factor">Factor(Height-Width proportion) to make decision</param>
            <param name="maxStringsCount">Max Strings Count</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartText.FixedWidthDistibution(System.Single)">
            <summary>
            Breaks text into lines with fixed width
            </summary>
            <param name="width">Fixed width</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartText.AddString(System.String,System.String,System.String,System.Single)">
            <summary>
            Add new string to text of fixed width
            </summary>
            <param name="baseString">Inner text</param>
            <param name="str">String should be added</param>
            <param name="space">Separator between text and new string</param>
            <param name="width">Fixed width</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartText.GetStringWithMaxWidth">
            <summary>
            Gets the longest string 
            </summary>
            <returns>The longest string </returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartText.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of ChartText class with the same fields as this object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartText.DropLineBreaks(System.String)">
            <summary>
            Concat lines to one text
            </summary>
            <param name="text">Inner text</param>
            <returns>Text without new lines delimiters</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartText.Space">
            <summary>
            Word separator
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartText.Height">
            <summary>
            Height of text
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartText.Width">
            <summary>
            Width of text
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartText.Factor">
            <summary>
            Used to make decision for breaking text into lines
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartWord">
            <summary>
            Helper class for a text wrapping feature. Represents the one word
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartWord.width">
            <summary>
            Word width
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartWord.text">
            <summary>
            Text of one word
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartWord.parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartWord.#ctor">
            <summary>
            Create new instance of ChartWord
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartWord.#ctor(System.String,System.Single)">
            <summary>
            Create new instance of ChartWord.
            </summary>
            <param name="text">Text of word.</param>
            <param name="width">Width of word.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartWord.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of ChartWord with the same fields as this object</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartWord.Parent">
            <summary>
            Gets and sets Parent element
            </summary>
            <value>Element that should be parent for this object</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartWord.Width">
            <summary>
            Gets Width of word
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartWord.Text">
            <summary>
            Gets Word text
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartWordCollection.parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartWordCollection.#ctor(Telerik.Reporting.Charting.ChartString)">
            <summary>
            Create new instance of the object.
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartWordCollection.Add(Telerik.Reporting.Charting.ChartWord)">
            <summary>
            Add new word to collection
            </summary>
            <param name="word">Word for adding</param>
            <returns>Index of added word</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartWordCollection.RemoveLast">
            <summary>
            Remove last word from collection
            </summary>
            <returns>Last word that was removed</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartWordCollection.InsertAsFirst(Telerik.Reporting.Charting.ChartWord)">
            <summary>
            Insert word at the beginning of collection
            </summary>
            <param name="str">Word to insert</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartWordCollection.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of ChartWordCollection class with the same fields as this one</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartWordCollection.Parent">
            <summary>
            Gets and sets Parent element
            </summary>
            <value>Element that should be Parent for this object</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartWordCollection.Item(System.Int32)">
            <summary>
            Gets and sets word from/to collection
            </summary>
            <param name="index">Index of word in collection</param>
            <returns>Word from collection with specified index</returns>
            <value>Word that should be placed on specified position</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartWordCollection.Last">
            <summary>
            Gets last word in collection
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.WrapType">
            <summary>
            Helper enumeration with a text wrapping modes
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.WrapContext">
            <summary>
            Text wrapping context object
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.WrapContext.wrapContainerWidth">
            <summary>
            Width of container
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.WrapContext.wrapContainerHeight">
            <summary>
            Height of container
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.WrapContext.wrapType">
            <summary>
            Type demonstrate which of parameters is fixed
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.WrapContext.#ctor(System.Single,System.Single,Telerik.Reporting.Charting.WrapType)">
            <summary>
            Create instance of WrapContext class
            </summary>
            <param name="width">Width of container</param>
            <param name="height">Height of container</param>
            <param name="type">Type</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.WrapContext.#ctor(Telerik.Reporting.Charting.Styles.Dimensions,Telerik.Reporting.Charting.WrapType)">
            <summary>
            Create instance of WrapContext class
            </summary>
            <param name="dimension">Dimensions of container object</param>
            <param name="type">Type</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.WrapContext.ContainerWidth">
            <summary>
            Gets container width
            </summary>
            <value>Width of container</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.WrapContext.ContainerHeight">
            <summary>
            Gets container height
            </summary>
            <value>Height of container</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.WrapContext.Type">
            <summary>
            Gets Type of WrapContext
            </summary>
            <value>Type that shows what parameter is fixed</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartElementLocation">
            <summary>
            Specifies the location of the RadChart's elements.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartElementLocation.InsidePlotArea">
            <summary>
            The chart element is placed inside plot area.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartElementLocation.OutsidePlotArea">
            <summary>
            The chart element is placed outside plot area.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartLegend">
            <summary>
            Chart legend. Shows the series names or series labels listing. Can contains custom items.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartLegend.legendBindableItems">
            <summary>
            Labels for bindable items collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLegend.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLegend.#ctor(Telerik.Reporting.Charting.Chart,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Constructor
            </summary>
            <param name="parent">Reference to a parent object (Current Chart instance)</param>
            <param name="container">Element container</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLegend.ClearBoundItems(System.Boolean)">
            <summary>
            Clears bound items collection
            </summary>
            <param name="copyItems">Should automatically created bound items be removed or not</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLegend.AddBoundItem(Telerik.Reporting.Charting.RenderEngine,Telerik.Reporting.Charting.ChartSeries,Telerik.Reporting.Charting.ChartSeriesItem,Telerik.Reporting.Charting.ChartSeriesLegendDisplayMode,System.Int32,System.Int32)">
            <summary>
            Creates new legend item bound to series or series item
            </summary>
            <param name="engine">RenderEngine</param>
            <param name="series">Chart series</param>
            <param name="item">Series item</param>
            <param name="mode">How series will be represented in Legend: Series names, Series items or hidden (Nothing)</param>
            <param name="seriesIndex">Series index in collection</param>
            <param name="itemIndex">Series item index in collection</param>
            <returns>New LegendItem bound to a chart object: series or series item</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLegend.BindSeriesToLegend(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Creates bound items collection
            </summary>
            <param name="engine">RenderEngine</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartLegend.AddCustomItemToLegend(System.String,Telerik.Reporting.Charting.Styles.FillStyle,System.String)">
            <summary>
            Adds custom item to Legend
            </summary>
            <param name="description">Custom legend item text</param>
            <param name="fillStyle">FillStyle</param>
            <param name="figure">Figure for an item marker</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartLegend.Item(System.Int32)">
            <summary>
            Reference to a label item by its index in items collection
            </summary>
            <param name="itemIndex">Label item's index</param>
            <returns>LabelItem at given index</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartLegend.BoundItems">
            <summary>
            Bound items collection
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.MapAreaBuilderBase">
            <summary>
            The base class with common functionality needed by web chart controls for an image maps creation
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.MapAreaBuilderBase.GetPath(Telerik.Reporting.Charting.IOrdering,System.Collections.ArrayList)">
            <summary>
            Gets a string of element path in a parent control order list hierarchy.
            <example>For example, Legend has an index 4 in a Chart's order list, first legend item has an index 0 in Legend's order list.
            So result string will look like "4, 0"</example>
            </summary>
            <param name="element">IOrdering element</param>
            <param name="list">ArrayList with parent indexes</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.MapAreaBuilderBase.GenerateImageMap(Telerik.Reporting.Charting.IContainer)">
            <summary>
            Generates the image map HTML code
            </summary>
            <param name="container"></param>
            <returns>HTML code with created image map</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.MapAreaBuilderBase.AddAxesItemsImageMap(Telerik.Reporting.Charting.ChartAxis,System.Text.StringBuilder)">
            <summary>
            Creates chart axes specific image maps code
            </summary>
            <param name="axis">Chart axis</param>
            <param name="html">StringBuilder to populate with image map HTML code</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.MapAreaBuilderBase.AddImageMap(Telerik.Reporting.Charting.IOrdering,System.Text.StringBuilder,System.Boolean)">
            <summary>
            Generates an image map string for a given IOrdering object and appends it to a given StringBuilder object
            </summary>
            <param name="elem">IOrdering element</param>
            <param name="html">The target StringBuilder object</param>
            <param name="makeTooltipOnly">Disables a JavaScript post back function creation if only tool tip creation required</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.MapAreaBuilderBase.GetFigureName(Telerik.Reporting.Charting.ChartSeriesItem,System.Int32)">
            <summary>
            Gets a figure name for a image map type for a different series types
            </summary>
            <param name="seriesItem">Series item</param>
            <param name="regionIndex">The Active region index in a regions list</param>
            <returns>Figure name</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.MapAreaBuilderBase.GetShapeType(System.String)">
            <summary>
            Gets an appropriate HTML shape name by an internal figure name
            </summary>
            <param name="figure">The charting Figure string value</param>
            <returns>HTML shape name (rect, circle, poly)</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.MapAreaBuilderBase.GetCoordinates(System.Drawing.Drawing2D.GraphicsPath,System.String)">
            <summary>
            Gets the image maps coordinates
            </summary>
            <param name="path">Graphics Path object to get coordinates from</param>
            <param name="figure">Charting figure</param>
            <returns>String of element coordinates in the image map separated by comma</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.MapAreaBuilderBase.GetPostBackEventReference(System.String)">
            <summary>
            Returns a string that can be used in a client event to cause post back to 
            the server. The reference string is defined by string argument of additional event information.
            </summary>
            <param name="arguments">A string of optional arguments to pass to the control that processes the post back.</param>
            <returns>A string that, when treated as script on the client, initiates the post back.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.MapAreaBuilderBase.HasChartClickEvent">
            <summary>
            Checks if chart control has a Click event enabled
            </summary>
            <returns>True or False</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.MapAreaBuilderBase.GenerateImageMap">
            <summary>
            Generates image map HTML string
            </summary>
            <returns>HTML string</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.AxisSegment">
            <summary>
            Axis segment in case of ScaleBreaks enabled
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.AxisSegment.axisSegmentPointStart">
            <summary>
            Start point of segment
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.AxisSegment.axisSegmentPointEnd">
            <summary>
            End point of segment
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.AxisSegment.axisSegmentRectangle">
            <summary>
            Segments rectangle
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.AxisSegment.axisSegmentVisibleValues">
            <summary>
            Axis visible values
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.AxisSegment.axisSegmentItemsCount">
            <summary>
            Items count in this segment
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.AxisSegment.axisSegmentPaths">
            <summary>
            Array of two elements with segments lines as GraphicsPath
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.AxisSegment.axisSegmentPercent">
            <summary>
            Value indicate: how much percents of axis this segment is take up
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegment.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegment.#ctor(System.String)">
            <summary>
            Creates a new class instance
            <param name="name">Segment name</param>
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegment.GetX(System.Double)">
            <summary>
            Gets X coordinate
            </summary>
            <param name="val">Series value to get coordinate of</param>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegment.GetY(System.Double)">
            <summary>
            Gets Y coordinate
            </summary>
            <param name="val">Series value to get coordinate of</param>
            <returns>Coordinate</returns>       
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegment.SetRange(Telerik.Reporting.Charting.ChartSeriesItemsCollection,System.Boolean)">
            <summary>
            Recalculates items values in collection
            </summary>
            <param name="items">Series items with values in current segment diapason</param>
            <param name="isOptimizeMax">Should max value optimization be done or not</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegment.OptimizeNumber(System.Double,System.Nullable{System.Boolean})">
            <summary>
            Getting the better value
            </summary>
            <param name="number">Number</param>
            <param name="toLarge">Should get biggest number or not</param>
            <returns>Number</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegment.GetAxisItems(Telerik.Reporting.Charting.ChartAxis)">
            <summary>
            Create axis items
            </summary>
            <param name="axis">Axis</param>
            <returns>Final value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegment.IsIntersection(Telerik.Reporting.Charting.AxisSegment)">
            <summary>
            Check segments on a intersections
            </summary>
            <param name="segment">Any other segment</param>
            <returns>True if segments intersect</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegment.GetPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Return a path around segments rectangle
            </summary>
            <param name="linePath">Path depending of scale break line type</param>
            <param name="startLine">Should start segment line as scale break line type be created</param>
            <param name="endLine">Should end segment line as scale break line type be created</param>
            <param name="isHorizontal">Plot area series orientation, true if horizontal</param>
            <returns>Segments path</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.AxisSegment.Name">
            <summary>
            Segments name in collection
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.AxisSegment.MinValue">
            <summary>
            Segment minimum value at the axis
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.AxisSegment.MaxValue">
            <summary>
            Maximum segment's value at the axis
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.AxisSegment.Step">
            <summary>
            Axis items step for a current Segment
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.AxisSegment.StartPoint">
            <summary>
            Segment start point
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.AxisSegment.EndPoint">
            <summary>
            Segment end point
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.AxisSegment.Rectangle">
            <summary>
            Segment's bound rectangle
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.AxisSegment.PixelsPerValue">
            <summary>
            Pixels per one value
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.AxisSegmentCollection">
            <summary>
            Segments collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegmentCollection.CheckedAdd(Telerik.Reporting.Charting.AxisSegment)">
            <summary>
            Check segment and add it into collection
            </summary>
            <param name="segment">Segment for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegmentCollection.Search(System.Double)">
            <summary>
            Searches for a segment where value is located
            </summary>
            <param name="value">Value to check</param>
            <returns>AxisSegment</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegmentCollection.Search(System.Double,System.Boolean)">
            <summary>
            Searches for a segment where value is located
            </summary>
            <param name="value">Value to check</param>
            <param name="withoutNull">Null values exclusion reason</param>
            <returns>AxisSegment</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegmentCollection.Sort">
            <summary>
            Sorts segments 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegmentCollection.Test(Telerik.Reporting.Charting.ChartSeriesItemsCollection)">
            <summary>
            Checks if series item in current segment
            </summary>
            <param name="items">SeriesItemsCollectionv</param>
            <returns>True if value is in segment</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.AxisSegmentCollection.IsHaveNegative">
            <summary>
            Gets true if just one negative value presents in segment
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.AxisSegmentCollection.IsHavePositive">
            <summary>
            Gets true if just one positive value presents in segment
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.AxisSegmentCollection.IsHaveZero">
            <summary>
            Gets true if segment contains axis zero value
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.AxisSegmentCollection.NearZeroValue">
            <summary>
            Gets the nearest to Zero axis value
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.AxisSegmentComparer">
            <summary>
            Segments comparer
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.AxisSegmentComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Segments order comparison
            </summary>
            <param name="x">First segment</param>
            <param name="y">Second segment</param>
            <returns>0 if segments are equal, 
            -1 if first segment should be rendered at top of the second segment at axis, 
            1 if second segment should be rendered at top of the first segment at axis</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartAxisType">
            <summary>
            Chart axis types enumeration
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartAxis">
            <summary>
            Base chart axis class
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.chartAxisAppearance">
            <summary>
            ChartAxis style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.chartAxisLabel">
            <summary>
            ChartAxis main label
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.chartAxisItems">
            <summary>
            ChartAxis items
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.chartAxisParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.chartAxisOnlyNegativeValues">
            <summary>
            Show only negative values
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.chartAxisOnlyPositiveValues">
            <summary>
            Show positive values only
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.chartAxisRealIsZeroBased">
            <summary>
            Is axis zero based
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.chartAxisMinItemValue">
            <summary>
            Min axis item value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.chartAxisMaxItemValue">
            <summary>
            Max axis item value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.chartAxisMinAxisValue">
            <summary>
            Minimum series value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.chartAxisMaxAxisValue">
            <summary>
            Maximum series value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.chartAxisPointStart">
            <summary>
            Axis start point 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.chartAxisPointEnd">
            <summary>
            Axis zero value end point 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.pixelsPerValue">
            <summary>
            Pixels per value field.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxis.zeroCoord">
            <summary>
            Cached zero coordinate value.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.TrackViewState">
            <summary>
            Tracking ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.LoadViewState(System.Object)">
            <summary>
            Loading ViewState data
            </summary>
            <param name="savedState">Saved state bag</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.SaveViewState">
            <summary>
            Saves data to a State Bag
            </summary>
            <returns>Saved axis data to a state bag</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetDistance(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Gets distance between points
            </summary>
            <param name="point1">First point</param>
            <param name="point2">Second point</param>
            <returns>Distance</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.CalculateGridsAndTicks">
            <summary>
            Calculates grid lines and ticks positions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.ClearAutoPropertiesForAxisItems">
            <summary>
            Excludes the excessive serialization of axis items properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.CorrectAxisLabelPosition(Telerik.Reporting.Charting.Styles.Position)">
            <summary>
            Used to correct initial axis label AlignedPosition for AutoLayout
            </summary>
            <param name="position">Position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.CorrectAxisItemPosition(Telerik.Reporting.Charting.Styles.Position)">
            <summary>
            Used to automatically correct the axis item AlignedPosition in AutoLayout
            </summary>
            <param name="position">Position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetWidth">
            <summary>
            Gets the largest axis item width 
            </summary>
            <returns>Width value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetHeight">
            <summary>
            Gets the largest axis item height 
            </summary>
            <returns>Height value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.FormatLabel(System.Double)">
            <summary>
            Formats the axis item value with a selected ValueFormat value 
            </summary>
            <param name="val">Item value</param>
            <returns>Formatted string</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetCoordinate(System.Double)">
            <summary>
            Gets value coordinate at axis
            </summary>
            <param name="val">Value</param>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetCoordinate(System.Double,System.Single,System.Boolean)">
            <summary>
            Gets value coordinate at axis
            </summary>
            <param name="val">Value</param>
            <param name="pixelsPerVal">Pixels per value</param>
            <param name="roundCoord">Make a coordinate value rounding or not</param>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetZeroValue">
            <summary>
            Return the base value of the axis.
            </summary>
            <returns>Axis zero value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetZeroCoordinate">
            <summary>
            Gets the coordinate of zero value
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetAxisStartCoord">
            <summary>
            Gets the start value coordinate
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetAxisEndCoord">
            <summary>
            Gets the end value coordinate
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.SaveLabelPosition">
            <summary>
            Saves the initial axis label and common axis items positions settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.RestoreLabelPosition">
            <summary>
            Restores the initial axis label and common axis items positions settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.SetRange">
            <summary>
            Recalculates items values in collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.CheckRange(System.Double,System.Double,System.Double)">
            <summary>
            Checks the range values
            </summary>
            <param name="minValue">Min axis value</param>
            <param name="maxValue">Max axis value</param>
            <param name="step">Axis step value</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.DisableCachedValues">
            <summary>
            Restores initial values of cached axis settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetItemsBound(Telerik.Reporting.Charting.ChartAxisItem,System.Single)">
            <summary>
            Gets the axis item's max bound: horizontally or vertically
            </summary>
            <param name="item">Axis item</param>
            <param name="rotationAngle">Rotation angle's value</param>
            <returns>Max bound value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetClientRectangle(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Gets axis image rectangle
            </summary>
            <param name="startPoint">Start point</param>
            <param name="endPoint">End point</param>
            <remarks>Used with client-zoom in ASP.NET Ajax chart</remarks>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetClientRectangle">
            <summary>
            Gets axis image rectangle
            </summary>
            <remarks>Used with client-zoom in ASP.NET Ajax chart</remarks>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetFirstItemHalfDimension">
            <summary>
            Gets the half of the first axis item's largest dimension
            </summary>
            <returns>Half of the largest dimension</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetLastItemHalfDimension">
            <summary>
            Gets the half of the last axis item's largest dimension
            </summary>
            <returns>Half of the largest dimension</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.CalculateLayout(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Calculates axis layout settings
            </summary>
            <param name="renderEngine">RenderEngine</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.InitializeItems">
            <summary>
            Initialize the axis items collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.CalculateAxisLabel(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Calculates axis label's layout settings
            </summary>
            <param name="renderEngine">RenderEngine</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.CheckAxisItemVisibility(Telerik.Reporting.Charting.ChartAxisItem)">
            <summary>
            Checks the axis item visibility
            </summary>
            <param name="item">Axis item</param>
            <returns>True if item should be rendered</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.IsVisible">
            <summary>
            Checks the axis item visibility 
            </summary>
            <returns>The Boolean value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.SetMinValue(System.Double)">
            <summary>
            Sets the min axis range value
            </summary>
            <param name="minValue">Value to set</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.ShouldSerializeMinValue">
            <summary>
            The axis MinValue design time serialization reason
            </summary>
            <returns>True is value have to be serialized</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.ResetMinValue">
            <summary>
            Resets the MinValue to default
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.ShouldSerializeMaxValue">
            <summary>
            The axis MaxValue design time serialization reason
            </summary>
            <returns>True is value have to be serialized</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.ResetMaxValue">
            <summary>
            Resets the MaxValue to default
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.SetMaxValue(System.Double)">
            <summary>
            Sets the maximum axis range value
            </summary>
            <param name="minValue">Value to set</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.ShouldSerializeStep">
            <summary>
            The axis Step design time serialization reason
            </summary>
            <returns>True is value have to be serialized</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.ResetStep">
            <summary>
            Resets the Step value to default
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.#ctor(Telerik.Reporting.Charting.ChartPlotArea)">
            <summary>Creates a new instance of the ChartAxis class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.#ctor(Telerik.Reporting.Charting.ChartPlotArea,Telerik.Reporting.Charting.IContainer)">
            <summary>Creates a new instance of the ChartAxis class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.Initialize(System.Double,System.Double)">
            <summary>Initializes the axis with min and max values.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.AutoCalcAxisExtents">
            <summary>
            Auto determines the min and max value of the axis
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.CalculateStep(System.Double@,System.Double@)">
            <summary>
            Axis Step calculation method for AutoScaled axes
            </summary>
            <param name="minValue">Min range value</param>
            <param name="maxValue">Max range value</param>
            <returns>Calculated Step value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.AdjustingMinMax(System.Double@,System.Double@,System.Double)">
            <summary>
            Adjusting min/max value according to the set axis properties
            </summary>
            <param name="minValue">Min range value</param>
            <param name="maxValue">Max range value</param>
            <param name="dValue">Rounding digits limit</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.SetPositiveOrNegative(System.Double@,System.Double@)">
            <summary>
            Sets the minimum and maximum axis range values
            </summary>
            <param name="minValue">Min range value</param>
            <param name="maxValue">Max range value</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.AddItem(Telerik.Reporting.Charting.ChartAxisItem,Telerik.Reporting.Charting.ChartAxisItem[])">
            <summary>Adds a ChartAxisItem to the axis.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.AddItem(Telerik.Reporting.Charting.ChartAxisItemsCollection)">
            <summary>Adds a ChartAxisItemsCollection to the axis.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.AddItem(Telerik.Reporting.Charting.ChartAxisItem[])">
            <summary>Adds ChartAxisItems to the axis.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.AddItem(System.Collections.Generic.List{Telerik.Reporting.Charting.ChartAxisItem})">
            <summary>Adds ChartAxisItems to the axis.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.GetItem(System.Int32)">
            <summary>Gets the item at the specified index.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.RemoveAllItems">
            <summary>Removes all items</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.RemoveItem(Telerik.Reporting.Charting.ChartAxisItem,Telerik.Reporting.Charting.ChartAxisItem[])">
            <summary>Removes the ChartAxisItem specified.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.RemoveItem(System.Int32,System.Int32[])">
            <summary>Removes the ChartAxisItems at the specified indexes.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.RemoveItem(System.Int32)">
            <summary>
            Removes the ChartAxisItem at the specified index.
            </summary>
            <param name="itemIndex">item's index</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.RemoveLastItem">
            <summary>
            Removes the last item from the axis.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.Clear">
            <summary>
            Clears data values of the axis.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.AddRange(System.Double,System.Double,System.Double)">
            <summary>
            Automatically adds new axis items in AutoScale mode.
            </summary>
            <param name="minValue">Min range value</param>
            <param name="maxValue">Max range value</param>
            <param name="step">Axis step value</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.AddItem(System.String,System.Drawing.Color)">
            <summary>
            Adds a new ChartAxisItem object to the axis with the specified label and color.
            </summary>
            <param name="label">Axis label</param>
            <param name="color">Item text color</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.AddItem(System.String,System.Drawing.Color,System.Boolean)">
            <summary>
            Adds a new ChartAxisItem object to the axis with the specified label and color.
            </summary>
            <param name="label">Axis label</param>
            <param name="color">Item text color</param>
            <param name="visible">Visibility</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.AddItem(System.String)">
            <summary>
            Adds a new ChartAxisItem object to the axis with the specified label.
            </summary>
            <param name="label">Axis label text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.AddItem(System.String,System.Double)">
            <summary>
            Adds a new ChartAxisItem object to the axis with the specified label.
            </summary>
            <param name="label">Axis label text</param>
            <param name="value">Axis item value</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.SetItemLabel(System.Int32,System.String)">
            <summary>
            Sets new label text for the axis item at the specified position.
            </summary>
            <param name="itemIndex">Item index in collection</param>
            <param name="newLabelText">Axis item label text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.SetItemLabel(System.Int32,Telerik.Reporting.Charting.ChartAxisItem)">
            <summary>
            Sets new label for the axis item at the specified position.
            </summary>
            <param name="itemIndex">Item index in collection</param>
            <param name="newLabelText">Axis item</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.SetItemColor(System.Int32,System.Drawing.Color)">
            <summary>
            Sets new color for the axis item text at the specified position.
            </summary>
            <param name="itemIndex">Item index in collection</param>
            <param name="newColor">Item text color</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxis.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.TicksLength">
            <summary>
            Gets the longest tick length
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.IsMajorTickVisible">
            <summary>
            Gets the major axis ticks visibility
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.IsMinorTickVisible">
            <summary>
            Gets the minor axis ticks visibility
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.IsTickVisible">
            <summary>
            Gets the axis ticks visibility
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.StartPoint">
            <summary>
            Gets or Sets the start point of axis line
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.EndPoint">
            <summary>
            Gets or Sets the end point of axis line
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.ItemsBound">
            <summary>
            Gets the larger value of axis items dimensions: height or width
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.PixelsPerValue">
            <summary>
            Pixels per axis unit.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.Chart">
            <summary>
            Reference to a Chart class instance
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.PlotRect">
            <summary>
            Gets the PlotArea's rectangle
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.AxisType">
            <summary>
            Gets the axis type: X, Y and Y2 axis
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.IsParentVisible">
            <summary>
            Gets if PlotArea should be rendered or not
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.Visible">
            <summary>Specifies whether the axis should be rendered.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.Item(System.Int32)">
            <summary>
            Returns the axis item at the specified position.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.AutoScale">
            <summary>
            Enables or disables automatic axis scaling.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.Appearance">
            <summary>
            ChartAxis style
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.AxisLabel">
            <summary>
            ChartAxis label
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.Parent">
            <summary>
            Parent element (PlotArea)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.MinValue">
            <summary>
            Specifies the min value of the axis range.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.MaxValue">
            <summary>
            Specifies the max value of the axis range.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.Step">
            <summary>
            Specifies the step at which axis values are calculated
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.IsZeroBased">
            <summary>
            Specifies whether the axis begins from 0.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.MaxItemsCount">
            <summary>
            Gets or sets maximal count of the axis items when auto scaling.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.VisibleValues">
            <summary>
            Determines the type of shown values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.LabelStep">
            <summary>
            Draw each 1,2,...,n item
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxis.Items">
            <summary>
            Returns a collection of axis items.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.BarOrderingMode">
            <summary>
            Bar charts ordering modes
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartXAxis">
            <summary>Represents the X Axis.</summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartXAxis.pixelStep">
            <summary>
            Cached pixel step value.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.#ctor(Telerik.Reporting.Charting.ChartPlotArea)">
            <summary>
            Creates a new instance of the ChartXAxis class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.#ctor(Telerik.Reporting.Charting.ChartPlotArea,Telerik.Reporting.Charting.IContainer)">
            <summary>Creates a new instance of the ChartXAxis class.</summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartXAxis.TickPoints">
            <summary>
            Axis ticks points 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartXAxis.GridPoints">
            <summary>
            Axis grid lines points
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartXAxis.TickPointsTypes">
            <summary>
            Ticks points' types 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartXAxis.GridPointsTypes">
            <summary>
            Grid points' types in array
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.GetPixelStep">
            <summary>
            Returns axis step in pixels
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.GetCoordinate(System.Double)">
            <summary>
            Gets value coordinate at axis
            </summary>
            <param name="val">Value</param>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.GetZeroCoordinate">
            <summary>
            Gets the X coordinate of the axis which corresponds to the base value (0, min (if positive), max (if negative))
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.GetAxisStartCoord">
            <summary>
            Gets the start value coordinate
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.GetAxisEndCoord">
            <summary>
            Gets the end value coordinate
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.GetFreePositions">
            <summary>
            Axis items count without min and max value
            </summary>
            <returns>Integer</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.GetMarksCount">
            <summary>
            Tick marks count
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.GetStartCoordinate">
            <summary>
            Gets coordinate of the first axis item in a different LayoutModes
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.DisableCachedValues">
            <summary>
            Restores initial values of cached axis settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.GetClientRectangle(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Gets axis image rectangle
            </summary>
            <param name="startPoint">Start point</param>
            <param name="endPoint">End point</param>
            <remarks>Used with client-zoom in ASP.NET Ajax chart</remarks>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.GetClientRectangle">
            <summary>
            Gets axis image rectangle
            </summary>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.GetFirstItemHalfDimension">
            <summary>
            Gets the half of the first axis item's largest dimension
            </summary>
            <returns>Half of the largest dimension</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.GetLastItemHalfDimension">
            <summary>
            Gets the half of the last axis item's largest dimension
            </summary>
            <returns>Half of the largest dimension</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.GetMaxItemBound">
            <summary>
            Gets the larger value of axis items dimensions: height or width
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.InitializeItems">
            <summary>
            Initialize axis items collection in dependency of series items collection values limits
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.CalculateLayout(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Calculates axis layout settings
            </summary>
            <param name="renderEngine">Render Engine reference</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.CheckAxisItemVisibility(Telerik.Reporting.Charting.ChartAxisItem)">
            <summary>
            Checks the axis item visibility
            </summary>
            <param name="item">Axis item</param>
            <returns>True if item should be rendered</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.CalculateAxisItemsLayout(Telerik.Reporting.Charting.RenderEngine,System.Nullable{System.Single})">
            <summary>
            Calculates axis items layout settings
            </summary>
            <param name="renderEngine">Render Engine reference</param>
            <param name="maxBound">Already calculated ItemsBound value</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.CalculateGridsAndTicks">
            <summary>
            Calculates grid lines and ticks positions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.AddItem(System.String)">
            <summary>
            Adds a new axis item.
            </summary>
            <param name="label">Item text</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.AddItem(System.String,System.Drawing.Color)">
            <summary>
            Adds a new axis item.
            </summary>
            <param name="label">Item text</param>
            <param name="color">Item text color</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartXAxis.ClearDataBoundState">
            <summary>
            Clears all data bound settings for axis
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartXAxis.DataLabelsColumn">
            <summary>
            The data source column used as axis items labels source
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartXAxis.IsDataBound">
            <summary>
            Gets whether X ChartAxis data bound or not
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartXAxis.LayoutMode">
            <summary>
            Specifies the layout style of the axis.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartXAxis.AutoShrink">
            <summary>
            Specifies whether the axis is auto shrink or not.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartXAxis.ItemsBound">
            <summary>
            Max axis item coordinate (X or Y). Farther value.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartXAxis.OrderingMode">
            <summary>
            Define bar's series ordering mode
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartXAxis.PixelsPerValue">
            <summary>
            Pixels count per value
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartXAxis.AxisType">
            <summary>
            Axis type value: XAxis
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartXAxis.IsMinorTickVisible">
            <summary>
            Gets the minor axis ticks visibility
            <remarks>Always false for XAxis</remarks>
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartXAxis.IsMajorTickVisible">
            <summary>
            Gets the major axis ticks visibility
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartYAxisMode">
            <summary>
            Specifies the Y axis modes.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartYAxisMode.Normal">
            <summary>
            Sets default Y axis mode.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartYAxisMode.Extended">
            <summary>Extends the axis when AutoScale property is set to true.</summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartYAxisType">
            <summary>
            Primary or Secondary
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartYAxisType.Primary">
            <summary>Specifies primary Y-Axis</summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartYAxisType.Secondary">
            <summary>Specifies secondary Y-Axis</summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartYAxis">
            <summary>Represents a chart Y Axis.</summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartYAxis.chartYAxisScaleBreak">
            <summary>
            Scale break settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.TrackViewState">
            <summary>
            Tracks view state changes
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.LoadViewState(System.Object)">
            <summary>
            Loads Y axis settings from view state
            </summary>
            <param name="savedState">View state</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.SaveViewState">
            <summary>
            Saves axis settings to a state bag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.#ctor(Telerik.Reporting.Charting.ChartPlotArea,Telerik.Reporting.Charting.ChartYAxisType)">
            <summary>Creates a new instance of the ChartYAxis class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.CalculateGridsAndTicks">
            <summary>
            Calculates grid lines and ticks positions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.Initialize(System.Double,System.Double)">
            <summary>Initializes the axis with min and max values.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.InitializeSegments">
            <summary>
            Makes preparations for an axis segmentation in case of Scale Breaks enabled
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.CreateSegments">
            <summary>
            Creates axis segments when Scale breaks enabled
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.OptimizeSegments(Telerik.Reporting.Charting.AxisSegmentCollection,Telerik.Reporting.Charting.ChartSeriesItemsCollection)">
            <summary>
            Replaces overlapped segments with one segment
            </summary>
            <param name="LocalSegments">Calculated segments</param>
            <param name="items">Series items</param>
            <returns>Optimized axis segments collection without overlapped segments</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.CalculateSegmentsPosition">
            <summary>
            Calculates segments positions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.GetCoordinate(System.Double)">
            <summary>
            Gets value coordinate at axis
            </summary>
            <param name="val">Value</param>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.GetZeroCoordinate">
            <summary>
            Gets the coordinate of zero value
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.GetAxisStartCoord">
            <summary>
            Gets the start value coordinate
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.GetAxisEndCoord">
            <summary>
            Gets the end value coordinate
            </summary>
            <returns>Coordinate</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.GetZeroValue">
            <summary>
            Return the base value of the axis.
            </summary>
            <returns>Axis zero value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.GetClientRectangle(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Gets axis image rectangle
            </summary>
            <param name="startPoint">Start point</param>
            <param name="endPoint">End point</param>
            <remarks>Used with client-zoom in ASP.NET Ajax chart</remarks>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.GetClientRectangle">
            <summary>
            Gets axis image rectangle
            </summary>
            <remarks>Used with client-zoom in ASP.NET Ajax chart</remarks>
            <returns>Rectangle</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.GetFirstItemHalfDimension">
            <summary>
            Gets the half of the first axis item's largest dimension
            </summary>
            <returns>Half of the largest dimension</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.GetLastItemHalfDimension">
            <summary>
            Gets the half of the last axis item's largest dimension
            </summary>
            <returns>Half of the largest dimension</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.GetMaxItemBound">
            <summary>
            Gets the larger value of axis items dimensions: height or width
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.InitializeItems">
            <summary>
            Initialize axis items collection in dependency of series items collection values limits
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.CalculateLayout(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Calculates axis layout settings
            </summary>
            <param name="renderEngine">Render Engine reference</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.CalculateAxisItemsLayout(Telerik.Reporting.Charting.RenderEngine,System.Boolean,System.Nullable{System.Single})">
            <summary>
            Calculates axis items layout settings
            </summary>
            <param name="renderEngine">Render Engine reference</param>
            <param name="getItemBoundOnly">Should method calculate the ItemsBound value only</param>
            <param name="maxBound">Already calculated ItemsBound value</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.GetPixelStep(System.Decimal)">
            <summary>
            Gets pixels between two axis items
            </summary>
            <param name="itemValue">Axis item value. Can be used to detect if value is located in the any axis segment</param>
            <returns>Distance in pixels</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartYAxis.CreateSegmentsRenderingRegions(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Creates rendering areas for a several axis segments in case of Scale breaks
            </summary>
            <param name="renderEngine">Render Engine reference</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartYAxis.IsLogarithmic">
            <summary>
            Use Logarithmic scale or not.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartYAxis.MinValue">
            <summary>
            Specifies the min value of the axis range.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartYAxis.MaxValue">
            <summary>
            Specifies the max value of the axis range.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartYAxis.Step">
            <summary>
            Specifies the step at which axis values are calculated
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartYAxis.LogarithmBase">
            <summary>
            Logarithm base.
            <remarks>Min possible value is 2</remarks>
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartYAxis.Segments">
            <summary>
            Segments collection
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartYAxis.ScaleBreaks">
            <summary>
            Scale breaks settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartYAxis.YAxisType">
            <summary>
            Defines a type of YAxis
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartYAxis.AxisMode">
            <summary>
            Gets or sets the style of the Y axis.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartYAxis.ItemsBound">
            <summary>
            Max axis item coordinate (X or Y). Farther value.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartYAxis.MajorPoints">
            <summary>
            Points array for a major ticks and grid lines
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartYAxis.MinorPoints">
            <summary>
            Points array for a minor ticks and grid lines
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartYAxis.AxisType">
            <summary>
            Gets the axis type: Y or Y2 axes
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.SegmentsCombinePriority">
            <summary>
            Segments sorting support structure
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartAxisItemType">
            <summary>
            Axis item types enumeration
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxisItemType.Normal">
            <summary>
            Simple axis item
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxisItemType.SegmentStart">
            <summary>
            Segment start axis item
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxisItemType.SegmentEnd">
            <summary>
            Segment end axis item
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartAxisItem">
            <summary>Represents an axis item.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItem.#ctor(Telerik.Reporting.Charting.IContainer)">
            <summary>Creates a new instance of the class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItem.#ctor">
            <summary>Creates a new instance of the class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItem.#ctor(System.String)">
            <summary>Creates a new instance of the class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItem.#ctor(System.String,System.Drawing.Color)">
            <summary>
            Creates a new instance of the class.
            </summary>
            <param name="labelText">Item text</param>
            <param name="color">Item text color</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItem.#ctor(System.String,System.Drawing.Color,System.Boolean)">
            <summary>
            Creates a new instance of the class.
            </summary>
            <param name="label">Item text</param>
            <param name="color">Item text color</param>
            <param name="visible">Visibility</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItem.#ctor(System.String,System.Drawing.Color,System.Boolean,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Creates a new instance of the class.
            </summary>
            <param name="label">Item text</param>
            <param name="color">Item text color</param>
            <param name="visible">Visibility</param>
            <param name="container">Item container object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItem.GetBound">
            <summary>
            Gets the bound rectangle
            </summary>
            <returns>RectangleF</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItem.GetHeight">
            <summary>
            Bound rectangle's height
            </summary>
            <returns>Height value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItem.GetHeight(System.Boolean,System.Boolean)">
            <summary>
            Bound rectangle's height
            </summary>
            <param name="withTopMargin">Include top margin value in target height or not</param>
            <param name="withBottomMargin">Include bottom margin value in target height or not</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItem.GetWidth">
            <summary>
            Bound rectangle's width
            </summary>
            <returns>Width value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItem.GetWidth(System.Boolean,System.Boolean)">
            <summary>
            Bound rectangle's width
            </summary>
            <param name="withTopMargin">Include left margin value in target width or not</param>
            <param name="withBottomMargin">Include right margin value in target width or not</param>
            <returns>Width value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItem.CorrectTextBlockAlignedPosition(System.Boolean)">
            <summary>
            Corrects text block's aligned position value
            </summary>
            <param name="reason">Reason to correct</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItem.Measure(Telerik.Reporting.Charting.RenderEngine,Telerik.Reporting.Charting.ChartAxisItem)">
            <summary>
            Calculates the text block's size
            </summary>
            <param name="renderEngine">RenderEngine reference</param>
            <param name="emptyItem">Axis item with default settings to compare with current item</param>
            <returns>SizeF</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxisItem.Visible">
            <summary>Specifies whether the axis item should be rendered.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxisItem.Value">
            <summary>
            Specifies the value of the axis.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartAxisItemsCollection">
            <summary>A collection to store axis items.</summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartAxisItemsCollection.chartAxisItemsCollectionParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItemsCollection.#ctor">
            <summary>Creates a new instance of the ChartAxisItemsCollection class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItemsCollection.#ctor(Telerik.Reporting.Charting.ChartAxis)">
            <summary>Creates a new instance of the ChartAxisItemsCollection class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItemsCollection.#ctor(System.Drawing.Font)">
            <summary>
            Creates a new instance of the AxisItems class with the specified default item font.
            </summary>
            <param name="itemFont">Axis item's Font settings</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItemsCollection.#ctor(System.Drawing.Color)">
            <summary>
            Creates a new instance of the AxisItems class with the specified default item color.
            </summary>
            <param name="itemColor">Axis item text color settings</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItemsCollection.#ctor(System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Creates a new instance of the AxisItems class with the specified default item font and color.
            </summary>
            <param name="itemFont">Axis item's Font settings</param>
            <param name="itemColor">Axis item text color settings</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItemsCollection.DeleteItem(System.Int32)">
            <summary>
            Removes axis item from collection
            </summary>
            <param name="itemIndex">Item index to delete at</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItemsCollection.GetItemRotationAngle(Telerik.Reporting.Charting.ChartAxisItem)">
            <summary>
            Gets axis item's rotation angle
            </summary>
            <param name="item">Axis item</param>
            <returns>Rotation angle value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItemsCollection.GetWidth">
            <summary>
            Gets widest axis item's width
            </summary>
            <returns>Width value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItemsCollection.GetHeight">
            <summary>
            Gets highest axis item's height
            </summary>
            <returns>Height value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartAxisItemsCollection.Add(Telerik.Reporting.Charting.ChartAxisItem)">
            <summary>
            Adds a chart axis item to the collection.
            </summary>
            <param name="chartAxisItem">Axis item to add</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxisItemsCollection.Parent">
            <summary>
            Parent element
            </summary>       
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartAxisItemsCollection.Item(System.Int32)">
            <summary>
            Gets or sets a ChartAxisItem element at the specified position.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ScaleBreakLineType">
            <summary>
            Possible axis scale break's line types
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ScaleBreak">
            <summary>
            Y Axis scale break
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ScaleBreak.scaleBreakParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ScaleBreak.TrackViewState">
            <summary>
            Tracking view state changes
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ScaleBreak.LoadViewState(System.Object)">
            <summary>
            Loads settings from a view state
            </summary>
            <param name="savedState">Saved state bag</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ScaleBreak.SaveViewState">
            <summary>
            Saves settings to a view state
            </summary>
            <returns>Saved state bag</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ScaleBreak.#ctor(Telerik.Reporting.Charting.ChartAxis)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ScaleBreak.CreateScaleBreakLine(System.Double,System.Boolean)">
            <summary>
            Gets the scale break line
            </summary>
            <param name="length">Line length</param>
            <param name="isHorizontal">Is series orientation horizontal (true) or vertical (false)</param>
            <returns>Graphics path with an appropriate line inside</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ScaleBreak.Enabled">
            <summary>
            Is scale break feature enabled
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ScaleBreak.LineStyle">
            <summary>
            Break line's appearance settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ScaleBreak.MaxCount">
            <summary>
            Max scale breaks count
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ScaleBreak.ValueTolerance">
            <summary>
            Value tolerance in percents
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ScaleBreak.Width">
            <summary>
            Space width between two break lines
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ScaleBreak.Line">
            <summary>
            Break line appearance settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ScaleBreak.Segments">
            <summary>
            Segments collection. Used with ScaleBreak feature enabled
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ScaleBreak.Parent">
            <summary>
            Parent element reference (ChartAxis)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartPlotArea">
            <summary>
            Plot area - series rendering canvas.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPlotArea.chartPlotAreaMarkedZones">
            <summary>
            Collection of Marked zones
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPlotArea.chartPlotAreaXAxis">
            <summary>
            X Axis
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPlotArea.chartPlotAreaYAxis">
            <summary>
            Y Axis
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPlotArea.chartPlotAreaYAxis2">
            <summary>
            Secondary Y Axis
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPlotArea.chartPlotAreaParent">
            <summary>
            Link to a chart object
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPlotArea.chartPlotAreaEmptySeriesMessage">
            <summary>
            Label for empty series notification
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPlotArea.chartPlotAreaRegionCommon">
            <summary>
            Temporary (for rendering process) contains common drawing region of plot area based on both (main and secondary) axis scale breaks
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPlotArea.chartPlotAreaRegionYAxisPrimary">
            <summary>
            Temporary (for rendering process) contains drawing region of plot area based on Y axis scale breaks
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPlotArea.chartPlotAreaRegionYAxisSecondary">
            <summary>
            Temporary (for rendering process) contains drawing region of plot area based on secondary Y axis scale breaks
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPlotArea.chartPlotAreaSeriesLabels">
            <summary>
            Temporary (for rendering process) list of series items labels
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPlotArea.popVals">
            <summary>
            List for save series popular values. Used for render strict bar series
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPlotArea.chartPlotAreaChartDataTable">
            <summary>
            Table that contain series data
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPlotArea.chartPlotAreaOrderList">
            <summary>
            List, that represents the render order list for taken up elements
            (For IOrdering.Container property)
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.LoadViewState(System.Object)">
            <summary>
            Load ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.SaveViewState">
            <summary>
            Save Track ViewState
            </summary>
            <returns>Object data as array</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.ShouldSerializeIntelligentLabelsEnabled">
            <summary>
            Shoulds the serialize intelligent labels enabled.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.#ctor">
            <summary>
            Create instance of the class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.#ctor(Telerik.Reporting.Charting.Chart)">
            <summary>
            Create instance of the class
            </summary>
            <param name="parent">Chart</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.Init">
            <summary>
            Initialize object properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.InitOrderList">
            <summary>
            Fill order list
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.UpdateAxisOrientation">
            <summary>
            Updated axes orientation accordingly to the SeriesOrientation
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.SeriesCollection">
            <summary>
            Series collection on current plot area
            </summary>
            <returns>Series collection</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.SeriesCollection(Telerik.Reporting.Charting.ChartYAxisType)">
            <summary>
            Series collection on plot area filtered by Y axis type
            </summary>
            <param name="chartYAxisType"></param>
            <returns>Series collection</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.InitializeAxes">
            <summary>
            Axis initialization
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.CreateRectanglesInSeriesLabel">
            <summary>
            Create rectangles in the series items labels for Intelligent engine
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.ClearAutoPropertiesForAxisItems">
            <summary>
            Clearing automatic properties for axis items
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.GetBarStart(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Return position for starting bars drawing
            </summary>
            <param name="series">Series</param>
            <returns>Position</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.GetBarStart(Telerik.Reporting.Charting.ChartSeries,System.Boolean)">
            <summary>
            Return position for starting bars drawing
            </summary>
            <param name="series">Series</param>
            <param name="displacementOnly">Local(true) or global(false)</param>
            <returns>Position</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.Reset">
            <summary>
            Restore default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.ResetRegions">
            <summary>
            Drop plot area clip regions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.PrepareForScale">
            <summary>
            Prepare plot area for scale feature
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.PrepareForScale(System.Single,System.Single)">
            <summary>
            Prepare plot area for scale feature
            </summary>
            <param name="xScale">X scale coefficient</param>
            <param name="yScale">Y scale coefficient</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.RestoreAfterScale">
            <summary>
            Restore plot area settings after scaling
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.GetBarWidth">
            <summary>
            Returns the width of the bars according to the number of bar series and overlap ratio between them.
            </summary>
            <returns>Bar width</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.GetBarWidth(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Returns the width of the bars according to the number of bar series and overlap ratio between them.
            </summary>
            <param name="series">Series</param>
            <returns>Bar width</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.CalculatePosition(Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Position calculation
            </summary>
            <param name="renderEngine">Instance of RenderEngine object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.CalculateChartDataTablePlotAreaRelative(Telerik.Reporting.Charting.RenderEngine,System.Single,System.Single)">
            <summary>
            Calculate plot area relative data table 
            </summary>
            <param name="renderEngine">Instance of RenderEngine object</param>
            <param name="containerWidth">Visual container width</param>
            <param name="containerHeight">Visual container height</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.GetOrder(Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Get elements order position
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.Add(Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Add element at the end of list
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.Insert(System.Int32,Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Insert element at specific position in list
            </summary>
            <param name="order">Position</param>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.Remove(Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Remove  element from list
            </summary>
            <param name="element">Element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.RemoveAt(System.Int32)">
            <summary>
            Remove  element from list by it's index
            </summary>
            <param name="index">Position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.ReIndex">
            <summary>
            Re-index order list
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPlotArea.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.SeriesLabels">
            <summary>
            Temporary (for rendering process) list of series items labels
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.PlotRegionCommon">
            <summary>
            Common rendering region
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.PlotRegionYAxisPrimary">
            <summary>
            Rendering region for a primary Y Axis series
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.PlotRegionYAxisSecondary">
            <summary>
            Rendering region for a secondary Y Axis series
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.MarkedZones">
            <summary>
            Marked zones collection
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.Visible">
            <summary>
            Visibility
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.DataTable">
            <summary>
            Table that contain series data
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.SeriesOrientation">
            <summary>
            Specifies the orientation of chart series on the plot area.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.IntelligentLabelsEnabled">
            <summary>
            Intelligent labels engine switch
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.EmptySeriesMessage">
            <summary>
            Specifies empty series message text
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.XAxis">
            <summary>
            Gets XAxis.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.YAxis">
            <summary>
            Primary YAxis.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.YAxis2">
            <summary>
            Secondary YAxis
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.Parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.Appearance">
            <summary>
            Style
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.Chart">
            <summary>
            Link to chart object
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.PopularValues">
            <summary>
            Popular values collection
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.OrderList">
            <summary>
            List, that is represent the render order for taken up elements
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPlotArea.NextPosition">
            <summary>
            Get a next free order position
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.EmptySeriesMessage">
            <summary>
            Empty series message
            <remarks>Visible if no or empty series present</remarks>
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.EmptySeriesMessage.#ctor">
            <summary>
            Create instance of the class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.EmptySeriesMessage.#ctor(Telerik.Reporting.Charting.ChartPlotArea)">
            <summary>
            Create instance of the class
            </summary>
            <param name="parent">Plot area</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.EmptySeriesMessage.#ctor(Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create instance of the class
            </summary>
            <param name="container">Rendering container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.EmptySeriesMessage.#ctor(Telerik.Reporting.Charting.ChartPlotArea,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create instance of the class
            </summary>
            <param name="parent">Plot area</param>
            <param name="container">Rendering container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.EmptySeriesMessage.IsVisible">
            <summary>
            Checks if empty series message should be visible or not
            </summary>
            <returns>Should be visible or not</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.EmptySeriesMessage.Visible">
            <summary>
            Visibility
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.MarkedZoneType">
            <summary>
            Enum describe a marked zone types
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.MarkedZoneType.Horizontal">
            <summary>
            Y axis based marked zone
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.MarkedZoneType.Vertical">
            <summary>
            X axis based marked zone
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.MarkedZoneType.Rectangular">
            <summary>
            Both axis based marked zone
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartMarkedZone">
            <summary>
            Class describe a Marked zone functionality
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartMarkedZone.chartMarkedZoneAppearance">
            <summary>
            Appearance properties for marked zone
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartMarkedZone.chartMarkedZoneLabel">
            <summary>
            Marked zone label
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZone.TrackViewState">
            <summary>
            Tracking ViewState for Marked zone object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZone.LoadViewState(System.Object)">
            <summary>
            Loading ViewState data into Marked zone object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZone.SaveViewState">
            <summary>
            Saving Marked zone object into ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZone.#ctor(Telerik.Reporting.Charting.IContainer)">
            <summary>
            Create a instance of object
            </summary>
            <param name="container">Container object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZone.#ctor">
            <summary>
            Create a instance of object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZone.#ctor(System.String)">
            <summary>
            Create a instance of object
            </summary>
            <param name="name">Name for marked zone</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZone.ToString">
            <summary>
            Marked zone to String
            </summary>
            <returns>Marked zone name</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZone.GetZoneType">
            <summary>
            Define and return a marked zone type
            </summary>
            <returns>Marked zone type</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZone.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarkedZone.Visible">
            <summary>
            Visibility
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarkedZone.Label">
            <summary>
            Marked zone label
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarkedZone.Appearance">
            <summary>
            Appearance properties
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarkedZone.Name">
            <summary>
            Marked zone name
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarkedZone.YAxisType">
            <summary>
            Marked zone Y Axis type
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarkedZone.ValueStartX">
            <summary>
            Marker start position X
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarkedZone.ValueEndX">
            <summary>
            Marker end position X
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarkedZone.ValueStartY">
            <summary>
            Marker start position Y
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarkedZone.ValueEndY">
            <summary>
            Marker end position Y
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartMarkedZonesCollection">
            <summary>
            Marked zones collection
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartMarkedZonesCollection.chartMarkedZonesCollectionParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZonesCollection.#ctor">
            <summary>
            Create instance of class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZonesCollection.#ctor(Telerik.Reporting.Charting.ChartPlotArea)">
            <summary>
            Create instance of class
            </summary>
            <param name="parent">ChartPlotArea object as parent</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZonesCollection.Add(Telerik.Reporting.Charting.ChartMarkedZone)">
            <summary>
            Add MarkerZone in the collection
            </summary>
            <param name="item">GridMarker for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZonesCollection.Clear">
            <summary>
            Clear collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZonesCollection.Insert(System.Int32,Telerik.Reporting.Charting.ChartMarkedZone)">
            <summary>
            Insert GridMarker in collection at the specific position
            </summary>
            <param name="index">Position</param>
            <param name="item">GridMarker</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZonesCollection.Remove(Telerik.Reporting.Charting.ChartMarkedZone)">
            <summary>
            Remove GridMarker from collection
            </summary>
            <param name="item">GridMarker</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartMarkedZonesCollection.RemoveAt(System.Int32)">
            <summary>
            Remove GridMarker in the specific position from collection
            </summary>
            <param name="index">Position</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarkedZonesCollection.Parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartMarkedZonesCollection.Item(System.Int32)">
            <summary>
            Gets or sets a GridMarker at the specific position in GridMarkers collection.
            </summary>
            <param name="index">Position in the collection</param>
            <returns>GridMarker at the specific position </returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Popular">
            <summary>
            Support class for defining the most popular values in a series items
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Popular.popularValue">
            <summary>
            Series item value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Popular.popularNumber">
            <summary>
            Count of series item whit this value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Popular.popularX">
            <summary>
            X position
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Popular.popularYpositive">
            <summary>
            Use for stacked series, max positive value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Popular.popularYnegative">
            <summary>
            Use for stacked series, min negative value
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Popular.#ctor(System.Single,System.Int32,System.Single)">
            <summary>
            Create instance of class
            </summary>
            <param name="val">Series item value</param>
            <param name="num">Count of items with this value</param>
            <param name="x">X-position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Popular.#ctor(System.Single,System.Int32,System.Single,System.Double,System.Double)">
            <summary>
            Create instance of class
            </summary>
            <param name="val">Series item value</param>
            <param name="num">Count of items with this value</param>
            <param name="x">X-position</param>
            <param name="yNegative">Use for stacked series, max positive value</param>
            <param name="yPositive">Use for stacked series, min negative value</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.Popular.X">
            <summary>
            X position
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Popular.YPositive">
            <summary>
            Use for stacked series, max positive value
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Popular.YNegative">
            <summary>
            Use for stacked series, min negative value
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Popular.Value">
            <summary>
            Series item value
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Popular.Number">
            <summary>
            X position
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.PopularCollection">
            <summary>
            Collection of Popular objects
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.PopularCollection.CopyPopList">
            <summary>
            Copy list of pop values to targeted list
            </summary>
            <returns>Popular collection</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.PopularCollection.GetPopularValues(Telerik.Reporting.Charting.Chart)">
            <summary>
            Getting popular values from all series and form list with pop values, his coordinates and number of his popularity
            </summary>
            <param name="chart">Chart object</param>
            <returns>Popular values collection object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.PopularCollection.Popularity(System.Single)">
            <summary>
            Get popularity number by value
            </summary>
            <param name="val">Value</param>
            <returns>Number</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.PopularCollection.GetPopularityIndex(System.Single)">
            <summary>
            Get index by value in list of Popularity objects
            </summary>
            <param name="val">value</param>
            <returns>Index</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartSeries">
            <summary>
            Series
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeries.chartSeriesAppearance">
            <summary>
            Link to visualization and design properties
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeries.chartSeriesItems">
            <summary>
            ChartSeries items collection
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeries.chartSeriesPlotArea">
            <summary>
            Plot area element for series drawing
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeries.chartSeriesParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeries.chartSeriesIsActiveRegionSet">
            <summary>
            Returns whether there is an active region associated with the series.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.SetParent(Telerik.Reporting.Charting.ChartSeriesCollection)">
            <summary>
            Set series parent
            </summary>
            <param name="parent"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.#ctor">
            <summary>
            Creates a new instance of ChartSeries class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.#ctor(System.String)">
            <summary>
            Creates a new instance of ChartSeries class with given name
            </summary>
            <param name="name">Name of series</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.#ctor(System.String,Telerik.Reporting.Charting.ChartSeriesType)">
            <summary>
            Creates a new instance of ChartSeries class with given name and type.
            </summary>
            <param name="name">Name of series</param>
            <param name="type">Type of series</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.#ctor(System.String,Telerik.Reporting.Charting.ChartSeriesType,Telerik.Reporting.Charting.ChartSeriesCollection)">
            <summary>
            Creates a new instance of ChartSeries class.
            </summary>
            <param name="name">Name of series</param>
            <param name="type">Type of series</param>
            <param name="parent">Parent of series</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.#ctor(System.String,Telerik.Reporting.Charting.ChartSeriesType,Telerik.Reporting.Charting.ChartSeriesCollection,Telerik.Reporting.Charting.ChartYAxisType,Telerik.Reporting.Charting.Styles.StyleSeries)">
            <summary>
            Creates a new instance of ChartSeries class.
            </summary>
            <param name="seriesName">Name of series</param>
            <param name="chartSeriesType">Type of series</param>
            <param name="parent">Parent of series</param>
            <param name="yAxisType">YAxisType(Primary or Secondary)</param>
            <param name="style">Style of series</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.#ctor(System.String,Telerik.Reporting.Charting.ChartSeriesType,Telerik.Reporting.Charting.ChartSeriesCollection,Telerik.Reporting.Charting.ChartYAxisType,Telerik.Reporting.Charting.Styles.StyleSeries,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new instance of ChartSeries class.
            </summary>
            <param name="seriesName">Name of series</param>
            <param name="chartSeriesType">Type of series</param>
            <param name="parent">Parent of series</param>
            <param name="yAxisType">YAxisType(Primary or Secondary)</param>
            <param name="style">Style of series</param>
            <param name="dataYColumn">DataSource column that is used to data-bind to the series YValue</param>
            <param name="dataXColumn">DataSource column that is used to data-bind to the series XValue</param>
            <param name="dataYColumn2">DataSource column that is used to data-bind to the series YValue2</param>
            <param name="dataXColumn2">DataSource column that is used to data-bind to the series XValue2</param>
            <param name="dataYColumn3">DataSource column that is used to data-bind to the series YValue3</param>
            <param name="dataYColumn4">DataSource column that is used to data-bind to the series YValue4</param>
            <param name="dataLabelsColumn"> DataSource column (member) that will be used as ChartSeries names source when Y-values are taken from one column for a several chart ChartSeries</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.#ctor(Telerik.Reporting.Charting.ChartSeriesCollection)">
            <summary>
            Creates a new instance of ChartSeries class.
            </summary>
            <param name="parent">Parent of series</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.ResetActiveRegionForItems">
            <summary>
            Resets active region properties values
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.FindItemIndex(Telerik.Reporting.Charting.ChartSeriesItem)">
            <summary>
            Search item index in series collection
            </summary>
            <param name="chartItem">Item which index should to find</param>
            <returns>Index of item</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.SetFormattedLegendItemText">
            <summary>
            Sets the legend item's formatted text
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.GetEmptyPointYValue(Telerik.Reporting.Charting.ChartSeriesItem,System.Int32)">
            <summary>
            Gets a Y value for empty points
            </summary>
            <param name="item">Series item</param>
            <param name="itemIndex">Series item index</param>
            <returns>Empty point y value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.GetEmptyPointYValue(Telerik.Reporting.Charting.ChartSeriesItem,System.Int32,System.String)">
            <summary>
            Gets a Y value for empty points
            </summary>
            <param name="item">Series item</param>
            <param name="itemIndex">Series item index</param>
            <returns>Empty point y value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.CheckBezierSeriesForItemsCount(System.String@)">
            <summary>
            Performs check for a required Bezier series items amount
            </summary>
            <param name="mess">Error message</param>
            <returns>Bezier series items amount is proper</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.AddLabelsForPieSeries(System.Drawing.PointF[],System.String[],System.Double[],System.Drawing.PointF,System.Single,Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Creates Pie series labels
            </summary>
            <param name="points">Points where labels should be located</param>
            <param name="text">Labels text</param>
            <param name="angles">Angles</param>
            <param name="pieCenter">PieCenter point</param>
            <param name="pieRadius">PieRadius</param>
            <param name="renderEngine">RenderEngine of chart</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.PrepareSeriesByXValues">
            <summary>
            Filters X dependent series items without X value 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.Sum">
            <summary>
            Sum of series items' Y values
            </summary>
            <returns> Sum of series items' Y values</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.GetCustomFormat(System.String@,System.String)">
            <summary>
            Custom format string
            </summary>
            <param name="s">String should be formatted</param>
            <param name="expression">Format expression</param>
            <returns>Formated string</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.GetSumForStacked(Telerik.Reporting.Charting.ChartSeriesItem)">
            <summary>
            Return a sum value of items values
            </summary>
            <param name="item">Series item</param>
            <returns>Sum</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.ReplaceString(System.String@,System.String,System.Double,System.String)">
            <summary>
            Replaces string
            </summary>
            <param name="s">String that should be changed</param>
            <param name="expression">Expression for formatting</param>
            <param name="val">Item Value</param>
            <param name="defaultFormat">Default format</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.FormatValues(System.String,Telerik.Reporting.Charting.ChartSeriesItem)">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.GetItemLabel(Telerik.Reporting.Charting.ChartSeriesItem)">
            <summary>
            Returns text for item label
            </summary>
            <param name="item">Item which label should be taken</param>
            <returns>Label text</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.Clear">
            <summary>
            Clears all series items from the data series.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.RemoveItem(Telerik.Reporting.Charting.ChartSeriesItem,Telerik.Reporting.Charting.ChartSeriesItem[])">
            <summary>
            Removes a series item(s) from the series.
            </summary>
            <param name="seriesItem">Item for removing</param>
            <param name="seriesItems">Items for removing</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.RemoveItem(System.Int32,System.Int32[])">
            <summary>
            Removes a series item(s) from the series.
            </summary>
            <param name="index">Index of item should be removed</param>
            <param name="indexes">Indexes of items should be removed</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.AddItem(Telerik.Reporting.Charting.ChartSeriesItem,Telerik.Reporting.Charting.ChartSeriesItem[])">
            <summary>
            Adds a series item(s) to the series.
            </summary>
            <param name="seriesItem">Item to add</param>
            <param name="seriesItems">Items to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.AddItem(Telerik.Reporting.Charting.ChartSeriesItemsCollection)">
            <summary>
            Adds a series item(s) to the series.
            </summary>
            <param name="seriesItems">Items to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.AddItem(Telerik.Reporting.Charting.ChartSeriesItem[])">
            <summary>
            Adds a series item(s) to the series.
            </summary>
            <param name="seriesItems">Items to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.AddItem(System.Collections.Generic.List{Telerik.Reporting.Charting.ChartSeriesItem})">
            <summary>
            Adds a series item(s) to the series.
            </summary>
            <param name="seriesItems">Items to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.AddItem(System.Double)">
            <summary>
            Adds a new series item to the data series by specifying its value.
            </summary>
            <param name="value">YValue of new item</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.AddItem(System.Double,System.String)">
            <summary>
            Adds a new series item to the data series by specifying its value and label.
            </summary>
            <param name="value">YValue of new item</param>
            <param name="label">Label of new item</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.AddItem(System.Double,System.String,System.Drawing.Color)">
            <summary>
            Adds a new series item to the data series by specifying its value, label and color.
            </summary>
            <param name="value">YValue of new item</param>
            <param name="label">Label of new item</param>
            <param name="color">Color of new item</param>																	
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.AddItem(System.Double,System.String,System.Drawing.Color,System.Boolean)">
            <summary>
            Adds a new series item to the data series by specifying its value, label, color and explosion.
            </summary>
            <param name="value">YValue of new item</param>
            <param name="label">Label of new item</param>
            <param name="color">Color of new item</param>
            <param name="exploded">If item is exploded</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.SetItemColor(System.Int32,System.Drawing.Color)">
            <summary>
            Sets a new color to the series item at the specified index.
            </summary>
            <param name="itemIndex">Index of item to change color</param>
            <param name="newColor">New color of item</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.SetItemValue(System.Int32,System.Double)">
            <summary>
            Sets a new value for the series item at the specified index.
            </summary>
            <param name="itemIndex">Index of item to change YValue</param>
            <param name="newValue">New YValue</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.SetItemLabel(System.Int32,System.String)">
            <summary>
            Sets a new label for the series item at the specified index.
            </summary>
            <param name="itemIndex">Index of item to change label</param>
            <param name="newLabel">New label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.SetItemExplode(System.Int32,System.Boolean)">
            <summary>
            Sets a new explode status for the series item at the specified index.
            </summary>
            <param name="itemIndex">Index of item</param>
            <param name="exploded">Shoul be exploded or not</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.SetValues(System.Double[])">
            <summary>
            Sets new values to the data series by passing an array of real values. Old values are cleared.
            </summary>
            <param name="values">New values</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.SetColors(System.Drawing.Color[])">
            <summary>
            Sets new colors to the items in the data series.
            </summary>
            <param name="colors">New colors</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.SetLabels(System.String[])">
            <summary>
            Sets new labels to the items in the data series.
            </summary>
            <param name="labels">New labels</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.SetExplodes(System.Boolean[])">
            <summary>
            Sets exploded statuses to the items in the data series.
            </summary>
            <param name="explodes">New exploded values</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.SetItems(Telerik.Reporting.Charting.ChartSeriesItem[])">
            <summary>
            Sets new SeriesItems objects to the data series.
            </summary>
            <param name="seriesItems">New Items to replace old items in series</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.RemoveItem(System.Int32)">
            <summary>
            Removes the SeriesItem object at the specified index.
            </summary>
            <param name="itemIndex">Index to remove</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.ClearDataBoundState">
            <summary>
            Removes data binding links from series
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.ToString">
            <summary>
            Overridden
            </summary>
            <returns>Series name</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.CopyFrom(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Copies settings from given series
            </summary>
            <param name="originalSeries">Series to copy from</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.CopyItems(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Copies series items from given series
            </summary>
            <param name="originalSeries">Series that items should be copied</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.CloneSeries">
            <summary>
            Return new ChartSeries instance with copied all properties from source object and cloned Items collection
            </summary>
            <returns>New instance of ChartSeries with copied fields</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.Clone">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.LoadViewState(System.Object)">
            <summary>
            Load ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeries.SaveViewState">
            <summary>
            Save Track ViewState
            </summary>
            <returns>Object data as array</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsActiveRegionSet">
            <summary>Returns whether there is an active region associated with the series.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.ActiveRegionAttributes">
            <summary>
            Default attributes for series items' active regions 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.ActiveRegionToolTip">
            <summary>
            Default tooltip for series items' active regions 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.ActiveRegionUrl">
            <summary>
            Default url for series items' active regions 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.Visible">
            <summary>Specifies whether to render the series or not.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.Appearance">
            <summary>
            Specifies the visual appearance of series items.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.Type">
            <summary>
            Gets or sets the type of the series.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.PlotArea">
            <summary>
            Plot area element for series drawing
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.Parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.Chart">
            <summary>
            Link to Chart object
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.DataXColumn">
            <summary>
            Gets or sets the name of the DataSource column (member) that is used to data-bind to the series X-value
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.DataXColumn2">
            <summary>
            Gets or sets the name of the DataSource column (member) that is used to data-bind to the series X2-value
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.DataYColumn">
            <summary>
            Gets or sets the name of the DataSource column (member) that is used to data-bind to the series Y-value
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.DataYColumn2">
            <summary>
            Gets or sets the name of the DataSource column (member) that is used to data-bind to the series Y2-value
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.DataYColumn3">
            <summary>
            Gets or sets the name of the DataSource column (member) that is used to data-bind to the series Y3-value (High for CandleStick chart).
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.DataYColumn4">
            <summary>
            Gets or sets the name of the DataSource column (member) that is used to data-bind to the series Y4-value (Low for CandleStick chart). 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.DataLabelsColumn">
            <summary>
            Gets or sets the name of the DataSource column (member) that will be used as ChartSeries names source when Y-values are taken from one column for a several chart ChartSeries
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsDataBound">
            <summary>
            Determines whether the series is configured as data bound or not.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.Name">
            <summary>
            Gets or sets the name of the data series.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.DefaultLabelValue">
            <summary>
            Specifies the default value for the series items labels.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.Index">
            <summary>
            Current series index in the series collection
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.YAxisType">
            <summary>
            Y Axis used by series
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.Item(System.Int32)">
            <summary>
            Gets or sets a ChartSeries SeriesItem object at the specified index.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.Items">
            <summary>
            Gets a collection of series items.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.LegendFormattedText">
            <summary>
            Formatted text string for a Legend
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsScalable">
            <summary>
            Defines whether series can be used with zoom or not
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsXDependent">
            <summary>
            If series depends of X value
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsXDependentSeriesType">
            <summary>
            If current series type is x dependent
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsNormalStacked">
            <summary>
            Determines whether the series is stacked and not stacked100 or not.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsStacked100">
            <summary>
            Determines whether the series is stacked100 or not.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsStacked">
            <summary>
            Determines whether the series is stacked or not.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsLine">
            <summary>
            Determines whether the series is line-type.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsSplineArea">
            <summary>
            Determines whether the series is spline area-type.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsArea">
            <summary>
            Determines whether the series is normal area-type.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsStackedLine">
            <summary>
            Determines whether the series is stacked line-type.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsStackedNormalArea">
            <summary>
            Determines whether the series is stacked area-type.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsStackedSplineArea">
            <summary>
            Determines whether the series is stacked area-type.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsStackedArea">
            <summary>
            Determines whether the series is stacked area-type.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeries.IsHasEmptyValues">
            <summary>
            Determines whether the series has items with empty values
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartSeriesCollection">
            <summary>
            Series collection
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesCollection.chartSeriesCollectionParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.#ctor">
            <summary>Creates a new instance of the ChartSeriesCollection class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.#ctor(Telerik.Reporting.Charting.Chart)">
            <summary>
            Creates a new instance of the ChartSeriesCollection class.
            </summary>
            <param name="parent">Parent for collection</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetMinStacked100Value(Telerik.Reporting.Charting.ChartSeriesType)">
            <summary>
            Gets minimum Stacked 100 series item value 
            </summary>
            <param name="seriesType">Series Type</param>
            <returns>Minimum Stacked 100 series item value </returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetMaxStacked100Value">
            <summary>
            Gets maximum Stacked 100 series item value 
            </summary>
            <returns>Maximum Stacked 100 series item value </returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetMinStackedValue(Telerik.Reporting.Charting.ChartSeriesType)">
            <summary>
            Gets the min value of the stacked series of a specifies type.
            </summary>
            <param name="seriesType">Series Type</param>
            <returns>Min value of the stacked series of a specifies type.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetMaxStackedValue(Telerik.Reporting.Charting.ChartSeriesType)">
            <summary>
            Gets the max value of the stacked series of a specified type.
            </summary>
            <param name="seriesType">Series Type</param>
            <returns>Max value of the stacked series of a specified type</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetMinYValue(System.Double,System.Double,System.Boolean)">
            <summary>
            Compares two doubles and return minimum value
            </summary>
            <param name="value1">First value to compare</param>
            <param name="value2">Second value to compare</param>
            <returns>Less value</returns>
            <param name="checkNaN">Should NAN values be compared as 0 or not</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetMaxYValue(System.Double,System.Double,System.Boolean)">
            <summary>
            Compares two doubles and return maximum value
            </summary>
            <param name="value1">First value to compare</param>
            <param name="value2">Second value to compare</param>
            <returns>Greater value</returns>
            <param name="checkNaN">Should NAN values be compared as 0 or not</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.OnlyBezierSeries">
            <summary>
            Checks if collection contains only Bezier series
            </summary>
            <returns>Whether collection contains only Bezier series</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.OnlyPieSeries">
            <summary>
            Returns true if collection contains only pie series
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.DefineItemsLabelText">
            <summary>
            Define items label text for each item for the all series in the collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.ClearAutoGeneratedItemsLabelText">
            <summary>
            Clear auto generated items label text for each item in the collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.CheckForErrors">
            <summary>
            Check if collection contains proper data
            </summary>
            <returns>Text of error</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.Stacked(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Returns True if series is a stacked type
            </summary>
            <param name="chartSeries"></param>
            <returns>Is series a stacked type</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.Stacked100(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Returns True if series is a stacked100 type
            </summary>
            <param name="chartSeries"></param>
            <returns>Is series a stacked100 type</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetMaxItemsCount(Telerik.Reporting.Charting.ChartSeriesType)">
            <summary>
            Gets maximum series items count of specified type
            </summary>
            <param name="seriesType">Type of series</param>
            <returns>Maximum series items count of specified type</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetSeriesCount(Telerik.Reporting.Charting.ChartSeriesType)">
            <summary>
            Gets series count of specified type
            </summary>
            <param name="seriesType">Series type</param>
            <returns>Series count of specified type</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetSumForStacked(System.Int32)">
            <summary>
            Gets series items sum
            </summary>
            <param name="itemsPosition">Item index for calculating summary</param>
            <returns>Series items sum</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetSumsForStacked(Telerik.Reporting.Charting.ChartSeriesType)">
            <summary>
            Return a sum value of items values
            </summary>
            <param name="seriesType">Series</param>
            <returns>Dictionary of value and sum</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.HaveXValue">
            <summary>
            Checks if any series item has X value
            </summary>
            <returns>Checks if any series item has X value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetValueLimits">
            <summary>
            Gets value limits
            </summary>
            <returns>Value limits</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.ClearColors">
            <summary>
            Clears all series's style main and secondary colors
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.IsSeriesEmpty">
            <summary>
            Returns True if all series have no items
            </summary>
            <returns>True if all series have no items</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetSeriesCollectionCount(Telerik.Reporting.Charting.ChartSeriesType,System.Int32)">
            <summary>
            Count of  specified type series
            </summary>
            <param name="chartSeriesType">Type of series</param>
            <param name="startIndex">Start index to search</param>
            <returns>Count of  specified type series</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetSeriesCollection(Telerik.Reporting.Charting.ChartSeriesType)">
            <summary>
            Collection of series of specified type
            </summary>
            <param name="chartSeriesType">Type of series to select</param>
            <returns>Collection of series of specified type</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetSeriesCollection(Telerik.Reporting.Charting.ChartSeriesType[])">
            <summary>
            Collection of series of specified types
            </summary>
            <param name="chartSeriesTypes">Types of series to select</param>
            <returns>Collection of series of specified types</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetXUsedSeriesCollection">
            <summary>
            Collection of series that use and have XValues
            </summary>
            <returns>Collection of series that use and have XValues</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetClonedXUsedSeriesCollection">
            <summary>
            Clone X-dpended series collection
            </summary>
            <returns>Clone X-dpended series collection</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetYUsedSeriesCollection">
            <summary>
            Collection of series that use YAxis
            </summary>
            <returns>Collection of series that use YAxis</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.PrepareForScale">
            <summary>
             Prepare series after AutoScale, add fake X values
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.RestoreAfterScale">
            <summary>
            Restore series after AutoScale, remove fake X values
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Final code for series insertion
            </summary>
            <param name="index">Index where series should be insert</param>
            <param name="value">Value to insert</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.Add(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Add ChartSeries at the collection
            </summary>
            <param name="chartSeries">ChartSeries to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.ClearItems">
            <summary>
            Clears items in all series
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.RemoveSeries">
            <summary>
            Removes the all data series from the series collection.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.Insert(System.Int32,Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Insert ChartSeries in collection at the specific position
            </summary>
            <param name="index">Position</param>
            <param name="item">ChartSeries</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.InsertSeries(System.Int32,Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Insert ChartSeries in collection at the specific position
            </summary>
            <param name="index">Position</param>
            <param name="item">ChartSeries</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetByName(System.String)">
            <summary>
            Find series by name
            </summary>
            <param name="name">ChartSeries name</param>
            <returns>ChartSeries</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetSeries(System.Int32)">
            <summary>
            Returns a reference to the ChartsSereis object at the specified index.
            </summary>
            <param name="index">Index of series</param>
            <returns>Series with specified index</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetMaxItemsCount">
            <summary>
            Returns the number of items in the longest data series.
            </summary>
            <returns>Number of items in the longest data series</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.ClearDataBoundState">
            <summary>
            Removes data binding links from series
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetFilteredSeriesByYAxis(Telerik.Reporting.Charting.ChartYAxisType)">
            <summary>
            Gets all series related to the given Y ChartAxis
            </summary>
            <param name="yAxisType">YAxisType(Primary, Secondary)</param>
            <returns>All series related to the given Y ChartAxis</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetMinYValue">
            <summary>
            Gets the minimal item value of all series.
            </summary>
            <returns>Minimal item value of all series</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.GetMaxYValue">
            <summary>
            Gets the maximal item value of all series.
            </summary>
            <returns>Maximal item value of all series</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesCollection.LoadViewState(System.Object)">
            <summary>
            Load ViewState
            </summary>
            <param name="state">ViewState with data</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesCollection.Parent">
            <summary>
            Parent element (chart)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesCollection.Item(System.Int32)">
            <summary>
            Gets or sets a ChartSeries at the specific position in ChartSeries collection.
            </summary>
            <param name="index">Position in the collection</param>
            <returns>ChartSeries at the specific position </returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesCollection.IsXDepended">
            <summary>
            Property is true if all series in collection is X depended
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesCollection.BarSeriesCount">
            <summary>
            Returns the number of bar series which are drawn next to each other. StackedBars, StackedBars100 are counted as 1 bar series.
            </summary>
            <returns>Cont of bar series</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesCollection.IsScalable">
            <summary>
            Defines whether all series in collection are scalable
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesCollection.IsUnScalable">
            <summary>
            Defines whether all series in collection are unscalable
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartSeriesLegendDisplayMode">
            <summary>
            Specifies legend items presentation.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesLegendDisplayMode.Nothing">
            <summary>
            The legend does not show any information from the series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesLegendDisplayMode.SeriesName">
            <summary>
            The legend shows the series name.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesLegendDisplayMode.ItemLabels">
            <summary>
            The legend shows the names of the series items.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartSeriesOrientation">
            <summary>
            Series orientation
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesOrientation.Vertical">
            <summary>
            Specifies Vertical Orientation
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesOrientation.Horizontal">
            <summary>
            Specifies Horizontal Orientation
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartValueLimits">
            <summary>
            Class describe a value limits for axis calculation
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartValueLimits.MinXValue">
            <summary>
            Min X value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartValueLimits.MaxXValue">
            <summary>
            Max X value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartValueLimits.MinYValue">
            <summary>
            Min Y value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartValueLimits.MaxYValue">
            <summary>
            Max Y value
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartValueLimits.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates instance of ChartValueLimits class.
            </summary>
            <param name="minXValue">Minimal x value</param>
            <param name="maxXValue">Maximal x value</param>
            <param name="minYValue">Minimal y value</param>
            <param name="maxYValue">Maximal y value</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartSeriesItem">
            <summary>
            Represents the base element of RadChart's series.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesItem.chartSeriesItemAppearance">
            <summary>
            Link to visualization and design properties
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesItem.chartSeriesItemPointAppearance">
            <summary>
            Point mark style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesItem.chartSeriesItemLabel">
            <summary>
            Item Label
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesItem.chartSeriesItemParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesItem.chartSeriesItemRelativeValue">
            <summary>
            Relative value used for Stacked100 series
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesItem.chartSeriesItemActiveRegion">
            <summary>
            ActiveRegion
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesItem.haveRealXValue">
            <summary>
            Defines if item has user-defined XValue or XValue was generated
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.#ctor(System.Double,System.Double,Telerik.Reporting.Charting.Styles.StyleSeriesItem)">
            <summary>Creates a new instance of the ChartSeriesItem class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.#ctor(System.Double,System.Double)">
            <summary>Creates a new instance of the ChartSeriesItem class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new instance of the ChartSeriesItem class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>Creates a new instance of the ChartSeriesItem class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.#ctor">
            <summary>
            Creates a new instance of the ChartSeriesItem class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.#ctor(Telerik.Reporting.Charting.ChartSeries)">
            <summary>Creates a new instance of the ChartSeriesItem class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.#ctor(System.Boolean)">
            <summary>
            Creates a new instance of the empty ChartSeriesItem class.
            </summary>
            <param name="isEmpty"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.#ctor(System.Double)">
            <summary>
            Creates a new instance of the ChartSeriesItem class.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.#ctor(System.Double,System.String)">
            <summary>
            Creates a new instance of the ChartSeriesItem class.
            </summary>
            <param name="value"></param>
            <param name="labelText"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.#ctor(System.Double,System.String,System.Drawing.Color)">
            <summary>
            Creates a new instance of the ChartSeriesItem class.
            </summary>
            <param name="value"></param>
            <param name="label"></param>
            <param name="color"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.#ctor(System.Double,System.String,System.Drawing.Color,System.Boolean)">
            <summary>		
            Creates a new instance of the ChartSeriesItem class.		
            </summary>
            <param name="value"></param>
            <param name="label"></param>
            <param name="color"></param>
            <param name="exploded"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.DefineLabelText">
            <summary>
            Define items label text for item
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.ClearAutoGeneratedLabelText">
            <summary>
            Clear auto generated items label text for item
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.GetXValue">
            <summary>
            Returns XValue or 0 if it was not set
            </summary>
            <returns>XValue or 0 if it was not set</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.AddLabel(System.String,System.Drawing.RectangleF,Telerik.Reporting.Charting.RenderEngine)">
            <summary>
            Add item label to collection of PlotArea's labels for further their rendering
            </summary>
            <param name="text">Label text</param>
            <param name="rect">Item's rectangle to calculate label position</param>
            <param name="engine">RenderEngine of chart</param>
            <returns>Created Label</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.SetLabelAutoPosition(Telerik.Reporting.Charting.SeriesItemLabel@,Telerik.Reporting.Charting.ChartSeriesOrientation)">
            <summary>
            Locate item label
            </summary>
            <param name="label">Label to correct position depend on SeriesOrientation</param>
            <param name="chartSeriesOrientation">SeriesOrientation of chart</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.IsVisible(System.Drawing.RectangleF)">
            <summary>
            Returns if item is inside PlotArea
            </summary>
            <param name="rect">Rectangle that contains item</param>
            <returns>Whether item is inside PlotArea</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.ToString">
            <exclude/>
            <excludetoc/>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.TrackViewState">
            <summary>
            Tracking ViewState data
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.LoadViewState(System.Object)">
            <summary>
            Loading ViewState data
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.SaveViewState">
            <summary>
            Saving ViewState data
            </summary>
            <returns>Saved in View state data</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItem.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of ChartSeriesItem class that is copy of this object </returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.Visible">
            <summary>Specifies whether the series item should be rendered.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.RelativeValue">
            <summary>
            Relative value used for Stacked100 series
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.ActiveRegion">
            <summary>
            Active region
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.Appearance">
            <summary>
            Link to visualization and design properties
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.Label">
            <summary>
            Item label
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.Parent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.Empty">
            <summary>
            Is series item contains empty value
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.XValue">
            <summary>
            Main X value
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.XValue2">
            <summary>
            Second x value for item
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.YValue">
            <summary>
            Main Y value for item
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.YValue2">
            <summary>
            Second y value for item
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.YValue3">
            <summary>
            Third y value for item (could be used in CandleStick charts as High value)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.YValue4">
            <summary>
            Fourth y value for item (could be used in CandleStick charts as Low value)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.Item(System.String)">
            <summary>
            Return value by item value type name 
            </summary>
            <param name="valueTypeName">Value type name</param>
            <returns>value</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.Name">
            <summary>
            ChartSeriesItem name 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.PointAppearance">
            <summary>
            Point appearance settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItem.Index">
            <summary>
            Index in items collection
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartDesignTimeSeriesItem">
            <summary>
            Design-time series item
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartDesignTimeSeriesItem.chartDesignTimeSeriesItemTempXValue">
            <summary>
            Main X for design created item
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartDesignTimeSeriesItem.chartDesignTimeSeriesItemTempXValue2">
            <summary>
            Second X for design created item
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartDesignTimeSeriesItem.chartDesignTimeSeriesItemTempYValue">
            <summary>
            Main Y for design created item
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartDesignTimeSeriesItem.chartDesignTimeSeriesItemTempYValue2">
            <summary>
            Second Y for design created item
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartDesignTimeSeriesItem.chartDesignTimeSeriesItemTempYValue3">
            <summary>
            Third Y value for design created item (could be used in CandleStick charts as High value)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartDesignTimeSeriesItem.chartDesignTimeSeriesItemTempYValue4">
            <summary>
            Third Y value for design created item (could be used in CandleStick charts as Low value)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartDesignTimeSeriesItem.chartDesignTimeSeriesItemRandom">
            <summary>
            Random generator for design items
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDesignTimeSeriesItem.#cctor">
            <summary>
            Constructor to initialize random generator
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDesignTimeSeriesItem.#ctor(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Creates new instance of the class.
            </summary>
            <param name="series">Specifies parent for item</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDesignTimeSeriesItem.#ctor(System.String,Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Creates new instance of the class.
            </summary>
            <param name="itemName">Name of item</param>
            <param name="series">Parent of item</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDesignTimeSeriesItem.Init">
            <summary>
            Initialize item X and Y values
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDesignTimeSeriesItem.ClearValues">
            <summary>
            Clear X and Y values of the item
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartDesignTimeSeriesItem.SetCorrectValues">
            <summary>
            Use needed X and Y values depend on type of series
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartSeriesItemsCollection">
            <summary>
            Series items collection
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSeriesItemsCollection.seriesItemsCollectionParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.#ctor">
            <summary>Creates a new instance of the ChartSeriesItemsCollection class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.#ctor(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Creates a new instance of the ChartSeriesItemsCollection class.
            </summary>
            <param name="parent">Parent of the collection</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.DefineLabelText(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Define items label text for each item in the collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.ClearAutoGeneratedLabelText">
            <summary>
            Clear auto generated items label text for each item in the collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.GetItemWithMaxYValue(Telerik.Reporting.Charting.ChartSeriesItem)">
            <summary>
             Get item with max YValue not greater than specified
            </summary>
            <param name="notMoreItem">Item which YValue is limit for searching</param>
            <returns>Item with max YValue not greater than specified</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.GetItemWithMinYValue(Telerik.Reporting.Charting.ChartSeriesItem)">
            <summary>
             Get item with min YValue not less than specified
            </summary>
            <param name="notMoreItem">Item which YValue is limit for searching</param>
            <returns>Item with min YValue not less than specified</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.ItemsInRange(System.Double,System.Double)">
            <summary>
            Count of items with YValues in specified range
            </summary>
            <param name="min">Min limit for searching</param>
            <param name="max">Max limit for searching</param>
            <returns>Count of items with YValues in specified range</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.GetMinValue(System.Double,System.Double)">
            <summary>
            Min YValue in specified range
            </summary>
            <param name="minValue">Min limit for searching</param>
            <param name="maxValue">Max limit for searching</param>
            <returns>Min YValue in specified range</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.GetMaxValue(System.Double,System.Double)">
            <summary>
            Max YValue in specified range
            </summary>
            <param name="minValue">Min limit for searching</param>
            <param name="maxValue">Max limit for searching</param>
            <returns>Max YValue in specified range</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.Sort">
            <summary>
            Sort items 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.Filter(Telerik.Reporting.Charting.Styles.ChartAxisVisibleValues)">
            <summary>
            Filter items by YAxis VisibleValues(All, Negative, Positive)
            </summary>
            <param name="chartAxisVisibleValues">YAxis VisibleValues(All, Negative, Positive)</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.ResetActiveRegions">
            <summary>
            Clear for all items Region
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.Add(Telerik.Reporting.Charting.ChartSeriesItem)">
            <summary>
            Add Item at the collection
            </summary>
            <param name="chartSeriesItem">Item to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.AddRange(Telerik.Reporting.Charting.ChartSeriesItemsCollection)">
            <summary>
            Adds a collection of series items to the items collection.
            </summary>
            <param name="chartSeriesItems">Items to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemsCollection.LoadViewState(System.Object)">
            <summary>
            Load ViewState data
            </summary>
            <param name="state">ViewState with data</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItemsCollection.Parent">
            <summary>
            Parent element
            </summary>       
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSeriesItemsCollection.Item(System.Int32)">
            <summary>
            Gets or sets a Item at the specific position in Items collection.
            </summary>
            <param name="index">Position in the collection</param>
            <returns>Item at the specific position </returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSeriesItemComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Method for comparing ChartSeriesItems
            </summary>
            <param name="x">First SeriesItem</param>
            <param name="y">Second SeriesItem</param>
            <returns>Difference between YValues</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartTitle">
            <summary>
            Chart Title 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartTitle.#ctor">
            <summary>Creates a new instance of the ChartTitle class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartTitle.#ctor(Telerik.Reporting.Charting.Chart)">
            <summary>Creates a new instance of the ChartTitle class.</summary>
            <param name="parent">Chart</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartTitle.#ctor(Telerik.Reporting.Charting.Chart,Telerik.Reporting.Charting.IContainer)">
            <summary>Creates a new instance of the ChartTitle class.</summary>
            <param name="parent">Chart</param>
            <param name="container">Elements container</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.LayoutZoneType">
            <summary>
            Layout zone types
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.LayoutZoneType.Vertical">
            <summary>
            Vertical layout zone
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.LayoutZoneType.Horizontal">
            <summary>
            Horizontal layout zone
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.LayoutZone">
            <summary>
            Virtual chart area for a chart elements placement in auto-layout
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.#ctor">
            <summary>
            Creates new class instance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.ToRectangleF">
            <summary>
            Export zone to rectangle
            </summary>
            <returns>RectangleF</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.ToPosition">
            <summary>
            Layout zone to Position
            </summary>
            <returns>Position</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.ToDimensions">
            <summary>
            Layout zone to Dimensions
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.FromStyle(Telerik.Reporting.Charting.Styles.Dimensions,System.Object)">
            <summary>
            Creates Layout zone from chart object
            </summary>
            <param name="baseDimensions">Zone container dimensions</param>
            <param name="chartElement">Chart element like ChartTitle or Legend</param>
            <returns>LayoutZone</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.CreateFromAvailableSpace(Telerik.Reporting.Charting.Styles.DimensionsChart,System.Object,Telerik.Reporting.Charting.LayoutZone[])">
            <summary>
            Creates new layout zone from a space available for a chart element
            </summary>
            <param name="dimensionsChart">Chart dimensions</param>
            <param name="chartElement">Chart element</param>
            <param name="layoutZones">Existing layout zones</param>
            <returns>LayoutZone</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.DistributeZones(Telerik.Reporting.Charting.LayoutZone@,Telerik.Reporting.Charting.LayoutZone@,Telerik.Reporting.Charting.LayoutZone@)">
            <summary>
            Relocates existing layout zones to avoid their overlapping
            </summary>
            <param name="titleZone">ChartTitle layout zone</param>
            <param name="legendZone">Legend LayoutZone</param>
            <param name="dataTableZone">DataTable layout zone</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.FixElementPosition(Telerik.Reporting.Charting.Styles.Position)">
            <summary>
            Corrects element position to place it inside zone
            </summary>
            <param name="position">Element position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.CalculatePosition(System.Object,Telerik.Reporting.Charting.Styles.Dimensions,Telerik.Reporting.Charting.Styles.Position)">
            <summary>
            Calculates element position
            </summary>
            <param name="element">Chart element</param>
            <param name="dimensions">Element dimensions</param>
            <param name="position">Current element position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.DistributeElements">
            <summary>
            Relocates current layout zone elements inside of layout zone
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.GetDataTable">
            <summary>
            Gets the DataTable from Layout zone
            </summary>
            <returns>DataTable or null</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.GetTitle">
            <summary>
            Gets ChartTitle from Layout zone
            </summary>
            <returns>ChartTitle or null</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.GetLegend">
            <summary>
            Gets Legend from Layout zone
            </summary>
            <returns>Legend or null</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.RemoveEquals(Telerik.Reporting.Charting.LayoutZone[])">
            <summary>
            Remove duplicates from layout zone
            </summary>
            <param name="layoutZones">Layout zones array</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.FixLayoutZone(Telerik.Reporting.Charting.LayoutZone@)">
            <summary>
            Fixes layout zone dimensions
            </summary>
            <param name="zone">Layout zone to fix</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.IsUsedBefore(Telerik.Reporting.Charting.LayoutZone[],Telerik.Reporting.Charting.LayoutZone,System.Int32)">
            <summary>
            Is layout zone already used
            </summary>
            <param name="layoutZones">Layout zones array</param>
            <param name="zone">Layout zone to check</param>
            <param name="index">Start index</param>
            <returns>True if zone already used</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.GetOffsetY(System.Object)">
            <summary>
            Get Y offset of the element in zone
            </summary>
            <param name="element">Element</param>
            <returns>Left offset value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.GetRealHeight">
            <summary>
            Gets element's bound rectangle height
            </summary>
            <returns>Height</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.FixXAndWidth(Telerik.Reporting.Charting.LayoutZone,Telerik.Reporting.Charting.LayoutZone)">
            <summary>
            Fix X coordinate and Width of two layout zones
            </summary>
            <param name="zone1">First Layout zone</param>
            <param name="zone2">Second Layout zones</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.DefineType(Telerik.Reporting.Charting.Styles.Position)">
            <summary>
            Corrects element position position
            </summary>
            <param name="position">Position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.SetMajorDimension(System.Drawing.RectangleF,Telerik.Reporting.Charting.Styles.ChartMargins)">
            <summary>
            Sets the layout zone dimension including appropriate margins 
            </summary>
            <param name="rect">Bound rectangle</param>
            <param name="margins">Element margins</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.SetMinorDimension(Telerik.Reporting.Charting.Styles.Dimensions)">
            <summary>
            Sets the layout zone dimension 
            </summary>
            <param name="dimensions">Container object dimensions</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.DefineBasePosition(Telerik.Reporting.Charting.Styles.Position,Telerik.Reporting.Charting.Styles.Dimensions)">
            <summary>
            Corrects the element position to place it inside Layout Zone
            </summary>
            <param name="position">Zone element position</param>
            <param name="baseDimensions">Zone container dimensions</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.LayoutZone.Add(System.Object)">
            <summary>
            Adds chart element in current layout zone 
            </summary>
            <param name="element">Element to add</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.LayoutZone.X">
            <summary>
            X coordinate
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.LayoutZone.Y">
            <summary>
            Y coordinate
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.LayoutZone.Width">
            <summary>
            Zone width
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.LayoutZone.Height">
            <summary>
            Zone height
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.LayoutZone.Type">
            <summary>
            Zone type
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.LayoutZone.Item(System.Int32)">
            <summary>
            IOrdering list element by index
            </summary>
            <param name="index">Element index</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.LayoutZone.AlignedPosition">
            <summary>
            Zone aligned position
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Security">
            <summary>
            Encryption utility class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Security.encryptStringToBytes_AES(System.String,System.Byte[],System.Byte[])">
            <summary>
            Encrypts string using AES algorithm
            </summary>
            <param name="plainText">Text string to encrypt</param>
            <param name="Key">Encryption key array</param>
            <param name="IV">IV array</param>
            <returns>Encrypted byte array</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Security.decryptStringFromBytes_AES(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            Decrypts bytes array to a string using AES algorithm
            </summary>
            <param name="cipherText">Encrypted bytes array</param>
            <param name="Key">Encryption key array</param>
            <param name="IV">IV array</param>
            <returns>Encrypted byte array</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Tools">
            <summary>
            Common chart utility methods
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Tools.#ctor">
            <summary>
            Class constructor
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Tools.ParseAttribute(System.String@,System.Xml.XmlNode,System.String)">
            <summary>
            Xml support method. Gets the Xml attribute value
            </summary>
            <param name="target">Target string to save the value</param>
            <param name="node">XmlNode to get attribute from</param>
            <param name="targetXmlName">Xml attribute name</param>
            <returns>True in case of success</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Tools.SetAttribute(System.Xml.XmlElement,System.String,System.Object,System.Type)">
            <summary>
            Sets the XmlAttribute value
            </summary>
            <param name="xmlElement">XmlElement to set attribute value</param>
            <param name="attributeName">Attribute name</param>
            <param name="val">Value to set</param>
            <param name="attributeType">Value type if value is Enumeration</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Tools.CompareArrays(System.Drawing.Color[],System.Drawing.Color[])">
            <summary>
            Compares two Color arrays
            </summary>
            <param name="a">First array to compare</param>
            <param name="b">Second array to compare</param>
            <returns>True if arrays are equal</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Tools.CompareArrays(System.Single[],System.Single[])">
            <summary>
            Compares two float arrays
            </summary>
            <param name="a">First array to compare</param>
            <param name="b">Second array to compare</param>
            <returns>True if arrays are equal</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Tools.ArraySum(System.Single[])">
            <summary>
            Calculates sum of a float array members
            </summary>
            <param name="a">Array</param>
            <returns>Sum value</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.DefaultValues">
            <summary>
            Default properties values constants
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.DefaultValues.ROUND_DIGITS">
            <summary>
            Rounding digits limit
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.DefaultValues.MIN_POSSIBLE_STEP">
            <summary>
            Minimum possible axis step value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.DefaultValues.defaultForeColors">
            <summary>
            Default main colors array
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.DefaultValues.defaultSecondColors">
            <summary>
            Default secondary colors array
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DefaultValues.GetMainColor(System.Int32)">
            <summary>
            Gets main color from a colors array at the specified index
            </summary>
            <param name="index">Colors index in an array</param>
            <returns>Color</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DefaultValues.GetSecondColor(System.Int32)">
            <summary>
            Gets secondary color from a colors array at the specified index
            </summary>
            <param name="index">Colors index in an array</param>
            <returns>Color</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartPaletteEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for select palette
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPaletteEditor.editorService">
            <summary>
            Object that provide an interface for a System.Drawing.Design.UITypeEditor to display 
            Windows Forms or to display a control in a drop-down area from a property
            grid control in design mode.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPaletteEditor.columnsListing">
            <summary>
            ListBox for palette selection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPaletteEditor.#ctor">
            <summary>
            Create a instance of ChartPaletteEditor class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPaletteEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Return edit style for ListBox
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <returns>Edit style</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPaletteEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Call when value change
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPaletteEditor.columnsListing_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Added to automatically close dropdown after user selection
            </summary>
            <param name="sender">Object which generate a event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPaletteEditor.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPaletteEditor.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">True - if should disposing</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPaletteEditor.IsDropDownResizable">
            <summary>
            For resize ability
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartSkinEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for skins collection changes
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSkinEditor.editorService">
            <summary>
            Object which Provides an interface for a System.Drawing.Design.UITypeEditor to display
            Windows Forms or to display a control in a drop-down area from a property
            grid control in design mode.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSkinEditor.columnsListing">
            <summary>
            ListBox for select value
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSkinEditor.#ctor">
            <summary>
            Create a instance of ChartSkinEditor class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSkinEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Return edit style for ListBox
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <returns>Edit style</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSkinEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Call when value change
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSkinEditor.columnsListing_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Added to automatically close dropdown after user selection
            </summary>
            <param name="sender">Object which generate a event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSkinEditor.GetComponent(System.IServiceProvider)">
            <summary>
            Return a component for changes
            </summary>
            <param name="serviceProvider">Object which defines a mechanism for retrieving a service object.</param>
            <returns>Object which provides functionality required by all components</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSkinEditor.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSkinEditor.Dispose(System.Boolean)">
            <summary>
            Dispose object
            </summary>
            <param name="disposing">Should dispose</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSkinEditor.IsDropDownResizable">
            <summary>
            Used for resize ability
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.DataColumnEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for DataColumn changing
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.DataColumnEditor.editorService">
            <summary>
            Object which Provides an interface for a System.Drawing.Design.UITypeEditor to display
            Windows Forms or to display a control in a drop-down area from a property
            grid control in design mode.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.DataColumnEditor.columnsListing">
            <summary>
            ListBox for select value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.DataColumnEditor.oldValue">
            <summary>
            Previous value
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataColumnEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Return edit style for ListBox
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <returns>Edit style</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataColumnEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Call when value change
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataColumnEditor.FillListBox(System.Object,System.String)">
            <summary>
            Filling listbox
            </summary>
            <param name="data">Data</param>
            <param name="dataMember">DataMember</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataColumnEditor.columnsListing_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Added to automatically close dropdown after user selection
            </summary>
            <param name="sender">Object which generate a event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataColumnEditor.Dispose">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.DataColumnEditor.Dispose(System.Boolean)">
            <summary>
            Dispose object
            </summary>
            <param name="disposing">Should dispose</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.FiguresEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for figure change
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.FiguresEditor.editorService">
            <summary>
            Object which Provides an interface for a System.Drawing.Design.UITypeEditor to display
            Windows Forms or to display a control in a drop-down area from a property
            grid control in design mode.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.FiguresEditor.columnsListing">
            <summary>
            ListBox for select value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.FiguresEditor.oldValue">
            <summary>
            Previous value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.FiguresEditor.style">
            <summary>
            Style object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.FiguresEditor.#ctor">
            <summary>
            Create new instance of FiguresEditor class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.FiguresEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Return edit style for ListBox
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <returns>Edit style</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.FiguresEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Call when value change
            </summary>
            <param name="context">Object which provide contextual information about a component</param>
            <param name="provider">Object which define a mechanism for retrieving a service object</param>
            <param name="value">Value</param>
            <returns>New value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.FiguresEditor.columnsListing_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Added to automatically close dropdown after user selection
            </summary>
            <param name="sender">Object which generate a event</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.FiguresEditor.Dispose">
            <summary>
            Dispose object
            </summary>
            <param name="disposing">Should dispose</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.FiguresEditor.Dispose(System.Boolean)">
            <summary>
            Dispose object
            </summary>
            <param name="disposing">Should dispose</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.NumericDataColumnEditor">
            <summary>
            Supporting class for Visual Studio design mode.
            Used for DataColumn with numeric data changing
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.NumericDataColumnEditor.FillListBox(System.Object,System.String)">
            <summary>
            Filling listbox
            </summary>
            <param name="data">Data</param>
            <param name="dataMember">DataMember</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.BitmapToRegion">
            <summary>
            Support class for  drawing not rectangular form elements with bitmap fill
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.BitmapToRegion.#ctor">
            <summary>
            Create Instance of BitmapToRegion class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.BitmapToRegion.Convert(System.Drawing.Bitmap)">
            <summary>
            Trace bitmap data to Region
            </summary>
            <param name="bitmap">Image as Bitmap</param>
            <returns>Result Region</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.SelectedChange">
            <summary>
            Delegate, that calls when selected ChartPreview change
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartPreview">
            <summary>
            Reloaded PictureBox special for using in the Wizard for preview different chart images
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPreview._selected">
            <summary>
            Indicate select or not ChartPreview
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPreview.SelectedChange">
            <summary>
            Delegate, that calls when selected ChartPreview change
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPreview.#ctor">
            <summary>
            Create a new instance of ChartPreview class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPreview.#ctor(Telerik.Reporting.Charting.Chart,System.Int32,System.Int32)">
            <summary>
            Create a new instance of ChartPreview class
            </summary>
            <param name="chart">Base chart</param>
            <param name="imageWidth">Required width for image rendering</param>
            <param name="imageHeight">Required height for image rendering</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPreview.#ctor(System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Create a new instance of ChartPreview class
            </summary>
            <param name="chart">Base chart</param>
            <param name="imageWidth">Required width for image rendering</param>
            <param name="imageHeight">Required height for image rendering</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPreview.OnMouseHover(System.EventArgs)">
            <summary>
            Override OnMouseHover event
            </summary>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPreview.OnMouseLeave(System.EventArgs)">
            <summary>
            Override OnMouseLeave event
            </summary>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPreview.OnClick(System.EventArgs)">
            <summary>
            Override OnClick event
            </summary>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPreview.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override OnPaint event
            </summary>
            <param name="e">Paint event arguments object</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPreview.Selected">
            <summary>
            Indicate select or not ChartPreview
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartTypePreview">
            <summary>
            Class for drawing preview different series types 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartTypePreview._type">
            <summary>
            Series type
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartTypePreview._parent">
            <summary>
            Base collection with all series types
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartTypePreview.#ctor(Telerik.Reporting.Charting.Chart,System.Int32,System.Int32)">
            <summary>
            Create a new instance of ChartTypePreview class
            </summary>
            <param name="chart">Base chart</param>
            <param name="imageWidth">Required width for image rendering</param>
            <param name="imageHeight">Required height for image rendering</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartTypePreview.#ctor(Telerik.Reporting.Charting.Chart,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create a new instance of ChartTypePreview class
            </summary>
            <param name="chart">Base chart</param>
            <param name="imageWidth">Required width for image rendering</param>
            <param name="imageHeight">Required height for image rendering</param>
            <param name="selected">Should select this preview</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartTypePreview.#ctor(System.Drawing.Image,Telerik.Reporting.Charting.ChartSeriesType,System.Int32,System.Int32)">
            <summary>
            Create a new instance of ChartTypePreview class
            </summary>
            <param name="chart">Base chart</param>
            <param name="imageWidth">Required width for image rendering</param>
            <param name="imageHeight">Required height for image rendering</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartTypePreview.#ctor(System.Drawing.Image,Telerik.Reporting.Charting.ChartSeriesType,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Create a new instance of ChartTypePreview class
            </summary>
            <param name="chart">Base chart</param>
            <param name="imageWidth">Required width for image rendering</param>
            <param name="imageHeight">Required height for image rendering</param>
            <param name="selected">Should select this preview</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartTypePreview.ChartType">
            <summary>
            Series type
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartSkinPreview">
            <summary>
            Class for drawing preview for different skins 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSkinPreview._skin">
            <summary>
            Skin name
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartSkinPreview._parent">
            <summary>
            Base collection with all skins
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSkinPreview.#ctor(Telerik.Reporting.Charting.Chart,System.Int32,System.Int32,System.String)">
            <summary>
            Create a new instance of ChartSkinPreview class
            </summary>
            <param name="chart">Base chart</param>
            <param name="imageWidth">Required width for image rendering</param>
            <param name="imageHeight">Required height for image rendering</param>
            <param name="skin">Skin name</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSkinPreview.Skin">
            <summary>
            Skin name
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.SelectedChanged">
            <summary>
            Delegate, that calls when selected ChartPreview change
            </summary>
            <param name="sender">ChartPreview control</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartPreviewCollection`1">
            <summary>
            Class describe common functionality for collections of different types of ChartPreview
            </summary>
            <typeparam name="T">ChartPreview</typeparam>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPreviewCollection`1.GetSelectedValue">
            <summary>
            Delegate for getting a selected value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPreviewCollection`1._selectedIndex">
            <summary>
            Index of selected element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPreviewCollection`1._needChangeProperty">
            <summary>
            Charts elements property for changing
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPreviewCollection`1._component">
            <summary>
            Working component
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartPreviewCollection`1.List">
            <summary>
            List of ChartPreview objects
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPreviewCollection`1.#ctor(System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Create a new instance of ChartPreviewCollection class
            </summary>
            <param name="component">Working component</param>
            <param name="needChangeProperty">Charts elements property for changing</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPreviewCollection`1.BeforeSetValue">
            <summary>
            Default method for event
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPreviewCollection`1.AfterSetValue">
            <summary>
            Default method for event
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPreviewCollection`1.OnSelectedIndexChanged(Telerik.Reporting.Charting.ChartPreview)">
            <summary>
            Default method for event
            </summary>
            <param name="sender">ChartPreview control</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPreviewCollection`1.Dispose">
            <summary>
            Dispose control
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartPreviewCollection`1.Dispose(System.Boolean)">
            <summary>
            Dispose control
            </summary>
            <param name="disposing">Should disposing</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPreviewCollection`1.SelectedIndex">
            <summary>
            Index of selected element
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartPreviewCollection`1.Item(System.Int32)">
            <summary>
            Get or set element from collection by integer index
            </summary>
            <param name="index">Index of element</param>
            <returns>ChartPreview object</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartPreviewCollection`1.GetSelectedValueDelegate">
            <summary>
            Get a selected value
            </summary>
            <returns>Main(that describe) value from ChartPreview</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartTypePreviewCollection">
            <summary>
            Class describe functionality for collections of ChartTypePreview
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartTypePreviewCollection.#ctor(System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Create a new instance of ChartPreviewCollection class
            </summary>
            <param name="component">Working component</param>
            <param name="needChangeProperty">Charts elements property for changing</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartTypePreviewCollection.GetSelectedChartType">
            <summary>
            Return selected type of series types
            </summary>
            <returns>Series type</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartTypePreviewCollection.SelectChartByType(System.Nullable{Telerik.Reporting.Charting.ChartSeriesType})">
            <summary>
            Selecting ChartTypePreview by ChartSeriesType
            </summary>
            <param name="cst">Series type for selecting</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartTypePreviewCollection.Add(Telerik.Reporting.Charting.ChartTypePreview)">
            <summary>
            Add ChartTypePreview into the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartTypePreviewCollection.SelectedChartType">
            <summary>
            Selected series type
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartSkinPreviewCollection">
            <summary>
            Class describe functionality for collections of ChartSkinPreview
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSkinPreviewCollection.#ctor(System.Object,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Create a new instance of ChartPreviewCollection class
            </summary>
            <param name="component">Working component</param>
            <param name="needChangeProperty">Charts elements property for changing</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSkinPreviewCollection.GetSelectedSkin">
            <summary>
            Return selected skin
            </summary>
            <returns>Selected skin name</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSkinPreviewCollection.SelectChartBySkin(System.String)">
            <summary>
            Selecting ChartSkinPreview by skin name
            </summary>
            <param name="cst">Skin name for selecting</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSkinPreviewCollection.Add(Telerik.Reporting.Charting.ChartSkinPreview)">
            <summary>
            Add ChartSkinPreview into the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSkinPreviewCollection.BeforeSetValue">
            <summary>
            Default method for event
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartSkinPreviewCollection.AfterSetValue">
            <summary>
            Default method for event
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartSkinPreviewCollection.SelectedSkin">
            <summary>
            Selected skin name
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ImageButton">
            <summary>
            Button control with additional functionality for better design for Wizard
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ImageButton.clickImage">
            <summary>
            Background image for click state
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ImageButton.hoverImage">
            <summary>
            Background image for hover state
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ImageButton.outImage">
            <summary>
            Background image for out state
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ImageButton.disabledImage">
            <summary>
            Background image for disable state
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ImageButton.clickImageSrc">
            <summary>
            Source for background image for click state
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ImageButton.hoverImageSrc">
            <summary>
            Source for background image for hover state
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ImageButton.outImageSrc">
            <summary>
            Source for background image for out state
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ImageButton.disabledImageSrc">
            <summary>
            Source for background image for disable state
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ImageButton.isSkinned">
            <summary>
            Value that indicate should apply background images or not
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ImageButton.#ctor">
            <summary>
            Create instance of ImageButton class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ImageButton.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Create instance of ImageButton class
            </summary>
            <param name="clickImage">Source for background image for click state</param>
            <param name="hoverImage">Source for background image for hover state</param>
            <param name="outImage">Source for background image for out state</param>
            <param name="disabledImage">Source for background image for disable state</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ImageButton.GetImageFromResource(System.String)">
            <summary>
            Read source and create image 
            </summary>
            <param name="name">Source name</param>
            <returns>image object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ImageButton.ApplySkin(System.Boolean)">
            <summary>
            Apply background images
            </summary>
            <param name="applySkin">Should apply</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ImageButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Override default button event OnMouseDown
            </summary>
            <param name="e">Mouse event arguments</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ImageButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Override default button event OnMouseUp
            </summary>
            <param name="e">Mouse event arguments</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ImageButton.OnMouseEnter(System.EventArgs)">
            <summary>
            Override default button event OnMouseEnter
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ImageButton.OnMouseLeave(System.EventArgs)">
            <summary>
            Override default button event OnMouseLeave
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ImageButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override default button event OnPaint
            </summary>
            <param name="e">Paint event arguments</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ImageButton.DisposeImage(System.Drawing.Image@)">
            <summary>
            Disposing Image
            </summary>
            <param name="image">Image object reference</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ImageButton.Dispose(System.Boolean)">
            <summary>
            Dispose
            </summary>
            <param name="disposing">Should disposing</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ImageButton.DisabledImageSrc">
            <summary>
            Source for background image for disable state
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ImageButton.OutImageSrc">
            <summary>
            Source for background image for out state
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ImageButton.HoverImageSrc">
            <summary>
            Source for background image for hover state
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ImageButton.ClickImageSrc">
            <summary>
            Source for background image for hover state
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ImageButton.Enabled">
            <summary>
            Value indicate enable button or not
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ImageButton.IsSkinned">
            <summary>
            Value that indicate should apply background images or not
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ManagedListBox">
            <summary>
            Custom control for Wizard using for list contents manipulations
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ManagedListBox._listBox">
            <summary>
            ListBox control
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ManagedListBox._upButton">
            <summary>
            ImageButton control for move up ability
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ManagedListBox._downButton">
            <summary>
            ImageButton control for move down ability
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ManagedListBox._addButton">
            <summary>
            ImageButton control for add ability
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ManagedListBox._removeButton">
            <summary>
            ImageButton control for remove ability
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ManagedListBox._enableButtons">
            <summary>
            Value indicate enable buttons(ImageButton) or not
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ManagedListBox.isSkinned">
            <summary>
            Should apply background images for ImageButton controls
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ManagedListBox.#ctor">
            <summary>
            Create instance of ManagedListBox class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ManagedListBox.ApplySkin(System.Boolean)">
            <summary>
            Apply background images for ImageButton controls
            </summary>
            <param name="isSkinned">Should apply background images for ImageButton controls</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ManagedListBox.InitializeComponent">
            <summary>
            Internal component initialization
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ManagedListBox._listBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Calls when Selected index of element of ListBox changed
            </summary>
            <param name="sender">ListBox object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ManagedListBox.listBox_ItemsChanged(System.Object)">
            <summary>
            Calls when content of ListBox changed
            </summary>
            <param name="sender">ListBox object</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ManagedListBox.EnableButtons">
            <summary>
            Value indicate enable buttons(ImageButton) or not
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ManagedListBox.ListBox">
            <summary>
            ListBox control
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ManagedListBox.UpButton">
            <summary>
            ImageButton control for add ability
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ManagedListBox.DownButton">
            <summary>
            ImageButton control for move down ability
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ManagedListBox.AddButton">
            <summary>
            ImageButton control for add ability
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ManagedListBox.RemoveButton">
            <summary>
            ImageButton control for remove ability
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ManagedListBox.IsSkinned">
            <summary>
            Should apply background images for ImageButton controls
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ListBoxItemsChanged">
            <summary>
            Delegate for content of ListBox changed event
            </summary>
            <param name="sender">ListBox</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.ListBoxItems">
            <summary>
            Class describe a collection of ListBoxItems and its functionality
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ListBoxItems.owner">
            <summary>
            Collection owner
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListBoxItems.#ctor(Telerik.Reporting.Charting.ListBoxContolling)">
            <summary>
            Create new instance of ListBoxItems class
            </summary>
            <param name="owner">ListBox</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListBoxItems.#ctor(Telerik.Reporting.Charting.ListBoxContolling,Telerik.Reporting.Charting.ListBoxItems)">
            <summary>
            Create new instance of ListBoxItems class
            </summary>
            <param name="owner">ListBox</param>
            <param name="listBoxItems">ListBoxItems collection</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListBoxItems.#ctor(Telerik.Reporting.Charting.ListBoxContolling,System.Object[])">
            <summary>
            Create new instance of ListBoxItems class
            </summary>
            <param name="owner">ListBox</param>
            <param name="values">Values for ListBoxItems collection</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListBoxItems.Add(System.Object)">
            <summary>
            Add item into the collection
            </summary>
            <param name="item">Item for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListBoxItems.AddRange(System.Object[])">
            <summary>
            Add items into the collection
            </summary>
            <param name="value">Items values for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListBoxItems.AddRange(Telerik.Reporting.Charting.ListBoxItems)">
            <summary>
            Add items into the collection
            </summary>
            <param name="value">Items for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListBoxItems.AddRange(System.Windows.Forms.ListBox.ObjectCollection)">
            <summary>
            Add items into the collection
            </summary>
            <param name="value">Items values for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListBoxItems.Clear">
            <summary>
            Clearing collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListBoxItems.Insert(System.Int32,System.Object)">
            <summary>
            Insert item into the collection at specific position
            </summary>
            <param name="index">Items position</param>
            <param name="item">Item for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListBoxItems.Remove(System.Object)">
            <summary>
            Remove item from collection
            </summary>
            <param name="item">Item that should be remove</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListBoxItems.RemoveAt(System.Int32)">
            <summary>
            Remove item from collection
            </summary>
            <param name="item">Item with that index should be remove</param>
        </member>
        <member name="E:Telerik.Reporting.Charting.ListBoxItems.ItemsChanged">
            <summary>
            Calls when content of ListBoxItems collection changed
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ListBoxContolling">
            <summary>
            Class describe functionality for controlling ListBox
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListBoxContolling.OnItemsChanged(System.Object)">
            <summary>
            Default method for ListBoxItemsChanged event
            </summary>
            <param name="sender">Sender </param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListBoxContolling.#ctor">
            <summary>
            Create new instance of ListBoxContolling class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ListBoxContolling.CreateItemCollection">
            <summary>
            Create Items Collection for ListBox
            </summary>
            <returns>ObjectCollection</returns>
        </member>
        <member name="E:Telerik.Reporting.Charting.ListBoxContolling.ItemsChanged">
            <summary>
            Event occurs when items collection of ListBox changed
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ListBoxContolling.Items">
            <summary>
            Items collection
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.NumberTextBox">
            <summary>
            Text block for input numbers only
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.NumberTextBox._numberValue">
            <summary>
            Value as number
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.NumberTextBox.#ctor">
            <summary>
            Create new instance of NumberTextBox class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.NumberTextBox.OnLeave(System.EventArgs)">
            <summary>
            Override OnLeave event
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.NumberTextBox.NumberValue">
            <summary>
            Value as number
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Activate">
            <summary>
            Delegate calls when TabPage activate
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.WizardTabPage">
            <summary>
            Class describe TapPage for Wizard
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.WizardTabPage.Activate">
            <summary>
            Delegate calls when TabPage activate
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.WizardTabPage.#ctor">
            <summary>
            Create new instance of WizardTabPage class
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Design.Wizard.GetDataSourcesList">
            <summary>
            Delegate for getting list of names of available DataSources
            </summary>
            <returns>List of names of available DataSources</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Design.Wizard.GetSelectedDataSourceName">
            <summary>
            Delegate for getting name of selected DataSource
            </summary>
            <returns>List of names of available DataSources</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Design.Wizard.GetData">
            <summary>
            Transfer data from DataSourse in to the control
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Design.Wizard.DataSourceChanged">
            <summary>
            Delegate provide event which occurs when DataSource changed
            </summary>
            <param name="sender">Sender object</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.Design.Wizard.DataSourceDesignerConfigure">
            <summary>
            Delegate provide functionality for configuration DataSorce in the design Time
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Design.Wizard.SetDataSourceID">
            <summary>
            Delegate for set DataSourceID in the control
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Design.Wizard.Wizard">
            <summary>
            Class provide Wizard GUI in the design time for chart controls
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Design.Wizard.Wizard.Designer">
            <summary>
            Chart component designer object
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Design.Wizard.Wizard.ChartControlOriginal">
            <summary>
            Chart component contains a original control
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Design.Wizard.Wizard.ChartControlWorking">
            <summary>
            Chart component contains a temporary control which use in the wizard
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Design.Wizard.Wizard.typesPreview">
            <summary>
            Collection for preview series types
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Design.Wizard.Wizard.skinsPreview">
            <summary>
            Collection for preview skins
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Design.Wizard.Wizard.GetDataSourcesList">
            <summary>
            Default method for GetDataSourcesList delegate
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Design.Wizard.Wizard.GetSelectedDataSourceName">
            <summary>
            Default method for GetSelectedDataSourceName delegate
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Design.Wizard.Wizard.GetData">
            <summary>
            Default method for GetData delegate
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Design.Wizard.Wizard.DataSourceChanged">
            <summary>
            Default method for DataSourceChanged delegate
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Design.Wizard.Wizard.DataSourceDesignerConfigure">
            <summary>
            Default method for DataSourceDesignerConfigure delegate
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Design.Wizard.Wizard.SetDataSourceID">
            <summary>
            Default method for SetDataSourceID delegate
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Design.Wizard.Wizard.dataTableDataHelper">
            <summary>
            DataTable data source helper object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.#ctor">
            <summary>
            Create a new instance of Wizard class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.#ctor(Telerik.Reporting.Charting.IChartDesigner)">
            <summary>
            Create a new instance of Wizard class
            </summary>
            <param name="designer">Chart component designer object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.#ctor(Telerik.Reporting.Charting.IChartDesigner,System.Boolean)">
            <summary>
            Create a new instance of Wizard class
            </summary>
            <param name="designer">Chart component designer object</param>
            <param name="skinned">Should apply skins for wizard or not</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.Init">
            <summary>
            Initialize wizard internal controls
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.FillFromEnum(System.Windows.Forms.ComboBox,System.Type)">
            <summary>
            Fills ComboBox controls from Enum
            </summary>
            <param name="comboBox">ComboBox control</param>
            <param name="enumType">Enum</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.GetEnumValue(System.Type,System.Int32)">
            <summary>
            Gets enum value by its position
            </summary>
            <param name="enumType">Enum</param>
            <param name="index">Position index</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ManageTabData(Telerik.Reporting.Charting.ChartSeriesType)">
            <summary>
            Management for controls in the Data tab page
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.AddEventTypeTabControls">
            <summary>
            Add Events for tab with series type selection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.RemoveEventTypeTabControls">
            <summary>
            Remove Events for tab with series type selection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.InitType">
            <summary>
            Initialize tab with series type selection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.GetChartPreview(Telerik.Reporting.Charting.ChartSeriesType,System.Int32,System.Int32)">
            <summary>
            Create ChartPreview object
            </summary>
            <param name="csType">Series type</param>
            <param name="width">Required width for image rendering</param>
            <param name="height">Required height for image rendering</param>
            <returns>ChartPreview object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.CreateSeries(System.String,System.Drawing.Color,System.Drawing.Color,Telerik.Reporting.Charting.ChartSeriesType,Telerik.Reporting.Charting.Chart)">
            <summary>
            Create series in the chart
            </summary>
            <param name="seriesName">Series name</param>
            <param name="mainColor">Main color</param>
            <param name="secondColor">Second color</param>
            <param name="chartSeriesType">Series type</param>
            <param name="chart">Chart</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.IsVertical_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Change SeriesOrientation property depending of RadioButton state, when RadioButton state changing
            </summary>
            <param name="sender">RadioButton</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.IsHorisontal_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Change SeriesOrientation property depending of RadioButton state, when RadioButton state changing
            </summary>
            <param name="sender">RadioButton</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.AddEventDataTabControls">
            <summary>
            Add events for internal controls in the Data tab
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.linkLabel3_Click(System.Object,System.EventArgs)">
            <summary>
            Goto Axis tab
            </summary>
            <param name="sender">Label</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_Data_SeriesType_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Change series type for selected series
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_Data_SeriesLabels_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Select series labels Field from binding source
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_Data_SeriesY2_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Select series Y2 values Field from binding source
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_Data_SeriesY_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Select series Y values Field from binding source
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_Data_SeriesX2_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Select series X2 values Field from binding source
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_Data_SeriesX_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Select series X values Field from binding source
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_Data_SeriesName_Leave(System.Object,System.EventArgs)">
            <summary>
            Change series name
            </summary>
            <param name="sender">TextBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_Data_SeriesItemsY2_Leave(System.Object,System.EventArgs)">
            <summary>
            Change series item Y2 value for selected item
            </summary>
            <param name="sender">TextBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_Data_SeriesItemsY_Leave(System.Object,System.EventArgs)">
            <summary>
            Change series item Y value for selected item
            </summary>
            <param name="sender">TextBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_Data_SeriesItemsX2_Leave(System.Object,System.EventArgs)">
            <summary>
            Change series item X2 value for selected item
            </summary>
            <param name="sender">TextBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_Data_SeriesItemsX_Leave(System.Object,System.EventArgs)">
            <summary>
            Change series item X value for selected item
            </summary>
            <param name="sender">TextBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_Data_SeriesItemsLabel_Leave(System.Object,System.EventArgs)">
            <summary>
            Change series item label value for selected item
            </summary>
            <param name="sender">TextBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_Data_SeriesItemsName_Leave(System.Object,System.EventArgs)">
            <summary>
            Change series item name for selected item
            </summary>
            <param name="sender">TextBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.Data_SeriesItems_ListBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Define selected series item
            </summary>
            <param name="sender">ListBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.Data_SeriesItems_RemoveButton_Click(System.Object,System.EventArgs)">
            <summary>
            Remove series item
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.Data_SeriesItems_AddButton_Click(System.Object,System.EventArgs)">
            <summary>
            Add series item
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.Data_SeriesItems_DownButton_Click(System.Object,System.EventArgs)">
            <summary>
            Change series item position(move down) in the collection for selected item
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.Data_SeriesItems_UpButton_Click(System.Object,System.EventArgs)">
            <summary>
            Change series item position(move up) in the collection for selected item
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.Data_Series_ListBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Define selected series
            </summary>
            <param name="sender">ListBox</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.Data_Series_RemoveButton_Click(System.Object,System.EventArgs)">
             <summary>
            Remove selected series
             </summary>
             <param name="sender">Button</param>
             <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.Data_Series_AddButton_Click(System.Object,System.EventArgs)">
            <summary>
            Add series
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.Data_Series_DownButton_Click(System.Object,System.EventArgs)">
            <summary>
            Change series position(move down) in the collection for selected item
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.Data_Series_UpButton_Click(System.Object,System.EventArgs)">
            <summary>
            Change series position(move up) in the collection for selected item
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.RemoveEventDataTabControls">
            <summary>
            Remove events from internal controls in the Data tab
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.InitData">
            <summary>
            Init internal controls in the Data tab
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.InitSeries">
            <summary>
            Init controls which bind to the series
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.InitSeriesItems">
            <summary>
            Init controls which bind to the series items
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.GetItemMark(Telerik.Reporting.Charting.ChartSeriesItem)">
            <summary>
            Gets a visible item mark  for display in the ListBox
            </summary>
            <param name="seriesItem">Series Item</param>
            <returns>item mark text</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.SelectSeries(System.Int32,System.Boolean)">
            <summary>
            Select series by index
            </summary>
            <param name="index">series index</param>
            <param name="changeSelectedIndex">should change selected index or not</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.SelectSeriesItem(System.Int32)">
            <summary>
            Select series item by index
            </summary>
            <param name="index">series index</param>
            <param name="changeSelectedIndex">should change selected index or not</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.FillDataSourceIds">
            <summary>
            Fill DropDownList from list of available DataSources
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.InitDatabindOptionControls">
            <summary>
            Initialize controls which bind to the DataBinding functionality
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.DataSourceViewSelectCallback(System.Object)">
            <summary>
            Supporting method for preview data from data source
            </summary>
            <param name="data">Data from data source</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.btn_Data_Edit_Click(System.Object,System.EventArgs)">
            <summary>
            Call DataSource properties and setting dialog
            </summary>
            <param name="sender">Button</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_Data_DataSource_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Apply selecting DataSourse
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_Data_AxisLabels_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Select axis labels Field from binding source
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_Data_GroupColumn_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
            Select grouping Field from binding source
            </summary>
            <param name="sender">DropDownList</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.InitSkin">
            <summary>
            Initialize controls on the Skin tab
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.CreateChartPreview(System.String,System.Int32,System.Int32)">
            <summary>
            Create preview for skin
            </summary>
            <param name="skinName">Skin Name</param>
            <param name="width">Required width for preview image</param>
            <param name="height">Required height for preview image</param>
            <returns>ChartSkinPreview object</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.Design.Wizard.Wizard.AddEventLabelsLegendsTitleTabControls" -->
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.linkLabel1_Click(System.Object,System.EventArgs)">
            <summary>
            Go to the data tab
            </summary>
            <param name="sender">Label</param>
            <param name="e">Event arguments</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.Design.Wizard.Wizard.RemoveEventLabelsLegendsTitleTabControls" -->
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.Design.Wizard.Wizard.InitLabelsLegendsTitle" -->
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.RemoveEventVDT">
            <summary>
            Remove events from controls that binding with values of data table
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.AddEventVDT">
            <summary>
            Add events from controls that binding with values of data table
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_VDT_Y_Leave(System.Object,System.EventArgs)">
            <summary>
            Set Y coordinate for DataTable
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_VDT_X_Leave(System.Object,System.EventArgs)">
            <summary>
            Set X coordinate for DataTable
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.InitValuesDataTable">
            <summary>
            Initialize controls that binding with values of data table
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_VDT_DrawType_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Change RenderType of DataTable
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_VDT_Align_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Change AlignedPosition of DataTable
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.cb_VDT_Visible_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Change Visible of DataTable
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.cb_VDT_Auto_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Change Position.Auto of DataTable
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.AddEventAxisTabControls">
            <summary>
            Add events from controls in the Axis Tab
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.link_Axis_BindLabels_Click(System.Object,System.EventArgs)">
            <summary>
            Go to the Data tab
            </summary>
            <param name="sender">Label object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.cb_Axis_ShowMarks_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Set Tick.Visible for selected axis
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.RemoveEventAxisTabControls">
            <summary>
            Remove events from controls in the Axis Tab
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.InitAxisX">
            <summary>
            Initialize controls base on the XAxis
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.InitAxisY">
            <summary>
            Initialize controls base on the YAxis
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.InitAxisY2">
            <summary>
            Initialize controls base on the YAxis2
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.InitAxis">
            <summary>
            Initialize Axis tab internal controls
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.cb_Axis_Visible_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Set Axis.Visible for selected axis
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.cb_Axis_ShowLabels_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Set AxisItems visible for selected axis
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.cb_Axis_AutoScale_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            Set AutoScale for selected axis
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_Axis_Title_Leave(System.Object,System.EventArgs)">
            <summary>
             Set Axis label text for selected axis
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_Axis_Step_Leave(System.Object,System.EventArgs)">
            <summary>
             Set Axis step text for selected axis
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_Axis_Rotation_Leave(System.Object,System.EventArgs)">
            <summary>
             Set Axis label rotation angle for selected axis
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_Axis_MinValue_Leave(System.Object,System.EventArgs)">
            <summary>
             Set MinValue for selected axis
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_Axis_MaxValue_Leave(System.Object,System.EventArgs)">
            <summary>
             Set MaxValue for selected axis
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_Axis_VisibleValues_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set VisibleValues for selected axis
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_Axis_ValueFormat_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set ValueFormat for selected axis
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_Axis_SelectAxis_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set selected axis
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_Axis_CopyFrom_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set base axis for copy setting
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_Axis_Alignment_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set AxisLabel AlignedPosition for selected axis
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.btn_Axis_CopySettings_Click(System.Object,System.EventArgs)">
            <summary>
             Copy settings from one axis to another
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.mlb_Axis_ManualLabels_UpButton_Click(System.Object,System.EventArgs)">
            <summary>
            Move up selected manual axis item
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.mlb_Axis_ManualLabels_DownButton_Click(System.Object,System.EventArgs)">
            <summary>
            Move down selected manual axis item
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.mlb_Axis_ManualLabels_Leave(System.Object,System.EventArgs)">
            <summary>
            Set text for manual axis item
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.mlb_Axis_ManualLabels_RemoveButton_Click(System.Object,System.EventArgs)">
            <summary>
            Remove manual axis item
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.mlb_Axis_ManualLabels_ListBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Select target  manual axis item
            </summary>
            <param name="sender">ListBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.FillManualLabels(Telerik.Reporting.Charting.ChartAxisItemsCollection)">
            <summary>
            Add manual items into the ListBox
            </summary>
            <param name="collection">Collection of ChartAxisItems</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.mlb_Axis_ManualLabels_AddButton_Click(System.Object,System.EventArgs)">
            <summary>
            Add new manual axis item
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.GetSelectedAxis">
            <summary>
            Get selected axis
            </summary>
            <returns>ChartAxis</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.DefineSeriesLabelsProperties(System.Int32)">
            <summary>
            Initialize controls that bindings to the SeriesLabels
            </summary>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_LLT_SeriesLabels_Align_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set SeriesLabel AlignedPosition for selected series
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_LLT_SeriesLabels_Distance_Leave(System.Object,System.EventArgs)">
            <summary>
             Set AxisLabel Distance for selected series
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_LLT_SeriesLabels_Rotation_Leave(System.Object,System.EventArgs)">
            <summary>
             Set AxisLabel Rotation angle for selected series
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.cb_LLT_SeriesLabels_Visible_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
             Set AxisLabel Visible angle for selected series
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_LLT_Series_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set selected series
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_LLT_Legend_Aligment_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set Legend Alignment
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_LLT_Legend_Marker_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set Figure for markers of bindable legend items 
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.cb_LLT_Legend_Visible_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
             Set Visible for Legend
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tb_LLT_Title_Text_Leave(System.Object,System.EventArgs)">
            <summary>
             Set Title text
            </summary>
            <param name="sender">TextBlock object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ddl_LLT_Title_Aligment_DropDownClosed(System.Object,System.EventArgs)">
            <summary>
             Set AlignedPosition for Title
            </summary>
            <param name="sender">DropDownList object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.cb_LLT_Title_Visible_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
             Set Visible for Title
            </summary>
            <param name="sender">CheckBox object</param>
            <param name="e">Event arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.InitializeComponent">
            <summary>
            
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.Wizard_MouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Mouse Wheel support in the wizard tabs
            </summary>
            <param name="sender">Object</param>
            <param name="e">Mouse Event Arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.tabsSetting_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Select Tab
            </summary>
            <param name="sender">Tab object</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.ApplySkin(System.Boolean)">
            <summary>
            Apply Skin
            </summary>
            <param name="applySkin">Should apply skin</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.OnCreateControl">
            <summary>
            Override OnCreateControl: initialize BackgroundImage for form
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Override OnPaint: Drawing BackgroundImage for form
            </summary>
            <param name="e">Paint Event Arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.submitButton_Click(System.Object,System.EventArgs)">
            <summary>
            Submit button click
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.applyButton_Click(System.Object,System.EventArgs)">
            <summary>
            Apply button click
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.cancelButton_Click(System.Object,System.EventArgs)">
            <summary>
            Cancel button click
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.Wizard_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Wizard MouseMove event
            </summary>
            <param name="sender">Wizard</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.Wizard_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Wizard MouseDown event
            </summary>
            <param name="sender">Wizard</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.WizardAdded(System.Windows.Forms.Form)">
            <summary>
            WizardAdded event
            </summary>
            <param name="container">Form</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.closeButton_Click(System.Object,System.EventArgs)">
            <summary>
            Close button click
            </summary>
            <param name="sender">Button object</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.wizardForm_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Wizard form MouseDown event
            </summary>
            <param name="sender">Form</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.wizardForm_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Wizard form MouseDown event
            </summary>
            <param name="sender">Wizard</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.controlTitle_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Wizard Title MouseDown event
            </summary>
            <param name="sender">Wizard</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Design.Wizard.Wizard.controlTitle_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Wizard Title MouseMove event
            </summary>
            <param name="sender">Wizard</param>
            <param name="e">Event Arguments object</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.WizardControlsHelper">
            <summary>
            Support class for additional functionality which is used in the specific controls in wizard
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.WizardControlsHelper.GetImageFromResource(System.String)">
            <summary>
            Gets image from resource library
            </summary>
            <param name="name">Resource name</param>
            <returns>Image</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.WizardControlsHelper.ConvertBitmapToRegion(System.Drawing.Bitmap)">
            <summary>
            Trace Bitmap data into region
            </summary>
            <param name="bitmap">Image as bitmap</param>
            <returns>Region</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.IOrderingCollection">
            <summary>
            Common interface for a ordering collections
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.IOrderingCollection.AddRange(System.Collections.Generic.List{Telerik.Reporting.Charting.IOrdering},System.Int32)">
            <summary>
            Adds IOrdering elements list in the collection
            </summary>
            <param name="order">IOrdering list to add</param>
            <param name="afterIndex">The starting index at collection to add elements to</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.IOrderingCollection.AddVisibleRange(System.Collections.Generic.List{Telerik.Reporting.Charting.IOrdering},System.Int32)">
            <summary>
            Adds only visible items to collection
            </summary>
            <param name="order">IOrdering list to add</param>
            <param name="afterIndex">The starting index at collection to add elements to</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.IOrderingCollection.AddVisible(Telerik.Reporting.Charting.IOrdering,System.Int32)">
            <summary>
            Adds only visible item to collection
            </summary>
            <param name="elem">IOrdering element to add</param>
            <param name="afterIndex">The starting index at collection to add element to</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.IOrderingCollection.Item(System.Int32)">
            <summary>
            Gets the IOrdering element from collection at the given index
            </summary>
            <param name="index">Element index</param>
            <returns>IOrdering element</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.ChartClickEventArgs">
            <summary>
            Event arguments when a chart element is clicked.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartClickEventArgs.activeRegion">
            <summary>
            Reverse link to a parent
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartClickEventArgs.series">
            <summary>
            Chart series
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ChartClickEventArgs.seriesItem">
            <summary>
            Chart Series Item
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartClickEventArgs.#ctor(Telerik.Reporting.Charting.IActiveRegion,Telerik.Reporting.Charting.ChartSeries,Telerik.Reporting.Charting.ChartSeriesItem)">
            <summary>
            Create instance of the class
            </summary>
            <param name="element">Parent object</param>
            <param name="series">series</param>
            <param name="seriesItem">series item</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartClickEventArgs.#ctor(Telerik.Reporting.Charting.IActiveRegion,Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Create instance of the class
            </summary>
            <param name="element">Parent object</param>
            <param name="series">series</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ChartClickEventArgs.#ctor(Telerik.Reporting.Charting.IActiveRegion)">
            <summary>
            Create instance of the class
            </summary>
            <param name="element">Parent object</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartClickEventArgs.Element">
            <summary>
            Reverse link to a parent
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartClickEventArgs.Series">
            <summary>
            Chart series
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.ChartClickEventArgs.SeriesItem">
            <summary>
            Chart Series Item
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.RenderEngine.image">
            <summary>
            Main Image object
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.RenderEngine.graphics">
            <summary>
            Main Graphics object
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.RenderEngine.chart">
            <summary>
            Chart that should be rendered
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.RenderEngine.seriesList">
            <summary>
            Temporary series list for rendering
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.RenderEngine.getAxisItemBoundOnly">
            <summary>
            Show if only bound of axis items be calculated
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.RenderEngine.bitmapResolution">
            <summary>
            Resolution of resulting bitmap
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.RenderEngine.originalSeries">
            <summary>
            Temporary series list
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.#ctor(Telerik.Reporting.Charting.Chart,System.Single,System.Single)">
            <summary>
            Create instance of class
            </summary>
            <param name="chart">Chart</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.#ctor(Telerik.Reporting.Charting.Chart,System.Single,System.Single,System.Single)">
            <summary>
            Create instance of class
            </summary>
            <param name="chart">Chart</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="dpi">Resolution</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.#ctor(Telerik.Reporting.Charting.Chart,System.Single,System.Single,System.Boolean)">
            <summary>
            Create instance of class
            </summary>
            <param name="chart">Chart</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <param name="initGraphics">Value that indicate should initialize graphics object or not</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.ScaleTo(System.Drawing.Drawing2D.GraphicsPath,System.Single,System.Single)">
            <summary>
            Scaling graphic path
            </summary>
            <param name="path">Path for scale</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
            <returns>Scaled path</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.MoveTo(System.Drawing.Drawing2D.GraphicsPath,System.Single,System.Single)">
            <summary>
            Moving graphic path
            </summary>
            <param name="path">Path for moving</param>
            <param name="x">New  X coordinate</param>
            <param name="y">New  Y coordinate</param>
            <returns>Moved path</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.LocalToGlobal(Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Translate local elements coordinates to global
            </summary>
            <param name="element">Chart element</param>
            <returns>Global positio</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetPen(Telerik.Reporting.Charting.Styles.StyleBorder,System.Drawing.Drawing2D.PenAlignment)">
            <summary>
            Translate elements visual setting to Pen object
            </summary>
            <param name="border">Border style</param>
            <param name="alignment">Pen Alignment</param>
            <returns>Pen</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetPen(Telerik.Reporting.Charting.Styles.StyleBorder)">
            <summary>
            Translate elements visual setting to Pen object
            </summary>
            <param name="border">Elements border style</param>
            <returns>Pen</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetPen(Telerik.Reporting.Charting.Styles.LineStyle,System.Drawing.Color,System.Single)">
            <summary>
            Translate elements visual setting to Pen object
            </summary>
            <param name="border">Elements line style</param>
            <param name="color">Color</param>
            <param name="width">Width</param>
            <returns>Pen</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetBrush(Telerik.Reporting.Charting.Styles.FillStyle,System.Drawing.RectangleF)">
            <summary>
            Translate elements visual setting to Brush object
            </summary>
            <param name="fill">Fill style of elements</param>
            <param name="rect">Element bound rectangle</param>
            <returns>Brush</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetGradientBrush(System.Drawing.RectangleF,Telerik.Reporting.Charting.Styles.FillStyle)">
            <summary>
            Translate elements visual setting to Brush object
            </summary>
            <param name="rect">Elements bound rectangle</param>
            <param name="fill">Elements fill setting</param>
            <returns>Brush</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.getDiagonalAngle(System.Drawing.RectangleF)">
            <summary>
            Return a angle for diagonal in rectangle
            </summary>
            <param name="rectS">Rectangle</param>
            <returns>Angle</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.AdjustRect(System.Drawing.RectangleF@)">
            <summary>
            Normalize rectangle
            </summary>
            <param name="rect">Rectangle</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.AdjustRoundSize(System.Int32,Telerik.Reporting.Charting.Styles.CornerType,Telerik.Reporting.Charting.Styles.CornerType,System.Int32,System.Int32)">
            <summary>
            Normalize corners round coefficient 
            </summary>
            <param name="roundSize">Round coefficient </param>
            <param name="widthCorner">Type of corner</param>
            <param name="heightCorner">Type of corner</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
            <returns>Round coefficient</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetRoundArea(Telerik.Reporting.Charting.Styles.Corners,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Rounding corners for rectangle elements
            </summary>
            <param name="corners">Corners</param>
            <param name="X">X coordinate</param>
            <param name="Y">Y coordinate</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
            <returns>Graphics Path with rounded corners</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetRoundRectangle(Telerik.Reporting.Charting.Styles.Corners,System.Drawing.RectangleF,Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Rounding corners for rectangle elements
            </summary>
            <param name="corners">Corners</param>
            <param name="rect">Rectangle</param>
            <param name="series">Series</param>
            <returns>Graphics Path with rounded corners</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetMaxSize(System.Collections.Generic.List{System.Drawing.SizeF})">
            <summary>
            Compare list of SizeF object and return the largest of them
            </summary>
            <param name="sizes">List of sizes</param>
            <returns>Max size</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.AddString(Telerik.Reporting.Charting.ChartGraphics,System.String,System.String,System.String,System.Single,System.Drawing.Font)">
            <summary>
            String manipulation use in PrepareForHorisontalOverflow and PrepareForVerticalOverflow methods
            </summary>
            <param name="graphics">Graphics</param>
            <param name="result">Result string</param>
            <param name="str">String for adding</param>
            <param name="space">Spacer</param>
            <param name="width">Width</param>
            <param name="font">Font</param>
            <returns>String</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.PrepareForVerticalOverflow(Telerik.Reporting.Charting.ChartGraphics,System.String,System.Drawing.Font,System.Single)">
            <summary>
            Prepare text for vertical overflow
            </summary>
            <param name="graphics">Graphics</param>
            <param name="text">String</param>
            <param name="font">Font</param>
            <param name="width">Width</param>
            <returns>String</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetRenderRegion(Telerik.Reporting.Charting.ChartYAxisType)">
            <summary>
            Return area (Region object) for clipping
            </summary>
            <param name="yAxisType">Type of YAxis</param>
            <returns>Region</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetRenderRegion(System.Object)">
            <summary>
            Return area(Region object) for clipping
            </summary>
            <param name="element">Chart element</param>
            <returns>Region</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.Render(Telerik.Reporting.Charting.IContainer)">
            <summary>
            Rendering chart and/or  its elements
            </summary>
            <param name="element">Chart element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderPlotAreaElements(System.Boolean,System.Boolean)">
            <summary>
            Rendering PlotArea and its elements
            </summary>
            <param name="withGrid">Value that indicate should render grid lines or not</param>
            <param name="withTicks">Value that indicate should render ticks or not</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawScaleBreaks(Telerik.Reporting.Charting.ChartYAxis)">
            <summary>
            Drawing ScaleBreacks
            </summary>
            <param name="chartYAxis">Y Axis</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderMarkedZonesLabel">
            <summary>
            Rendering  MarkedZones Label
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderMarkedZones">
            <summary>
            Rendering  all MarkedZones
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderAxisItems(Telerik.Reporting.Charting.ChartAxis)">
            <summary>
            Rendering chart axis items
            </summary>
            <param name="chartAxis">Axis</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderAxis(Telerik.Reporting.Charting.ChartAxis)">
            <summary>
            Rendering chart axis
            </summary>
            <param name="chartAxis">Axis</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderYAxis(Telerik.Reporting.Charting.ChartYAxis)">
            <summary>
            Rendering YAxis
            </summary>
            <param name="yAxis">Y axis</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderAxisLabel(Telerik.Reporting.Charting.ChartLabel)">
            <summary>
            Rendering chart axis label
            </summary>
            <param name="axisLabel">Axis label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderMarkedZone(Telerik.Reporting.Charting.ChartMarkedZone,Telerik.Reporting.Charting.ChartXAxis,Telerik.Reporting.Charting.ChartYAxis)">
            <summary>
            Rendering  MarkedZone
            </summary>
            <param name="zone">Marked zone</param>
            <param name="chartXAxis">X Axis</param>
            <param name="chartYAxis">Y Axis</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.ChangePlaces(System.Drawing.PointF@)">
            <summary>
            Change x to y and y to x
            </summary>
            <param name="point">Point</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawGrids(System.Drawing.PointF[],System.Drawing.Pen)">
            <summary>
            Grids line drawing
            </summary>
            <param name="gridPoints">Array of points</param>
            <param name="pen">Pen</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawTicks(System.Drawing.PointF[],System.Int32,System.Drawing.Pen)">
            <summary>
            Ticks drawing
            </summary>
            <param name="tickPoints">Array of points</param>
            <param name="tickLength">Length</param>
            <param name="pen">Pen</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawTicks">
            <summary>
            Ticks drawing
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawTicks(Telerik.Reporting.Charting.ChartXAxis)">
            <summary>
            Ticks drawing
            </summary>
            <param name="axis">Axis</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawTicks(Telerik.Reporting.Charting.ChartYAxis)">
            <summary>
            Ticks drawing
            </summary>
            <param name="axis">Axis</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawGrids">
            <summary>
            Grids line drawing
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawGrids(Telerik.Reporting.Charting.ChartYAxis)">
            <summary>
            Grids line drawing
            </summary>
            <param name="axis">Axis</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawGrids(Telerik.Reporting.Charting.ChartXAxis)">
            <summary>
            Grids line drawing
            </summary>
            <param name="axis">Axis</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderTextBlock(Telerik.Reporting.Charting.TextBlock)">
            <summary>
            Rendering TextBlock
            </summary>
            <param name="textBlock">Text block element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderElement(Telerik.Reporting.Charting.IOrdering)">
            <summary>
            Rendering chart  elements
            </summary>
            <param name="element">Chart element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderElement(Telerik.Reporting.Charting.IOrdering,Telerik.Reporting.Charting.ChartSeriesItem)">
            <summary>
            Rendering chart  elements
            </summary>
            <param name="element">Chart element</param>
            <param name="item">Series item</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderElement(Telerik.Reporting.Charting.IOrdering,System.Boolean,System.Boolean)">
            <summary>
            Rendering chart  elements
            </summary>
            <param name="element">Chart element</param>
            <param name="withFill">Value that indicate should drawing fill or not</param>
            <param name="withBorder">Value that indicate should drawing border or not</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderChart">
            <summary>
            Rendering  chart
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderChartDataTableBorder(Telerik.Reporting.Charting.ChartDataTable)">
            <summary>
            Rendering  chart data table border
            </summary>
            <param name="dataTable">Data table</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderChartDataTable(Telerik.Reporting.Charting.ChartDataTable)">
            <summary>
            Rendering  chart data table
            </summary>
            <param name="dataTable">Data table</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetAlignedImageBrush(Telerik.Reporting.Charting.Styles.FillStyle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Image)">
            <summary>
            Translate elements visual setting to Brush object
            </summary>
            <param name="fs">FillStyle object</param>
            <param name="X">X coordinate of element</param>
            <param name="Y">Y coordinate of element</param>
            <param name="width">Elements width</param>
            <param name="height">Elements height</param>
            <param name="img">Image</param>
            <returns>Brush</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetStretchedImageBrush(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Image)">
            <summary>
            Translate elements visual setting to Brush object
            </summary>
            <param name="X">X coordinate</param>
            <param name="Y">Y coordinate</param>
            <param name="width">Width</param>
            <param name="height">Height</param>
            <param name="img">Image</param>
            <returns>Brush</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetBasePoint(System.Drawing.RectangleF,Telerik.Reporting.Charting.Styles.AlignedPositions)">
            <summary>
            Returns a base point for rotation aligned elements
            </summary>
            <param name="rect">Rectangle</param>
            <param name="pos">Aligned position</param>
            <returns>Point</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetParentList(Telerik.Reporting.Charting.IOrdering,System.Collections.Generic.List{Telerik.Reporting.Charting.IOrdering}@)">
            <summary>
            Return a list of all ancestry elements
            </summary>
            <param name="element">Element</param>
            <param name="list">Parents list</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetRotationAngle(Telerik.Reporting.Charting.IOrdering,System.Drawing.Drawing2D.GraphicsPath@)">
            <summary>
            Return global Rotation angle
            </summary>
            <param name="elem">Chart element</param>
            <param name="drawPath">Path</param>
            <returns>Rotation angle</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.InitializeChartElements">
            <summary>
            Initializing elements of chart
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.CalculateElementsForRender">
            <summary>
            Prepare chart elements (calculating sizes, positions, etc) for rendering
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.ScalePlotArea(System.Single,System.Single)">
            <summary>
            Scaling PlotArea for zoom feature
            </summary>
            <param name="xScale">X scale coefficient</param>
            <param name="yScale">Y scale coefficient</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.CalculateElementsForRender(Telerik.Reporting.Charting.IContainer)">
            <summary>
            Prepare chart elements (calculating sizes, positions, etc) for rendering
            </summary>
            <param name="element">IContainer chart element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetLabelZone(Telerik.Reporting.Charting.ChartBaseLabel,System.Boolean)">
            <summary>
            Create layout zone (for AutoLayout feature) based on chart label element
            </summary>
            <param name="label">Label</param>
            <param name="visible">Is label visible</param>
            <returns>Labels Layout zone</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.CalculateElementsForRender(Telerik.Reporting.Charting.Chart)">
            <summary>
            Prepare chart elements (calculating sizes, positions, etc) for rendering
            </summary>
            <param name="chart">Chart object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.CreateMetafile(System.Int32,System.Int32)">
            <summary>
            Creating graphics stage for EMF file format
            </summary>
            <param name="width">Image width</param>
            <param name="height">Image Height</param>
            <returns>Image MetaFile</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.InitGraphics(System.Int32,System.Int32)">
            <summary>
            First rendering engine initialization
            </summary>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <returns>Succses</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.Render">
            <summary>
            Renders default chart image and returns it
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.Render(System.Boolean)">
            <summary>
            Renders default chart image. Could return image clone.
            </summary>
            <param name="shouldClone">Value that indicate should create clone of result image or not</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderPlotArea(System.Boolean)">
            <summary>
            Renders Plot area image only
            </summary>
            <param name="shouldClone">Value that indicate should create clone of result image or not</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderChartArea(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Rendering chart background area image without plot area
            </summary>
            <param name="shouldClone">Value that indicate should create clone of result image or not</param>
            <param name="withBackground">Value that indicate use background or not</param>
            <param name="withTitle">Value that indicate should render title or not</param>
            <param name="withLegend">Value that indicate should legend or not</param>
            <param name="withPlotAreaBorder">Value that indicate should render plot area border or not</param>
            <param name="withXAxis">Value that indicate should render XAxis or not</param>
            <param name="withYAxis">Value that indicate should render YAxis or not</param>
            <param name="withYAxis2">Value that indicate should render YAxis2 or not</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderAxis(System.Boolean,Telerik.Reporting.Charting.ChartAxisType)">
            <summary>
            Rendering chart axis image with ticks and items
            </summary>
            <param name="shouldClone">Value that indicate should create clone of result image or not</param>
            <param name="axisType">Axis type</param>
            <returns>Image</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderFinalImage(System.Boolean)">
            <summary>
            Renders the entire chart image
            </summary>
            <param name="shouldClone">Value that indicate should create clone of result image or not</param>
            <returns>Image</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.RenderEngine.renderEngineDrawOnlyShadow">
            <summary>
            Show if need render only shadows
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.RenderEngine.barWidth">
            <summary>
            Common bars width
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.RenderEngine.barWidthRatio">
            <summary>
            Common bars width ratio
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.RenderEngine.renderEngineCurrentPalette">
            <summary>
            Selected Palette
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.Render(Telerik.Reporting.Charting.ChartSeries,System.Int32)">
            <summary>
            Rendering chart and/or  its elements
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderBar(Telerik.Reporting.Charting.ChartSeries,System.Int32,Telerik.Reporting.Charting.ChartSeriesItem,System.Int32,System.Drawing.RectangleF)">
            <summary>
            Rendering Bar - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
            <param name="item">Series item</param>
            <param name="itemIndex">Series item index</param>
            <param name="barRect">Bars rectangle</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderBarShadow(Telerik.Reporting.Charting.ChartSeries,Telerik.Reporting.Charting.ChartSeriesItem,System.Drawing.RectangleF)">
            <summary>
            Rendering series shadow for  Bar - type chart
            </summary>
            <param name="series">Series</param>
            <param name="item">Series item</param>
            <param name="barRect">Bars rectangle</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderBarSeries(Telerik.Reporting.Charting.ChartSeries,System.Int32,Telerik.Reporting.Charting.BarOrderingMode)">
            <summary>
            Rendering series for  Bar - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
            <param name="mode">Bar ordering mode</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderStackedBarSeries(Telerik.Reporting.Charting.ChartSeriesType,Telerik.Reporting.Charting.BarOrderingMode)">
            <summary>
            Rendering series for StackedBar - type chart
            </summary>
            <param name="seriesType">Series type</param>
            <param name="mode">Bar ordering mode</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.StrictParametersModifyForStackedBars(Telerik.Reporting.Charting.ChartSeriesItem,System.Single,System.Int32@,System.Single@,System.Single@)">
            <summary>
            Modifications in StackedBars for strict mode
            </summary>
            <param name="item">Series item</param>
            <param name="barOverlapRatio">Bars overlap ratio</param>
            <param name="ind">Item index</param>
            <param name="barX">Bars x position</param>
            <param name="barWidthPop">Bar width</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.StrictParametersModifyForStackedBarsPositive(Telerik.Reporting.Charting.ChartSeriesItem,System.Double,System.Single,System.Single,System.Single@,System.Single@,System.Double@,System.Double@)">
            <summary>
            Modifications in StackedBars (with positive values) for strict mode
            </summary>
            <param name="item">Series item</param>
            <param name="val">Series item value</param>
            <param name="barWidthLocal">Bar width</param>
            <param name="barOverlapRatio">Bars overlap ratio</param>
            <param name="barX">Bars x position</param>
            <param name="barWidthPop">Bar width</param>
            <param name="minV">Minimal value</param>
            <param name="tvalp">Total positive value</param>
            <returns>Value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.StrictParametersModifyForStackedBarsNegative(Telerik.Reporting.Charting.ChartSeriesItem,System.Double,System.Single,System.Single,System.Single@,System.Single@,System.Double@,System.Double@)">
            <summary>
            Modifications in StackedBars (with negatives values) for strict mode
            </summary>
            <param name="item">Series item</param>
            <param name="val">Series item value</param>
            <param name="barWidthLocal">Bar width</param>
            <param name="barOverlapRatio">Bars overlap ratio</param>
            <param name="barX">Bars x position</param>
            <param name="barWidthPop">Bar width</param>
            <param name="minV">Minimal value</param>
            <param name="tvaln">Total negative value</param>
            <returns>Value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetPointsArrayForArea(System.Drawing.PointF[])">
            <summary>
            Returns array of points
            </summary>
            <param name="areaPoints">Array of points</param>
            <returns>Array of points</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetPointaArrayForAreaPointMarks(System.Drawing.PointF[],System.Int32)">
            <summary>
            Returns array of points for drawing points Marks
            </summary>
            <param name="areaPoints">Array of points</param>
            <param name="maxItemsCount">Items count</param>
            <returns>Array of points</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetAreaPath(Telerik.Reporting.Charting.ChartSeries,System.Int32,System.Int32,System.Drawing.PointF[])">
            <summary>
            Create path for Area-type series
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series index</param>
            <param name="maxItemsCount">Max items count</param>
            <param name="points">Array of points</param>
            <returns>Area path</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetAreaItemActiveRegion(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,Telerik.Reporting.Charting.ChartSeriesOrientation)">
            <summary>
            Create ActiveRegion for Area-type series item
            </summary>
            <param name="firstPoint">Point for first item</param>
            <param name="secondPoint">Point for second item</param>
            <param name="prevValue1">Value of first item</param>
            <param name="prevValue2">Value of second item</param>
            <param name="serOrientation">Series Orientation</param>
            <returns>Path for active region</returns>
            <returns>Area item active region path</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderAreaSeries(Telerik.Reporting.Charting.ChartSeries,System.Int32)">
            <summary>
            Rendering series for Area - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderStackedAreaSeries(Telerik.Reporting.Charting.ChartSeriesType)">
            <summary>
            Rendering series for  StackedArea - type chart
            </summary>
            <param name="seriesType">Series type</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderLineSeries(Telerik.Reporting.Charting.ChartSeries,System.Int32)">
            <summary>
            Rendering series for  Line - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderPieSeries(Telerik.Reporting.Charting.ChartSeries,System.Int32)">
            <summary>
            Rendering series for  Pie - type chart
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series index</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderEmptyPoint(Telerik.Reporting.Charting.ChartSeries,Telerik.Reporting.Charting.ChartSeriesItem,System.Int32,System.Single)">
            <summary>
            Rendering Empty point
            </summary>
            <param name="series">Series</param>
            <param name="item">Series item</param>
            <param name="itemIndex">Series item index</param>
            <param name="axisStart">Axis start value</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderGanttSeries(Telerik.Reporting.Charting.ChartSeries,System.Int32)">
            <summary>
            Rendering series for Gantt - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderPointSeries(Telerik.Reporting.Charting.ChartSeries,System.Int32)">
            <summary>
            Rendering series for Point - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderPointLabelAndMarker(Telerik.Reporting.Charting.ChartSeries,Telerik.Reporting.Charting.ChartSeriesItem,System.Int32,System.Int32,System.Drawing.PointF)">
            <summary>
            Rendering point label and marker
            </summary>
            <param name="series">Series</param>
            <param name="item">Series item</param>
            <param name="index">Series index</param>
            <param name="itemIndex">Series item index</param>
            <param name="point">Point</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderBubbleSeries(Telerik.Reporting.Charting.ChartSeries,System.Int32)">
            <summary>
            Rendering series for  Bubble - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RenderCandlestickSeries(Telerik.Reporting.Charting.ChartSeries,System.Int32,Telerik.Reporting.Charting.BarOrderingMode)">
            <summary>
            Rendering series for  CandleStickr - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.SeriesLabelsDraw">
            <summary>
            Rendering Series labels
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawPointMark(Telerik.Reporting.Charting.ChartSeries,System.Drawing.PointF[])">
            <summary>
            Rendering point marks
            </summary>
            <param name="series">Series</param>
            <param name="points">Array of points</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.AxisVisibleValues(Telerik.Reporting.Charting.ChartSeries,Telerik.Reporting.Charting.ChartPlotArea)">
            <summary>
            Checking YAxis type for Series 
            </summary>
            <param name="series">Series</param>
            <param name="plotArea">PlotArea</param>
            <returns>YAxis Visible Values</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawLineShadow(System.Drawing.Pen,Telerik.Reporting.Charting.ChartSeries,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Rendering shadow for  Line - type chart
            </summary>
            <param name="shadowPen">Pen for shadow drawing</param>
            <param name="series">Series</param>
            <param name="path">Path</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.RemoveZerosFromEndOfList(System.Collections.Generic.List{System.Byte})">
            <summary>
            Removing unnecessary zeros from lists' end
            </summary>
            <param name="list">List</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawLines(Telerik.Reporting.Charting.ChartSeries,System.Int32,System.Drawing.PointF[])">
            <summary>
            Rendering series for  Line - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
            <param name="points">Array of points</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawBezier(Telerik.Reporting.Charting.ChartSeries,System.Int32,System.Drawing.PointF[])">
            <summary>
            Rendering series for  Bezier - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Serie index</param>
            <param name="points">Array of points</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawLinesForAreas(Telerik.Reporting.Charting.ChartSeries,System.Int32,System.Drawing.PointF[])">
            <summary>
            Rendering lines for  Area - type chart
            </summary>
            <param name="series">Series</param>
            <param name="index">Series index</param>
            <param name="points">Array of points</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.DrawPolygon(Telerik.Reporting.Charting.ChartSeries,System.Int32,System.Drawing.PointF[],System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Rendering polygon for area-types chart series
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series index</param>
            <param name="seriesPoints">Array of points</param>
            <param name="grPath">Path</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetBrush(Telerik.Reporting.Charting.ChartSeries,System.Int32,Telerik.Reporting.Charting.ChartSeriesItem,System.Int32,System.Drawing.RectangleF)">
            <summary>
            Translate elements visual setting to Brush object
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series index</param>
            <param name="item">Series item</param>
            <param name="itemIndex">Series item index</param>
            <param name="rect">Item rectangle</param>
            <returns>Brush</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetEmptyBrush(Telerik.Reporting.Charting.ChartSeries,System.Drawing.RectangleF)">
            <summary>
            Gets the empty brush.
            </summary>
            <param name="series">The series.</param>
            <param name="seriesIndex">Index of the series.</param>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetFillStyle(Telerik.Reporting.Charting.ChartSeries,System.Int32,Telerik.Reporting.Charting.ChartSeriesItem,System.Int32)">
            <summary>
            Translate elements visual setting to Fill
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series  index</param>
            <param name="item">Series item</param>
            <param name="itemIndex">Series item index</param>
            <returns>FillStyle</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetDefaultColors(Telerik.Reporting.Charting.Styles.FillStyle,System.Int32)">
            <summary>
            Return a default color
            </summary>
            <param name="fillStyle">Fill style of elements</param>
            <param name="index">Elements(series or series item) index</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetLineStyle(Telerik.Reporting.Charting.ChartSeries,System.Int32,Telerik.Reporting.Charting.ChartSeriesItem)">
            <summary>
            Translate elements visual setting to Pen object
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series index</param>
            <param name="item">Series item</param>
            <returns>StyleBorder</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetPen(Telerik.Reporting.Charting.ChartSeries,System.Int32,Telerik.Reporting.Charting.ChartSeriesItem)">
            <summary>
            Translate elements visual setting to Pen object
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series index</param>
            <param name="item">Series item</param>
            <returns>Pen</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.GetEmptyPen(Telerik.Reporting.Charting.ChartSeries,System.Int32,Telerik.Reporting.Charting.ChartSeriesItem)">
            <summary>
            Returns empty Pen object
            </summary>
            <param name="series">Series</param>
            <param name="seriesIndex">Series index</param>
            <param name="item">Series item</param>
            <returns>Pen</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.ResetClip">
            <summary>
            Drop clip area
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.SetOrderingMode">
            <summary>
            Set correct ordering mode for x axis
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.RenderEngine.CheckCategoricalOrderingMode">
            <summary>
            Checking a series. Should be applied categorical x axis or not
            </summary>
            <returns>BarOrderingMode</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.RenderEngine.ErrorMessageRendered">
            <summary>
            Checks if error message rendered
            </summary>
            <returns>Signal</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.AlignedPositions">
            <summary>
            Aligned positions listing
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.AlignedPositions.Right">
            <summary>
            Assign the right position for element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.AlignedPositions.Left">
            <summary>
            Assign the left position for element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.AlignedPositions.Top">
            <summary>
            Assign the top position for element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.AlignedPositions.Bottom">
            <summary>
            Assign the bottom position for element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.AlignedPositions.Center">
            <summary>
            Assign the center position for element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.AlignedPositions.TopRight">
            <summary>
            Assign the top right position for element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.AlignedPositions.TopLeft">
            <summary>
            Assign the top left position for element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.AlignedPositions.BottomRight">
            <summary>
            Assign the bottom right position for element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.AlignedPositions.BottomLeft">
            <summary>
            Assign the bottom left position for element
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.AutoTextWrap">
            <summary>
            Define auto wrap option for text
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.AutoTextWrap.Auto">
            <summary>
            Means that value of auto text wrap will be inherit of parent element.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.AutoTextWrap.True">
            <summary>
            Means that auto text wrap will be applied.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.AutoTextWrap.False">
            <summary>
            Means that auto text wrap will not be applied.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ChartAxisLayoutMode">
            <summary>
            Specifies different axis styles for positioning of item labels and marks.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartAxisLayoutMode.Normal">
            <summary>
            Sets the default axis layout style.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartAxisLayoutMode.Inside">
            <summary>
            Sets the endmost axis items inside the axis.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartAxisLayoutMode.Between">
            <summary>
            Sets axis items between axis marks.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ChartAxisVisibility">
            <summary>
            Define visibility option for axis
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartAxisVisibility.Auto">
            <summary>
            Means that axis will be visible if it is XAxis or any series belongs to it.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartAxisVisibility.True">
            <summary>
            Means that axis will be visible.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartAxisVisibility.False">
            <summary>
            Means that axis will be not visible.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ChartAxisVisibleValues">
            <summary>
            Axis visible values range positive / negative
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartAxisVisibleValues.All">
            <summary>
            All values will be visible.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartAxisVisibleValues.Positive">
            <summary>
            Only positive values will be visible.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartAxisVisibleValues.Negative">
            <summary>
            Only negative values will be visible.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartValueFormat.None">
            <summary>
            Specifies that no default format string is specified. Uses CustomFormat if is .
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartValueFormat.Currency">
            <summary>
            Default format string is set to currency : "C". 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartValueFormat.Scientific">
            <summary>
            Default format string is set to scientific : "E".
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartValueFormat.General">
            <summary>
            Default format string is set to general : "G".
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartValueFormat.Number">
            <summary>
            Default format string is set to number : "N".
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartValueFormat.Percent">
            <summary>
            Default format string is set to percent : "P".
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartValueFormat.ShortDate">
            <summary>
            Converts to short date using ShortDatePattern set in CurrentCulture. Uses CustomFormat if is set.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartValueFormat.ShortTime">
            <summary>
            Converts to short time using ShortTimePattern set in CurrentCulture. Uses CustomFormat if is set.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartValueFormat.LongDate">
            <summary>
            Converts to long date using LongDatePattern set in CurrentCulture. Uses CustomFormat if is set.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartValueFormat.LongTime">
            <summary>		
            Converts to long time using LongTimePattern set in CurrentCulture. Uses CustomFormat if is set.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.GradientElement">
            <summary>
            Gradient element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.GradientElement.#ctor">
            <summary>
            Create new instance of GradientElement class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.GradientElement.#ctor(System.Drawing.Color,System.Single)">
            <summary>
            Create new instance of GradientElement class.
            </summary>
            <param name="color">Color </param>
            <param name="position">Position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.GradientElement.Reset">
            <summary>
            Reset to default parameters
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.GradientElement.Equals(System.Object)">
            <summary>
            Comparing to objects
            </summary>
            <param name="obj">Object for comparing</param>
            <returns>Whether objects are equal or not</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.GradientElement.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.GradientElement.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns>New instance of GradientElement class with the same fields as this one</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.GradientElement.Color">
            <summary>
            Gets and sets Color
            </summary>
            <value>Color</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.GradientElement.Position">
            <summary>
            Gets and sets Position
            </summary>
            <value>Position</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.ColorBlend">
            <summary>
            Defines arrays of elements and positions used for interpolating GradientElement blending in a multicolor gradient.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.ColorBlend.colorBlendContainerObject">
            <summary>
            Container element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.#ctor">
            <summary>
            Create new instance of ColorBlend class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.#ctor(System.Drawing.Color[])">
            <summary>
            Create new instance of ColorBlend class.
            </summary>
            <param name="colors">Colors to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.#ctor(System.Drawing.Color[],System.Object)">
            <summary>
            Create new instance of ColorBlend class.
            </summary>
            <param name="colors">Colors to add to the object</param>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.#ctor(System.Drawing.Color[],System.Single[],System.Object)">
            <summary>
            Create new instance of ColorBlend class.
            </summary>
            <param name="colors">Colors to add to the object.</param>
            <param name="positions">Positions of colors.</param>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.#ctor(System.Drawing.Color[],System.Single[])">
            <summary>
            Create new instance of ColorBlend class.
            </summary>
            <param name="colors">Colors to add to the object</param>
            <param name="positions">Positions of colors</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.#ctor(System.Object)">
            <summary>
            Create new instance of ColorBlend class.
            </summary>
            <param name="containerObject">Container element.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.AddRange(Telerik.Reporting.Charting.ColorBlend)">
            <summary>
            Adds a range of elements to the collection.
            </summary>
            <param name="blend">Object that contains element to add</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.LoadFrom(Telerik.Reporting.Charting.ColorBlend)">
            <summary>
            Load pairs colors\positions from specified object.
            </summary>
            <param name="blend">Object to load from.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.GetColors">
            <summary>
            Gets ColorBlend's colors.
            </summary>
            <returns>ColorBlend's colors.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.GetPositions">
            <summary>
            Gets ColorBlend's positions.
            </summary>
            <returns>ColorBlend's positions.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.GetColor(System.Single)">
            <summary>
            Gets color at specified position. 
            </summary>
            <param name="pos">Position to get color.</param>
            <returns>Color at specified position.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.GetBrush(System.Drawing.RectangleF,System.Single)">
            <summary>
            Returns gradient brush
            </summary>
            <param name="rectangle">Rectangle of brush</param>
            <param name="angle">Angle of brush.</param>
            <returns>Gradient brush</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.Equals(System.Object)">
            <summary>
            Comparing two objects.
            </summary>
            <param name="obj">Object to compare.</param>
            <returns>Whether objects equal or not</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.Compare(Telerik.Reporting.Charting.ColorBlend,Telerik.Reporting.Charting.ColorBlend)">
            <summary>
            Color blends comparer
            </summary>
            <param name="a">First object for comparing</param>
            <param name="b">Second object for comparing</param>
            <returns>Whether objects equal or not</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.ColorBlend.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns>New instance of ColorBlend class with the same fields as this one.</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.Corners">
            <summary>
            Sets the edge type of rectangular shapes.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Corners.cornersContainerObject">
            <summary>
            Container object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Corners.#ctor(System.Object)">
            <summary>
            Create new instance of Corners class.
            </summary>
            <param name="containerObject">Container object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Corners.#ctor">
            <summary>
            Create new instance of Corners class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Corners.#ctor(System.Int32)">
            <summary>
             Create new instance of Corners class.
            </summary>
            <param name="roundSize">RoundSize for coners</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Corners.#ctor(Telerik.Reporting.Charting.Styles.CornerType,Telerik.Reporting.Charting.Styles.CornerType,Telerik.Reporting.Charting.Styles.CornerType,Telerik.Reporting.Charting.Styles.CornerType,System.Int32)">
            <summary>
             Create new instance of Corners class.
            </summary>
            <param name="topLeft">Type of top left corner</param>
            <param name="topRight">Type of top right corner</param>
            <param name="bottomLeft">Type of bottom left corner</param>
            <param name="bottomRight">Type of bottom right corner</param>
            <param name="roundSize">RoundSize of corners</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Corners.op_Implicit(System.String)~Telerik.Reporting.Charting.Styles.Corners">
            <summary>
            Implicitly creates a Corners from the specified string.
            </summary>
            <param name="value">The string to parse</param>
            <returns>Object of corners type</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Corners.Parse(System.String)">
            <summary>
            Converts the specified string to Corners.
            </summary>
            <param name="value">The string to convert.</param>
            <returns>Corners that represents the specified string.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Corners.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified string to a Corners.
            </summary>
            <param name="value">The string to convert.</param>
            <param name="culture">CultureInfo used</param>
            <returns>Object of corners type</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Corners.SetCornersType(Telerik.Reporting.Charting.Styles.CornerType)">
            <summary>
            Set specified type for all corners
            </summary>
            <param name="cornerType">Type of corners</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Corners.Equals(System.Object)">
            <summary>
            Compare two objects of Corners type
            </summary>
            <param name="obj">Object to compare with</param>
            <returns>Whether objects equal</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Corners.GetHashCode">
             <summary>
            Gets  HashCode
             </summary>
             <returns>HashCode</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Corners.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of Corners type</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Corners.CopyFrom(Telerik.Reporting.Charting.Styles.Corners)">
            <summary>
            Copy fields from specified object
            </summary>
            <param name="sourceCorners">Object to copy from</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Corners.Reset">
            <summary>
            Reset all settings to default
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Corners.TopLeft">
            <summary>
            Gets and sets the type of the top left corner of the rectangular shape.
            </summary>
            <value>Type of top left corner</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Corners.TopRight">
             <summary>
            Gets and sets the type of the top right corner of the rectangular shape.
             </summary>
             <value>Type of top right corner</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Corners.BottomLeft">
            <summary>
            Gets and sets the type of the bottom left corner of the rectangular shape.
            </summary>
            <value>Type of bottom left corner</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Corners.BottomRight">
            <summary>
            Gets and sets the type of the bottom right corner of the rectangular shape.
            </summary>
            <value>Type of bottom right corner</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Corners.RoundSize">
             <summary>
             Gets and sets the round size of the corner.
             </summary>
            <value>Round size of corners</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Corners.IsRectangle">
            <summary>
            Check whether all corners are of Rectangle type.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.CornersConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Check whether can convert an object of the given type to the type of this converter, using the specified context
            </summary>
            <param name="context">Context for types converting</param>
            <param name="sourceType">Type to convert</param>
            <returns>Can convert an object or not</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.CornersConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Conversion of an object to the type of this converter
            </summary>
            <param name="context">Context for types converting</param>
            <param name="culture">To use at the current culture</param>
            <param name="value">Object to convert</param>
            <returns>Converted object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.CornersConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Conversion of an object to the specified type 
            </summary>
            <param name="context">Context for types converting</param>
            <param name="culture">To use at the current culture</param>
            <param name="value">Object to convert</param>
            <param name="destinationType">Type to convert  the value parameter to</param>
            <returns>converted object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.CornersConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get Properties Supported
            </summary>
            <param name="context">Context</param>
            <returns>Properties Supported</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.CornersConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets Properties of type
            </summary>
            <param name="context">Context</param>
            <param name="value"></param>
            <param name="attributes"></param>
            <returns>Properties of this type</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.CornersConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Get Create Instance Supported
            </summary>
            <param name="context">Context</param>
            <returns>Get Create Instance Supported</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.CornersConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Create new instance
            </summary>
            <param name="context">Context</param>
            <param name="propertyValues">Properties</param>
            <returns>New instance</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.CornerType">
            <summary>
            Corner type
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.CornerType.Rectangle">
            <summary>
            Specifies a sharp corner.
            </summary>  
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.CornerType.Round">
            <summary>
            Specifies a rounded corner.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.CustomShape">
            <summary>Represents custom shape of an element.</summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ElementShape">
            <summary>Represents element shape. Base class for specialized shapes such as 
            EllipseShape, RoundRectShape, Office12Shape, etc. </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ElementShape.SerializeProperties">
            <summary>
            Serializes properties. Required for serialization mechanism of telerik
            framework.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ElementShape.DeserializeProperties(System.String)">
            <summary>
            Deserializes properties. Required for the deserialization mechanism of telerik
            framework.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.CustomShape.#ctor">
            <summary>Initializes a new instance of the CustomShape class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.CustomShape.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the CustomShape class using a container.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.CustomShape.CreatePath(System.Drawing.Rectangle)">
            <summary>Creates a path using a ractangle for bounds.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.CustomShape.SerializeProperties">
            <summary>Serializes properties. Required for telerik serialization mechanism.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.CustomShape.DeserializeProperties(System.String)">
            <summary>Deserializes properties. Required for telerik deserialization mechanism.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.CustomShape.Points">
            <summary>Gets a List of Shape points.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.CustomShape.Dimension">
            <summary>Gets or sets a Rectangle indicating the dimension of the shape.</summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.RadShapeEditorControl">
            <summary>
            Represents a shape editor control.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.RadShapeEditorControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.RadShapeEditorControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.RadShapeEditorControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.CustomShapeEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.CustomShapeEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.CustomShapeEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ShapePoint">
            <summary>
            Represents a shape point.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ShapePointBase">
            <summary>
            Represents a base class of the ShapePoint class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePointBase.#ctor">
            <summary>
            Initializes a new instance of the ShapePointbase class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePointBase.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the ShapePoint class using X and Y
            coordinates.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePointBase.#ctor(System.Drawing.Point)">
            <summary>
            Initializes a new instance of the ShapePoint class using a Point structure.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePointBase.#ctor(Telerik.Reporting.Charting.Styles.ShapePointBase)">
            <summary>
            Initializes a new instance of the ShapePoint class using an instance of the
            ShapePointBase class.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePointBase.Set(System.Single,System.Single)">
            <summary>
            Sets the X and Y coordinates of the shape point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePointBase.Set(System.Drawing.Point)">
            <summary>
            Sets the point position from a Point structure.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePointBase.GetPoint">
            <summary>
            Retrieves a Point structure corresponding to the point position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePointBase.GetPoint(System.Drawing.Rectangle)">
            <summary>
            
            </summary>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePointBase.ToString">
            <summary>
            Retrieves a string representation of the ShapePointBase class.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShapePointBase.X">
            <summary>
            Gets or sets a float value indicating the X coordinate of the shape point.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShapePointBase.Y">
            <summary>
            Gets or sets a float value indicating the Y coordinate of the shape point.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShapePointBase.Anchor">
            <summary>
            Gets or sets a value indicating the anchor style.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShapePointBase.Locked">
            <summary>
            Gets or sets a boolean value indicating whether the shape point is locked.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePoint.#ctor">
            <summary>
            Initializes a new instance of the ShapePoint class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePoint.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the ShapePoint class from
            the X and Y coordinates of the point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePoint.#ctor(System.Drawing.Point)">
            <summary>
            Initializes a new instance of the ShapePoint class from a Point structure.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePoint.#ctor(Telerik.Reporting.Charting.Styles.ShapePoint)">
            <summary>
            Initializes a new instance of the ShapePoint class using a ShapePoint instance.
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePoint.CreateBezier(Telerik.Reporting.Charting.Styles.ShapePointBase)">
            <summary>
            Creates a Bezier curve between the current point and the point given as a
            parameter.
            </summary>
            <param name="nextPoint"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePoint.GetCurve(Telerik.Reporting.Charting.Styles.ShapePoint)">
            <summary>
            
            </summary>
            <param name="nextPoint"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePoint.IsVisible(Telerik.Reporting.Charting.Styles.ShapePoint,System.Drawing.Point,System.Int32)">
            <summary>
            
            </summary>
            <param name="nextPoint"></param>
            <param name="pt"></param>
            <param name="width"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShapePoint.IsCurveVisible(System.Drawing.Point[],System.Drawing.Point,System.Double)">
            <summary>
            
            </summary>
            <param name="points"></param>
            <param name="pt"></param>
            <param name="radius"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShapePoint.ControlPoint1">
            <summary>
            Gets or sets the first control point.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShapePoint.ControlPoint2">
            <summary>
            Gets or sets the second control point.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ShapePoint.LineDirections">
            <summary>
            Exposes the line direction.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ShapePoint.LinePositions">
            <summary>
            Exposes the line position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ShapePoint.LinePositions.Horizontal">
            <summary>
            Indicates horizontal position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ShapePoint.LinePositions.Vertical">
            <summary>
            Indicates vertical position.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ElementShapeConverter">
            <summary>Represents element shape converter.</summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ElementShapeEditor">
            <exclude/> 
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.RoundRectShape">
            <summary>Represents round rectangle shape.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.RoundRectShape.#ctor">
            <summary>Initializes a new instance of the RoundRectShape class.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.RoundRectShape.#ctor(System.Int32)">
            <summary>Initializes a new instance of the RoundRectShape class using a radius.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.RoundRectShape.CreatePath(System.Drawing.Rectangle)">
            <summary>Greates round rectangle like path.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.RoundRectShape.SerializeProperties">
            <summary>Serializes properties. Required for telerik serialization mechanism.</summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.RoundRectShape.DeserializeProperties(System.String)">
            <summary>Deserializes properties. Required for telerik deserialization mechanism.</summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.RoundRectShape.Radius">
            <summary><para>Gets or sets the radius of the shape.</para></summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.DefaultValues">
            <summary>
            Defaults
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.Dimensions">
            <summary>
            Dimensions base class
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ISizesAndPaddings">
            <summary>
            Interface that sizable objects implement.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ISizesAndPaddings.AutoSize">
            <summary>
            Gets and sets auto size mode.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ISizesAndPaddings.Height">
            <summary>
            Gets and sets height value.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ISizesAndPaddings.Width">
            <summary>
            Gets and sets width value.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ISizesAndPaddings.Margins">
            <summary>
            Gets and sets margins.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ISizesAndPaddings.Paddings">
            <summary>
            Gets and sets paddings.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Dimensions.dimensionsMargins">
            <summary>
            Specifies the margins properties
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Dimensions.dimensionsPaddings">
            <summary>
            Specifies the paddings properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.ShouldSerializeHeight">
            <summary>
            Gets if Height property should be serializable.
            </summary>
            <returns>If Height property should be serializable.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.ResetHeight">
            <summary>
            Reset Height to default value.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.ShouldSerializeWidth">
            <summary>
            Gets if Width property should be serializable.
            </summary>
            <returns>If Width property should be serializable.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.ResetWidth">
            <summary>
            Gets if Width property should be serializable.
            </summary>
            <returns>If Width property should be serializable.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.#ctor(System.Object)">
            <summary>
            Create new instance of Dimensions class.
            </summary>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.#ctor">
            <summary>
            Create new instance of Dimensions class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.#ctor(System.Single,System.Single)">
            <summary>
            Create new instance of Dimensions class.
            </summary>
            <param name="width">Width of element</param>
            <param name="height">Height of element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.#ctor(Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit)">
            <summary>
            Create new instance of Dimensions class.
            </summary>
            <param name="width">Width of element</param>
            <param name="height">Height of element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.#ctor(Telerik.Reporting.Charting.Styles.ChartMargins)">
            <summary>
            Create new instance of Dimensions class.
            </summary>
            <param name="margins">Margins of element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.#ctor(Telerik.Reporting.Charting.Styles.ChartPaddings)">
            <summary>
            Create new instance of Dimensions class.
            </summary>
            <param name="paddings">Paddings of element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.#ctor(Telerik.Reporting.Charting.Styles.ChartMargins,Telerik.Reporting.Charting.Styles.ChartPaddings)">
            <summary>
            Create new instance of Dimensions class.
            </summary>
            <param name="margins">Margins of element</param>
            <param name="paddings">Paddings of element</param>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Dimensions.containerObject">
            <summary>
            Container element.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Dimensions.dimensionsCopy">
            <summary>
            Copy of this object.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.Reset">
            <summary>
            Resets to default values
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.EqualsWithoutMarginsPaddings(System.Object)">
            <summary>
            Checks if objects are equal without margins and paddings.
            </summary>
            <param name="obj">Object to compare</param>
            <returns>If objects are equal without margins and paddings</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.SetDimensions(System.Single,System.Single)">
            <summary>
            Sets the new Width and Height values
            </summary>
            <param name="width">Width of element</param>
            <param name="height">Height of element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.SetDimensions(Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit)">
            <summary>
            Sets the new Width and Height values
            </summary>
            <param name="width">Width of element</param>
            <param name="height">Height of element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.SetDimensions(Telerik.Reporting.Charting.Styles.Dimensions)">
            <summary>
            Copy dimensions from the object.
            </summary>
            <param name="source">Object tot copy from.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.Equals(System.Object)">
            <summary>
            Comparing of two objects.
            </summary>
            <param name="obj">Object to compare with.</param>
            <returns>Whether objects are equal.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.GetHashCode">
            <summary>
            Gets hash code.
            </summary>
            <returns>Hash code.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.IsZero">
            <summary>
            Returns True if dimensions width and height are zero values
            </summary>
            <returns>True if dimensions width and height are zero values</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns>New instance of Dimensions class with the same fields as this object.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.TrackViewState">
            <summary>
            Track ViewState.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState.
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Dimensions.SaveViewState">
            <summary>
            Save data to ViewState.
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Dimensions.AutoSize">
            <summary>
            Gets and sets Auto sizing mode
            </summary>
            <value>True if auto size, false - if not.</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Dimensions.Height">
            <summary>
            Specifies the height property
            </summary>
            <value>Height value of Unit type.</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Dimensions.Width">
            <summary>
            Specifies the width property
            </summary>
            <value>Width value of Unit type</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Dimensions.Margins">
            <summary>
            Specifies the margins properties
            </summary>
            <value>Margins for element</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Dimensions.Paddings">
            <summary>
            Specifies the paddings properties
            </summary>
            <value>Paddings for element</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Dimensions.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name.
            </summary>
            <param name="name">Name of property.</param>
            <returns>Value of property.</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.DimensionsSeriesPointMark">
            <summary>
            Specific series point marks dimensions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsSeriesPointMark.#ctor(System.Object)">
            <summary>
            Create new instance of DimensionsSeriesPointMark class.
            </summary>
            <param name="containerObject">Container element.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsSeriesPointMark.#ctor">
            <summary>
             Create new instance of DimensionsSeriesPointMark class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsSeriesPointMark.ResetHeight">
            <summary>
            Resets Height to default values
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsSeriesPointMark.ResetWidth">
            <summary>
            Resets Width to default values
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsSeriesPointMark.Reset">
            <summary>
            Resets to default values
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsSeriesPointMark.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns>New instance of DimensionsSeriesPointMark class with the same fields as this object.</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsSeriesPointMark.Height">
            <summary>
            Specifies Height of element.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsSeriesPointMark.Width">
            <summary>
            Specifies Width of element.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsSeriesPointMark.Margins">
            <summary>
            Specifies margins of element.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsSeriesPointMark.Paddings">
            <summary>
            Specifies paddings of element.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.DimensionsTitle">
            <summary>
            Chart title's dimensions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsTitle.#ctor">
            <summary>
             Create new instance of DimensionsTitle class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsTitle.Reset">
            <summary>
            Reset to default values.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsTitle.Margins">
            <summary>
            Specifies margins of element.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsTitle.Paddings">
            <summary>
            Specifies paddings of element.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.DimensionsPlotArea">
            <summary>
            Default plot area's dimensions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsPlotArea.#ctor">
            <summary>
            Create new instance of DimensionsPlotArea class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsPlotArea.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsPlotArea.Margins">
            <summary>
            Specifies margins of element.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.DimensionsChart">
            <summary>
            Chart's dimensions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsChart.ResetHeight">
            <summary>
            Reset Height to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsChart.ResetWidth">
            <summary>
            Reset Width to default settings
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.DimensionsChart.defWidth">
            <summary>
            Default height
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.DimensionsChart.defHeight">
            <summary>
            Default width
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsChart.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsChart.Height">
            <summary>
            Specifies Height of element
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsChart.Width">
            <summary>
            Specifies Width of element
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.DimensionsLegend">
            <summary>
            Legend's dimensions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsLegend.#ctor">
            <summary>
            Create new instance of DimensionsLegend
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsLegend.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsLegend.Margins">
            <summary>
            Specifies margins of element
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsLegend.Paddings">
            <summary>
            Specified paddings of element
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.DimensionsMarker">
            <summary>
            Marker's default dimensions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsMarker.#ctor(System.Object)">
            <summary>
            Create new instance of DimensionsMarker class.
            </summary>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsMarker.#ctor">
            <summary>
            Create new instance of DimensionsMarker class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsMarker.#ctor(System.Single,System.Single)">
            <summary>
            Create new instance of DimensionsMarker class.
            </summary>
            <param name="width">Width of element</param>
            <param name="height">Height of element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsMarker.ResetHeight">
            <summary>
            Reset Height to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsMarker.ResetWidth">
            <summary>
            Reset Width to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsMarker.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsMarker.Paddings">
            <summary>
            Specifies paddings of element
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsMarker.AutoSize">
            <summary>
            Gets and sets Auto size mode of element
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsMarker.Height">
            <summary>
            Specifies height of element
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsMarker.Width">
            <summary>
            Specifies width of element
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.DimensionsPointMarker">
            <summary>
            PointMark's default dimensions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DimensionsPointMarker.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns>New instance of DimensionsPointMarker class with the same fields as this object.</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.DimensionsPointMarker.Margins">
            <summary>
            Specifies margins of element
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.EmtyValuesMode">
            <summary>
            Empty values representation mode
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.EmptyValue">
            <summary>
            Empty value
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.EmptyValue.emptyValueMarker">
            <summary>
            Empty value point appearance
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.EmptyValue.emptyValueLine">
            <summary>
            Line, Spline, Bezier series line style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.EmptyValue.emptyValueFillStyle">
            <summary>
            Specifies an empty bar fill style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.EmptyValue.#ctor">
            <summary>
            Create new instance of EmptyValue class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.EmptyValue.Reset">
            <summary>
            Reset all settings to default.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.EmptyValue.Clone">
            <summary>
            Clone this object.
            </summary>
            <returns>New instance of the object EmptyValue with the same fields as this object has.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.EmptyValue.TrackViewState">
            <summary>
            Track ViewState.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.EmptyValue.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState.
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.EmptyValue.SaveViewState">
            <summary>
            Save data to ViewState.
            </summary>
            <returns>Saved data.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.EmptyValue.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.EmptyValue.Mode">
            <summary>
            Gets and sets Empty values representation mode
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.EmptyValue.Line">
            <summary>
            Gets and sets Empty line style
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.EmptyValue.PointMark">
            <summary>
            Gets and sets Empty value point mark 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.EmptyValue.FillStyle">
            <summary>
             Specifies an empty bar fill style
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.CustomFigure">
            <summary>
            User-defined figure
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomFigure.#ctor">
            <summary>
            Creates new instance of CustomFigure class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomFigure.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of CustomFigure class.
            </summary>
            <param name="name">Name of figure</param>
            <param name="description">Data in string format used for figure creation</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomFigure.ToString">
            <summary>
            Gets String representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.CustomFigure.Name">
            <summary>
            Gets and sets Figure's name
            </summary>
            <value>Name of figure</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.CustomFigure.Description">
            <summary>
            Gets and sets Figure's source
            </summary>
            <value>Data in string format needed to restore object</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.CustomFiguresCollection">
            <summary>
            Custom figures collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomFiguresCollection.GetFigure(System.Int32)">
            <summary>
            Gets or sets a custom figures collection item.
            </summary>
            <param name="index">Index to get figure</param>
            <returns>Figure at specified index</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomFiguresCollection.GetFigure(System.String)">
            <summary>
            Gets or sets a custom figures collection item.
            </summary>
            <param name="name">Name of figure to get</param>
            <returns>Figure with specified name</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomFiguresCollection.Add(Telerik.Reporting.Charting.CustomFigure)">
            <summary>
            Adds a custom figure to the collection.
            </summary>
            <param name="figure">Figure for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomFiguresCollection.AddRange(Telerik.Reporting.Charting.CustomFigure[])">
            <summary>
            Adds an array of figure items to the figures collection.
            </summary>
            <param name="figure">Figures for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomFiguresCollection.Contains(System.String)">
            <summary>
            Indicates whether the specified figure item exists in the collection.
            </summary>
            <param name="figureName">Figure name</param>
            <returns>Whether the specified figure item exists in the collection or not</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomFiguresCollection.IndexOf(System.String)">
            <summary>
            Returns the index of the specified figure item.
            </summary>
            <param name="figureName">Name of figure</param>
            <returns>Index of figure with specified name</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomFiguresCollection.Remove(System.String)">
            <summary>
            Removes figure with specified name
            </summary>
            <param name="figureName">Name of figure</param>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.DefaultFigures.Cross">
            <summary>
            Default figures' names
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.DefaultFigures.FiguresList">
            <summary>
            List of default figures' names
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DefaultFigures.Contains(System.String)">
            <summary>
            Gets whether list contains figure with specified name
            </summary>
            <param name="name">Name of figure</param>
            <returns>Whether list contains figure with specified name or not</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DefaultFigures.GetPath(System.String)">
            <summary>
            Get graphics path of figure with specified name
            </summary>
            <param name="name">Name of figure</param>
            <returns>Graphics path</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DefaultFigures.CreateStarPath(System.Int32,System.Drawing.Rectangle,System.Single)">
            <summary>
            Create graphics path for star figure
            </summary>
            <param name="pointsCount">Count of points in star</param>
            <param name="rect">Rectangle of star figure</param>
            <param name="widthRatio">Ratio</param>
            <returns>Graphics path of star figure</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.FiguresCollection">
            <summary>
            Default figures
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.FiguresCollection.figures">
            <summary>
            List of figures
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FiguresCollection.#ctor">
            <summary>
            Create new instance of FiguresCollection class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FiguresCollection.#ctor(Telerik.Reporting.Charting.Chart)">
            <summary>
            Create new instance of FiguresCollection class.
            </summary>
            <param name="chart">Chart to add figures into collection</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FiguresCollection.Add(System.Collections.Generic.List{Telerik.Reporting.Charting.CustomFigure})">
            <summary>
            Add list of figures into collection
            </summary>
            <param name="list">List of figures</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FiguresCollection.Add(System.String)">
            <summary>
            Add figure with specified name
            </summary>
            <param name="name">Name figure for adding</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FiguresCollection.GetPath(System.String)">
            <summary>
            Gets graphics path of figure with specified name
            </summary>
            <param name="name">Name of figure</param>
            <returns>Graphics path</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FiguresCollection.GetPath(System.String,Telerik.Reporting.Charting.Chart)">
            <summary>
            Gets graphics path of figure with specified name in chart's custom figures
            </summary>
            <param name="name">Name of figure</param>
            <param name="chart">Chart with custom figures</param>
            <returns>Graphics path</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FiguresCollection.Figures">
            <summary>
            Gets list of figures
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.GradientFillStyle">
            <summary>
            Specifies the direction of a linear gradient.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.FillSettings">
            <summary>
            Fill settings
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.FillSettings.fillSettingsComplexGradient">
            <summary>
            Specifies the blend colors for Gradient fill
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillSettings.#ctor(System.Object)">
            <summary>
            Create new instance of FillSettings class.
            </summary>
            <param name="containerObject">Container object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillSettings.#ctor">
            <summary>
            Create new instance of FillSettings class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillSettings.#ctor(Telerik.Reporting.Charting.Styles.GradientFillStyle,System.Single,Telerik.Reporting.Charting.ColorBlend)">
            <summary>
            Constructor for FillSettings for the Linear gradient fill mode
            </summary>
            <param name="lgMode">Linear gradient fill mode</param>
            <param name="lgAngle">Linear gradient fill angle</param>
            <param name="blend">Specifies the blend colors for Gradient fill</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillSettings.#ctor(System.Drawing.Drawing2D.HatchStyle)">
            <summary>
            Constructor for FillSettings for the Hatch fill mode
            </summary>
            <param name="style">Hatch style</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillSettings.#ctor(Telerik.Reporting.Charting.Styles.ImageDrawMode,System.String,Telerik.Reporting.Charting.Styles.ImageAlignModes,Telerik.Reporting.Charting.Styles.ImageTileModes)">
            <summary>
            Constructor for FillSettings for the Image fill mode
            </summary>
            <param name="idMode">Image mode</param>
            <param name="imageURL">Image path</param>
            <param name="aligneMode">Alignment of image</param>
            <param name="flip">Flip mode</param>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.FillSettings.fillSettingsContainerObject">
            <summary>
            Container element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillSettings.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillSettings.GetImage(Telerik.Reporting.Charting.Chart)">
            <summary>
            Get background image of chart
            </summary>
            <param name="chart">Chart to get image</param>
            <returns>Image from resources</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillSettings.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of FillSettings class with the same fields as this object.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillSettings.Equals(System.Object)">
            <summary>
            Comparing two objects.
            </summary>
            <param name="obj">Object for comparing</param>
            <returns>Whether objects are equal or not</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillSettings.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillSettings.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillSettings.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillSettings.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillSettings.GradientMode">
            <summary>
            Specifies the Linear gradient fill mode
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillSettings.GradientAngle">
            <summary>
            Specifies the Linear gradient fill angle
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillSettings.ComplexGradient">
            <summary>
            Specifies the blend colors for Gradient fill
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillSettings.HatchStyle">
            <summary>
            Specifies the style of hatch fill type
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillSettings.ImageDrawMode">
            <summary>
            Specifies how image should be drawing
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillSettings.BackgroundImage">
            <summary>
            Specifies the URL of Image file
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillSettings.ImageAlign">
            <summary>
            Specifies the Image align mode
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillSettings.ImageFlip">
            <summary>
            Specifies the image flip settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillSettings.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.FillSettingsVerticalGradient">
            <summary>
            Vertical gradient default fill settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillSettingsVerticalGradient.Reset">
            <summary>
            Reset values to default
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillSettingsVerticalGradient.GradientMode">
            <summary>
            Specifies the Linear gradient fill mode
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.FillStyle">
            <summary>
            Fill style base class
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.FillStyle.fillStyleFillSettings">
            <summary>
            Fill settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.#ctor">
            <summary>
            Create new instance of FillStyle class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.#ctor(System.Object)">
            <summary>
            Create new instance of FillStyle class.
            </summary>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.#ctor(System.Drawing.Color)">
            <summary>
            Create new instance of FillStyle class.
            </summary>
            <param name="mainColor">Main color</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Create new instance of FillStyle class.
            </summary>
            <param name="mainColor">Main color</param>
            <param name="secondColor">Second color</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.#ctor(System.Drawing.Color,Telerik.Reporting.Charting.Styles.FillType)">
            <summary>
            Create new instance of FillStyle class.
            </summary>
            <param name="mainColor">Main color</param>
            <param name="fillType">One of FillType values(Solid, Gradient, ComplexGradient, Image,Hatch)</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.#ctor(System.Drawing.Color,System.Drawing.Color,Telerik.Reporting.Charting.Styles.FillType)">
            <summary>
            Create new instance of FillStyle class.
            </summary>
            <param name="mainColor">Main color</param>
            <param name="secondColor">Second color</param>
            <param name="fillType">One of FillType values(Solid, Gradient, ComplexGradient, Image,Hatch)</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.#ctor(System.Drawing.Color,System.Drawing.Color,Telerik.Reporting.Charting.Styles.FillSettings,System.Boolean,Telerik.Reporting.Charting.Styles.FillType)">
            <summary>
            Create new instance of FillStyle class.
            </summary>
            <param name="mainColor">Main color</param>
            <param name="secondColor">Second color</param>
            <param name="fillSettings">Fill settings</param>
            <param name="gammaCorrection">Specifies whether gamma correction should be used</param>
            <param name="fillType">One of FillType values(Solid, Gradient, ComplexGradient, Image,Hatch)</param>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.FillStyle.fillStyleContainerObject">
            <summary>
            Container element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.Clone">
            <summary>
            Clone of this object
            </summary>
            <returns>New instance of FillStyle class with the same fields as this object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.Equals(System.Object)">
            <summary>
            Comparing of two objects
            </summary>
            <param name="obj">Object to compare</param>
            <returns>Whether objects are equal or not</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyle.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyle.MainColor">
            <summary>
            Gets and sets the main color of figure background
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyle.SecondColor">
             <summary>
            Gets and sets the second color of figure background
             </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyle.FillSettings">
            <summary>
            Gets and sets fill settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyle.MainColorOpacity">
            <summary>
            Gets and sets the main color opacity coefficient
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyle.SecondColorOpacity">
             <summary>
            Gets and sets the second color opacity coefficient
             </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyle.GammaCorrection">
            <summary>
            Specifies whether gamma correction should be used
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyle.FillType">
            <summary>
            Specifies which of fill styles (Hatch, Solid, Image, Gradient) should be used
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyle.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets value of property by its name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.FillStyleSeries">
            <summary>
            Series fill style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.FillStyleSeries.Empty">
            <summary>
            FillStyleSeries with default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyleSeries.#ctor">
            <summary>
            Create new instance of FillStyleSeries class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyleSeries.#ctor(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Create new instance of FillStyleSeries class.
            </summary>
            <param name="series">Container element(series)</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyleSeries.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyleSeries.MainColor">
            <summary>
            Gets or sets the color of the data series.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyleSeries.SecondColor">
            <summary>
            Gets or sets the color of the data series.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.FillStyleSeriesPoint">
            <summary>
            Series points fill style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyleSeriesPoint.#ctor(System.Object)">
            <summary>
            Create new instance of FillStyleSeriesPoint class.
            </summary>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyleSeriesPoint.#ctor">
            <summary>
            Create new instance of FillStyleSeriesPoint class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyleSeriesPoint.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.FillStyleChart">
            <summary>
            Chart's background fill style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyleChart.#ctor">
            <summary>
            Create new instance of FillStyleChart class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyleChart.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyleChart.FillType">
            <summary>
            Specifies which of fill styles (Hatch, Solid, Image, Gradient) should be used
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyleChart.MainColor">
            <summary>
            Gets or sets the color of the data series.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStylePlotArea.#ctor">
            <summary>
            Create new instance of FillStylePlotArea class.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.FillStylePlotArea.defMainColor">
            <summary>
            Default value of Main color
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.FillStylePlotArea.defSecondColor">
            <summary>
            Default value of Second color
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStylePlotArea.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStylePlotArea.MainColor">
            <summary>
            Chart plot area main color
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStylePlotArea.SecondColor">
            <summary>
            Chart plot area second color
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStylePlotArea.FillType">
            <summary>
            Specifies which of fill styles (Hatch, Solid, Image, Gradient) should be used
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.FillStyleTitle">
            <summary>
            Title's background fill style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyleTitle.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyleTitle.MainColor">
            <summary>
            Chart title main color
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyleTitle.FillType">
            <summary>
            Specifies which of fill styles (Hatch, Solid, Image, Gradient) should be used
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.FillStyleMarkedZones">
            <summary>
            Marked zone fill style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.FillStyleMarkedZones.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyleMarkedZones.MainColor">
            <summary>
            Chart marked zone main color
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.FillStyleMarkedZones.FillType">
            <summary>
            Specifies which of fill styles (Hatch, Solid, Image, Gradient) should be used
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.FillType">
            <summary>
            Fill types listing
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.FillType.Solid">
            <summary>
            Element is filled by one color.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.FillType.Gradient">
            <summary>
            Element is filled by two color.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.FillType.ComplexGradient">
            <summary>
            Element is filled by colors at specified positions.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.FillType.Hatch">
            <summary>
            Element is filled by Hatch type(standard).
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.FillType.Image">
            <summary>
            Element is filled by image.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageAlignModes.Top">
            <summary>
            Image is located at Top of element.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageAlignModes.Bottom">
            <summary>
            Image is located at Bottom of element.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageAlignModes.Right">
            <summary>
            Image is located at Right of element.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageAlignModes.Left">
            <summary>
            Image is located at Left of element.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageAlignModes.Center">
            <summary>
            Image is located at Center of element.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageAlignModes.TopRight">
            <summary>
            Image is located at TopRight of element.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageAlignModes.TopLeft">
             <summary>
            Image is located at TopLeft of element.
             </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageAlignModes.BottomRight">
            <summary>
            Image is located at BottomRight of element.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageAlignModes.BottomLeft">
            <summary>
            Image is located at BottomLeft of element.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageDrawMode.Align">
            <summary>
            Image is aligned by specified alignment.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageDrawMode.Stretch">
            <summary>
            Stretch image. 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageDrawMode.Flip">
            <summary>
            Flip image.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageTileModes.Flip">
            <summary>
            Fill element by image that repeats by X and Y.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageTileModes.FlipX">
            <summary>
            Fill element by image that flips by X.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageTileModes.FlipY">
            <summary>
            Fill element by image that flips by Y.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageTileModes.FlipXY">
            <summary>
            Fill element by image that flips by X and Y.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.IPosition">
            <summary>
            Interface that objects with position implement.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.IPosition.Position">
            <summary>
            Gets position.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.LabelItemsCompositionTypes">
            <summary>
            Specifies how marker and text block are situated related to each other.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.LabelItemsCompositionTypes.ColumnImageText">
            <summary>
            Marker at left, TextBlock - at right
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.LabelItemsCompositionTypes.ColumnTextImage">
            <summary>
            Marker at right, TextBlock - at left
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.LabelItemsCompositionTypes.RowImageText">
            <summary>
            Marker at top, TextBlock - at bottom
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.LabelItemsCompositionTypes.RowTextImage">
            <summary>
            Marker at bottom, TextBlock - at top
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.LabelItemsCompositionTypes.None">
            <summary>
            Marker and TextBlock use Position-AlignedPosition. Default value.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase">
            <summary>
            Base class for a chart Margins and Paddings
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.chartLayoutDecoratorBaseContainerObject">
            <summary>
            Container element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.#ctor(System.Object)">
            <summary>
            Creates new instance of LayoutDecoratorBase class.
            </summary>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.#ctor">
            <summary>
            Creates new instance of LayoutDecoratorBase class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.#ctor(System.Object,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit)">
            <summary>
            Creates new instance of LayoutDecoratorBase class.
            </summary>
            <param name="containerObject">Container element</param>
            <param name="top">Top side</param>
            <param name="right">Right side</param>
            <param name="bottom">Bottom side</param>
            <param name="left">Left side</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.#ctor(Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit)">
            <summary>
            Creates new instance of LayoutDecoratorBase class.
            </summary>
            <param name="top">Top side</param>
            <param name="right">Right side</param>
            <param name="bottom">Bottom side</param>
            <param name="left">Left side</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new instance of LayoutDecoratorBase class.
            </summary>
            <param name="containerObject">Container element</param>
            <param name="top">Top side</param>
            <param name="right">Right side</param>
            <param name="bottom">Bottom side</param>
            <param name="left">Left side</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.#ctor(Telerik.Reporting.Charting.Styles.Unit)">
            <summary>
            Creates new instance of LayoutDecoratorBase class.
            </summary>
            <param name="top">Value in pixels or percents of all sides</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.Reset">
            <summary>
            Reset to default settings.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.Reset(Telerik.Reporting.Charting.Styles.Unit)">
            <summary>
            Set value in pixels or percents of all sides
            </summary>
            <param name="value">Value in pixels or percents of all sides</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.Equals(System.Object)">
            <summary>
            Checks whether objects are equal
            </summary>
            <param name="obj">Object to compare</param>
            <returns>Result of comparing</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.op_Equality(Telerik.Reporting.Charting.Styles.LayoutDecoratorBase,Telerik.Reporting.Charting.Styles.LayoutDecoratorBase)">
            <summary>
            Operator comparing
            </summary>
            <param name="layoutDecoratorOne">First object for comparing</param>
            <param name="layoutDecoratorTwo">Second object for comparing</param>
            <returns>Result of comparing</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.op_Inequality(Telerik.Reporting.Charting.Styles.LayoutDecoratorBase,Telerik.Reporting.Charting.Styles.LayoutDecoratorBase)">
            <summary>
            Operator not equal
            </summary>
            <param name="layoutDecoratorOne">First object for comparing</param>
            <param name="layoutDecoratorTwo">Second object for comparing</param>
            <returns>Whether objects are not equal</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance of LayoutDecoratorBase class with the same fields as this one</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.CopyFrom(Telerik.Reporting.Charting.Styles.LayoutDecoratorBase)">
            <summary>
            Copy fields from object
            </summary>
            <param name="layoutDecorator">Object to copy from</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.Left">
            <summary>
            Sets the left side in pixels or percents of the chart's width.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.Right">
            <summary>
            Sets the right side in pixels or percents of the chart's width.
            </summary> 
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.Top">
            <summary>
            Sets the top side in pixels or percents of the chart's height.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.LayoutDecoratorBase.Bottom">
            <summary>
            Sets the bottom side in pixels or percents of the chart's height.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.LayoutStyle">
            <summary>
            Base appearance settings for any element being calculated
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.Style">
            <summary>
            Base style class
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Style.styleShadow">
            <summary>
            Specifies the shadowStyle property
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Style.styleBorder">
            <summary>
            Specifies the border for style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Style.styleContainerObject">
            <summary>
            Style container object
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Style.styleChart">
            <summary>
            Chart style related to
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.#ctor(System.Object)">
            <summary>
            Creates new instance of Style class.
            </summary>
            <param name="containerObject">Container object element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.#ctor">
            <summary>
            Creates new instance of Style class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.#ctor(Telerik.Reporting.Charting.Styles.StyleBorder)">
            <summary>
            Creates new instance of Style class.
            </summary>
            <param name="border">Style border</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.#ctor(Telerik.Reporting.Charting.Styles.StyleBorder,System.Boolean)">
            <summary>
            Creates new instance of Style class.
            </summary>
            <param name="border">Style border</param>
            <param name="visible">Visibility</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.#ctor(Telerik.Reporting.Charting.Styles.StyleBorder,System.Boolean,Telerik.Reporting.Charting.Styles.ShadowStyle)">
            <summary>
            Creates new instance of Style class.
            </summary>
            <param name="border">Style border</param>
            <param name="visible">Visibility</param>
            <param name="shadowStyle">Shadow style</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.IsVisible(System.Object)">
            <summary>
            Gets element visibility
            </summary>
            <param name="element">Element visibility to check</param>
            <returns>Visibility of the specified element</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.Reset">
            <summary>
            Reset settings to default
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.SetPixelValues(Telerik.Reporting.Charting.IOrdering,Telerik.Reporting.Charting.IContainer)">
            <summary>
            Set pixels value to width and height properties of element
            </summary>
            <param name="elem">Element to calculate pixel values</param>
            <param name="container">Container of element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.SetPixelValues(Telerik.Reporting.Charting.IOrdering,System.Single,System.Single)">
            <summary>
            Set pixels value to width and height properties of element
            </summary>
            <param name="elem">Element to calculate pixel values</param>
            <param name="contWidth">Container's width</param>
            <param name="contHeight">Container's height</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.SetPixelValues(Telerik.Reporting.Charting.Styles.Dimensions,System.Single,System.Single)">
            <summary>
             Set pixels value to width and height properties of element's dimensions
            </summary>
            <param name="objDims">Element's dimensions</param>
            <param name="contWidth">Container's width</param>
            <param name="contHeight">Container's height</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.GetRealBounds(Telerik.Reporting.Charting.Styles.Dimensions,System.Nullable{System.Single})">
            <summary>
            Calculate bounds of element depend on its rotation and previous dimensions
            </summary>
            <param name="dimensions">Dimensions of element</param>
            <param name="rotation">Rotation angle</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.GetStyleProperty(System.Object,Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value of element by name 
            </summary>
            <param name="element">Element to get property</param>
            <param name="propertyName">Property name</param>
            <returns>Property value of specified element</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState to load data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Style.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Style.Border">
            <summary>
            Specifies the border style
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Style.Shadow">
            <summary>
            Specifies the shadow settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Style.Visible">
            <summary>
            Specifies visibility
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Style.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Style.Chart">
            <summary>
            Specifies chart style related to
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.LayoutStyle.position">
            <summary>
            Position of element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.LayoutStyle.dimensions">
            <summary>
            Dimensions of element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutStyle.#ctor(System.Object)">
            <summary>
            Creates new instance of LayoutStyle class.
            </summary>
            <param name="containerObject">Container object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutStyle.#ctor(Telerik.Reporting.Charting.Styles.Position)">
            <summary>
            Creates new instance of LayoutStyle class.
            </summary>
            <param name="position">Position of element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutStyle.#ctor(Telerik.Reporting.Charting.Styles.Dimensions)">
            <summary>
            Creates new instance of LayoutStyle class.
            </summary>
            <param name="dimensions">Dimensions of element.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutStyle.#ctor(Telerik.Reporting.Charting.Styles.Position,Telerik.Reporting.Charting.Styles.Dimensions)">
            <summary>
            Creates new instance of LayoutStyle class.
            </summary>
            <param name="position">Position of element</param>
            <param name="dimensions">Dimensions of element.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutStyle.#ctor(Telerik.Reporting.Charting.Styles.StyleBorder,System.Boolean,Telerik.Reporting.Charting.Styles.ShadowStyle,Telerik.Reporting.Charting.Styles.Position,Telerik.Reporting.Charting.Styles.Dimensions)">
            <summary>
            Creates new instance of LayoutStyle class.
            </summary>
            <param name="border">Border of element</param>
            <param name="visible">Visibility of element</param>
            <param name="shadowStyle">Shadow</param>
            <param name="position">Position</param>
            <param name="dimensions">Dimensions</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutStyle.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutStyle.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutStyle.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState 
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutStyle.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LayoutStyle.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.LayoutStyle.Position">
            <summary>
            Specifies the elements Position property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.LayoutStyle.Dimensions">
            <summary>
            Specifies the elements Dimensions property
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleBorder">
            <summary>
            Border style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleBorder.lineStyleContainerObject">
            <summary>
            Style container object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleBorder.IsVisible">
            <summary>
            Determines whether this instance is visible.
            </summary>
            <returns>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleBorder.#ctor(System.Object)">
            <summary>
            Creates new instance of StyleBorder class
            </summary>
            <param name="containerObject">Container object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleBorder.#ctor">
            <summary>
            Creates new instance of StyleBorder class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleBorder.#ctor(System.Boolean)">
            <summary>
            Creates new instance of StyleBorder class
            </summary>
            <param name="visible">Border visibility</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleBorder.#ctor(System.Drawing.Color)">
            <summary>
            Creates new instance of StyleBorder class
            </summary>
            <param name="color">Border color</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleBorder.#ctor(System.Drawing.Color,System.Single)">
            <summary>
            Creates new instance of StyleBorder class
            </summary>
            <param name="color">Border color</param>
            <param name="width">Border width</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleBorder.#ctor(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Creates new instance of StyleBorder class
            </summary>
            <param name="color">Border color</param>
            <param name="width">Border width</param>
            <param name="penStyle">Border PenStyle</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleBorder.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleBorder.Equals(System.Object)">
            <summary>
            Compare two objects
            </summary>
            <param name="obj">Object tot compare</param>
            <returns>Result of comparing</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleBorder.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleBorder.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Object with the same fields as this one</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleBorder.Color">
            <summary>
            Specifies the line color property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleBorder.PenStyle">
            <summary>
            Specifies the pen style property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleBorder.Width">
            <summary>
            Specifies the width property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleBorder.Visible">
            <summary>
            Visibility
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleBorder.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.LineStyle">
            <summary>
            Common lines style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LineStyle.#ctor(System.Object)">
            <summary>
            Creates new instance of LineStyle class
            </summary>
            <param name="containerObject">Container object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LineStyle.#ctor">
            <summary>
            Creates new instance of LineStyle class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LineStyle.#ctor(System.Boolean)">
            <summary>
            Creates new instance of LineStyle class
            </summary>
            <param name="visible">Line visibility</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LineStyle.#ctor(System.Drawing.Color)">
            <summary>
            Creates new instance of LineStyle class
            </summary>
            <param name="color">Line color</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LineStyle.#ctor(System.Drawing.Color,System.Single)">
            <summary>
            Creates new instance of LineStyle class
            </summary>
            <param name="color">Line color</param>
            <param name="width">Line width</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LineStyle.#ctor(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle)">
            <summary>
            Creates new instance of LineStyle class
            </summary>
            <param name="color">Line color</param>
            <param name="width">Line width</param>
            <param name="penStyle">Line PenStyle</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LineStyle.#ctor(System.Drawing.Color,System.Single,System.Drawing.Drawing2D.DashStyle,System.Drawing.Drawing2D.LineCap)">
            <summary>
            Creates new instance of LineStyle class
            </summary>
            <param name="color">Line color</param>
            <param name="width">Line width</param>
            <param name="penStyle">Line PenStyle</param>
            <param name="endCap">Line end cap</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LineStyle.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LineStyle.Equals(System.Object)">
            <summary>
            Compare two objects
            </summary>
            <param name="obj">Object tot compare</param>
            <returns>Result of comparing</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LineStyle.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.LineStyle.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Object with the same fields as this one</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.LineStyle.EndCap">
            <summary>
            Specifies the end cap property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.LineStyle.StartCap">
            <summary>
            Specifies the start cap property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.LineStyle.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleLineSeries">
            <summary>
            Line series specific style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleLineSeries.tmpStyleLineSeriesColor">
            <summary>
            Line series color
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLineSeries.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLineSeries.Width">
            <summary>
            Gets or sets the width of the series line.
            </summary>
            <value>Width of line</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLineSeries.PenStyle">
            <summary>
            Gets or sets PenStyle of the series line
            </summary>
            <value>PenStyle of line</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLineSeries.IsEmptyLine">
            <summary>
            Checks if line belongs to StyleEmptyLineSeries class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLineSeries.Color">
            <summary>
            Gets or sets color of the series line
            </summary>
            <value>Color of line</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLineSeries.Visible">
            <summary>
            Line series visibility (same as Series.Visible)
            </summary>
            <value> Visibility of line</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleEmptyLineSeries">
            <summary>
            Empty Line series specific style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleEmptyLineSeries.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleEmptyLineSeries.Color">
            <summary>
            Gets or sets color of the series line
            </summary>
            <value>Color of line</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleEmptyLineSeries.PenStyle">
            <summary>
            Gets or sets PenStyle of the series line
            </summary>
            <value>PenStyle of line</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleSeriesBorder">
            <summary>
            Series border specific style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesBorder.#ctor(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Creates new instance of StyleSeriesBorder class.
            </summary>
            <param name="series">Series object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesBorder.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeriesBorder.PenStyle">
            <summary>
            Gets or sets PenStyle of the series border
            </summary>
            <value>PenStyle of line</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeriesBorder.Color">
            <summary>
            Gets or sets color of the series border
            </summary>
            <value>Color of line</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleTitleBorder">
            <summary>
            Title border specific style 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleLegendBorder">
            <summary>
            Legend border specific style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLegendBorder.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLegendBorder.Color">
            <summary>
            Gets and sets border color
            </summary>
            <value>Legend's border color</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleChartBorder">
            <summary>
            Chart border specific style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChartBorder.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChartBorder.Color">
            <summary>
            Gets and sets border color
            </summary>
            <value>Chart's border color</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleDataTableBorder">
            <summary>
            Data table's border specific style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleDataTableBorder.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleDataTableBorder.Color">
            <summary>
            Gets and sets border color
            </summary>
            <value>DataTable's border color</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleItemLabelConnector">
            <summary>
            Series item label connector line specific style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleItemLabelConnector.#ctor">
            <summary>
            Creates new instance of StyleItemLabelConnector class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleItemLabelConnector.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleItemLabelConnector.Color">
            <summary>
            Gets and sets item label connector's color
            </summary>
            <value>Item label connector'scolor</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ScaleBreaksLineStyle">
            <summary>
            Scale breaks line specific style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ScaleBreaksLineStyle.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ScaleBreaksLineStyle.Color">
            <summary>
            Gets and sets ScaleBreak's  color
            </summary>
            <value>ScaleBreak's color</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ChartMargins">
            <summary>
            Margins base class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMargins.#ctor(System.Object)">
            <summary>
            Creates new instance of ChartMargins class.
            </summary>
            <param name="containerObject">Container object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMargins.#ctor">
            <summary>
            Creates new instance of ChartMargins class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMargins.#ctor(System.Object,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit)">
            <summary>
            Creates new instance of ChartMargins class.
            </summary>
            <param name="containerObject">Container object</param>
            <param name="top">Top margin in pixels or percents</param>
            <param name="right">Right margin in pixels or percents</param>
            <param name="bottom">Bottom margin in pixels or percents</param>
            <param name="left">Left margin in pixels or percents</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMargins.#ctor(Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit)">
            <summary>
            Creates new instance of ChartMargins class.
            </summary>
            <param name="top">Top margin in pixels or percents</param>
            <param name="right">Right margin in pixels or percents</param>
            <param name="bottom">Bottom margin in pixels or percents</param>
            <param name="left">Left margin in pixels or percents</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMargins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new instance of ChartMargins class.
            </summary>
            <param name="top">Top margin in pixels</param>
            <param name="right">Right margin in pixels</param>
            <param name="bottom">Bottom margin in pixels</param>
            <param name="left">Left margin in pixels</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMargins.#ctor(Telerik.Reporting.Charting.Styles.Unit)">
            <summary>
            Creates new instance of ChartMargins class.
            </summary>
            <param name="margin">Value to set for all margins</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMargins.op_Implicit(System.String)~Telerik.Reporting.Charting.Styles.ChartMargins">
            <summary>
            Implicitly creates a new instance of ChartMargins from the specified string.
            </summary>
            <param name="value">The string to parse</param>
            <returns>New instance of ChartMargins from the specified string</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMargins.Parse(System.String)">
            <summary>
            Converts the specified string to an instance of ChartMargins.
            </summary>
            <param name="value">The string to convert from.</param>
            <returns>New instance of ChartMargins from the specified string</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMargins.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified string to an instance of ChartMargins.
            </summary>
            <param name="value">The string to convert from.</param>
            <param name="culture">Culture info</param>
            <returns>New instance of ChartMargins from the specified string</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ChartMarginsTitle">
            <summary>
            Title's margins
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMarginsTitle.#ctor">
            <summary>
            Creates new instance of ChartMarginsTitle class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMarginsTitle.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartMarginsTitle.Right">
            <summary>
            Sets the right margin in pixels or percent of the chart's width.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartMarginsTitle.Top">
            <summary>
            Sets the top margin in pixels or percent of the chart's height.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartMarginsTitle.Bottom">
            <summary>
            Sets the bottom margin in pixels or percent of the chart's height.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartMarginsTitle.Left">
            <summary>
            Sets the left margin in pixels or percent of the chart's width.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ChartMarginsPlotArea">
            <summary>
            Plot area's margins
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMarginsPlotArea.#ctor">
            <summary>
            Creates new instance of ChartMarginsPlotArea class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMarginsPlotArea.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartMarginsPlotArea.Left">
            <summary>
            Sets the left margin in pixels or percent of the chart's width.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartMarginsPlotArea.Right">
            <summary>
            Sets the right margin in pixels or percent of the chart's width.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartMarginsPlotArea.Top">
            <summary>
            Sets the top margin in pixels or percent of the chart's height.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartMarginsPlotArea.Bottom">
            <summary>
            Sets the bottom margin in pixels or percent of the chart's height.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ChartMarginsLegend">
            <summary>
            Legend's margins
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMarginsLegend.#ctor">
            <summary>
            Creates new instance of ChartMarginsLegend class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartMarginsLegend.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartMarginsLegend.Right">
            <summary>
            Sets the right margin in pixels or percent of the chart's width.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Orientation.Horizontal">
            <summary>
            Specifies a horizontal drawing
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Orientation.Vertical">
            <summary>
            Specifies a vertical drawing
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Orientation.Undefined">
            <summary>
            Not set
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Overflow.Auto">
            <summary>
            Full auto resizing by contents
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Overflow.Row">
            <summary>
            Horizontal auto resizing by contents
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Overflow.Column">
            <summary>
            Vertical auto resizing by contents
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Overflow.Manual">
            <summary>
            No auto resizing
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ChartPaddings">
            <summary>
            Base paddings class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartPaddings.#ctor(System.Object)">
            <summary>
            Creates new instance of ChartPaddings class.
            </summary>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartPaddings.#ctor">
            <summary>
            Creates new instance of ChartPaddings class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartPaddings.#ctor(System.Object,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit)">
            <summary>
            Creates new instance of ChartPaddings class.
            </summary>
            <param name="containerObject">Container object</param>
            <param name="top">Top padding in pixels or percents</param>
            <param name="right">Right padding in pixels or percents</param>
            <param name="bottom">Bottom padding in pixels or percents</param>
            <param name="left">Left padding in pixels or percents</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartPaddings.#ctor(Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit)">
            <summary>
            Creates new instance of ChartPaddings class.
            </summary>
            <param name="top">Top padding in pixels or percents</param>
            <param name="right">Right padding in pixels or percents</param>
            <param name="bottom">Bottom padding in pixels or percents</param>
            <param name="left">Left padding in pixels or percents</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartPaddings.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates new instance of ChartPaddings class.
            </summary>
            <param name="top">Top padding in pixels</param>
            <param name="right">Right padding in pixels</param>
            <param name="bottom">Bottom padding in pixels</param>
            <param name="left">Left padding in pixels</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartPaddings.#ctor(Telerik.Reporting.Charting.Styles.Unit)">
            <summary>
            Creates new instance of ChartPaddings class.
            </summary>
            <param name="margin">Value to set for all paddings</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartPaddings.op_Implicit(System.String)~Telerik.Reporting.Charting.Styles.ChartPaddings">
            <summary>
            Implicitly creates an instance of ChartPaddings class from the specified string.
            </summary>
            <param name="value">The string to parse</param>
            <returns>Instance of ChartPaddings class from the specified string</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartPaddings.Parse(System.String)">
            <summary>
            Converts the specified string to an instance of ChartPaddings class.
            </summary>
            <param name="value">The string to convert from.</param>
            <returns>Instance of ChartPaddings class from the specified string</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartPaddings.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified string to an instance of ChartPaddings class.
            </summary>
            <param name="value">The string to convert from.</param>
            <param name="culture">Culture info</param>
            <returns>Instance of ChartPaddings class from the specified string</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ChartPaddingsTitle">
            <summary>
            Chart title's paddings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartPaddingsTitle.#ctor">
            <summary>
            Creates new instance of ChartPaddingsTitle class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartPaddingsTitle.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartPaddingsTitle.Left">
            <summary>
            Specifies the left padding
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartPaddingsTitle.Right">
            <summary>
            Specifies the right padding
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartPaddingsTitle.Top">
            <summary>
            Specifies the top padding
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartPaddingsTitle.Bottom">
            <summary>
            Specifies the bottom padding
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ChartPaddingsLegend">
            <summary>
            Chart title's paddings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartPaddingsLegend.#ctor">
            <summary>
            Creates new instance of ChartPaddingsLegend class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartPaddingsLegend.Reset">
            <summary>
            Reset to default values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartPaddingsLegend.Top">
            <summary>
            Specifies the top padding
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartPaddingsLegend.Right">
            <summary>
            Specifies the right padding
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartPaddingsLegend.Bottom">
            <summary>
            Specifies the bottom padding
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartPaddingsLegend.Left">
            <summary>
            Specifies the left padding
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.CustomPalettesCollection">
            <summary>
            User-defined palettes collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomPalettesCollection.#ctor">
            <summary>
            Create new instance of CustomPalettesCollection class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomPalettesCollection.Contains(System.String)">
            <summary>
            Indicates whether the specified palette item exists in the collection.
            </summary>
            <param name="paletteName">Name of palette</param>
            <returns>Whether the specified palette item exists in the collection</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomPalettesCollection.IndexOf(System.String)">
            <summary>
            Returns the index of the specified palette item.
            </summary>
            <param name="paletteName">Name of palette</param>
            <returns>Index of the specified palette item</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomPalettesCollection.Remove(System.String)">
            <summary>
            Removes palette with specified name from collection
            </summary>
            <param name="paletteName">Name of palette</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomPalettesCollection.GetPalette(System.Int32)">
            <summary>
            Returns a reference to the Palette object at the specified index.
            </summary>
            <param name="index">Index to get palette</param>
            <returns>Palette at specified index</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.CustomPalettesCollection.GetPalette(System.String)">
            <summary>
            Returns a reference to the Palette object by the specified name.
            </summary>
            <param name="name">Name of palette</param>
            <returns>Palette object with specified name</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Palette">
            <summary>
            Series color palette. Used for an automatic series items colors assignment
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Palette.paletteItems">
            <summary>
            Palette items collection that palette contains
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Palette.#ctor">
            <summary>
            Create new instance of Palette class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Palette.#ctor(System.String)">
            <summary>
            Create new instance of Palette class.
            </summary>
            <param name="name">Name of palette</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Palette.#ctor(System.String,System.Drawing.Color[],System.Drawing.Color[])">
            <summary>
            Create new instance of Palette class.
            </summary>
            <param name="name">Name of palette</param>
            <param name="mainColors">Main colors of palette items</param>
            <param name="secondColors">Second colors of palette items</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Palette.#ctor(System.String,Telerik.Reporting.Charting.ColorBlend[])">
            <summary>
            Create new instance of Palette class.
            </summary>
            <param name="name">Name of Palette</param>
            <param name="addtionalColors">Additional colors of palette</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Palette.#ctor(System.String,System.Drawing.Color[],System.Boolean)">
            <summary>
            Create new instance of Palette class.
            </summary>
            <param name="name">Name </param>
            <param name="colors">Colors of items</param>
            <param name="twoColors">If true than second and main colors are equal</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Palette.FillItemsCollectionFromTwoArrays(System.Drawing.Color[],System.Drawing.Color[])">
            <summary>
            Fill items collection from two color arrays
            </summary>
            <param name="mainColors">Main colors of items</param>
            <param name="secondColors">Second color of items</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Palette.GetPaletteItem(System.Int32)">
            <summary>
            Gets palette item with specified index
            </summary>
            <param name="index">Index where palette item should be get</param>
            <returns>Palette item</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Palette.ToString">
            <summary>
            Gets string representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Palette.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance with the same fields as this one</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Palette.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Palette.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Palette.SaveViewState">
            <summary>
            Save data into ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Palette.Item(System.Int32)">
            <summary>
            Gets and sets Palette item at specified index
            </summary>
            <param name="index">Index to get palette item</param>
            <returns>Palette item at specified index</returns>
            <value>Palette item </value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Palette.Items">
            <summary>
            Gets Palette Items Collection
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Palette.Name">
            <summary>
            Specifies the palette name
            </summary>
            <value>Palette name</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.PaletteItem">
            <summary>
            Palette item
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.PaletteItem.paletteItemAdditionalColors">
            <summary>
            Defines arrays of colors and positions used for interpolating color blending
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.PaletteItem.#ctor">
            <summary>
            Create new instance of PaletteItem class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.PaletteItem.#ctor(Telerik.Reporting.Charting.ColorBlend)">
            <summary>
            Create new instance of PaletteItem class.
            </summary>
            <param name="additionalColors">Colors with positions</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.PaletteItem.#ctor(System.String,Telerik.Reporting.Charting.ColorBlend)">
            <summary>
             Create new instance of PaletteItem class.
            </summary>
            <param name="name">Name of item</param>
            <param name="additionalColors">Colors with positions</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.PaletteItem.#ctor(System.String,System.Drawing.Color,System.Drawing.Color)">
            <summary>
             Create new instance of PaletteItem class.
            </summary>
            <param name="name">Name of item</param>
            <param name="mainColor">Main color of item</param>
            <param name="secondColor">Second color of item</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.PaletteItem.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
             Create new instance of PaletteItem class.
            </summary>
            <param name="mainColor">Main color of item</param>
            <param name="secondColor">Second color of item</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.PaletteItem.Reset">
            <summary>
            Reset all settings to default
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.PaletteItem.ToString">
            <summary>
            Gets string representation
            </summary>
            <returns>String representation</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.PaletteItem.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.PaletteItem.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.PaletteItem.SaveViewState">
            <summary>
            Save data into ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.PaletteItem.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance with fields equal to these ones</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.PaletteItem.AdditionalColors">
            <summary>
            Defines arrays of colors and positions used for interpolating color blending
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.PaletteItem.MainColor">
            <summary>
            Specifies the main color for palette item
            </summary>
            <value>Main color of item</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.PaletteItem.SecondColor">
            <summary>
            Specifies the second color for palette item
            </summary>
            <value>Second color of item</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.PaletteItem.Name">
            <summary>
            Specifies the name for palette item
            </summary>
            <value>Name of item</value>
        </member>
        <member name="T:Telerik.Reporting.Charting.PaletteItemsCollection">
            <summary>
            Palette items collection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.PaletteItemsCollection.#ctor">
            <summary>
            Create new instance of PaletteItemsCollection class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.PaletteItemsCollection.GetItem(System.Int32)">
            <summary>
            Gets Palette item at specified index
            </summary>
            <param name="index">Index to get palette item</param>
            <returns>Palette item at specified index</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.PalettesCollection">
            <summary>
            Default palettes
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.PalettesCollection.Palettes">
            <summary>
            Default color palettes listing
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.PalettesCollection.#cctor">
            <summary>
            Creates object of PalettesCollection class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.PalettesCollection.GetPalette(System.String)">
            <summary>
            Returns default palette by name
            </summary>
            <param name="name">Name of palette</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.PalettesCollection.Contains(System.String)">
            <summary>
            Checks whether palette name exist in default palettes list
            </summary>
            <param name="name">Name of palette</param>
            <returns>Whether palette name exist in default palettes list or not</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.PalettesCollection.GetPalette(System.String,Telerik.Reporting.Charting.Chart)">
            <summary>
            Returns custom palette by name
            </summary>
            <param name="name">Name of palette</param>
            <param name="chart">Chart to get custom palettes</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.PlacementDirection">
            <summary>
            Direction of label position in auto mode
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.PlacementDirection.Horizontal">
            <summary>
            Horizontal label's direction
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.PlacementDirection.Vertical">
            <summary>
            Vertical label's direction
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.Position">
            <summary>
            Represents the element position in the container
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Position.positionGlobalX">
            <summary>
            Contains elements' calculated position X for speed optimization
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Position.positionGlobalY">
            <summary>
            Contains elements' calculated position Y for speed optimization
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Position.requireCalculation">
            <summary>
            Contains True if calculation of Positions is needed
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Position.positionCopy">
            <summary>
            Copy of positions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.ShouldSerializeX">
            <summary>
            Manages design-time serialization of X
            </summary>
            <returns>True if value should be serialized</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.ResetX">
            <summary>
            Reset X coordinate to default
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.ShouldSerializeY">
            <summary>
            Manages design-time serialization of Y
            </summary>
            <returns>True if value should be serialized</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.ResetY">
            <summary>
            Reset Y coordinate to default
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.#ctor(System.Object)">
            <summary>
            Creates an instance of Position class.
            </summary>
            <param name="container">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.#ctor">
            <summary>
            Creates an instance of Position class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.#ctor(System.Single,System.Single)">
            <summary>
            Creates an instance of Position class.
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.#ctor(Telerik.Reporting.Charting.Styles.AlignedPositions)">
            <summary>
            Creates an instance of Position class.
            </summary>
            <param name="position">Aligned position of element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.#ctor(Telerik.Reporting.Charting.Styles.AlignedPositions,System.Single,System.Single)">
            <summary>
            Creates an instance of Position class.
            </summary>
            <param name="position">Aligned position of element</param>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Position.positionContainerObject">
            <summary>
            Container element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.ResetGlobal">
            <summary>
            Resets the cached position
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.SetPositionForAutoLayout">
            <summary>
            Aligned Positions correction for AutoLayout
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current System.Object.
            </summary>
            <param name="obj">Object to compare</param>
            <returns>Result of comparing</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Position.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Position.IsTop">
            <summary>
            Defines if position is Top (Top, TopLeft, TopRight, None)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Position.IsBottom">
            <summary>
            Defines if position is Bottom (Bottom, BottomLeft, BottomRight)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Position.IsLeft">
            <summary>
            Defines if position is Left (Left, BottomLeft, TopLeft)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Position.IsRight">
            <summary>
            Defines if position is Right (Right, TopRight, BottomRight)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Position.IsNone">
            <summary>
            Defines if position is None
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Position.Copy">
            <summary>
            Gets and sets copy of positions
            </summary>
            <value>Positions to copy</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Position.Auto">
            <summary>
            Automatic positioning
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Position.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Position.X">
            <summary>
            Specifies the X coordinate of the figure position
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Position.Y">
            <summary>
            Specifies the Y coordinate of the figure position
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Position.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets value of property by name
            </summary>
            <param name="name">Property name</param>
            <returns>Object</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Position.GlobalX">
            <summary>
            Gets and sets X calculated position used for speed optimization
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Position.GlobalY">
            <summary>
            Gets and sets Y calculated position used for speed optimization
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Position.IsSetGlobal">
            <summary>
            Defines whether position coordinates were already calculated
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.PositionCenter">
            <summary>
            Specific Position object with predefined AlignedPosition.Center
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.PositionCenter.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.PositionCenter.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.PositionTop">
            <summary>
            Specific Position object with predefined AlignedPosition.Top
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.PositionTop.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.PositionTop.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.PositionBottom">
            <summary>
            Specific Position object with predefined AlignedPosition.Bottom
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.PositionBottom.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.PositionBottom.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.PositionTopLeft">
            <summary>
            Specific Position object with predefined AlignedPosition.TopLeft
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.PositionTopLeft.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.PositionTopLeft.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.PositionRight">
            <summary>
            Specific Position object with predefined AlignedPosition.Right
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.PositionRight.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.PositionRight.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.PositionTopRight">
            <summary>
            Specific Position object with predefined AlignedPosition.TopRight
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.PositionTopRight.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.PositionTopRight.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.PositionLeft">
            <summary>
            Specific Position object with predefined AlignedPosition.Left
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.PositionLeft.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.PositionLeft.AlignedPosition">
            <summary>
            Specifies aligned position in comprehensive figure
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.SkinnablePropertyAttribute">
            <summary>
            Represents the custom property attribute used to mark property as skinable and being used with a skin application
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.SkinnablePropertyAttribute.isSkinnable">
            <summary>
            Defines whether attribute is skinable
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.SkinnablePropertyAttribute.#ctor">
            <summary>
            Create new instance of SkinnablePropertyAttribute class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.SkinnablePropertyAttribute.IsSkinnable">
            <summary>
            Gets whether attribute is skinable
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSerializer.xmlDoc">
            <summary>
            XML document to save and load style data
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSerializer.processAll">
            <summary>
            Should serialize all properties or only that have skinable property attributes 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSerializer.SaveXMLString(System.Object)">
            <summary>
            Save specified object to XML
            </summary>
            <param name="styleContainer">Object which properties should be save to XML</param>
            <returns>Saved XML text</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSerializer.Serialize(System.Object)">
            <summary>
            Serialize properties to XML
            </summary>
            <param name="styleContainer">Object which properties should be save to XML</param>
            <returns>Elemnt created in XML</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSerializer.Serialize(System.Object,System.String)">
            <summary>
            Serialize properties to XML
            </summary>
            <param name="styleContainer">Object which properties should be save to XML</param>
            <param name="elementName">Name that created element in XML should have</param>
            <returns>Elemnt created in XML</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSerializer.SerializeProperty(System.ComponentModel.PropertyDescriptor,System.Xml.XmlElement,System.Object)">
            <summary>
            Serialize specified property to XML
            </summary>
            <param name="propDescriptor">Abstraction of property style</param>
            <param name="propElement">Parent element</param>
            <param name="styleContainer">Object which properties should be save to XML</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSerializer.SerializeComplexObject(System.ComponentModel.PropertyDescriptor,System.Xml.XmlElement,System.Object)">
            <summary>
            Serialize complex object
            </summary>
            <param name="propDescriptor">Abstraction of property style</param>
            <param name="propElement">Parent element</param>
            <param name="styleContainer">Object which properties should be save to XML</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSerializer.LoadXMLString(System.String,System.Object)">
            <summary>
            Load elements and properties from XML
            </summary>
            <param name="xmlString">String that contains XML representation of the object</param>
            <param name="styleContainer">Object which properties should be load from XML</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSerializer.Deserialize(System.Xml.XmlElement,System.Object)">
            <summary>
            Deserialize element from XML
            </summary>
            <param name="rootElement">Root element</param>
            <param name="styleContainer">Object which properties should be load from XML</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSerializer.DeserializeProperty(System.ComponentModel.PropertyDescriptor,System.Xml.XmlElement,System.Object)">
            <summary>
            Deserialize property from XML
            </summary>
            <param name="propDescriptor">Abstraction of property on a one of styles class</param>
            <param name="propElement">Property element that should be deserialized</param>
            <param name="styleContainer">Object which properties should be load from XML</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSerializer.DeserializeColorBlend(System.Xml.XmlElement,Telerik.Reporting.Charting.ColorBlend,System.Int32)">
            <summary>
            Deserialize element of ColorBlend type
            </summary>
            <param name="rootElement">Root element</param>
            <param name="colorBlend">ColorBlend object</param>
            <param name="index">High index limit for which deserialization should take place</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSerializer.IsDefaultValue(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Checks if property has default value
            </summary>
            <param name="propDescriptor">Abstraction of property on a one of styles class</param>
            <param name="styleContainer">Style container object</param>
            <returns>Whether property has default value or not</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSerializer.GetDefaultPropertyValue(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Gets the default value for specified property 
            </summary>
            <param name="propDescriptor">Abstraction of property on a one of styles class</param>
            <returns>Default value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSerializer.GetPropertyValue(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Gets the default value for specified property 
            </summary>
            <param name="propDescriptor">Abstraction of property on a one of styles class</param>
            <param name="styleContainer">Style container object</param>
            <returns>Default value</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSerializer.XmlDoc">
            <summary>
            Gets and sets XML document
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSerializer.ProcessAllProperties">
             <summary>
            Should serialize all properties or only that have skinable property attributes 
             </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ShadowStyle">
            <summary>
            Shadow settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowStyle.#ctor">
            <summary>
            Create new instance of ShadowStyle class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowStyle.#ctor(System.Drawing.Color,System.Single,System.Single,Telerik.Reporting.Charting.Styles.ShadowPosition)">
            <summary>
            Create new instance of ShadowStyle class.
            </summary>
            <param name="shadowColor">Shadow color</param>
            <param name="shadowBlur">Shadow blur</param>
            <param name="shadowDistance">Shadow distance</param>
            <param name="shadowPosition">Shadow position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowStyle.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowStyle.Equals(System.Object)">
            <summary>
            Comparing of two objects
            </summary>
            <param name="obj">Object to compare</param>
            <returns>Result of comparing</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowStyle.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowStyle.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>New instance with the same fields as this one</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShadowStyle.Color">
            <summary>
            Specifies the shadow color property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShadowStyle.ColorOpacity">
            <summary>
            The main color opacity coefficient
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShadowStyle.Position">
            <summary>
            Specifies the shadow position property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShadowStyle.Blur">
            <summary>
            Specifies the shadow blur property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShadowStyle.Distance">
            <summary>
            Specifies the shadow distance property
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ShadowStyleChart">
            <summary>
            Common shadow settings
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ShadowStyleChart.chart">
            <summary>
            Chart shadow related to
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowStyleChart.#ctor(Telerik.Reporting.Charting.Chart)">
            <summary>
            Create new instance of ShadowStyleChart class.
            </summary>
            <param name="parent">Parent chart element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowStyleChart.SetShadowBlur(System.Single)">
            <summary>
            Sets blur for all chart elements
            </summary>
            <param name="blur">Blur to set</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowStyleChart.SetShadowPosition(Telerik.Reporting.Charting.Styles.ShadowPosition)">
            <summary>
            Sets position for all chart elements
            </summary>
            <param name="position">Position to set</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowStyleChart.SetShadowDistance(System.Single)">
            <summary>
            Sets distance for all chart elements
            </summary>
            <param name="distance">Distance to set</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowStyleChart.SetShadowColor(System.Drawing.Color)">
            <summary>
            Sets color for all chart elements
            </summary>
            <param name="color">Color to set</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShadowStyleChart.Blur">
            <summary>
            Specifies the shadow blur property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShadowStyleChart.Color">
            <summary>
            Specifies the shadow color property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShadowStyleChart.Distance">
            <summary>
            Specifies the shadow distance property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ShadowStyleChart.Position">
            <summary>
            Specifies the shadow position property
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ShadowManager">
            <summary>
            Shadow rendering support class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowManager.DrawLineShadow(Telerik.Reporting.Charting.ChartGraphics,System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Single,Telerik.Reporting.Charting.Styles.ShadowPosition)">
            <summary>
            Draw shadow for line
            </summary>
            <param name="graphics">Chart graphics object</param>
            <param name="pen">Pen used for line shadow</param>
            <param name="points">Points that create line's path</param>
            <param name="lineType">Type of line(0-Line, 1-Bezier, 2-Spline)</param>
            <param name="lineWidth">Width of line</param>
            <param name="pa_width">PlotArea's width</param>
            <param name="pa_height">PlotArea's height</param>
            <param name="shadowDistance">Shadow's distance</param>
            <param name="shadowColor">Shadow's color</param>
            <param name="shadowBlur">Shadow's blur</param>
            <param name="shadowPosition">Shadow's position type</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowManager.DrawLineShadow(Telerik.Reporting.Charting.ChartGraphics,System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Single,Telerik.Reporting.Charting.Styles.ShadowPosition)">
            <summary>
            Draw shadow for line
            </summary>
            <param name="graphics">Chart graphics object</param>
            <param name="pen">Pen used for line shadow</param>
            <param name="path">Line's path</param>
            <param name="lineWidth">Line's width</param>
            <param name="pa_width">PlotArea's width</param>
            <param name="pa_height">PlotArea's height</param>
            <param name="shadowDistance">Shadow's distance</param>
            <param name="shadowColor">Shadow's color</param>
            <param name="shadowBlur">Shadow's blur</param>
            <param name="shadowPosition">Shadow's position type</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowManager.SetShadowPosition(Telerik.Reporting.Charting.Styles.ShadowPosition,System.Drawing.PointF,System.Single)">
            <summary>
            Set shadow start point position by shadowPosition parameter and shadowDistance 
            </summary>
            <param name="position">Shadow's position type</param>
            <param name="point">Calculated shadow position</param>
            <param name="shadowDistance">Shadow's distance</param>
            <returns>Corrected shadow position depended on distance and position type</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowManager.DrawPolygonShadow(Telerik.Reporting.Charting.ChartSeries,System.Drawing.Drawing2D.GraphicsPath,Telerik.Reporting.Charting.ChartGraphics,System.Int32,System.Int32)">
            <summary>
            Draws shadow for polygon
            </summary>
            <param name="chartSeries">ChartSeries that contains shadow style</param>
            <param name="grPath">Garphics path of polygon</param>
            <param name="graphic">ChartGraphics object</param>
            <param name="width">PlotArea's width</param>
            <param name="height">PlotArea's height</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowManager.DrawPolygonShadow(Telerik.Reporting.Charting.ChartSeries,System.Drawing.PointF[],Telerik.Reporting.Charting.ChartGraphics,System.Int32,System.Int32)">
            <summary>
            Draw shadow for polygon
            </summary>
            <param name="chartSeries">ChartSeries that contains shadow style</param>
            <param name="points">Points that form polygon</param>
            <param name="graphic">ChartGraphics object</param>
            <param name="width">PlotArea's width</param>
            <param name="height">PlotArea's height</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowManager.DrawPolygonShadow(System.Drawing.Drawing2D.GraphicsPath,Telerik.Reporting.Charting.ChartGraphics,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Single,Telerik.Reporting.Charting.Styles.ShadowPosition)">
            <summary>
            Draw shadow for polygon
            </summary>
            <param name="grPath">Garphics path of polygon</param>
            <param name="graphic">ChartGraphics object</param>
            <param name="width">PlotArea's width</param>
            <param name="height">PlotArea's height</param>
            <param name="shadowDistance">Shadow's distance</param>
            <param name="shadowColor">Shadow's color</param>
            <param name="shadowBlur">Shadow's blur</param>
            <param name="shadowPosition">Shadow's position type</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowManager.DrawPolygonShadow(System.Drawing.PointF[],Telerik.Reporting.Charting.ChartGraphics,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Single,Telerik.Reporting.Charting.Styles.ShadowPosition)">
            <summary>
            Draw shadow for polygon
            </summary>
            <param name="points">Points that form polygon</param>
            <param name="graphic">ChartGraphics object</param>
            <param name="width">PlotArea's width</param>
            <param name="height">PlotArea's height</param>
            <param name="shadowDistance">Shadow's distance</param>
            <param name="shadowColor">Shadow's color</param>
            <param name="shadowBlur">Shadow's blur</param>
            <param name="shadowPosition">Shadow's position type</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowManager.DrawShadow(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Brush,System.Drawing.Pen,System.Single,System.Single,System.Drawing.Size,Telerik.Reporting.Charting.Styles.DrawType)">
            <summary>
            Method creates shadow for path, based on shadow parameters and Gaussian blur logic for render shadow
            </summary>
            <param name="Path">Path, that describe a figure</param>
            <param name="Brush">Brush, that used for drawing a shadow (define shadow color and transparency)</param>
            <param name="Pen">Pen, that used for drawing a shadow</param>
            <param name="Distance">Distance from object to it shadow</param>
            <param name="BlurCoef">Blur coefficient</param>
            <param name="ShadowImageSize">Size for image, that contain shadow</param>
            <param name="DrawType">Draw figure type</param>
            <returns>Image that contains shadow with blur</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowManager.GetArrayFromImageManaged(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Creates pixels array from image using managed code
            </summary>
            <param name="source">Source bitmap to get pixels</param>
            <param name="wi">Weight of bitmap</param>
            <param name="hi">Height of bitmap</param>
            <returns>Pixels colors</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.Styles.ShadowManager.GetArrayFromImageUnManaged(System.Drawing.Imaging.BitmapData,System.Int32,System.Int32)" -->
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowManager.UpdateImageFromArrayManaged(System.Drawing.Bitmap,Telerik.Reporting.Charting.Styles.BColor[][],System.Drawing.Rectangle,Telerik.Reporting.Charting.Styles.BColor[],System.Int32,System.Int32)">
            <summary>
            Updates image from pixels array using managed code
            </summary>
            <param name="source">Source bitmap to get pixels</param>
            <param name="src">Pixels colors</param>
            <param name="dst">Pixels colors as one-dimensioned array</param>
            <param name="srcWidth">Weight of bitmap</param>
            <param name="srcHeight">Height of bitmap</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowManager.UpdateImageFromArrayUnManaged(System.Drawing.Bitmap,Telerik.Reporting.Charting.Styles.BColor[][],System.Drawing.Rectangle,Telerik.Reporting.Charting.Styles.BColor[],System.Int32,System.Int32,System.Drawing.Imaging.BitmapData)">
            <summary>
            Updates image from pixels array using unmanaged code
            </summary>
            <param name="source">Source bitmap to get pixels</param>
            <param name="src">Pixels colors</param>
            <param name="top">Blur top point</param>
            <param name="height">Blur height</param>
            <param name="left">Blur left point</param>
            <param name="width">Blur width</param>
            <param name="dst">Pixels colors as one-dimensioned array</param>
            <param name="srcWidth">Weight of bitmap</param>
            <param name="srcHeight">Height of bitmap</param>
            <param name="bmpData">Data about bitmap locked in memory</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowManager.BlurUnmanaged(System.Drawing.Bitmap,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Gaussian blur algorithm for bitmap image
            </summary>
            <param name="source">Image, that can be degraded</param>
            <param name="blurCoefficient">Blur coefficient</param>
            <returns>Degraded bitmap</returns>
            <param name="rect">Blur rectangle</param>
            <returns>Blur image</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowManager.GBlurRow(System.Int32)">
            <summary>
            Support function for blur, generate one dimensional array with coefficients
            </summary>
            <param name="count">Blur coefficient</param>
            <returns>Array with blur coefficients</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ShadowManager.SetMatrix(System.Drawing.Bitmap,Telerik.Reporting.Charting.Styles.BColor[][],System.Int32,System.Int32,System.Int32,System.Int32,Telerik.Reporting.Charting.Styles.BColor[],System.Int32,System.Int32)">
            <summary>
            Sets pixels colors to image
            </summary>
            <param name="source">Image to set pixels colors</param>
            <param name="src">Pixels colors as two-dimensioned array</param>
            <param name="top">Blur top point</param>
            <param name="height">Blur height</param>
            <param name="left">Blur left point</param>
            <param name="width">Blur width</param>
            <param name="dst">Pixels colors as one-dimensioned array</param>
            <param name="srcWidth">Image width</param>
            <param name="srcHeight">Image height</param>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.DrawType">
            <summary>
            Types for drawing figures
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.DrawType.Line">
            <summary>
            Only lines
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.DrawType.Fill">
            <summary>
            Only fills
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.DrawType.LineAndFill">
            <summary>
            Lines and fills
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.BColor">
            <summary>
            Describe a 4-byte color and functionality that works with color and byte arrays
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.BColor.R">
            <summary>
            Red channel
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.BColor.G">
            <summary>
            Green channel
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.BColor.B">
            <summary>
            Blue channel
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.BColor.A">
            <summary>
            Alpha (transparency) channel
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.BColor.CreateInstance(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Create new instance of BColor class 
            </summary>
            <param name="r">Red component</param>
            <param name="g">Green component</param>
            <param name="b">Blue component</param>
            <param name="a">Transparency channel</param>
            <returns>New instance of BColor class </returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.BColor.CreateInstance">
            <summary>
            Create new instance of BColor class 
            </summary>
            <returns>New instance of BColor class </returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.BColor.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Create new instance of BColor class 
            </summary>
            <param name="r">Red channel value</param>
            <param name="g">Green channel value</param>
            <param name="b">Blue channel value</param>
            <param name="a">Alpha (transparency) channel value</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.BColor.ToString">
            <summary>
            Convert BColor object to string representation
            </summary>
            <returns>String</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.BColor.GetMatrix(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Get pixels colors from image
            </summary>
            <param name="source">Iamge to get pixels</param>
            <param name="width">Width of image</param>
            <param name="height">Height of image</param>
            <returns>Pixels colors from image</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.BColor.GetMatrix(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Transform one dimensional byte array to two dimensional BColor array, that describe the image 
            </summary>
            <param name="bytes">Array of 4 channel image bytes</param>
            <param name="width">Image width</param>
            <param name="height">Image height</param>
            <returns>Two dimensional BColor array, that describe the image</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.BColor.GetRectAsLine(Telerik.Reporting.Charting.Styles.BColor[][],System.Drawing.Rectangle)">
            <summary>
            Convert two-dimensioned array of pixels colors to one-dimensioned array
            </summary>
            <param name="src">Two-dimensioned array of pixels colors</param>
            <returns>One-dimensioned array of pixels colors</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.BColor.GetAsLine(Telerik.Reporting.Charting.Styles.BColor[][],System.Drawing.Rectangle,Telerik.Reporting.Charting.Styles.BColor[],System.Int32,System.Int32)">
            <summary>
            Pixels colors represented as one-dimensioned array each four elements of it contain information about pixel color(r,g,b,a)
            </summary>
            <param name="src">Two-dimensioned array of pixels colors</param>
            <param name="top">Top</param>
            <param name="height">Height</param>
            <param name="left">Left</param>
            <param name="width">Width</param>
            <param name="dst">Pixels colors as one-dimensioned array</param>
            <param name="srcWidth">Image height</param>
            <param name="srcHeight">Image width</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ShadowPosition">
            <summary>
            Possible shadow positions listing
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ShadowPosition.Right">
            <summary>
            Assign the right position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ShadowPosition.Left">
            <summary>
            Assign the left position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ShadowPosition.Top">
            <summary>
            Assign the top position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ShadowPosition.Bottom">
            <summary>
            Assign the bottom position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ShadowPosition.TopRight">
            <summary>
            Assign the  top right position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ShadowPosition.TopLeft">
            <summary>
            Assign the top  left position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ShadowPosition.BottomRight">
            <summary>
            Assign the bottom right position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ShadowPosition.BottomLeft">
            <summary>
            Assign the bottom left position for shadow
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ShadowPosition.Behind">
            <summary>
            Assign the behind position for shadow
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ChartSkin">
            <summary>
            Chart skin
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartSkin.skinName">
            <summary>
            Skin name
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartSkin.skinXmlSource">
            <summary>
            XML document that contains skin properties.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartSkin.#ctor">
            <summary>
            Create new instance of ChartSkin class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartSkin.#ctor(System.String)">
            <summary>
            Create new instance of ChartSkin class with specified name.
            </summary>
            <param name="name">Name of skin.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartSkin.#ctor(System.Xml.XmlDocument)">
            <summary>
            Create new instance of ChartSkin class.
            </summary>
            <param name="source">XML document that contains skin properties.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartSkin.IsEmpty(System.String)">
            <summary>
            Checks if skin is not specified for chart.
            </summary>
            <param name="name">Skin name</param>
            <returns>Whether skin is not specified for chart or not</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartSkin.ApplyTo(Telerik.Reporting.Charting.Chart)">
            <summary>
            Applies skin to given chart
            </summary>
            <param name="chart">Chart to apply skin</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ChartSkin.CreateFromChart(Telerik.Reporting.Charting.Chart,System.String)">
            <summary>
            Grabs skin from given chart
            </summary>
            <param name="chart">Chart to get skin</param>
            <param name="name">Skin name</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartSkin.Name">
            <summary>
            Gets and sets skin name.
            </summary>
            <value>Name of skin</value>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.ChartSkin.XmlSource">
            <summary>
            Gets and sets XML document that contains skin properties.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.Skins.ChartSkinsCollection">
            <summary>
            Chart skins collection
            </summary>
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Skins.ChartSkinsCollection.skinNames">
            <summary>
            Skins listing. New skin name should be added here
            </summary>      
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Skins.ChartSkinsCollection.resourceManager">
            <summary>
            Resource that holds skins.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Skins.ChartSkinsCollection.GetNames">
            <summary>
            Gets the names of the skins in the collection.
            </summary>
            <returns>Names of skins in collection.</returns>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Skins.ChartSkinsCollection.resourceMan">
            <summary>
            Resource manager.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Skins.ChartSkinsCollection.resourceCulture">
            <summary>
            Provides information about resource.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Skins.ChartSkinsCollection.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Skins.ChartSkinsCollection.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.Skins.Images">
            <summary>
            Embedded background images for skins.
            </summary>
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Skins.Images.GetImageFromResource(System.String,System.String)">
            <summary>
            Get image with specified name of specified skin.
            </summary>
            <param name="name">Name of image.</param>
            <param name="skinName">Skin name.</param>
            <returns>Image from resource</returns>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Skins.Images.resourceMan">
            <summary>
            Resource manager.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Skins.Images.resourceCulture">
            <summary>
            Provides information about resource.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Skins.Images.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Skins.Images.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Skins.Images.chartInox">
            <summary>
            Chart background image of Inox skin.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Skins.Images.chartMac">
            <summary>
            Chart background image of Mac skin.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Skins.Images.chartMarble">
            <summary>
            Chart background image of Marble skin.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Skins.Images.chartMetal">
            <summary>
            Chart background image of Metal skin.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Skins.Images.chartWood">
            <summary>
            Chart background image of Wood skin.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Skins.Images.plotareaInox">
            <summary>
            PlotArea background image of Inox skin.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Skins.Images.plotareaMarble">
            <summary>
            PlotArea background image of Marble skin.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Skins.Images.plotareaMetal">
            <summary>
            PlotArea background image of Metal skin.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleProperties">
            <summary>
            Possible style properties
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleAxis">
            <summary>
            Axis appearance
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleAxis.styleAxisOrientation">
            <summary>
            Specifies the orientation property
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleAxis.styleAxisLabelAppearance">
            <summary>
            Default style for axis label
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleAxis.styleAxisTextAppearance">
            <summary>
            Default axis items text properties style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleAxis.styleAxisMinorTick">
            <summary>
            Axis minor ticks style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleAxis.styleAxisMajorTick">
             <summary>
            Axis major ticks style
             </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleAxis.styleAxisMajorGridLines">
            <summary>
            Major Grid Lines options
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleAxis.styleAxisMinorGridLines">
            <summary>
            Minor Grid Lines options
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxis.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxis.#ctor(Telerik.Reporting.Charting.ChartAxis)">
            <summary>
            Creates new instance of StyleAxis class
            </summary>
            <param name="axis">Axis related to</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxis.#ctor">
            <summary>
            Creates new instance of StyleAxis class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxis.#ctor(Telerik.Reporting.Charting.Styles.Orientation)">
            <summary>
            Creates new instance of StyleAxis class
            </summary>
            <param name="orientation">Axis orientation</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxis.#ctor(Telerik.Reporting.Charting.Styles.Orientation,Telerik.Reporting.Charting.ChartAxis)">
            <summary>
            Creates new instance of StyleAxis class
            </summary>
            <param name="orientation">Axis orientation</param>
            <param name="axis">Axis related to</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxis.#ctor(Telerik.Reporting.Charting.Styles.Orientation,Telerik.Reporting.Charting.Styles.ChartAxisVisibility)">
            <summary>
            Creates new instance of StyleAxis class
            </summary>
            <param name="orientation">Axis orientation</param>
            <param name="visibility">Visibility of axis</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxis.#ctor(Telerik.Reporting.Charting.Styles.Orientation,Telerik.Reporting.Charting.Styles.ChartAxisVisibility,Telerik.Reporting.Charting.ChartAxis)">
            <summary>
            Creates new instance of StyleAxis class
            </summary>
            <param name="orientation">Axis orientation</param>
            <param name="visibility">Visibility of axis</param>
            <param name="axis">Axis orientation</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxis.#ctor(Telerik.Reporting.Charting.Styles.Orientation,Telerik.Reporting.Charting.Styles.ChartAxisVisibility,Telerik.Reporting.Charting.Styles.LineStyle)">
            <summary>
            Creates new instance of StyleAxis class
            </summary>
            <param name="orientation">Axis orientation</param>
            <param name="visibility">Visisbility of axis</param>
            <param name="lineStyle">Line style of axis</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxis.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxis.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxis.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState 
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxis.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxis.MajorGridLines">
            <summary>
            Major Grid Lines options
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxis.MinorGridLines">
            <summary>
            Minor Grid Lines options
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxis.Orientation">
            <summary>
            Specifies the orientation property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxis.Color">
            <summary>
            Color of Axis
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxis.Visible">
            <summary>
            Specifies the axis visibility option
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxis.ValueFormat">
            <summary>
            Specifies a predefined numerical format string.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxis.LabelAppearance">
            <summary>
            Default style for all axis items
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxis.MinorTick">
            <summary>
            ChartAxis minor ticks style
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxis.MajorTick">
            <summary>
            ChartAxis major ticks style
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxis.CustomFormat">
            <summary>
            Specifies a custom numerical format string.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxis.Width">
            <summary>
            Specifies the width of the axis.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxis.TextAppearance">
            <summary>
            Common axis items labels text blocks settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxis.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleAxisY">
            <summary>
            Y axis specific style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxisY.#ctor(Telerik.Reporting.Charting.ChartYAxis)">
            <summary>
            Creates new instance of StyleAxisY class
            </summary>
            <param name="axis">Axis related to</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxisY.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxisY.Orientation">
            <summary>
            Specifies the orientation property
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleAxisX">
            <summary>
            X axis specific style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxisX.#ctor(Telerik.Reporting.Charting.ChartXAxis)">
            <summary>
            Creates new instance of StyleAxisX class
            </summary>
            <param name="axis">Axis related to</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxisX.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxisX.MinorTick">
            <summary>
            Specifies minor ticks options
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxisX.MinorGridLines">
            <summary>
            Specifies major ticks options
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleAxisX.Orientation">
            <summary>
            Specifies the orientation property
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.TextQuality">
            <summary>
            Specifies the quality at which text is rendered.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.TextQuality.SystemDefault">
            <summary>
            Specifies that each character is drawn using its glyph bitmap, with the system default rendering hint. The text will be drawn using whatever font smoothing settings the user has selected for the system.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.TextQuality.SingleBitPerPixel">
            <summary>
            Specifies that each character is drawn using its glyph bitmap. Hinting is not used.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.TextQuality.SingleBitPerPixelGridFit">
            <summary>
            Specifies that each character is drawn using its glyph bitmap. Hinting is used to improve character appearance on stems and curvature.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.TextQuality.AntiAlias">
            <summary>
            Specifies that each character is drawn using its anti aliased glyph bitmap without hinting. Better quality due to anti aliasing. Stem width differences may be noticeable because hinting is turned off.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.TextQuality.AntiAliasGridFit">
            <summary>
            Specifies that each character is drawn using its anti aliased glyph bitmap with hinting. Much better quality due to anti aliasing, but at a higher performance cost.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.TextQuality.ClearTypeGridFit">
            <summary>
            Specifies that each character is drawn using its glyph CT bitmap with hinting. The highest quality setting. Used to take advantage of ClearType font features.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ImageQuality">
            <summary>
            Specifies the quality at which image is rendered.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageQuality.Default">
            <summary>
            Specifies the default mode.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageQuality.AntiAlias">
            <summary>
            Specifies anti aliased rendering.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageQuality.HighQuality">
            <summary>
            Specifies high quality, low speed rendering.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ImageQuality.None">
            <summary>
            Specifies no anti aliasing.
            </summary>        
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleChart">
            <summary>
            Main chart appearance settings
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleChart.styleChartCorners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleChart.styleChartFillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChart.#ctor(Telerik.Reporting.Charting.Chart)">
            <summary>
            Creates new instance of StyleChart class.
            </summary>
            <param name="chart">Chart related to.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChart.#ctor(Telerik.Reporting.Charting.Styles.DimensionsChart,Telerik.Reporting.Charting.Styles.FillStyleChart,Telerik.Reporting.Charting.Styles.Corners,Telerik.Reporting.Charting.Styles.StyleBorder,Telerik.Reporting.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates new instance of StyleChart class.
            </summary>
            <param name="dimensions">Chart dimensions</param>
            <param name="fillStyle">FillStyle of chart</param>
            <param name="corners">Corners of chart</param>
            <param name="border">Chart border style</param>
            <param name="shadowStyle">Chart shadow style</param>
            <param name="visible">Visibility of chart</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChart.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChart.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChart.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChart.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChart.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewSatate with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChart.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChart.BarWidthPercent">
            <summary>
            Determines the width of bars.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChart.BarOverlapPercent">
            <summary>
            Determines how much of the bar's area is overlapped in multiple bar charts.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChart.TextQuality">
            <summary>
            Specifies the quality at which text in chart is rendered.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChart.ImageQuality">
            <summary>
            Specifies the quality at which chart image is rendered.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChart.Corners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChart.FillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChart.Figure">
            <summary>
            Specifies the figure property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChart.Visible">
            <summary>
            Gets visibility of chart
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChart.Position">
            <summary>
            Gets positions
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChart.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleChartDataTable">
            <summary>
            DataTable appearance settings
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleChartDataTable.styleChartDataTableFillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleChartDataTable.styleChartDataTableTextProperties">
            <summary>
            Specifies the text properties
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleChartDataTable.styleChartDataTableCorners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleChartDataTable.styleChartDataTableParent">
            <summary>
            Style parent object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChartDataTable.#ctor">
            <summary>
            Creates a new instance of StyleChartDataTable class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChartDataTable.#ctor(Telerik.Reporting.Charting.ChartDataTable)">
            <summary>
            Creates a new instance of StyleChartDataTable class.
            </summary>
            <param name="parent">Parent element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChartDataTable.#ctor(Telerik.Reporting.Charting.Styles.Dimensions,Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Position,Telerik.Reporting.Charting.Styles.TextProperties,Telerik.Reporting.Charting.Styles.StyleBorder,Telerik.Reporting.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates a new instance of StyleChartDataTable class.
            </summary>
            <param name="dimensions">DataTable's dimensions</param>
            <param name="fillStyle">DataTable's fillStyle</param>
            <param name="position">DataTable's position</param>
            <param name="textProperties">DataTable's textProperties</param>
            <param name="border">DataTable's border</param>
            <param name="shadowStyle">DataTable's shadowStyle</param>
            <param name="visible">DataTable's visiblity</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChartDataTable.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChartDataTable.SaveDimensions">
            <summary>
            Save DataTable's dimensions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChartDataTable.SetAutoLayoutDefaults">
            <summary>
            Save DataTable's dimensions and positions for auto layout
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChartDataTable.RestoreDimensions">
            <summary>
            Restore dimensions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChartDataTable.RestoreInitialValues">
            <summary>
            Restore margins
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChartDataTable.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChartDataTable.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChartDataTable.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleChartDataTable.SaveViewState">
            <summary>
            Saved data to ViewState
            </summary>
            <returns>saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChartDataTable.Visible">
            <summary>
            Specifies DataTable visibility
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChartDataTable.CellWidth">
            <summary>
            Specifies data table cell width
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChartDataTable.CellHeight">
            <summary>
            Specifies data table cell height
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChartDataTable.RenderType">
            <summary>
            Specifies data table rendering type
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChartDataTable.DrawHorizontalLines">
            <summary>
            Should horizontal lines be rendered
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChartDataTable.DrawVerticalLines">
            <summary>
            Should vertical lines be rendered
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChartDataTable.DrawLines">
            <summary>
            Hide/show all lines
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChartDataTable.TextVerticalAlign">
            <summary>
            Specifies text vertical alignment
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChartDataTable.TextHorizontalAlign">
            <summary>
            Specifies text horizontal alignment
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChartDataTable.Figure">
            <summary>
            Specifies the figure property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChartDataTable.FillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChartDataTable.AutoTextWrap">
            <summary>
            Specifies text wrap property for texts in Data Table
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleChartDataTable.TextProperties">
            <summary>
            Specifies the text properties
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ChartGridLineLayoutMode">
            <summary>
            Specifies RadChart's styles for the grid lines layout.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartGridLineLayoutMode.Normal">
            <summary>
            Sets normal grid lines.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.ChartGridLineLayoutMode.Expanded">
            <summary>
            Sets expanded grid lines.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleGridLine">
            <summary>
            Grid line specific style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleGridLine.ShouldRender(System.Boolean)">
            <summary>
            Checks whether grid line be rendered or not
            </summary>
            <param name="axisVisible"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleGridLine.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleGridLine.HideWithAxis">
            <summary>
            Should grid lines be hidden with axis or not
            </summary>
            <remarks>Default value is true</remarks>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleGridLine.Width">
            <summary>
            Gets or sets the width of the grid line.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleGridLine.PenStyle">
            <summary>
            Specifies the pen style used for grid lines' drawing.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleGridLine.Color">
            <summary>
            Specifies the color of the grid lines.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleGridLineHidden.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleGridLineHidden.Visible">
            <summary>
            Gets and sets grid lines' visibility
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleGridLineMajor.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleGridLineMajorXAxis.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleGridLineMajorXAxis.PenStyle">
            <summary>
            Specifies the pen style used for grid lines' drawing.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleLabel">
            <summary>
            Base label appearance style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleLabel.styleLabelCorners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleLabel.styleLabelFillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleLabel.styleLabelIsSet">
            <summary>
            Specifies that style has container object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.#ctor(System.Object)">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
            <param name="containerObject">Style container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.#ctor">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.#ctor(Telerik.Reporting.Charting.Styles.FillStyle)">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
            <param name="fillStyle">FillStyle of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.#ctor(Telerik.Reporting.Charting.Styles.Position)">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
            <param name="position">Label's position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.#ctor(Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Position)">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
            <param name="fillStyle">FillStyle of label</param>
            <param name="position">Label's position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.#ctor(Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Position,Telerik.Reporting.Charting.Styles.Dimensions)">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
            <param name="fillStyle">FillStyle of label</param>
            <param name="position">Label's position</param>
            <param name="dimensions">Label's dimensions</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.#ctor(Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Corners,Telerik.Reporting.Charting.Styles.Position,Telerik.Reporting.Charting.Styles.Dimensions)">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
            <param name="fillStyle">FillStyle of label</param>
            <param name="corners">Corners of label</param>
            <param name="position">Label's position</param>
            <param name="dimensions">Label's dimensions</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.#ctor(Telerik.Reporting.Charting.Styles.LabelItemsCompositionTypes,Telerik.Reporting.Charting.Styles.Dimensions,System.String,Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Position,System.Single,Telerik.Reporting.Charting.Styles.Corners,Telerik.Reporting.Charting.Styles.StyleBorder,Telerik.Reporting.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates new instance of StyleLabel class.
            </summary>
            <param name="compositionType">CompositionType to specify textblock and marker positions</param>
            <param name="dimensions">Label's dimensions</param>
            <param name="figure">Label's figure</param>
            <param name="fillStyle">FillStyle of label</param>
            <param name="position">Label's position</param>
            <param name="rotationAngle">Rotation angle</param>
            <param name="corners">Corners of label</param>
            <param name="border">Label's border</param>
            <param name="shadowStyle">Shadow style of label</param>
            <param name="visible">Label's visibility</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.SaveDimensions">
            <summary>
            Copy dimensions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.RestoreDimensions">
            <summary>
            Restore saved dimensions value
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.RestoreInitialValues">
            <summary>
            Restore margins initial value
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.SetAutoLayoutDefaults">
            <summary>
            Save dimensions and positions for autolayout
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabel.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLabel.Corners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLabel.FillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLabel.Figure">
            <summary>
            Specifies the figure property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLabel.RotationAngle">
            <summary>
            Specifies the rotation angle property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLabel.CompositionType">
            <summary>
            Specifies the label's items composition type
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLabel.Visible">
            <summary>
            Specifies tha label's visibility
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLabel.IsSet">
            <summary>
            Specifies that style has container object
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLabel.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Property value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelHidden.#ctor(System.Object)">
            <summary>
            Creates new instance of StyleLabelHidden class.
            </summary>
            <param name="containerObject">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelHidden.#ctor">
            <summary>
            Creates new instance of StyleLabelHidden class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelHidden.#ctor(Telerik.Reporting.Charting.Styles.FillStyle)">
            <summary>
            Creates new instance of StyleLabelHidden class.
            </summary>
            <param name="fillStyle">FillStyle of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelHidden.#ctor(Telerik.Reporting.Charting.Styles.Position)">
            <summary>
            Creates new instance of StyleLabelHidden class.
            </summary>
            <param name="position">Label's position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelHidden.#ctor(Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Position)">
            <summary>
            Creates new instance of StyleLabelHidden class.
            </summary>
            <param name="fillStyle">FillStyle of label</param>
            <param name="position">Label's position</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelHidden.#ctor(Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Position,Telerik.Reporting.Charting.Styles.Dimensions)">
            <summary>
            Creates new instance of StyleLabelHidden class.
            </summary>
            <param name="fillStyle">FillStyle of label</param>
            <param name="position">Label's position</param>
            <param name="dimensions">Label's dimensions</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelHidden.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLabelHidden.Visible">
            <summary>
            Specifies tha label's visibility
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.styleExtendedLabelItemAppearance">
            <summary>
            Specifies label item's style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.styleExtendedLabelItemMarkerAppearance">
            <summary>
            Specifies label item's marker's style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.styleExtendedLabelItemTextAppearance">
            <summary>
            Specifies label item's textblock's style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.#ctor(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Creates new instance of StyleExtendedLabel class 
            </summary>
            <param name="series">Container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.#ctor">
            <summary>
            Creates new instance of StyleExtendedLabel class 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.#ctor(Telerik.Reporting.Charting.Styles.FillStyle)">
            <summary>
            Creates new instance of StyleExtendedLabel class 
            </summary>
            <param name="fillStyle">FillStyle of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.#ctor(Telerik.Reporting.Charting.Styles.Position)">
            <summary>
            Creates new instance of StyleExtendedLabel class 
            </summary>
            <param name="position">Position of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.#ctor(Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Position)">
            <summary>
            Creates new instance of StyleExtendedLabel class 
            </summary>
            <param name="fillStyle">FillStyle of label</param>
            <param name="position">Position of label</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.#ctor(Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Position,Telerik.Reporting.Charting.Styles.Dimensions)">
            <summary>
            Creates new instance of StyleExtendedLabel class 
            </summary>
            <param name="fillStyle">FillStyle of label</param>
            <param name="position">Position of label</param>
            <param name="dimensions">Label's dimensions</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.#ctor(Telerik.Reporting.Charting.Styles.LabelItemsCompositionTypes,Telerik.Reporting.Charting.Styles.Dimensions,System.String,Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Overflow,Telerik.Reporting.Charting.Styles.Position,System.Single,Telerik.Reporting.Charting.Styles.Corners,Telerik.Reporting.Charting.Styles.StyleBorder,Telerik.Reporting.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates new instance of StyleExtendedLabel class 
            </summary>
            <param name="compositionType">Composition type of label items</param>
            <param name="dimensions">Label's dimensions</param>
            <param name="figure">Label's figure</param>
            <param name="fillStyle">Label's fillstyle settings</param>
            <param name="overflow">Layout of label items</param>
            <param name="position">Label's position</param>
            <param name="rotationAngle">Label's rotation angle</param>
            <param name="corners">Label's corners</param>
            <param name="border">Label's border</param>
            <param name="shadowStyle">Label's shadow style</param>
            <param name="visible">Label's visibility</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.Reset">
            <summary>
            Dispose object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.Location">
            <summary>
            Specifies label location (InsidePlotArea, OutsidePlotArea)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.ItemAppearance">
            <summary>
            Specifies item label's style
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.ItemTextAppearance">
            <summary>
            Specifies item label's text's style
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.ItemMarkerAppearance">
            <summary>
            Specifies item label's marker's style
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.Overflow">
            <summary>
            Specifies the behavior when overflow occurred
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleExtendedLabel.GroupNameFormat">
            <summary>
            Specifies the series names format shown in Legend when data grouping being used and names are digits.
            </summary>
            <remarks>Supported format strings as "#VALUE" / "#NAME"</remarks>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel">
            <summary>
            Series item appearance style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.styleSeriesItemLabelLabelConnectorStyle">
            <summary>
            Style of connector line
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.styleSeriesItemLabelIsSet">
            <summary>
            Specifies that style has container object
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.#ctor">
            <summary>
            Creates new instance of StyleSeriesItemLabel class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.#ctor(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Creates new instance of StyleSeriesItemLabel class.
            </summary>
            <param name="series">Style container element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.SaveViewState">
            <summary>
            Save data to ViewState
            </summary>
            <returns>Saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.Distance">
            <summary>
            Label distance from series when LabelLocation equals Auto
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.Visible">
            <summary>
            Specifies labels' visibility
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.LabelConnectorStyle">
            <summary>
            Gets label's connector's style
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.LabelLocation">
            <summary>
            Specifies label's layout
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.ItemLabelLocation.Inside">
            <summary>
            Inside item
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.ItemLabelLocation.Outside">
            <summary>
            Outside item
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel.ItemLabelLocation.Auto">
            <summary>
            Auto
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.LabelLocation.InsidePlotArea">
            <summary>
            Inside PlotArea location
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.LabelLocation.OutsidePlotArea">
            <summary>
            Outside PlotArea location
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleLabelLegend">
            <summary>
            Legend appearance style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelLegend.#ctor">
            <summary>
            Creates new instance of StyleLabelLegend class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelLegend.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelLegend.SetAutoLayoutDefaults">
            <summary>
            Save dimensions and positions for AutoLayout
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLabelLegend.Figure">
            <summary>
            Gets label's figure
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLabelLegend.Overflow">
            <summary>
            Specifies label's overflow
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleAxisLabel">
            <summary>
            Axis label style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxisLabel.#ctor">
            <summary>
            Creates new instance of StyleAxisLabel class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxisLabel.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleYAxisLabel">
            <summary>
            Axis label style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleYAxisLabel.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleYAxisLabel.RotationAngle">
            <summary>
            Specifies label's rotation angle
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleLabelTitle">
            <summary>
            Chart title style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelTitle.#ctor">
            <summary>
            Creates new instance of StyleLabelTitle class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelTitle.#ctor(Telerik.Reporting.Charting.Chart)">
            <summary>
            Creates new instance of StyleLabelTitle class.
            </summary>
            <param name="chart">Style container object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelTitle.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelTitle.SetAutoLayoutDefaults">
            <summary>
            Save dimensions and positions for AutoLayout
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleLabelEmptySeriesMessage">
            <summary>
            Empty series message style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelEmptySeriesMessage.#ctor">
            <summary>
            Creates new instance of StyleLabelEmptySeriesMessage class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleLabelEmptySeriesMessage.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleLabelEmptySeriesMessage.Visible">
            <summary>
            Specifies label' visibility
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleMarkedZone">
            <summary>
            Marked zone. Used to mark the values ranges at the plot area.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleMarkedZone.styleMarkedZoneFillStyle">
            <summary>
            Specifies the FillStyle property
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkedZone.#ctor">
            <summary>
            Creates a new instance of StyleMarkedZoneclass.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkedZone.#ctor(Telerik.Reporting.Charting.Styles.FillStyleMarkedZones,Telerik.Reporting.Charting.Styles.StyleBorder,Telerik.Reporting.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates a new instance of StyleMarkedZoneclass.
            </summary>
            <param name="fillStyle">FillStyle of Marked Zone</param>
            <param name="border">Marked Zone's border</param>
            <param name="shadowStyle">Marked Zone's shadow style</param>
            <param name="visible">Visibility of Marked Zone</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkedZone.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkedZone.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkedZone.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkedZone.SaveViewState">
            <summary>
            Saved data to ViewState
            </summary>
            <returns>saved data</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkedZone.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarkedZone.FillStyle">
            <summary>
            Specifies the FillStyle property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarkedZone.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Get property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleMarker">
            <summary>
            Base marker's style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleMarker.styleMarkerCorners">
            <summary>
            Specifies the corners of background rectangle 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleMarker.styleMarkerFillStyle">
            <summary>
            Specifies the FillStyle property
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarker.#ctor(System.Object)">
            <summary>
            Creates a new instance of StyleMarker class.
            </summary>
            <param name="containerObject">Style container object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarker.#ctor">
            <summary>
            Creates a new instance of StyleMarker class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarker.#ctor(System.String)">
            <summary>
            Creates a new instance of StyleMarker class.
            </summary>
            <param name="figureType">Marker's figure name</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarker.#ctor(System.String,System.Int32)">
            <summary>
            Creates a new instance of StyleMarker class.
            </summary>
            <param name="figureType">Marker's figure name</param>
            <param name="pointSize">Width and height of marker</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarker.#ctor(System.String,Telerik.Reporting.Charting.Styles.Dimensions,Telerik.Reporting.Charting.Styles.FillStyle)">
            <summary>
            Creates a new instance of StyleMarker class.
            </summary>
            <param name="figureType">Marker's figure name</param>
            <param name="dimensions">Dimensions of marker</param>
            <param name="fillStyle">Marker's fillstyle settings</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarker.#ctor(Telerik.Reporting.Charting.Styles.Dimensions,System.String,Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Position,System.Single,Telerik.Reporting.Charting.Styles.Corners,Telerik.Reporting.Charting.Styles.StyleBorder,Telerik.Reporting.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates a new instance of StyleMarker class.
            </summary>
            <param name="dimensions">Dimensions of marker</param>
            <param name="figure">Marker's figure name</param>
            <param name="fillStyle">Marker's fillstyle settings</param>
            <param name="position">Marker's positions</param>
            <param name="rotationAngle">Marker's rotation angle</param>
            <param name="corners">Corners of marker</param>
            <param name="border">Border of marker</param>
            <param name="shadowStyle">Marker's shadow style</param>
            <param name="visible">Marker's visibility</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarker.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarker.Equals(System.Object)">
            <summary>
            Comparing of two objects
            </summary>
            <param name="obj">Object to compare</param>
            <returns>Result of comparing</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarker.GetHashCode">
            <summary>
            Gets hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarker.Clone">
            <summary>
            Clone this object
            </summary>
            <returns>Cloned object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarker.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarker.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarker.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarker.SaveViewState">
            <summary>
            Saved data to ViewState
            </summary>
            <returns>saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarker.Visible">
            <summary>
            Specifies marker's visibility
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarker.Corners">
            <summary>
            Specifies the corners of background rectangle 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarker.FillStyle">
            <summary>
            Specifies the FillStyle property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarker.RotationAngle">
            <summary>
            Specifies the Rotation angle
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarker.Figure">
            <summary>
            Specifies the Figure property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarker.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleMarkerSeriesPoint">
            <summary>
            Specific series point markers style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkerSeriesPoint.#ctor(Telerik.Reporting.Charting.ChartSeries,System.String)">
            <summary>
            Creates a new instance of StyleMarkerSeriesPoint class.
            </summary>
            <param name="series">Series that is style container object</param>
            <param name="subPropertyName"></param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkerSeriesPoint.#ctor">
            <summary>
            Creates a new instance of StyleMarkerSeriesPoint class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarkerSeriesPoint.Position">
            <summary>
             Specifies marker's positions
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarkerSeriesPoint.Visible">
            <summary>
            Specifies marker's visibility
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarkerSeriesPoint.Figure">
            <summary>
            Specifies Figure 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleMarkerLegend">
            <summary>
            Specific series point markers style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkerLegend.#ctor">
            <summary>
            Creates a new instance of StyleMarkerLegend class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkerLegend.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarkerLegend.Figure">
            <summary>
            Specifies marker's figure
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarkerLegend.Visible">
            <summary>
            Specifies marker's visibility
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleMarkerEmptyValue">
            <summary>
            Specific empty point marker style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkerEmptyValue.#ctor">
            <summary>
            Creates a new instance of StyleMarkerEmptyValue class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkerEmptyValue.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarkerEmptyValue.Visible">
            <summary>
            Specifies marker's visibility
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarkerEmptyValue.Figure">
            <summary>
            Specifies marker's figure
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleMarkerPositionNone">
            <summary>
            Specific empty point marker style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkerPositionNone.#ctor">
            <summary>
            Creates a new instance of StyleMarkerPositionNone class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleMarkerPositionNone.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleMarkerPositionNone.Visible">
            <summary>
            Specifies marker's visibility
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StylePlotArea">
            <summary>
            Plot area's appearance
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StylePlotArea.stylePlotAreaParent">
            <summary>
            Parent element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StylePlotArea.stylePlotAreaCorners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StylePlotArea.stylePlotAreaFillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StylePlotArea.autoLayoutMargins">
            <summary>
            Margins for auto layout
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StylePlotArea.#ctor">
            <summary>
            Creates a new instance of StylePlotArea class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StylePlotArea.#ctor(Telerik.Reporting.Charting.Styles.Dimensions,Telerik.Reporting.Charting.Styles.FillStylePlotArea,Telerik.Reporting.Charting.Styles.Position,System.String,Telerik.Reporting.Charting.Styles.Corners,Telerik.Reporting.Charting.Styles.StyleBorder,Telerik.Reporting.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates a new instance of StylePlotArea class.
            </summary>
            <param name="dimensions">Dimensions of PlotArea</param>
            <param name="fillStyle">FillStyle settings</param>
            <param name="position">PlotArea's position</param>
            <param name="palette">Palette used in PlotArea</param>
            <param name="corners">PlotArea's corners</param>
            <param name="border">Border of PlotArea</param>
            <param name="shadowStyle">PlotArea's shadow style</param>
            <param name="visible">PlotArea's visibility</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StylePlotArea.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StylePlotArea.SetAutoLayoutDefaults">
            <summary>
            Save dimensions for auto layout
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StylePlotArea.SaveDimensions">
            <summary>
            Save dimensions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StylePlotArea.RestoreDimensions">
            <summary>
            Restore previous saved dimensions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StylePlotArea.RestoreDimensions(System.Boolean)">
            <summary>
            Restore previous saved dimensions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StylePlotArea.RestoreAutoLayoutMargins">
            <summary>
            Restore previous saved margins
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StylePlotArea.Clone">
            <summary>
            Cloned this object
            </summary>
            <returns>New instance of StylePlotArea class with the same fields as this one</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StylePlotArea.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StylePlotArea.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StylePlotArea.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StylePlotArea.SaveViewState">
            <summary>
            Saved data to ViewState
            </summary>
            <returns>saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StylePlotArea.PlotArea">
            <summary>
            Specifies parent element
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StylePlotArea.Corners">
            <summary>
            Specifies the corners for background rectangle
            </summary>    
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StylePlotArea.FillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StylePlotArea.Figure">
            <summary>
            Specifies the figure property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StylePlotArea.SeriesPalette">
            <summary>
            Specifies the series palette
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StylePlotArea.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets property value by name
            </summary>
            <param name="name">Name of property</param>
            <returns>Value of property</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleSeries">
            <summary>
            Series appearance
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeries.DEFAULT_BUBBLE_SIZE">
            <summary>
            Default size of bubbles
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeries.DEFAULT_DISPLAY_MODE">
            <summary>
            Default series legend display mode
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeries.styleSeriesCorners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeries.styleSeriesFillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeries.styleSeriesLabelAppearance">
            <summary>
            Default series items labels style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeries.styleSeriesTextAppearance">
            <summary>
            Default series item labels' text style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeries.styleSeriesPointAppearance">
            <summary>
            Point marks style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeries.styleSeriesLineSeriesAppearance">
            <summary>
            Line, Spline, Bezier series line style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeries.styleSeriesEmptyValue">
            <summary>
            Style of empty values
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeries.styleSeriesParent">
            <summary>
            Parent series element
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeries.styleSeriesPointDimentions">
            <summary>
            Dimensions of points in Point series
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeries.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeries.#ctor(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Constructor for Series's style
            </summary>
            <param name="series">Parent series element</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeries.#ctor">
            <summary>
            Creates new instance of StyleSeries class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeries.#ctor(Telerik.Reporting.Charting.Styles.FillStyleSeries,Telerik.Reporting.Charting.Styles.StyleSeriesItemLabel,Telerik.Reporting.Charting.Styles.StyleMarkerSeriesPoint,Telerik.Reporting.Charting.Styles.Corners,Telerik.Reporting.Charting.Styles.StyleBorder,Telerik.Reporting.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates new instance of StyleSeries class.
            </summary>
            <param name="fillStyle">FillStyle of series</param>
            <param name="styleSeriesLabel">Series default labels' settings</param>
            <param name="stylePointMarker">Style of Point marker</param>
            <param name="corners">Items' corners</param>
            <param name="border">Border of series</param>
            <param name="shadowStyle">Series' shadow style</param>
            <param name="visible">Visibility of series</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeries.Clone">
            <summary>
            Cloned this object
            </summary>
            <returns>New instance of StyleSeries class with the same fields as this one</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeries.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeries.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeries.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeries.SaveViewState">
            <summary>
            Saved data to ViewState
            </summary>
            <returns>saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.BarWidthPercent">
            <summary>
            Determines the width of bars.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.Corners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.FillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.PointShape">
            <summary>
            Specifies the shape for point series
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.PointDimentions">
            <summary>
            Specifies the dimensions of points in point series
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.PointRotationAngle">
            <summary>
            Specifies the Rotation angle
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.LegendDisplayMode">
            <summary>
            Legend visualization mode
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.ShowLabels">
            <summary>
            Specifies whether the item labels should be shown or not.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.ShowLabelConnectors">
            <summary>
            Specifies whether a line should be drawn between the label and the item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.StartAngle">
            <summary>
            Gets or sets the start angle of the pie. Zero angle is identical with the X axis direction.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.DiameterScale">
            <summary>
            Gets or sets the pie's diameter length according to the size of the plot area.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.ExplodePercent">
            <summary>
            Gets or sets the explode percent of the exploded items.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.CenterXOffset">
            <summary>
            Specifies the x offset of the pie center.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.CenterYOffset">
            <summary>
            Specifies the y offset of the pie center.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.BubbleSize">
            <summary>
            Default bubble size
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.LabelAppearance">
            <summary>
            Gets or sets the common settings for the series items labels
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.LineSeriesAppearance">
            <summary>
            Line, Spline, Bezier series line style
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.PointMark">
            <summary>
            Series points appearance
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.TextAppearance">
            <summary>
            Gets or sets the common text settings for the series items
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.EmptyValue">
            <summary>
            Empty value point mark 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.Border">
            <summary>
            Specifies the border
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeries.Visible">
            <summary>
            Specifies visibility of series 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleSeriesItem">
            <summary>
            Series item appearance
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeriesItem.styleSeriesItemFillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeriesItem.styleSeriesItemCorners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleSeriesItem.styleSeriesItemPointDimentions">
            <summary>
            Dimensions of points in Point series
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItem.#ctor(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
             Creates new instance of StyleSeriesItem class.
            </summary>
            <param name="series">Style container object</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItem.#ctor">
            <summary>
            Creates new instance of StyleSeriesItem class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItem.Reset">
            <summary>
            Reset to default settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItem.Clone">
            <summary>
            Cloned this object
            </summary>
            <returns>New instance of StyleSeriesItem class with the same fields as this one</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItem.TrackViewState">
            <summary>
            Track ViewState
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItem.LoadViewState(System.Object)">
            <summary>
            Load data from ViewState
            </summary>
            <param name="savedState">ViewState with data</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItem.SaveViewState">
            <summary>
            Saved data to ViewState
            </summary>
            <returns>saved data</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeriesItem.Shadow">
            <summary>
            Specifies item's shadow
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeriesItem.FillStyle">
            <summary>
            Specifies the background property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeriesItem.Exploded">
            <summary>
            Exploded of item in Pie series
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeriesItem.Corners">
            <summary>
            Specifies the corners for background rectangle
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeriesItem.PointShape">
            <summary>
            Specifies the figure property for point series
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeriesItem.PointRotationAngle">
            <summary>
            Specifies the Rotation angle
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleSeriesItem.PointDimentions">
            <summary>
            Specifies the dimensions of points in point series
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleTextBlock">
            <summary>
            Text block appearance
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleTextBlock.styleTextBlockCorners">
            <summary>
            Specifies the corners of background rectangle 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleTextBlock.styleTextBlockFillStyle">
            <summary>
            Specifies the FillStyle property
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleTextBlock.styleTextBlockRotationAngle">
            <summary>
            Specifies the Rotation angle
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleTextBlock.styleTextBlockTextProperties">
            <summary>
            Specifies the Text properties
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleTextBlock.styleTextBlockOverflow">
            <summary>
            Specifiers the overflow behavior
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.StyleTextBlock.styleTextBlockStringFormat">
            <summary>
            Text string formatting properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.ShouldSerializeMaxLength">
            <summary>
            Should the MaxLength property be serialized or not
            </summary>
            <returns>True if should be serialized</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.ResetMaxLength">
            <summary>
            Sets the default value for a MaxLength property
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.#ctor(Telerik.Reporting.Charting.Styles.FillStyle)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="fillStyle">Fill style settings</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.#ctor(Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Position)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="fillStyle">Fill style settings</param>
            <param name="position">Position settings</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.#ctor(Telerik.Reporting.Charting.Styles.TextProperties)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="textProperties">Text appearance settings</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.#ctor(Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.TextProperties)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="fillStyle">Fill style settings</param>
            <param name="textProperties">Text appearance settings</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.#ctor(Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Position,Telerik.Reporting.Charting.Styles.TextProperties)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="fillStyle">Fill style settings</param>
            <param name="position">Position settings</param>
            <param name="textProperties">Text appearance settings</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.#ctor(Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Position,Telerik.Reporting.Charting.Styles.TextProperties,Telerik.Reporting.Charting.Styles.Dimensions)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="fillStyle">Fill style settings</param>
            <param name="position">Position settings</param>
            <param name="textProperties">Text appearance settings</param>
            <param name="dimensions">Dimensions</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.#ctor(Telerik.Reporting.Charting.Styles.Dimensions,Telerik.Reporting.Charting.Styles.FillStyle,Telerik.Reporting.Charting.Styles.Position,System.Single,Telerik.Reporting.Charting.Styles.TextProperties,Telerik.Reporting.Charting.Styles.Corners,Telerik.Reporting.Charting.Styles.StyleBorder,Telerik.Reporting.Charting.Styles.ShadowStyle,System.Boolean)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="fillStyle">Fill style settings</param>
            <param name="position">Position settings</param>
            <param name="textProperties">Text appearance settings</param>
            <param name="dimensions">Dimensions</param>
            <param name="rotationAngle">Rotation angle</param>
            <param name="corners">Corners appearance</param>
            <param name="border">Border settings</param>
            <param name="shadowStyle">Shadow settings</param>
            <param name="visible">Visibility settings</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.SetStringFormat">
            <summary>
            Sets the text alignment accordingly to the AlignedPosition property value
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.Clone">
            <summary>
            Creates the object's clone
            </summary>
            <returns>Clone</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.TrackViewState">
            <summary>
            Tracks view state changes
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.LoadViewState(System.Object)">
            <summary>
            Loads class settings from a view state
            </summary>
            <param name="savedState">ViewState to load from</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlock.SaveViewState">
            <summary>
            Saves class data to a view state
            </summary>
            <returns>Saved view state</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTextBlock.MaxLength">
            <summary>
            Max number of visible characters. Rest will be truncated
            <remarks>Full string will be added to parent label's ActiveRegion.Tooltip</remarks>
            </summary>
        </member>
        <member name="E:Telerik.Reporting.Charting.Styles.StyleTextBlock.MaxLengthChanged">
            <summary>
            MaxLength property changed event
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTextBlock.Corners">
            <summary>
            Specifies the corners of background rectangle 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTextBlock.FillStyle">
            <summary>
            Specifies the FillStyle property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTextBlock.Figure">
            <summary>
            Specifies the Figure property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTextBlock.TextProperties">
            <summary>
            Specifies the Text properties
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTextBlock.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets the property value by its name
            </summary>
            <param name="name">Name of the property. String</param>
            <returns>Object</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTextBlock.AutoTextWrap">
            <summary>
            Gets or sets the automatic text wrapping functionality switch
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTextBlock.StringFormat">
            <summary>
            Gets the string format
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleSeriesItemTextBlock">
            <summary>
            Series item label text block's appearance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItemTextBlock.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItemTextBlock.#ctor(Telerik.Reporting.Charting.ChartSeries)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="series">Chart series</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItemTextBlock.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItemTextBlock.ShouldSerializeMaxLength">
            <summary>
            Gets should the MaxLength value be serialized
            </summary>
            <returns>True if can be serialized, overwise returns false</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleSeriesItemTextBlock.ResetMaxLength">
            <summary>
            Sets the default value
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleAxisItemText">
            <summary>
            Axis item label text block's appearance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxisItemText.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxisItemText.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxisItemText.ShouldSerializeMaxLength">
            <summary>
            Gets should the MaxLength value be serialized
            </summary>
            <returns>True if can be serialized, overwise returns false</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleAxisItemText.ResetMaxLength">
            <summary>
            Sets the default value
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleTextBlockTitle">
            <summary>
            Title text block's appearance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlockTitle.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlockTitle.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleTextBlockError">
            <summary>
            Error text block's appearance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlockError.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlockError.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleTextBlockHidden">
            <summary>
            Hidden text block's default appearance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlockHidden.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTextBlockHidden.Visible">
            <summary>
            Visibility. False by default
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleTextBlockAxisLabel">
            <summary>
            Hidden text block's default appearance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlockAxisLabel.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTextBlockAxisLabel.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleTick">
            <summary>
            Base axis ticks appearance settings
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTick.#ctor">
            <summary>
            Creates the new class instance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTick.#ctor(System.Int32)">
            <summary>
            Creates the new class instance
            </summary>
            <param name="length">Tick length in pixels</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTick.#ctor(System.Int32,System.Boolean)">
            <summary>
            Creates the new class instance
            </summary>
            <param name="length">Tick length in pixels</param>
            <param name="visible">Tick visibility</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTick.#ctor(System.Boolean,System.Int32,System.Drawing.Color)">
            <summary>
            Creates the new class instance
            </summary>
            <param name="length">Tick length in pixels</param>
            <param name="visible">Tick visibility</param>
            <param name="color">Tick line color</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTick.Reset">
            <summary>
            Sets the default values for a class properties
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTick.Length">
            <summary>
            Specifies the Length of tick
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTick.Color">
            <summary>
            Tick line color
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTick.Width">
            <summary>
            Tick line width
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTick.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets the property by its name
            </summary>
            <param name="name">Property name. String</param>
            <returns>Object or null</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleTickMinor">
            <summary>
            Minor ticks style
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTickMinor.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTickMinor.#ctor(System.Int32)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="count">Minor ticks count</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTickMinor.#ctor(System.Boolean)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="visible">Visibility value</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTickMinor.#ctor(System.Boolean,System.Int32,System.Int32)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="visible">Minor tick visibility</param>
            <param name="length">Minor tick length</param>
            <param name="count">Minor ticks count between two major ticks</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.StyleTickMinor.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTickMinor.MinorTickCount">
            <summary>
            Minor ticks count between the two major ticks
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTickMinor.Length">
            <summary>
            Specifies the Length of tick
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.StyleTickMinor.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets the property value by its name
            </summary>
            <param name="name">Name of the property</param>
            <returns>Object or null</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.StyleTickMajor">
            <summary>
            Major ticks visual style
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.TextDirection">
            <summary>
            Specifies the text rendering direction
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.TextDirection.RightToLeft">
            <summary>
            Assign the right to left text direction
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.TextDirection.LeftToRight">
            <summary>
            Assign the left to right text direction
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.TextDirection.TopToBottom">
            <summary>
            Assign the left to right top to bottom text direction
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.TextDirection.BottomToTop">
            <summary>
            Assign the left to right bottom to top text direction
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.TextProperties">
            <summary>
            Base text appearance settings class (Font, Color)
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.TextProperties.#ctor">
            <summary>
            Creates a new class instance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.TextProperties.#ctor(System.Drawing.Color)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="color">Text color</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.TextProperties.#ctor(System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="color">Text color</param>
            <param name="font">Text font</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.TextProperties.#ctor(System.Drawing.Color,System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)">
            <summary>
            Creates a new class instance
            </summary>
            <param name="color">Text color</param>
            <param name="familyName">Font family</param>
            <param name="emSize">Font size in EM</param>
            <param name="fontStyle">Font style</param>
            <param name="grUnit">Graphics measurement unit</param>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.TextProperties.textPropertiesContainerObject">
            <summary>
            Class instance container
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.TextProperties.Reset">
            <summary>
            Sets the default values
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.TextProperties.Clone">
            <summary>
            Creates an object clone
            </summary>
            <returns>object</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.TextProperties.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current System.Object.
            </summary>
            <param name="obj">The System.Object to compare with the current System.Object</param>
            <returns>true if the specified System.Object is equal to the current System.Object;
                otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.TextProperties.GetHashCode">
            <summary>
            Serves as a hash function for a TextProperties type. 
            </summary>
            <returns>A hash code for the current class instance</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.TextProperties.Color">
            <summary>
            Specifies the text color property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.TextProperties.Font">
            <summary>
            Specifies the text font properties
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.TextProperties.Item(Telerik.Reporting.Charting.Styles.StyleProperties)">
            <summary>
            Gets the property by its name
            </summary>
            <param name="name">Property name. String</param>
            <returns>Object</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.TextPropertiesTitle">
            <summary>
            Default Title's text properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.TextPropertiesTitle.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.TextPropertiesTitle.Font">
            <summary>
            Specifies the text font properties
            </summary>
            <remarks>Default value is Verdana, 15pt</remarks>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.TextPropertiesError">
            <summary>
            Errors text properties 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.TextPropertiesError.Reset">
            <summary>
            Sets the default values for a properties
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.TextPropertiesError.Color">
            <summary>
            Specifies the text color property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.TextPropertiesError.Font">
            <summary>
            Specifies the text font properties
            </summary>
            <remarks>Default value is Verdana, 10pt, style=Bold</remarks>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.TextPropertiesAxisItem">
            <summary>
            Axis item label text properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.TextPropertiesAxisItem.Reset">
            <summary>
            Sets default values for a properties
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.TextPropertiesAxisItem.Color">
            <summary>
            Specifies the text color property
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.TextPropertiesAxisLabel">
            <summary>
            Axis item label text properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.TextPropertiesAxisLabel.Reset">
            <summary>
            Sets default values for a properties
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.TextPropertiesAxisLabel.Color">
            <summary>
            Specifies the text color property
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.TextPropertiesSeriesItem">
            <summary>
            Series item label text properties
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.TextPropertiesSeriesItem.Reset">
            <summary>
            Sets default values for a properties
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.TextPropertiesSeriesItem.Color">
            <summary>
            Specifies the text color property
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.TickLocation">
            <summary>
            Specifies the axis Ticks location relatively to plot area
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.TickLocation.Inside">
            <summary>
            Inside of plot area
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.TickLocation.Outside">
            <summary>
            Outside of plot area (default value)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.TickLocation.Cross">
            <summary>
            Tick line crosses the axis line
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.ListConverter">
            <summary>
            Provides a type converter to convert IList objects to and from a different representations
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.ListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Checks the possibility to convert from a different object type
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">The type to convert from</param>
            <returns>True if conversion is possible</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.Styles.ListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.Styles.ListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" -->
        <member name="M:Telerik.Reporting.Charting.Styles.ListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <param name="destinationObj">The System.Object to convert.</param>
            <param name="destinationType">The System.Type to convert the value parameter to.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.DoubleConverter2">
            <summary>
            Provides a unified way of converting Double type values to other types, as well
                as for accessing standard values and sub properties.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.DoubleConverter2.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Checks the possibility to convert from a different object type
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">The type to convert from</param>
            <returns>True if conversion is possible</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.Styles.DoubleConverter2.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" -->
        <member name="M:Telerik.Reporting.Charting.Styles.DoubleConverter2.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <param name="destinationObj">The System.Object to convert.</param>
            <param name="destinationType">The System.Type to convert the value parameter to.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.MarginsConverter">
            <summary>
            Provides a unified way of converting ChartMargins type values to other types, as well
            as for accessing standard values and sub properties.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.MarginsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Checks the possibility to convert from a different object type
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">The type to convert from</param>
            <returns>True if conversion is possible</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.MarginsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the ChartMargins, using the specified
                context and culture information.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">Current culture settings</param>
            <param name="sourceObj">The System.Object to convert.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.MarginsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <param name="destinationObj">The System.Object to convert.</param>
            <param name="destinationType">The System.Type to convert the value parameter to.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.MarginsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the type that this MarginsConverter
                is associated with, using the specified context, given a set of property
                values for the object.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="propertyValues">An System.Collections.IDictionary of new property values.</param>
            <returns>An System.Object representing the given System.Collections.IDictionary, or
                null if the object cannot be created. </returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.MarginsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
             to create a new value, using the specified context.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.MarginsConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.MarginsConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the
            value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="value">An System.Object that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type System.Attribute that is used as a filter.</param>
            <returns>A System.ComponentModel.PropertyDescriptorCollection with the properties
             that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.PaddingsConverter">
            <summary>
            Provides a unified way of converting ChartMargins type values to other types, as well
            as for accessing standard values and sub properties.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.PaddingsConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Checks the possibility to convert from a different object type
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">The type to convert from</param>
            <returns>True if conversion is possible</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.PaddingsConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the ChartPaddings, using the specified
            context and culture information.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">Current culture settings</param>
            <param name="sourceObj">The System.Object to convert.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.PaddingsConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <param name="destinationObj">The System.Object to convert.</param>
            <param name="destinationType">The System.Type to convert the value parameter to.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.PaddingsConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the type that this PaddingsConverter
            is associated with, using the specified context, given a set of property
            values for the object.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="propertyValues">An System.Collections.IDictionary of new property values.</param>
            <returns>An System.Object representing the given System.Collections.IDictionary, or
                null if the object cannot be created. </returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.PaddingsConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
             to create a new value, using the specified context.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.PaddingsConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <returns>true</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.PaddingsConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the
            value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="value">An System.Object that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type System.Attribute that is used as a filter.</param>
            <returns>A System.ComponentModel.PropertyDescriptorCollection with the properties
             that are exposed for this data type, or null if there are no properties.</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.UnitConverter">
            <summary>
            Provides a unified way of converting Units type values to other types, as well
            as for accessing standard values and sub properties.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.UnitConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Checks the possibility to convert from a different object type
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="sourceType">The type to convert from</param>
            <returns>True if conversion is possible</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Charting.Styles.UnitConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" -->
        <member name="M:Telerik.Reporting.Charting.Styles.UnitConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the Unit type, using the specified
            context and culture information.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">Current culture settings</param>
            <param name="sourceObj">The System.Object to convert.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.UnitConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, using the specified
            context and culture information.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that provides a format context.</param>
            <param name="culture">A System.Globalization.CultureInfo. If null is passed, the current culture is assumed.</param>
            <param name="destinationObj">The System.Object to convert.</param>
            <param name="destinationType">The System.Type to convert the value parameter to.</param>
            <returns>An System.Object that represents the converted value.</returns>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.UnitType">
            <summary>
            Specifies the unit of measurement.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.UnitType.Pixel">
            <summary>
            Measurement is in pixels.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.UnitType.Percentage">
            <summary>
            Measurement is a percentage relative to the parent element.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Charting.Styles.Unit">
            <summary>
            Represents a length measurement.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Charting.Styles.Unit.Empty">
            <summary>
            Represents an empty Unit. This field is read-only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.op_Inequality(Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit)">
            <summary>
            Compares two Unit objects to determine whether they are not equal.
            </summary>
            <param name="left">The Unit on the left side of the operator.</param>
            <param name="right">The Unit on the right side of the operator.</param>
            <returns>true if the Unit objects are not equal; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.op_Equality(Telerik.Reporting.Charting.Styles.Unit,Telerik.Reporting.Charting.Styles.Unit)">
            <summary>
            Compares two Unit objects to determine whether they are equal.
            </summary>
            <param name="left">The Unit on the left side of the operator.</param>
            <param name="right">The Unit on the right side of the operator.</param>
            <returns>true if both Unit objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.op_Implicit(System.Single)~Telerik.Reporting.Charting.Styles.Unit">
            <summary>
            Implicitly creates a Unit of type Pixel from the specified float.
            </summary>
            <param name="n">A float that represents the length of the Unit.</param>
            <returns>A Unit of type Pixel that represents the specified by the n parameter.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.Parse(System.String)">
            <summary>
            Converts the specified string to a Unit.
            </summary>
            <param name="s">The string to convert.</param>
            <returns>A Unit that represents the specified string.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.Pixel(System.Single)">
            <summary>
            Creates a Unit of type Pixel from the specified 32-bit signed integer.
            </summary>
            <param name="n">A 32-bit signed integer that represents the length of the Unit.</param>
            <returns>A Unit of type Pixel that represents the length specified by the n parameter.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.Percentage(System.Double)">
            <summary>
            Creates a Unit of type Percentage from the specified double-precision floating-point number.
            </summary>
            <param name="n">A double-precision floating-point number that represents the length of the Unit</param>
            <returns>A Unit of type Percentage that represents the length specified by the double-precision floating-point number.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.GetStringFromType(Telerik.Reporting.Charting.Styles.UnitType)">
            <summary>
            Gets the string representation of the Unit type
            </summary>
            <param name="type">Unit type value to get string of</param>
            <returns>System.String with unit type value</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.GetTypeFromString(System.String)">
            <summary>
            Gets the UnitType by its string representation
            </summary>
            <param name="value">Unit type string</param>
            <returns>UnitType</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.#ctor">
            <summary>
            Creates a class instance
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.#ctor(Telerik.Reporting.Charting.Styles.UnitType)">
            <summary>
            Creates a class instance
            </summary>
            <param name="type">UnitType specifies the target Unit type</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the Unit with the specified double precision floating point number.
            </summary>
            <param name="value">A double precision floating point number that represents the length of the Unit in pixels.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the Unit with the specified double precision floating point number.
            </summary>
            <param name="value">A float precision floating point number that represents the length of the Unit in pixels.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the Unit with the specified 32-bit signed integer.
            </summary>
            <param name="value">A 32-bit signed integer that represents the length of the Unit in pixels.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.#ctor(System.Int32,Telerik.Reporting.Charting.Styles.UnitType)">
            <summary>
            Initializes a new instance of the Unit with the specified 32-bit signed integer and the target type
            </summary>
            <param name="value">A 32-bit signed integer that represents the length of the Unit in pixels.</param>
            <param name="type">Unit type</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.#ctor(System.Double,Telerik.Reporting.Charting.Styles.UnitType)">
            <summary>
            Initializes a new instance of the Unit with the specified double precision floating point number and the target type
            </summary>
            <param name="value">A double precision floating point number that represents the length of the Unit in pixels.</param>
            <param name="type">Unit type</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.#ctor(System.Single,Telerik.Reporting.Charting.Styles.UnitType)">
            <summary>
            Initializes a new instance of the Unit with the specified double precision floating point number and the target type.
            </summary>
            <param name="value">A float precision floating point number that represents the length of the Unit in pixels.</param>
            <param name="type">Unit type (Pixel / Percentage) </param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Unit with the specified length.
            </summary>
            <param name="value">A string that represents the length of the Unit.</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.#ctor(System.String,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the Unit with the specified length.
            </summary>
            <param name="value">A string that represents the length of the Unit.</param>
            <param name="culture">CultureInfo</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.#ctor(System.String,System.Globalization.CultureInfo,Telerik.Reporting.Charting.Styles.UnitType)">
            <summary>
            Initializes a new instance of the Unit with the specified length.
            </summary>
            <param name="value">A string that represents the length of the Unit.</param>
            <param name="culture">CultureInfo</param>
            <param name="defaultType">Unit type</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.GetHashCode">
            <summary>
            Returns a hash code for this Unit.
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.Equals(System.Object)">
            <summary>
            Compares this Unit with the specified object.
            </summary>
            <param name="obj">The specified object for comparison.</param>
            <returns> true if the Unit that this method is called from is equal to the specified object; otherwise, false.</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.CalculatePixelValue(System.Single)">
            <summary>
            Gets the pixels equivalent of the Unit.Value
            </summary>
            <param name="from">The parent elements dimension to get the percents of</param>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.CalculatePixelValue">
            <summary>
            Gets the pixels equivalent of the Unit.Value
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.Clone">
            <summary>
            Creates a Unit clone
            </summary>
            <returns>New Unit class instance </returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.ToString">
            <summary>
            Base ToString override
            </summary>
            <returns>String representation of the Unit instance</returns>
        </member>
        <member name="M:Telerik.Reporting.Charting.Styles.Unit.ToString(System.Globalization.CultureInfo)">
            <summary>
            Base ToString override
            </summary>
            <param name="culture">CultureInfo</param>
            <returns>String representation of the Unit instance</returns>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Unit.IsEmpty">
            <summary>
            Gets whether Unit is empty
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Unit.PixelValue">
            <summary>
            The unit length in Pixels
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Unit.Type">
            <summary>
            Gets or sets the unit type of the Unit.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Charting.Styles.Unit.Value">
            <summary>
            Gets or sets the length of the Unit.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.AppDataElement">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.AppDataElement.Path">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.CacheSection">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.CacheSection.Provider">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.CacheSection.ProvidersObsolete">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.CacheSection.Providers">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.DpiAwareSection">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.ExtensionCollection">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.ExtensionCollectionBase">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.ExtensionCollectionObsolete">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.ExtensionsSection">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ExtensionsSection.RenderObsolete">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ExtensionsSection.Render">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ExtensionsSection.All">
            <summary>
            Returns all the extensions in the config file(Render, Delivery, ...)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.ProcessingSection">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.ProviderCollection">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.ProviderCollectionBase">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.ProviderCollectionObsolete">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.ProviderElement">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ProviderElement.Name">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ProviderElement.Type">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ProviderElement.ParametersObsolete">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ProviderElement.Parameters">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ProviderElement.ParametersInternal">
            <summary>
            Use this property to access the parameters
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ReportingConfiguration.Default">
            <summary>
            The reporting engine configuration resolved from the default application configuration file
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.ReportingConfigurationSection">
            <summary>
            Use this property to access the extensions
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ReportingConfigurationSection.ExtensionsInternal">
            <summary>
            Use this property to access the extensions
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ReportingConfigurationSection.AssemblyReferencesObsolete">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ReportingConfigurationSection.AssemblyReferences">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ReportingConfigurationSection.PrivateFonts">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ReportingConfigurationSection.AssemblyReferencesInternal">
            <summary>
            Use this property to access assembly references
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ReportingConfigurationSection.RestReportService">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ReportingConfigurationSection.AppData">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ReportingConfigurationSection.Processing">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.ReportResolverElement">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ReportResolverElement.Provider">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.ReportResolverElement.Parameters">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.RestReportServiceElement">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.RestReportServiceElement.HostAppId">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.RestReportServiceElement.WorkerCount">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.RestReportServiceElement.ClientSessionTimeout">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.RestReportServiceElement.ReportSharingTimeout">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.RestReportServiceElement.Storage">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.RestReportServiceElement.ReportResolver">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.StorageElement">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Configuration.StorageElement.Provider">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Configuration.TelerikConfigurationManager">
            <summary>
            Facade class for interacting with System.Configuration.ConfigurationManager.
            Requires adding [assembly: AllowPartiallyTrustedCallers] in AssemblyInfo.cs!
            </summary>
        </member>
        <member name="M:Telerik.Reporting.CsvRendering.CsvRenderingExtension.CreateEncoding(Telerik.Reporting.CsvRendering.CsvSettings)">
            <summary>
            Creates the user defined encoding and creates Unicode instances with BOM set if needed
            BOM References: http://www.sttmedia.com/unicode-byteordermark http://www.unicode.org/faq/utf_bom.html#bom8
            </summary>
            <param name="csvSettings"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.CsvRendering.IFlatTableRenderer">
            <summary>
            Represents a flat table renderer API implementer
            </summary>
        </member>
        <member name="T:Telerik.Reporting.CsvRendering.TableRenderer">
            <summary>
            Crosstab / Table CSV renderer
            </summary>
        </member>
        <member name="T:Telerik.Reporting.CsvRendering.CrosstabToFlatTableConverter">
            <summary>
            Encapsulates the algorithm of turning the Processing Crosstab/Table into a flat table
            </summary>
        </member>
        <member name="M:Telerik.Reporting.CsvRendering.CrosstabToFlatTableConverter.GetElement(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the element at the provided cell coordinates
            </summary>
        </member>
        <member name="T:Telerik.Reporting.DataColumn">
            <summary>
            Represents a data column definition.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.DataColumn.#ctor">
            <summary>
            Creates a new instance of <see cref="T:Telerik.Reporting.DataColumn"/>.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.DataColumn.#ctor(System.String,Telerik.Reporting.SimpleType)">
            <summary>
            Creates a new instance of <see cref="T:Telerik.Reporting.DataColumn"/>.
            </summary>
            <param name="name">The name of the column. 
            This name should be used later when referring a field from this column in expressions.</param>
            <param name="columnType">The type of the column.</param>
        </member>
        <member name="P:Telerik.Reporting.DataColumn.Name">
            <summary>
            Gets or sets the name of the field definition. Used to access the field in expressions.
            </summary>
            <remarks>
            Field names must be unique in the context of a single report.
            The name must be a valid identifier - may contain only digits (0-9), letters (a-z, A-Z), 
            and underscore sign (_). Must begin with a letter or underscore.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.DataColumn.Type">
            <summary>
            Gets or sets the type of the field.
            </summary>
            <remarks>
            Determines the type of the values. Acceptable values for each type are listed in <see cref="T:Telerik.Reporting.SimpleType"/>.
            The default parameter type is <see cref="F:Telerik.Reporting.SimpleType.String"/>.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.DataColumnCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.DataColumn"/> objects. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.DataColumnCollection.AddRange(System.Collections.Generic.IEnumerable{Telerik.Reporting.DataColumn})">
            <summary>
            Adds an enumerable of <see cref="T:Telerik.Reporting.DataColumn"/> objects to the 
            <see cref="T:Telerik.Reporting.DataColumnCollection"/>. 
            </summary>
            <param name="enumerable">
            An enumerable of <see cref="T:Telerik.Reporting.DataColumn"/> objects to add to 
            the <see cref="T:Telerik.Reporting.DataColumnCollection"/>.
            </param>
            <remarks>
            <para>The <see cref="T:Telerik.Reporting.DataColumn"/> objects returned from the
            enumerable are appended to the end of the 
            <see cref="T:Telerik.Reporting.DataColumnCollection"/>.</para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.DataColumnCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:Telerik.Reporting.DataColumnCollection"/>
            contains a column with a specific name.
            </summary>
            <param name="name">
            A <see cref="T:System.String"/> that specifies the parameter name for which
            to search the elements of the 
            <see cref="T:Telerik.Reporting.DataColumnCollection"/>.
            </param>
            <returns>
            Returns a <see cref="T:System.Boolean"/> value indicating whether the
            <see cref="T:Telerik.Reporting.DataColumnCollection"/> object contains a report
            parameter with the specified name.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.DataColumnCollection.IndexOf(System.String)">
            <summary>
            Determines the index of a specific column in the
            <see cref="T:Telerik.Reporting.DataColumnCollection"/>.
            </summary>
            <param name="name">The parameter name used to locate the report
            parameter in the <see cref="T:Telerik.Reporting.DataColumnCollection"/>.</param>
            <returns>The index of column if found in the 
            <see cref="T:Telerik.Reporting.DataColumnCollection"/>; otherwise, -1.</returns>
        </member>
        <member name="M:Telerik.Reporting.DataColumnCollection.Add(System.String,Telerik.Reporting.SimpleType)">
            <summary>
            Creates a <see cref="T:Telerik.Reporting.DataColumn"/> with specific settings and
            adds it to the 
            <see cref="T:Telerik.Reporting.DataColumnCollection"/>. 
            </summary>
            <param name="name">
            A <see cref="T:System.String"/> value that will be used as 
            <see cref="P:Telerik.Reporting.DataColumn.Name"/> for the newly created 
            <see cref="T:Telerik.Reporting.DataColumn"/>.
            </param>
            <param name="columnType">
            A <see cref="T:Telerik.Reporting.SimpleType"/> constant will be used for the newly created 
            <see cref="T:Telerik.Reporting.DataColumn"/>.
            </param>
            <param name="parseFormat">
            A <see cref="T:System.String"/> value that will be used as 
            <see cref="!:DataColumn.ParseFormat"/> for the newly created 
            <see cref="T:Telerik.Reporting.DataColumn"/>.
            </param>
            <returns>The newly created and added <see cref="T:Telerik.Reporting.DataColumn"/>
            </returns>
        </member>
        <member name="M:Telerik.Reporting.DataColumnCollection.InsertItem(System.Int32,Telerik.Reporting.DataColumn)">
            <summary>
            Inserts an item to the <see cref="T:Telerik.Reporting.DataColumnCollection"/> at
            the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be
            inserted.</param>
            <param name="item">The <see cref="T:Telerik.Reporting.DataColumn"/> to insert into
            the <see cref="T:Telerik.Reporting.DataColumnCollection"/>.</param>
        </member>
        <member name="P:Telerik.Reporting.DataColumnCollection.Item(System.String)">
            <summary>
            Gets a column by name.
            </summary>
            <param name="name">The name of the column.</param>
            <returns>A column if found; otherwise null (Nothing) </returns>
        </member>
        <member name="P:Telerik.Reporting.Data.DataConnection.Name">
            <summary>
            Gets or sets the name of the DataConnection component. 
            </summary>
            <value>
            The name of the DataConnection component. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Data.SqlServerDataConnection.ConnectionString">
            <summary>
            Gets or sets the connection string used to connect to data.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.CalculatedField">
            <summary>
            Represents an user-defined field in a <see cref="T:Telerik.Reporting.DataSource"/>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CalculatedField.Name">
            <summary>
            Gets or sets the name of the <b>CalculatedField</b>
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CalculatedField.Expression">
            <summary>
            Gets or sets the expression of the <b>CalculatedField</b>
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CalculatedField.DataType">
            <summary>
            Gets or sets the data type of the <b>CalculatedField</b>
            </summary>
        </member>
        <member name="T:Telerik.Reporting.CalculatedFieldCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.CalculatedField"/>s.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.SimpleCollectionConverter`1">
            <summary>
            Converts the collection to string returning the count of items in it.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Telerik.Reporting.SimpleCollectionConverter`1.GetSingleName">
            <summary>
            Parameter; Binding ...
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SimpleCollectionConverter`1.GetPluralName">
            <summary>
            Parameters; Bindings ...
            </summary>
        </member>
        <member name="T:Telerik.Reporting.INamedObject">
            <summary>
            Represents an object of the report/data hierarchy. Used for the expand/collabse/cache data logic
            that needs unique names/path. All items/objects that form the data hierarchy should implement this
            interface.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.DataSource.Name">
            <summary>
            Gets or sets the name of the DataSource component. 
            </summary>
            <value>
            The name of the DataSource component. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.DataSource.CalculatedFields">
            <summary>
            Gets the calculated fields collection.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.RelationPair.LeftBindingExpression">
            <summary>
            Gets or sets an expression that defines the <b>left side field</b> used for binding.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.RelationPair.RightBindingExpression">
            <summary>
            Gets or sets an expression that defines the <b>right side field</b> used for binding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.CsvDataSource">
            <summary>
            Represents a data model, based on a textual Comma-Separated-Values data.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.CsvDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.CsvDataSource"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CsvDataSource.Source">
            <summary>
            Gets or sets the source of the CSV document.
            </summary>
            <remarks>
            The supported sources are:
            1. <see cref="T:System.Uri"/>
            2. <see cref="T:System.String"/>
            3. <see cref="T:System.IO.Stream"/>
            4. <see cref="T:System.IO.TextReader"/>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.CsvDataSource.FieldSeparators">
            <summary>
            Gets or sets the set of characters used as field separators (delimiters).
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CsvDataSource.RecordSeparators">
            <summary>
            Gets or sets the character used as record separator.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CsvDataSource.EscapeFormat">
            <summary>
            Gets or sets the escape format of the CSV document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CsvDataSource.Quote">
            <summary>
            Gets or sets the symbol used for escaping.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CsvDataSource.CommentToken">
            <summary>
            Gets or sets the symbol used for comments in the CSV document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CsvDataSource.HasHeaders">
            <summary>
            Gets or sets the setting that specifies if the CSV document has a header row.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CsvDataSource.ConsecutiveFieldSeparatorsAsOne">
            <summary>
            Gets or sets the option for treating consecutive field separators as one in the CSV document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CsvDataSource.ConsecutiveRecordSeparatorsAsOne">
            <summary>
            Gets or sets the option for treating consecutive record separators as one in the CSV document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CsvDataSource.DecimalSeparator">
            <summary>
            Gets or sets the decimal separator used when parsing numbers.
            Invariant culture's '.' separator is used by default.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CsvDataSource.ThousandSeparator">
            <summary>
            Gets or sets the thousand separator used when parsing numbers.
            Invariant culture's ',' separator is used by default.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CsvDataSource.DateTimeFormat">
            <summary>
            Gets or sets the format used when parsing dates.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CsvDataSource.Columns">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.DataColumnCollection"/> defining each column of the CSV data source.
            </summary>
            <remarks>When left empty, Columns are inferred from the data itself: 
            If header row is available, it is used to infer column names;
            The type of each column is considered string.</remarks>
        </member>
        <member name="P:Telerik.Reporting.CsvDataSource.TrimFields">
            <summary>
            Gets or sets the option for trimming the fields.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.CsvEscapeFormat">
            <summary>
            Represents the format that is used in a Csv file 
            in order to escape field values / special symbols.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.CsvEscapeFormat.None">
            <summary>
            No symbols are escaped.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.CsvEscapeFormat.Backslash">
            <summary>
            Unix style programs use backslashes for escaping both (field and record) separators.
            Backslash is escaped with a second backslash.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.CsvEscapeFormat.BackslashAlternative">
            <summary>
            Some Unix style programs use backslashes for escaping field separators,
            but for escaping record separators can use \r\n instead of backslash.
            Backslash is escaped with a second backslash.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.CsvEscapeFormat.Quotes">
            <summary>
            Excel uses single or double quotes to embed escaped text.
            Single or double quotes are escaped with second single or double quotes.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.CsvEscapeFormat.QuotesMixed">
            <summary>
            Some files use a mixed escaping format - 
            fields are embedded in quotes (Excel like),
            quotes (single or double) are escaped with backslash (Unix like).
            Backslash is escaped with a second backslash.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.CubeDataSource">
            <summary>
            Represents an OLAP cube to data items.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.CubeDataSource"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSource.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.CubeDataSource"/> class.
            </summary>
            <param name="connectionString">
            Specifies the connection string used to connect to the OLAP database.
            </param>
            <param name="selectCommand">
            Specifies the MDX select statement to execute against the OLAP cube.
            </param>
        </member>
        <member name="P:Telerik.Reporting.CubeDataSource.ConnectionString">
            <summary>
            Gets or sets the connection string used to connect to the OLAP database.
            </summary>
            <remarks>
            The <B>ConnectionString</B> property contains a valid connection string or a name of 
            a <see cref="T:System.Configuration.ConnectionStringSettings"/> in the application's configuration file.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.CubeDataSource.SelectCommand">
            <summary>
            Gets or sets the MDX select statement to execute against the OLAP cube.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CubeDataSource.Parameters">
            <summary>
            Gets a collection with <see cref="T:Telerik.Reporting.CubeDataSourceParameter"/> objects.
            </summary>
            <remarks>
            The <b>Parameters</b> collection is used to pass named parameters when
            executing a parameterized MDX select statement against the OLAP cube.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.CubeDataSource.Mappings">
            <summary>
            Gets a collection with <see cref="T:Telerik.Reporting.DataFieldMapping"/> objects.
            </summary>
            <remarks>
            The <b>Mappings</b> collection is used to map the names of the data source
            fields to the actual fields returned when executing the MDX select statement.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.CubeDataSourceParameter">
            <summary>
            Represents a parameter in a <see cref="T:Telerik.Reporting.CubeDataSource"/> component.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.DataSourceParameter">
            <summary>
            Represents a parameter in a <see cref="T:Telerik.Reporting.DataSource"/> component.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.DataSourceParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.DataSourceParameter"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.DataSourceParameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.DataSourceParameter"/> class.
            </summary>
            <param name="name">
            Specifies the name of the parameter.
            </param>
        </member>
        <member name="M:Telerik.Reporting.DataSourceParameter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.DataSourceParameter"/> class.
            </summary>
            <param name="name">
            Specifies the name of the parameter.
            </param>
            <param name="value">
            Specifies the value of the parameter.
            </param>
        </member>
        <member name="P:Telerik.Reporting.DataSourceParameter.Name">
            <summary>
            Gets or sets the name of the parameter.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.DataSourceParameter.Value">
            <summary>
            Gets or sets the value of the parameter.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSourceParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.CubeDataSourceParameter"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSourceParameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.CubeDataSourceParameter"/> class.
            </summary>
            <param name="name">
            Specifies the name of the parameter.
            </param>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSourceParameter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.CubeDataSourceParameter"/> class.
            </summary>
            <param name="name">
            Specifies the name of the parameter.
            </param>
            <param name="value">
            Specifies the value of the parameter.
            </param>
        </member>
        <member name="T:Telerik.Reporting.CubeDataSourceParameterCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.CubeDataSourceParameter"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSourceParameterCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.CubeDataSourceParameterCollection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSourceParameterCollection.#ctor(Telerik.Reporting.CubeDataSourceParameter[])">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.CubeDataSourceParameterCollection"/> class.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSourceParameterCollection.#ctor(Telerik.Reporting.CubeDataSourceParameterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.CubeDataSourceParameterCollection"/> class.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSourceParameterCollection.Contains(System.String)">
            <summary>
            Determines if the collection contains a parameter with the specified name.
            </summary>
            <param name="name">
            Specifies the name of a parameter from the collection.
            </param>
            <returns>
            <b>True</b> if a parameter with the specified name exists, <b>False</b> otherwise.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSourceParameterCollection.Add(System.String)">
            <summary>
            Adds a new parameter with the specified name to the collection.
            </summary>
            <param name="name">
            Specifies the name of the new parameter to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSourceParameterCollection.Add(System.String,System.Object)">
            <summary>
            Adds a new parameter with the specified name and value to the collection.
            </summary>
            <param name="name">
            Specifies the name of the new parameter to add to the collection.
            </param>
            <param name="value">
            Specifies the value of the new parameter to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSourceParameterCollection.AddRange(Telerik.Reporting.CubeDataSourceParameter[])">
            <summary>
            Adds a range of parameters to the collection.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSourceParameterCollection.AddRange(Telerik.Reporting.CubeDataSourceParameterCollection)">
            <summary>
            Adds a range of parameters to the collection.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSourceParameterCollection.ToArray">
            <summary>
            Converts the collection to an array of parameters.
            </summary>
            <returns>
            Array of parameters contained in the collection.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.CubeDataSourceParameterCollection.Clone(Telerik.Reporting.CubeDataSourceParameterCollection)">
            <summary>
            Clones the specified collection.
            </summary>
            <param name="source">The source collection.</param>
        </member>
        <member name="P:Telerik.Reporting.CubeDataSourceParameterCollection.Item(System.String)">
            <summary>
            Gets the parameter with the specified name from the collection.
            </summary>
            <param name="name">
            Specifies the name of a parameter from the collection.
            </param>
            <returns>
            The parameter with the specified name from the collection.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.DataFieldMapping">
            <summary>
            Represents a mapping between a field from a data source and its
            corresponding short alias used for data binding in expressions.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.DataFieldMapping.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.DataFieldMapping"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.DataFieldMapping.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.DataFieldMapping"/> class.
            </summary>
            <param name="name">
            Specifies the name of the field for the mapping.
            </param>
            <param name="alias">
            Specifies the alias of the field for the mapping.
            </param>
        </member>
        <member name="P:Telerik.Reporting.DataFieldMapping.Name">
            <summary>
            Gets or sets the name of the field from the mapping.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.DataFieldMapping.Alias">
            <summary>
            Gets or sets the alias of the field from the mapping.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.DataFieldMappingCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.DataFieldMapping"/> objects.
            </summary>
            <remarks>
            Represents a collection of mappings for the fields of a data source and
            their corresponding short aliases used for data binding in expressions.
            </remarks>    
        </member>
        <member name="M:Telerik.Reporting.DataFieldMappingCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.DataFieldMappingCollection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.DataFieldMappingCollection.#ctor(Telerik.Reporting.DataFieldMapping[])">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.DataFieldMappingCollection"/> class.
            </summary>
            <param name="mappings">
            Specifies a range of mappings to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.DataFieldMappingCollection.#ctor(Telerik.Reporting.DataFieldMappingCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.DataFieldMappingCollection"/> class.
            </summary>
            <param name="mappings">
            Specifies a range of mappings to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.DataFieldMappingCollection.Contains(System.String)">
            <summary>
            Determines if the collection contains a mapping for the specified field.
            </summary>
            <param name="name">
            Specifies the name of a field from the collection.
            </param>
            <returns>
            <b>True</b> if a mapping for the specified field exists, <b>False</b> otherwise.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.DataFieldMappingCollection.Add(System.String,System.String)">
            <summary>
            Adds a new mapping for the specified field to the collection.
            </summary>
            <param name="name">
            Specifies the name of the field for the new mapping.
            </param>
            <param name="alias">
            Specifies the alias of the field for the new mapping.
            </param>
        </member>
        <member name="M:Telerik.Reporting.DataFieldMappingCollection.AddRange(Telerik.Reporting.DataFieldMapping[])">
            <summary>
            Adds a range of mappings to the collection.
            </summary>
            <param name="mappings">
            Specifies a range of mappings to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.DataFieldMappingCollection.AddRange(Telerik.Reporting.DataFieldMappingCollection)">
            <summary>
            Adds a range of mappings to the collection.
            </summary>
            <param name="mappings">
            Specifies a range of mappings to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.DataFieldMappingCollection.ToArray">
            <summary>
            Converts the collection to an array of mappings.
            </summary>
            <returns>
            Array of mappings contained in the collection.
            </returns>
        </member>
        <member name="P:Telerik.Reporting.DataFieldMappingCollection.Item(System.String)">
            <summary>
            Gets the mapping of the specified field from the collection.
            </summary>
            <param name="name">
            Specifies the name of a field from the collection.
            </param>
            <returns>
            The mapping of the specified field from the collection.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.DataSourceParameterCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.DataSourceParameter"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.DataSourceParameterCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.DataSourceParameterCollection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.DataSourceParameterCollection.#ctor(Telerik.Reporting.DataSourceParameter[])">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.DataSourceParameterCollection"/> class.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.DataSourceParameterCollection.#ctor(Telerik.Reporting.DataSourceParameterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.DataSourceParameterCollection"/> class.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.DataSourceParameterCollection.Contains(System.String)">
            <summary>
            Determines if the collection contains a parameter with the specified name.
            </summary>
            <param name="name">
            Specifies the name of a parameter from the collection.
            </param>
            <returns>
            <b>True</b> if a parameter with the specified name exists, <b>False</b> otherwise.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.DataSourceParameterCollection.Add(System.String)">
            <summary>
            Adds a new parameter with the specified name to the collection.
            </summary>
            <param name="name">
            Specifies the name of the new parameter to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.DataSourceParameterCollection.Add(System.String,System.Object)">
            <summary>
            Adds a new parameter with the specified name and value to the collection.
            </summary>
            <param name="name">
            Specifies the name of the new parameter to add to the collection.
            </param>
            <param name="value">
            Specifies the value of the new parameter to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.DataSourceParameterCollection.AddRange(Telerik.Reporting.DataSourceParameter[])">
            <summary>
            Adds a range of parameters to the collection.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.DataSourceParameterCollection.AddRange(Telerik.Reporting.DataSourceParameterCollection)">
            <summary>
            Adds a range of parameters to the collection.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.DataSourceParameterCollection.ToArray">
            <summary>
            Converts the collection to an array of parameters.
            </summary>
            <returns>
            Array of parameters contained in the collection.
            </returns>
        </member>
        <member name="P:Telerik.Reporting.DataSourceParameterCollection.Item(System.String)">
            <summary>
            Gets the parameter with the specified name from the collection.
            </summary>
            <param name="name">
            Specifies the name of a parameter from the collection.
            </param>
            <returns>
            The parameter with the specified name from the collection.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.EntityDataSource">
            <summary>
            Represents an Entity data model to data items.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ObjectDataSourceBase.Parameters">
            <summary>
            Gets a collection with <see cref="T:Telerik.Reporting.ObjectDataSourceParameter"/>s.
            </summary>
            <remarks>
            The <b>Parameters</b> property specifies a collection of parameters
            to be passed to the constructor or the method of the business object
            during data retrieval. If the <b>DataSource</b> property contains the 
            <see cref="T:System.Type"/> of a business object, and the <b>DataMember</b>
            property is set to null (Nothing in Visual Basic) or an empty string,
            the constructor with the specified parameters is invoked to create a
            new instance of the business object. If the <b>DataMember</b> property
            is set to a non-empty string that represents a valid method name, the
            parameters are passed to the method with the matching signature.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.EntityDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.EntityDataSource"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.EntityDataSource.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.EntityDataSource"/> class.
            </summary>
            <param name="context">
            Specifies the context used to connect to data.
            </param>
            <param name="contextMember">
            Specifies the context member used to connect to data.
            </param>
        </member>
        <member name="M:Telerik.Reporting.EntityDataSource.#ctor(System.String,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.EntityDataSource"/> class.
            </summary>
            <param name="connectionString">
            Specifies the connection string used to connect to data.
            </param>
            <param name="context">
            Specifies the context used to connect to data.
            </param>
            <param name="contextMember">
            Specifies the context member used to connect to data.
            </param>
        </member>
        <member name="P:Telerik.Reporting.EntityDataSource.ConnectionString">
            <summary>
            Gets or sets the connection string used to connect to data.
            </summary>
            <remarks>
            The <B>ConnectionString</B> property contains either a valid connection
            string or the name of a <see cref="T:System.Configuration.ConnectionStringSettings"/> in the
            application configuration file.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.EntityDataSource.Context">
            <summary>
            Gets or sets the context used to connect to data.
            </summary>
            <remarks>
            The <b>Context</b> property can contain either an instance of
            an context or the <see cref="T:System.Type"/> of such a context to be
            created at run time.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.EntityDataSource.ContextMember">
            <summary>
            Gets or sets the context member used to connect to data.
            </summary>
            <remarks>
            The <b>ContextMember</b> property contains the name of a property
            or a method of the context to be invoked during data retrieval.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.EntityDataSource.ObjectContext">
            <summary>
            Gets or sets the context used to connect to data.
            </summary>
            <remarks>
            The <b>Context</b> property can contain either an instance of
            an context or the <see cref="T:System.Type"/> of such a context to be
            created at run time.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.EntityDataSource.ObjectContextMember">
            <summary>
            Gets or sets the context member used to connect to data.
            </summary>
            <remarks>
            The <b>ContextMember</b> property contains the name of a property
            or a method of the context to be invoked during data retrieval.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.ObjectDataSource">
            <summary>
            Represents a business object to data items.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSource.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Reporting.ObjectDataSource"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSource.#ctor(System.Object,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Reporting.ObjectDataSource"/> class.
            </summary>
            <param name="dataSource">
            Specifies the data source object that is used to connect to data.
            </param>
            <param name="dataMember">
            Specifies the data source member that is used to connect to data.
            </param>
        </member>
        <member name="P:Telerik.Reporting.ObjectDataSource.DataSource">
            <summary>
            Gets or sets the data source object that is used to connect to data.
            </summary>
            <remarks>
            The <b>DataSource</b> property can contain either an instance of a
            business object or the <see cref="T:System.Type"/> of such a business object
            to be created at run time.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ObjectDataSource.DataMember">
            <summary>
            Gets or sets the data source member that is used to connect to data.
            </summary>
            <remarks>
            The <b>DataMember</b> property can contain the name of a property or
            a method of the business object to be invoked during data retrieval.
            If the <b>DataSource</b> property contains the <see cref="T:System.Type"/> of
            a business object, and the <b>DataMember</b> property is set to null
            (Nothing in Visual Basic) or an empty string, the constructor with
            the specified parameters is invoked to create a new instance of the
            business object.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.ObjectDataSourceParameter">
            <summary>
            Represents a parameter in an <see cref="T:Telerik.Reporting.ObjectDataSource"/> component.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.ObjectDataSourceParameter"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.ObjectDataSourceParameter"/> class.
            </summary>
            <param name="name">
            Specifies the name of the parameter.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameter.#ctor(System.String,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.ObjectDataSourceParameter"/> class.
            </summary>
            <param name="name">
            Specifies the name of the parameter.
            </param>
            <param name="dataType">
            Specifies the data type of the parameter.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameter.#ctor(System.String,System.Type,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.ObjectDataSourceParameter"/> class.
            </summary>
            <param name="name">
            Specifies the name of the parameter.
            </param>
            <param name="dataType">
            Specifies the data type of the parameter.
            </param>
            <param name="value">
            Specifies the value of the parameter.
            </param>
        </member>
        <member name="P:Telerik.Reporting.ObjectDataSourceParameter.DataType">
            <summary>
            Gets or sets the data type of the parameter.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ObjectDataSourceParameterCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.ObjectDataSourceParameter"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameterCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.ObjectDataSourceParameterCollection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameterCollection.#ctor(Telerik.Reporting.ObjectDataSourceParameter[])">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.ObjectDataSourceParameterCollection"/> class.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameterCollection.#ctor(Telerik.Reporting.ObjectDataSourceParameterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.ObjectDataSourceParameterCollection"/> class.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameterCollection.Contains(System.String)">
            <summary>
            Determines if the collection contains a parameter with the specified name.
            </summary>
            <param name="name">
            Specifies the name of a parameter from the collection.
            </param>
            <returns>
            <b>True</b> if a parameter with the specified name exists, <b>False</b> otherwise.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameterCollection.Add(System.String)">
            <summary>
            Adds a new parameter with the specified name to the collection.
            </summary>
            <param name="name">
            Specifies the name of the new parameter to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameterCollection.Add(System.String,System.Type)">
            <summary>
            Adds a new parameter with the specified name and data type to the collection.
            </summary>
            <param name="name">
            Specifies the name of the new parameter to add to the collection.
            </param>
            <param name="dataType">
            Specifies the data type of the new parameter to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameterCollection.Add(System.String,System.Type,System.Object)">
            <summary>
            Adds a new parameter with the specified name, data type and value to the collection.
            </summary>
            <param name="name">
            Specifies the name of the new parameter to add to the collection.
            </param>
            <param name="dataType">
            Specifies the data type of the new parameter to add to the collection.
            </param>
            <param name="value">
            Specifies the value of the new parameter to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameterCollection.AddRange(Telerik.Reporting.ObjectDataSourceParameter[])">
            <summary>
            Adds a range of parameters to the collection.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameterCollection.AddRange(Telerik.Reporting.ObjectDataSourceParameterCollection)">
            <summary>
            Adds a range of parameters to the collection.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameterCollection.ToArray">
            <summary>
            Converts the collection to an array of parameters.
            </summary>
            <returns>
            Array of parameters contained in the collection.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.ObjectDataSourceParameterCollection.Clone(Telerik.Reporting.ObjectDataSourceParameterCollection)">
            <summary>
            Clones the specified collection.
            </summary>
            <param name="source">The source collection.</param>
        </member>
        <member name="P:Telerik.Reporting.ObjectDataSourceParameterCollection.Item(System.String)">
            <summary>
            Gets the parameter with the specified name from the collection.
            </summary>
            <param name="name">
            Specifies the name of a parameter from the collection.
            </param>
            <returns>
            The parameter with the specified name from the collection.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.OpenAccessDataSource">
            <summary>
            Represents an Open Access data model to data items.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.OpenAccessDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.OpenAccessDataSource"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.OpenAccessDataSource.#ctor(System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.OpenAccessDataSource"/> class.
            </summary>
            <param name="connectionString">
            Specifies the connection string used to connect to data.
            </param>
            <param name="objectContext">
            Specifies the object context used to connect to data.
            </param>
            <param name="objectContextMember">
            Specifies the object context member used to connect to data.
            </param>
        </member>
        <member name="M:Telerik.Reporting.OpenAccessDataSource.#ctor(System.String,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.OpenAccessDataSource"/> class.
            </summary>
            <param name="connectionString">
            Specifies the connection string used to connect to data.
            </param>
            <param name="objectContext">
            Specifies the object context used to connect to data.
            </param>
            <param name="objectContextMember">
            Specifies the object context member used to connect to data.
            </param>
        </member>
        <member name="M:Telerik.Reporting.OpenAccessDataSource.#ctor(System.String,System.String,System.Object,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.OpenAccessDataSource"/> class.
            </summary>
            <param name="providerName">
            Specifies the managed provider name used to connect to data.
            </param>
            <param name="connectionString">
            Specifies the connection string used to connect to data.
            </param>
            <param name="objectContext">
            Specifies the object context used to connect to data.
            </param>
            <param name="objectContextMember">
            Specifies the object context member used to connect to data.
            </param>
        </member>
        <member name="P:Telerik.Reporting.OpenAccessDataSource.ProviderName">
            <summary>
            Gets or sets the managed provider name used to connect to data.
            </summary>
            <remarks>
            If the <b>ProviderName</b> property is set to null (Nothing in Visual Basic)
            or an empty string, the default provider is <b>System.Data.SqlClient</b>.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.OpenAccessDataSource.ConnectionString">
            <summary>
            Gets or sets the connection string used to connect to data.
            </summary>
            <remarks>
            The <B>ConnectionString</B> property contains either a valid connection
            string or the name of a <see cref="T:System.Configuration.ConnectionStringSettings"/> in the
            application configuration file.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.OpenAccessDataSource.ObjectContext">
            <summary>
            Gets or sets the object context used to connect to data.
            </summary>
            <remarks>
            The <b>ObjectContext</b> property can contain either an instance of
            an object context or the <see cref="T:System.Type"/> of such a context to be
            created at run time.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.OpenAccessDataSource.ObjectContextMember">
            <summary>
            Gets or sets the object context member used to connect to data.
            </summary>
            <remarks>
            The <b>ObjectContextMember</b> property contains the name of a property
            or a method of the object context to be invoked during data retrieval.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.AssemblyRef">
            <summary>
            Represents an assembly reference.
            </summary>
            <seealso cref="T:Telerik.Reporting.OpenClientDataSource"/>
            <seealso cref="P:Telerik.Reporting.OpenClientDataSource.Dependencies"/>
        </member>
        <member name="M:Telerik.Reporting.AssemblyRef.FromFile(System.String)">
            <summary>
            Generates an <b>AssemblyRef</b> from assembly .dll file location
            </summary>
            <param name="assemblyPath"></param>
            <returns>Returns the resulting <b>AssemblyRef</b></returns>
        </member>
        <member name="M:Telerik.Reporting.AssemblyRef.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>Returns a string that represents the current object.</returns>
        </member>
        <member name="P:Telerik.Reporting.AssemblyRef.Name">
            <summary>
            The name of the .dll file containing the .NET assembly 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.AssemblyRef.RawAssembly">
            <summary>
            Assembly bytes in common object file format (COFF)-based image containing an emitted assembly
            </summary>
        </member>
        <member name="T:Telerik.Reporting.AssemblyRefCollection">
            <summary>
            Represents a collection of Assembly References.
            </summary>
            <seealso cref="T:Telerik.Reporting.OpenClientDataSource"/>
            <seealso cref="P:Telerik.Reporting.OpenClientDataSource.Dependencies"/>
        </member>
        <member name="M:Telerik.Reporting.AssemblyRefCollection.#ctor">
            <summary>
            AssemblyRefCollection default constructor.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.AssemblyRefCollection.#ctor(System.Collections.Generic.IEnumerable{Telerik.Reporting.AssemblyRef})">
            <summary>
            Creates an AssemblyRefCollection from <b>AssemblyRef</b> enumerable.
            </summary>
            <param name="items">Assembly references enumerable from which to initialize the collection.</param>
        </member>
        <member name="M:Telerik.Reporting.AssemblyRefCollection.AddFromAssemblyPath(System.String)">
            <summary>
            Adds the assembly pointed from the <b>assemblyPath</b> 
            along with the rest of the .dll files located in the same directory.
            </summary>
            <param name="assemblyPath">The path of the leading assembly</param>
        </member>
        <member name="M:Telerik.Reporting.AssemblyRefCollection.Clone(Telerik.Reporting.AssemblyRefCollection)">
            <summary>
            Clones the specified collection.
            </summary>
            <param name="source">The source collection.</param>
        </member>
        <member name="M:Telerik.Reporting.AssemblyRefCollection.Add(System.String)">
            <summary>
            Adds a single assembly apointed from the <b>assemblyPath</b> parameter.
            </summary>
            <param name="assemblyPath">The path of the assembly to add a reference from</param>
        </member>
        <member name="T:Telerik.Reporting.Data.ByteArrayConverter">
            <summary>
            Allows a property of type Object to be edited like a string property in the Properties window
            </summary>
        </member>
        <member name="T:Telerik.Reporting.OpenClientConnection">
            <summary>
            Represents the required information to connect to OpenEdge OpenClient
            </summary>
        </member>
        <member name="P:Telerik.Reporting.OpenClientConnection.Url">
            <summary>
            Gets or sets the URL of the AppServer endpoint
            </summary>
            <value>Absolute URL of the AppServer endpoint</value>
        </member>
        <member name="P:Telerik.Reporting.OpenClientConnection.User">
            <summary>
            Gets or sets the user name required to access the AppServer
            </summary>
            <value>The username required to access the AppServer</value>
        </member>
        <member name="P:Telerik.Reporting.OpenClientConnection.Password">
            <summary>
            Gets or sets the password required to access the AppServer
            </summary>
            <value>The password required to access the AppServer</value>
        </member>
        <member name="P:Telerik.Reporting.OpenClientConnection.AppServerInfo">
            <summary>
            Gets or sets the additional settings information of the AppServer
            </summary>
            <value>The app server info.</value>
        </member>
        <member name="P:Telerik.Reporting.OpenClientConnection.SessionModel">
            <summary>
            Gets or sets the session model supported by the AppServer operating mode.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.OpenClientConnection.ConnectionSessionModel">
            <summary>
            Represents the session model supported by the AppServer operating mode.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.OpenClientConnection.ConnectionSessionModel.SessionManaged">
            <summary>
            Managed session model
            </summary>
        </member>
        <member name="F:Telerik.Reporting.OpenClientConnection.ConnectionSessionModel.SessionFree">
            <summary>
            Session free model
            </summary>
        </member>
        <member name="T:Telerik.Reporting.OpenClientDataSource">
            <summary>
            Represents an dedicated component for retrieving data using OpenEdge OpenClient.NET proxy to ABL procedure.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.OpenClientDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.OpenAccessDataSource"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.OpenClientDataSource.DataSourceType">
            <summary>
            Gets or sets the data source object that is used to connect to data.
            </summary>
            <remarks>
            The <b>DataSourceType</b> property can contain <see cref="T:System.Type"/> name
            that implements OpenEdge OpenClient AppObject
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.OpenClientDataSource.Dependencies">
            <summary>
            The assembly references collection containing the assembly
            containing the type used in the <see cref="P:Telerik.Reporting.OpenClientDataSource.DataSourceType"/> property
            along with all assembly dependencies.
            </summary>
            <remarks>
            The assembly containing the data retrieval type should be the
            first one in the collection. Usually the other dependencies are 
            <b>Progress.Messages.dll</b> and <b>Progress.o4glrt.dll</b>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.OpenClientDataSource.Procedure">
            <summary>
            Gets or sets the name of the procedure that is used to retrieve the data.
            </summary>
            <remarks>
            The <b>Procedure</b> property contains the method name 
            of the AppObject to be invoked during data retrieval.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.OpenClientDataSource.DataTable">
            <summary>
            Gets or sets the name of the DataTable to be used from a the returned DataSet.
            Applicable only if the procedure retrieves DataSet.
            </summary>
            <remarks>
            The <b>DataTable</b> property contains the name 
            of the DataTable to be used as data.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.OpenClientDataSource.Connection">
            <summary>
            Gets the connection that is used to connect to OpendEdge OpenClient.
            </summary>
            <remarks>
            The <b>Connection</b> property contains all necessary options used to connect to OpenEdge AppServer.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.SqlDataSource">
            <summary>
            Represents an SQL database to data items.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.SqlDataSource"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSource.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.SqlDataSource"/> class.
            </summary>
            <param name="connectionString">
            Specifies the connection string used to connect to data.
            </param>
            <param name="selectCommand">
            Specifies the SQL select statement or stored procedure to execute.
            </param>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSource.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.SqlDataSource"/> class.
            </summary>
            <param name="providerName">
            Specifies the managed provider name used to connect to data.
            </param>
            <param name="connectionString">
            Specifies the connection string used to connect to data.
            </param>
            <param name="selectCommand">
            Specifies the SQL select statement or stored procedure to execute.
            </param>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSource.#ctor(System.String,System.String,System.String,Telerik.Reporting.SqlDataSourceCommandType)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.SqlDataSource"/> class.
            </summary>
            <param name="providerName">
            Specifies the managed provider name used to connect to data.
            </param>
            <param name="connectionString">
            Specifies the connection string used to connect to data.
            </param>
            <param name="selectCommand">
            Specifies the SQL select statement or stored procedure to execute.
            </param>
            <param name="selectCommandType">
            Specifies how the select command string to be interpreted.
            </param>
        </member>
        <member name="P:Telerik.Reporting.SqlDataSource.ConnectionString">
            <summary>
            Gets or sets the connection string used to connect to data.
            </summary>
            <remarks>
            The <B>ConnectionString</B> property contains either a valid connection
            string or the name of a <see cref="T:System.Configuration.ConnectionStringSettings"/> in the
            application configuration file.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.SqlDataSource.ProviderName">
            <summary>
            Gets or sets the managed provider name used to connect to data.
            </summary>
            <remarks>
            If the <b>ProviderName</b> property is set to null (Nothing in Visual Basic)
            or an empty string, the default provider is <b>System.Data.SqlClient</b>.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.SqlDataSource.SelectCommand">
            <summary>
            Gets or sets the SQL select statement or stored procedure to execute.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.SqlDataSource.SelectCommandType">
            <summary>
            Gets or sets a value indicating how the select command to be interpreted.
            </summary>
            <remarks>
            One of the <see cref="T:Telerik.Reporting.SqlDataSourceCommandType"/> enumeration values.
            The default value of the <b>SelectCommandType</b> property is <b>Text</b>.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.SqlDataSource.Parameters">
            <summary>
            Gets a collection with data source parameters.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.SqlDataSource.CommandTimeout">
            <summary>
            Gets or sets the wait time in seconds before terminating the attempt to retrieve data.
            </summary>
            <remarks>
            The provided value should be valid for the currently used data provider.
            </remarks>
            <value>
            The time in seconds to wait before terminating the attempt to retrieve data.
            The default value of the <b>CommandTimeout</b> property is 30 seconds.
            </value>
        </member>
        <member name="T:Telerik.Reporting.SqlDataSourceCommandType">
            <summary>
            Specifies how a command string is interpreted.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.SqlDataSourceCommandType.Text">
            <summary>
            An SQL text command. (Default)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.SqlDataSourceCommandType.StoredProcedure">
            <summary>
            The name of a stored procedure.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.SqlDataSourceParameter">
            <summary>
            Represents a parameter in a <see cref="T:Telerik.Reporting.SqlDataSource"/> component.
            </summary>    
        </member>
        <member name="M:Telerik.Reporting.SqlDataSourceParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.SqlDataSourceParameter"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSourceParameter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.SqlDataSourceParameter"/> class.
            </summary>
            <param name="name">
            Specifies the name of the parameter.
            </param>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSourceParameter.#ctor(System.String,System.Data.DbType)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.SqlDataSourceParameter"/> class.
            </summary>
            <param name="name">
            Specifies the name of the parameter.
            </param>
            <param name="dataType">
            Specifies the data type of the parameter.
            </param>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSourceParameter.#ctor(System.String,System.Data.DbType,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.SqlDataSourceParameter"/> class.
            </summary>
            <param name="name">
            Specifies the name of the parameter.
            </param>
            <param name="dataType">
            Specifies the data type of the parameter.
            </param>
            <param name="value">
            Specifies the value of the parameter.
            </param>
        </member>
        <member name="P:Telerik.Reporting.SqlDataSourceParameter.DbType">
            <summary>
            Gets or sets the data type of the parameter.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.SqlDataSourceParameterCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.SqlDataSourceParameter"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSourceParameterCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.SqlDataSourceParameterCollection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSourceParameterCollection.#ctor(Telerik.Reporting.SqlDataSourceParameter[])">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.SqlDataSourceParameterCollection"/> class.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSourceParameterCollection.#ctor(Telerik.Reporting.SqlDataSourceParameterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.SqlDataSourceParameterCollection"/> class.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSourceParameterCollection.Contains(System.String)">
            <summary>
            Determines if the collection contains a parameter with the specified name.
            </summary>
            <param name="name">
            Specifies the name of a parameter from the collection.
            </param>
            <returns>
            <b>True</b> if a parameter with the specified name exists, <b>False</b> otherwise.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSourceParameterCollection.Add(System.String)">
            <summary>
            Adds a new parameter with the specified name to the collection.
            </summary>
            <param name="name">
            Specifies the name of the new parameter to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSourceParameterCollection.Add(System.String,System.Data.DbType)">
            <summary>
            Adds a new parameter with the specified name and data type to the collection.
            </summary>
            <param name="name">
            Specifies the name of the new parameter to add to the collection.
            </param>
            <param name="dataType">
            Specifies the data type of the new parameter to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSourceParameterCollection.Add(System.String,System.Data.DbType,System.Object)">
            <summary>
            Adds a new parameter with the specified name, data type and value to the collection.
            </summary>
            <param name="name">
            Specifies the name of the new parameter to add to the collection.
            </param>
            <param name="dataType">
            Specifies the data type of the new parameter to add to the collection.
            </param>
            <param name="value">
            Specifies the value of the new parameter to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSourceParameterCollection.AddRange(Telerik.Reporting.SqlDataSourceParameter[])">
            <summary>
            Adds a range of parameters to the collection.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSourceParameterCollection.AddRange(Telerik.Reporting.SqlDataSourceParameterCollection)">
            <summary>
            Adds a range of parameters to the collection.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.SqlDataSourceParameterCollection.ToArray">
            <summary>
            Converts the collection to an array of parameters.
            </summary>
            <returns>
            Array of parameters contained in the collection.
            </returns>
        </member>
        <member name="P:Telerik.Reporting.SqlDataSourceParameterCollection.Item(System.String)">
            <summary>
            Gets the parameter with the specified name from the collection.
            </summary>
            <param name="name">
            Specifies the name of a parameter from the collection.
            </param>
            <returns>
            The parameter with the specified name from the collection.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.IWebServiceRequestSettings">
            <summary>
            Represents a single request settings.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceAuthentication.Username">
            <summary>
            Username.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceAuthentication.Password">
            <summary>
            Password.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.WebServiceBasicAuthentication">
            <summary>
            Basic authentication scheme.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.WebServiceDataSource">
            <summary>
            Represents web service data to data items.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.WebServiceDataSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.WebServiceDataSource"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceDataSource.ServiceUrl">
            <summary>
            The URL the request is sent to. Required.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceDataSource.DataFormat">
            <summary>
            The expected data format of the response.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceDataSource.DataSelector">
            <summary>
            The data selector expression which will be used to query and filter the data returned from the web service.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceDataSource.DataEncoding">
            <summary>
            Data encoding. Default is UTF-8.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceDataSource.Method">
            <summary>
            HTTP request method.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceDataSource.Body">
            <summary>
            The body of the POST method.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceDataSource.Parameters">
            <summary>
            Gets a collection of query parameters.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceDataSource.Authentication">
            <summary>
            Represents authentication data.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.WebServiceParameter">
            <summary>
            Represents a parameter in a <see cref="T:Telerik.Reporting.WebServiceDataSource"/> component.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.WebServiceParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.WebServiceParameter"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.WebServiceParameter.#ctor(System.String,Telerik.Reporting.WebServiceParameterType)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.WebServiceParameter"/> class.
            </summary>
            <param name="name">
            Specifies the name of the parameter.
            </param>
            <param name="type">
            Specifies the type of the parameter.
            </param>
        </member>
        <member name="M:Telerik.Reporting.WebServiceParameter.#ctor(System.String,Telerik.Reporting.WebServiceParameterType,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.WebServiceParameter"/> class.
            </summary>
            <param name="name">
            Specifies the name of the parameter.
            </param>
            <param name="type">
            Specifies the type of the parameter.
            </param>
            <param name="value">
            Specifies the value of the parameter.
            </param>
        </member>
        <member name="P:Telerik.Reporting.WebServiceParameter.WebServiceParameterType">
            <summary>
            Gets or sets the type of the parameter.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.WebServiceParameterCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.WebServiceParameter"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.WebServiceParameterCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.WebServiceParameterCollection"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.WebServiceParameterCollection.#ctor(Telerik.Reporting.WebServiceParameter[])">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.WebServiceParameterCollection"/> class.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.WebServiceParameterCollection.#ctor(Telerik.Reporting.WebServiceParameterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.WebServiceParameterCollection"/> class.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.WebServiceParameterCollection.Contains(System.String)">
            <summary>
            Determines if the collection contains a parameter with the specified name.
            </summary>
            <param name="name">
            Specifies the name of a parameter from the collection.
            </param>
            <returns>
            <b>True</b> if a parameter with the specified name exists, <b>False</b> otherwise.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.WebServiceParameterCollection.Add(System.String,Telerik.Reporting.WebServiceParameterType)">
            <summary>
            Adds a new parameter with the specified name and data type to the collection.
            </summary>
            <param name="name">
            Specifies the name of the new parameter to add to the collection.
            </param>
            <param name="type">
            Specifies the type of the new parameter to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.WebServiceParameterCollection.Add(System.String,Telerik.Reporting.WebServiceParameterType,System.Object)">
            <summary>
            Adds a new parameter with the specified name, data type and value to the collection.
            </summary>
            <param name="name">
            Specifies the name of the new parameter to add to the collection.
            </param>
            <param name="type">
            Specifies the data type of the new parameter to add to the collection.
            </param>
            <param name="value">
            Specifies the value of the new parameter to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.WebServiceParameterCollection.AddRange(Telerik.Reporting.WebServiceParameter[])">
            <summary>
            Adds a range of parameters to the collection.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.WebServiceParameterCollection.AddRange(Telerik.Reporting.WebServiceParameterCollection)">
            <summary>
            Adds a range of parameters to the collection.
            </summary>
            <param name="parameters">
            Specifies a range of parameters to add to the collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.WebServiceParameterCollection.ToArray">
            <summary>
            Converts the collection to an array of parameters.
            </summary>
            <returns>
            Array of parameters contained in the collection.
            </returns>
        </member>
        <member name="P:Telerik.Reporting.WebServiceParameterCollection.Item(System.String)">
            <summary>
            Gets the parameter with the specified name from the collection.
            </summary>
            <param name="name">
            Specifies the name of a parameter from the collection.
            </param>
            <returns>
            The parameter with the specified name from the collection.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.WebServiceParameterType">
            <summary>
            Specifies the purpose of the <see cref="T:Telerik.Reporting.WebServiceParameter"/>.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.WebServiceParameterType.Inline">
            <summary>
            Inline. Used to parameterize a chunck of the request URL path component.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.WebServiceParameterType.Query">
            <summary>
            Query. Used to add a parameter to the query component of the URL.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.WebServiceParameterType.Header">
            <summary>
            Header. Used to add a field in the HTTP request header
            </summary>
        </member>
        <member name="F:Telerik.Reporting.WebServiceParameterType.Cookie">
            <summary>
            Cookie. Used to send a HTTP cookie with the HTTP request.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.WebServiceRequestMethod">
            <summary>
            Specifies the HTTP request method.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.WebServiceRequestMethod.Get">
            <summary>
            GET. (Default)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.WebServiceRequestMethod.Post">
            <summary>
            POST.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.WebServiceResponseFormat">
            <summary>
            Specifies the response data format.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.WebServiceResponseFormat.Json">
            <summary>
            JSON. (Default)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.WebServiceResponseFormat.Text">
            <summary>
            Plain text.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.WebServiceTwoStepAuthentication">
            <summary>
            2-step authentication using a token.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceTwoStepAuthentication.ResponseFormat">
            <summary>
            The expected data format of the response.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceTwoStepAuthentication.LoginMethod">
            <summary>
            Specifies the HTTP request method to be used.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceTwoStepAuthentication.Body">
            <summary>
            The body of the login HTTP request. Applicable only for POST HTTP request method.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceTwoStepAuthentication.Parameters">
            <summary>
            The parameters of the HTTP request to be applied.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceTwoStepAuthentication.LoginUrl">
            <summary>
            This URL generates the authentication token or session key that allows you to access the API.
            Required.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceTwoStepAuthentication.TokenPath">
            <summary>
            This is a regular expression that allows us to retrieve the authentication or session key 
            from the response received via the <see cref="P:Telerik.Reporting.WebServiceTwoStepAuthentication.LoginUrl"/>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceTwoStepAuthentication.LogoutMethod">
            <summary>
            Specifies the HTTP request method to be used .
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebServiceTwoStepAuthentication.LogoutUrl">
            <summary>
            This is used if the resource features a lockout for having too many sessions open.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Data.ObjectValueConverter">
            <summary>
            Allows a property of type Object to be edited like a string property in the Properties window
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Data.SimpleCollectionConverter`1">
            <summary>
            Converts the collection to string returning the count of items in it.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Telerik.Reporting.Data.SimpleCollectionConverter`1.GetSingleName">
            <summary>
            Parameter; Binding ...
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Data.SimpleCollectionConverter`1.GetPluralName">
            <summary>
            Parameters; Bindings ...
            </summary>
        </member>
        <member name="T:Telerik.Reporting.SimpleType">
            <summary>
            Represents type options.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.SimpleType.Boolean">
            <summary>
            Values of type <see cref="T:System.Boolean"/> are accepted.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.SimpleType.DateTime">
            <summary>
            Values of type <see cref="T:System.DateTime"/> are accepted.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.SimpleType.Integer">
            <summary>
            Values of type <see cref="T:System.Int16"/>, <see cref="T:System.Int32"/>,
            or <see cref="T:System.Int64"/> are accepted. Internally the values are converted to <see cref="T:System.Int64"/>.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.SimpleType.Float">
            <summary>
            Values of type <see cref="T:System.Single"/> or <see cref="T:System.Double"/> are accepted. Internally the values are converted to <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.SimpleType.Decimal">
            <summary>
            Values of type <see cref="T:System.Single"/> or <see cref="T:System.Double"/> are accepted. Internally the values are converted to <see cref="T:System.Decimal"/>.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.SimpleType.String">
            <summary>
            Values of type <see cref="T:System.String"/> are accepted.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Data.SRCategoryAttribute">
            <summary>
            Summary description for SRCategoryAttribute.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Backup">
            <summary>
            BACKUP: Save Backup Version of the File (40h)
            The BACKUP record specifies whether Microsoft Excel should save backup 
            versions of a file.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BaseBiffRecord">
            <summary>
            Base class for all BIFF records.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.BaseBiffRecord.HeaderLength">
            <summary>
            RecordType (2 bytes) + Length Entry (2 bytes) = 4 bytes.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Excel97.BaseBiffRecord.RecordType">
            <summary>
            The unique record identifier.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Excel97.BaseBiffRecord.Length">
            <summary>
            The length of the record in bytes.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.IRecord">
            <summary>
            Interface for records that have type and data.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Backup.fBackupFile">
            <summary>
            = 1 if Microsoft Excel should save a backup version of the file
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BiffCell.FontAttributes">
            <summary>
            FontAttributes
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BiffCell.FontBoldness">
            <summary>
            FontBoldness
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BiffCell.FontScripts">
            <summary>
            FontScripts
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BiffCell.FontUnderlines">
            <summary>
            FontUnderlines
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BiffCell.DiagonalDirection">
            <summary>
            DiagonalDirection
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BiffCell.HorizontalAlignments">
            <summary>
            HorizontalAlignments
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BiffCell.VerticalAlignments">
            <summary>
            VerticalAlignments
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BiffCell.ReadingOrder">
            <summary>
            ReadingOrder
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BiffCell.TextRotate">
            <summary>
            TextRotate
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Blank">
            <summary>
            BLANK: Cell Value, Blank Cell (201h)
            A BLANK record describes an empty cell. The rw field contains the 
            0-based row number. The col field contains the 0-based column number.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Blank.rw">
            <summary>
            Row
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Blank.col">
            <summary>
            Column
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Blank.ixfe">
            <summary>
            Index to the XF record
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BOF">
            <summary>
            BOF: Beginning of File (809h)
            The BOF record marks the beginning of the Book stream in the BIFF file. 
            It also marks the beginning of record groups (or "substreams" of the 
            Book stream) for sheets in the workbook. 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.BOF.version">
            <summary>
            BIFF version.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.BOF.substreamType">
            <summary>
            Type of the following data: 
                0x0005 = Workbook globals
                0x0006 = Visual Basic module
                0x0010 = Worksheet
                0x0020 = Chart
                0x0040 = Macro sheet
                0x0100 = Workspace file
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.BOF.rupBuild">
            <summary>
            Build identifier.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.BOF.rupYear">
            <summary>
            Build year.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.BOF.bfh">
            <summary>
            File history flags.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.BOF.sfo">
            <summary>
            Lowest BIFF version.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BookBool">
            <summary>
            BOOKBOOL: Workbook Option Flag (DAh)
            This record saves a workbook option flag.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.BookBool.fNoSaveSupp">
            <summary>
            =1 if the Save External Link Values option is turned off (Options 
            dialog box, Calculation tab)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Border">
            <summary>
            Border
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BorderKind">
            <summary>
            BorderKind
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Borders">
            <summary>
            Borders
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BorderStyle">
            <summary>
            BorderStyle
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BorderWeight">
            <summary>
            BorderWeight
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BoundSheet">
            <summary>
            BOUNDSHEET: Sheet Information (85h)
            This record stores the sheet name, sheet type, and stream position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.BoundSheet.lbPlyPos">
            <summary>
            Stream position of the start of the BOF record for the sheet
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.BoundSheet.grbit">
            <summary>
            Option flags
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.BoundSheet.rgch">
            <summary>
            Worksheet name.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.BRK">
            <summary>
            Page break structure.
            Each element of the rgbrk structure contains three 2-byte integers: 
            the first specifies the row of the break, the second specifies the 
            starting column, and the third specifies the ending column for the 
            break. All row and column numbers are 1-based, and the breaks occur 
            after the row or column. This array is sorted by row, and then by 
            starting/ending column. No two page breaks may overlap.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.CalcCount">
            <summary>
            CALCCOUNT: Iteration Count (0Ch)
            The CALCCOUNT record stores the Maximum Iterations option from the 
            Options dialog box, Calculation tab.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.CalcCount.cIter">
            <summary>
            Iteration count
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.CalcMode">
            <summary>
            CALCMODE: Calculation Mode (0Dh)
            The CALCMODE record stores options from the Options dialog box, 
            Calculation tab.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.CalcMode.fAutoRecalc">
            <summary>
            Calculation mode:
            = 0 for manual
            = 1 for automatic
            = –1 for automatic, except tables
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.CodePage">
            <summary>
            CODEPAGE: Default Code Page (42h)
            The CODEPAGE record stores the default code page (character set) that 
            was in use when the workbook was saved.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.CodePage.cv">
            <summary>
            Code page the file is saved in.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.ColInfo">
            <summary>
            COLINFO: Column Formatting Information (7Dh)
            The COLINFO record describes the column formatting for a range of 
            columns.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.ColInfo.colFirst">
            <summary>
            First formatted column (0-based)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.ColInfo.colLast">
            <summary>
            Last formatted column (0-based)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.ColInfo.coldx">
            <summary>
            Column width, in 1/256s of a character width
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.ColInfo.ixfe">
            <summary>
            Index to XF record that contains the default format for the column
            (for more information about the XF records, see "XF" on page 426)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.ColInfo.grbit">
            <summary>
            Options
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.ColInfo.reserved">
            <summary>
            Reserved; must be 0 (zero)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Excel97.Column.Width">
            <summary>
            The width of the column in characters of the default font
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Continue">
            <summary>
            CONTINUE: Continues Long Records (3Ch)
            Records that are longer than 8228 bytes (2084 bytes in BIFF7 and 
            earlier) must be split into several records. The first section appears 
            in the base record; subsequent sections appear in CONTINUE records.
            In BIFF8, the TXO record is always followed by CONTINUE records that 
            store the string data and formatting runs.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Continue.dataContinue">
            <summary>
            Continuation of record data
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Country">
            <summary>
            COUNTRY: Default Country and WIN.INI Country (8Ch)
            This record contains localization information.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Country.iCountryDef">
            <summary>
            Default country index.
            The default country index, iCountryDef, is determined by the 
            localized version of Microsoft Excel that created the BIFF file. 
            For example, all BIFF files created by the U.S. version of 
            Microsoft Excel have iCountryDef = 1.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Country.iCountryWinIni">
            <summary>
            Country index from the Win.ini file.
            If Microsoft Excel for Windows created the BIFF file, 
            iCountryWinIni is equal to the index that corresponds to the 
            country setting in the Win.ini file.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.DBCell">
            <summary>
            DBCELL: Stream Offsets (D7h)
            The DBCELL record stores stream offsets for the BIFF file. There is one 
            DBCELL record for each block of ROW records and associated cell records.
            Each block can contain data for up to 32 rows. For more information 
            about the DBCELL record, see "Finding Cell Records in BIFF Files" on 
            page 440.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.DBCell.dbRtrw">
            <summary>
            Offset from the start of the DBCELL record to the start of the 
            first ROW record in the block; this is an offset to an earlier 
            position in the stream.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.DBCell.rgdb">
            <summary>
            Array of stream offsets (2 bytes each). For more information, see 
            "Finding Cell Records in BIFF Files" on page 440.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.DefaultRowHeight">
            <summary>
            DEFAULTROWHEIGHT: Default Row Height (225h)
            The DEFAULTROWHEIGHT record specifies the height of all undefined rows 
            on the sheet. The miyRw field contains the row height in units of 
            1/20th of a point. This record does not affect the row height of any 
            rows that are explicitly defined.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.DefaultRowHeight.grbit">
            <summary>
            Option flags (see the following table)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.DefaultRowHeight.miyRw">
            <summary>
            Default row height
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.DefColWidth">
            <summary>
            DEFCOLWIDTH: Default Width for Columns (55h)
            The DEFCOLWIDTH record specifies the width, measured in characters, for 
            columns not explicitly sized in the COLWIDTH record.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.DefColWidth.cchdefColWidth">
            <summary>
            Default width of the columns.
            Excel adds some extra space to the default width, depending on the 
            default font and default font size. The algorithm how to exactly 
            calculate the resulting column width is not known. 
            Example: The default width of 8 set in this record results in a 
            column width of 8.43 using Arial font with a size of 10 points.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Delta">
            <summary>
            DELTA: Iteration Increment (10h)
            The DELTA record stores the Maximum Change value from the Options 
            dialog box, Calculation tab. The number is in 8-byte IEEE 
            floating-point format.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Delta.numDelta">
            <summary>
            Maximum iteration change.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Dimensions">
            <summary>
            DIMENSIONS: Cell Table Size (200h)
            The DIMENSIONS record contains the minimum and maximum bounds of the 
            sheet. It provides a concise indication of the sheet size.
            Note that both the rwMac and colMac fields are greater by 1 than the 
            actual last row and column. For example, a worksheet that exists 
            between cells B3 and D6 would have the following dimensions in the 
            dimensions record (note rows and columns are 0-based in BIFF files in 
            which row 1 and column A are both coded as 0):
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Dimensions.rwMic">
            <summary>
            First defined row on the sheet
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Dimensions.rwMac">
            <summary>
            Last defined row on the sheet, plus 1
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Dimensions.colMac">
            <summary>
            Last defined column on the sheet, plus 1
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Dimensions.colMic">
            <summary>
            First defined column on the sheet
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Dimensions.reserved">
            <summary>
            Reserved; must be 0 (zero)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.DSF">
            <summary>
            DSF: Double Stream File (161h)
            The DSF record stores a flag that indicates if the workbook is a double
            stream file. Double Stream files contain both BIFF8 and BIFF7 workbooks.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.DSF.fDSF">
            <summary>
            1 if the workbook is a double stream file, 0 otherwise.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.EOF">
            <summary>
            EOF: End of File (0Ah)
            The EOF record marks the end of the workbook stream or the end of one of 
            the substreams in the workbook stream. It has no record data field and 
            is simply 0A000000h.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.ExternSheet">
            <summary>
            EXTERNSHEET: External Reference (17h)
            The EXTERNSHEET record specifies externally referenced workbooks. 
            In BIFF7 and earlier, multiple EXTERNSHEET records form a table in the 
            file. The cxals field of the EXTERNCOUNT record specifies the number of 
            EXTERNSHEET records. You should not change the order of EXTERNSHEET 
            records. In BIFF8, the SUPBOOK record stores the encoded pathname and 
            file name. There is one SUPBOOK record for each externally referenced 
            workbook. The EXTERNSHEET record contains a table (rgXTI) that points 
            to the SUPBOOK records. Several ptgs in a BIFF8 formula contain an ixti 
            field; this is the 0-based index to the rgXTI table in the EXTERNSHEET 
            record. An externally referenced workbook is called a source workbook. 
            The workbook that refers to it is called a dependent workbook.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.ExternSheet.rgXTI">
            <summary>
            Array of XTI structures.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.ExternSheet.XTI">
            <summary>
            XTI
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.EXTSST">
            <summary>
            EXTSST: Extended Shared String Table (FFh)
            The EXTSST record contains a hash table that optimizes external copy 
            operations.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.EXTSST.dsst">
            <summary>
            Number of strings in each bucket
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.EXTSST.rgInstinf">
            <summary>
            Array of ISSTINF structures
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Font">
            <summary>
            FONT: Font Description (31h)
            The workbook font table contains at least five FONT records. FONT 
            records are numbered as follows: ifnt = 00h (the first FONT record in 
            the table), ifnt = 01h, ifnt = 02h, ifnt = 03h, ifnt = 05h (minimum 
            table), and then ifnt = 06h, ifnt = 07h, and so on. Notice that 
            ifnt = 04h never appears in a BIFF file. This is for 
            backward-compatibility with previous versions of Microsoft Excel. If 
            you read FONT records, remember to index the table correctly, skipping 
            ifnt = 04h.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Font.dyHeight">
            <summary>
            Height of the font (in units of 1/20th of a point).
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Font.grbit">
            <summary>
            Font attributes.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Font.icv">
            <summary>
            Index to the color palette. In other words Color.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Font.bls">
            <summary>
            Bold style; a number from 100dec to 1000dec (64h to 3E8h) that 
            indicates the character weight ("boldness"). The default values are 
            190h for normal text and 2BCh for bold text.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Font.sss">
            <summary>
            Superscript/subscript:
            00h = None
            01h = Superscript
            02h = Subscript
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Font.uls">
            <summary>
            Underline style:
            00h = None
            01h = Single
            02h = Double
            21h = Single Accounting
            22h = Double Accounting
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Font.bFamily">
            <summary>
            Font family, as defined by the Windows API LOGFONT structure.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Font.bCharSet">
            <summary>
            Character set, as defined by the Windows API LOGFONT structure.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Font.reserved">
            <summary>
            Reserved. :)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Font.cch">
            <summary>
            Length of the font name.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Font.unicodeFlag">
            <summary>
            Unicode Flag
            0 = Compressed
            1 = Uncompressed
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Font.rgch">
            <summary>
            Font name.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Font.LOGFONT">
            <summary>
            LOGFONT
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Format">
            <summary>
            FORMAT: Number Format (41Eh)
            The FORMAT record describes a number format in the workbook.
            All the FORMAT records should appear together in a BIFF file. The order 
            of FORMAT records in an existing BIFF file should not be changed. You 
            can write custom number formats in a file, but they should be added at 
            the end of the existing FORMAT records.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Format.ifmt">
            <summary>
            Format index code (for public use only).
            Microsoft Excel uses the ifmt field to identify built-in formats 
            when it reads a file that was created by a different localized 
            version. For more information about built-in formats, see "XF" on 
            page 426.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Format.cch">
            <summary>
            Length of the format string.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Format.grbit">
            <summary>
            Format string attributes.
            1 = Uncompressed Unicode
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Format.rgch">
            <summary>
            Number format string.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Telerik.Reporting.Excel97.FunctionGroupCount" -->
        <member name="F:Telerik.Reporting.Excel97.FunctionGroupCount.fnGroup">
            <summary>
            Number of built-in function groups.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.GridSet">
            <summary>
            GRIDSET: State Change of Gridlines Option (82h)
            This record indicates that the user changed the state of the Gridlines 
            option in the Page Setup dialog box, Sheet tab.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.GridSet.fGridSet">
            <summary>
            = 1 if the user has ever changed the setting of the Gridlines option
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Guts">
            <summary>
            GUTS: Size of Row and Column Gutters (80h)
            This record contains the size of the row and column gutters, measured 
            in screen units. The row and column gutters are the spaces that contain 
            outline symbols. They are located above column headings and to the left 
            of row headings.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Guts.dxRwGut">
            <summary>
            Size of the row gutter that appears to the left of the rows
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Guts.dyColGut">
            <summary>
            Size of the column gutter that appears above the columns
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Guts.iLevelRwMac">
            <summary>
            Maximum outline level (for the row gutter)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Guts.iLevelColMac">
            <summary>
            Maximum outline level (for the column gutter)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.HCenter">
            <summary>
            HCENTER: Center Between Horizontal Margins (83h)
            If the Horizontally option is selected on the Margins tab in the Page 
            Setup dialog box, fHCenter = 1.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.HCenter.fHCenter">
            <summary>
            = 1 if the sheet is to be centered between horizontal margins when 
            printed
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.HideObj">
            <summary>
            HIDEOBJ: Object Display Options (8Dh)
            The HIDEOBJ record stores options selected in the Options dialog box,
            View tab.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.HideObj.fHideObj">
            <summary>
            = 2 if the Hide All option is turned on
            = 1 if the Show Placeholders option is turned on
            = 0 if the Show All option is turned on
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.HorizontalPageBreaks">
            <summary>
            HORIZONTALPAGEBREAKS: Explicit Row Page Breaks (1Bh)
            The HORIZONTALPAGEBREAKS record contains a list of explicit row page
            breaks. The cbrk field contains the number of page breaks. Each element 
            of the rgbrk structure contains three 2-byte integers: the first 
            specifies the row of the break, the second specifies the starting 
            column, and the third specifies the ending column for the break. All 
            row and column numbers are 1-based, and the breaks occur after the row 
            or column. This array is sorted by row, and then by starting/ending 
            column. No two page breaks may overlap.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.HorizontalPageBreaks.cbrk">
            <summary>
            Number of page breaks.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.HorizontalPageBreaks.rgbrk">
            <summary>
            Array of brk structures.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Index">
            <summary>
            INDEX: Index Record (20Bh)
            Microsoft Excel writes an INDEX record immediately after the BOF record 
            for each worksheet substream in a BIFF file. For more information about 
            the INDEX record, see "Finding Cell Records in BIFF Files" on page 440.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Index.reserved1">
            <summary>
            Reserved; must be 0 (zero)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Index.rwMic">
            <summary>
            First row that exists on the sheet
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Index.rwMac">
            <summary>
            Last row that exists on the sheet, plus 1
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Index.reserved2">
            <summary>
            Reserved; must be 0 (zero)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Index.dbcellsOffsets">
            <summary>
            Array of file offsets to the DBCELL records for each block of ROW 
            records. A block contains ROW records for up to 32 rows. For more 
            information, see "Finding Cell Records in BIFF Files" on page 440.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.INSTINF.ib">
            <summary>
            The stream position where the strings begin (stream pointer into 
            the SST record)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.INSTINF.cb">
            <summary>
            Offset into the SST record that points to where the bucket begins
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.INSTINF.reserved">
            <summary>
            Reserved; must be 0 (zero)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.InterfaceEnd">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.InterfaceHdr">
            <summary>
            INTERFACEHDR: Beginning of User Interface Records (E1h)
            This record marks the beginning of the user interface section of 
            the Book (Workbook) stream. In BIFF7 and earlier, it has no record 
            data field. In BIFF8 and later, the INTERFACEHDR record data field 
            contains a 2-byte word that is the code page. This is exactly the 
            same as the cv field of the the CODEPAGE record.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.InterfaceHdr.cv">
            <summary>
            Code page the file is saved in
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Iteration">
            <summary>
            ITERATION: Iteration Mode (11h)
            The ITERATION record stores the Iteration option from the Options 
            dialog box, Calculation tab.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Iteration.fIter">
            <summary>
            = 1 if the Iteration option is on
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Label">
            <summary>
            LABEL: Cell Value, String Constant (204h)
            A LABEL record describes a cell that contains a string constant. The rw 
            field contains the 0-based row number. The col field contains the 
            0-based column number. The string length is contained in the cch field 
            and must be in the range of 0000h–00FFh (0–255). The string itself is 
            contained in the rgch field.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Label.rw">
            <summary>
            Row
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Label.col">
            <summary>
            Column
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Label.ixfe">
            <summary>
            Index to the XF record
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Label.cch">
            <summary>
            Length of the string
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Label.rgch">
            <summary>
            The string
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.LabelSST">
            <summary>
            LABELSST: Cell Value, String Constant/SST (FDh)
            A LABELSST record describes a cell that contains a string constant from the shared string table, which is new to BIFF8. The rw field contains the 0-based row number. The col field contains the 0-based column number. The string itself is contained in an SST (shared string table) record, and the isst field is a 0-based index into the shared string table.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.LabelSST.rw">
            <summary>
            Row
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.LabelSST.col">
            <summary>
            Column
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.LabelSST.isst">
            <summary>
            Index into the SST record
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.LabelSST.ixfe">
            <summary>
            Index to the XF record
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Margin">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Margin.marginSize">
            <summary>
            In inches.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.MergeCells">
            <summary>
            This record contains the addresses of merged cell ranges in the current 
            sheet. If the record size exceeds the limit, it is not continued with a 
            CONTINUE record, but another self-contained MERGEDCELLS record is 
            started. 
            The limit of 8224 bytes per record results in a maximum number of 1027 
            merged ranges.
            Example: A sheet contains 1040 merged cell ranges. The first MERGEDCELLS 
            record contains a list of 1027 range addresses (the leading number of 
            ranges is 1027 too). Following a second MERGEDCELLS record with the 
            remaining 13 merged ranges.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.MergeCells.cmcs">
            <summary>
            Number of merged ranges
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.MergeCells.rgRef">
            <summary>
            Cell range address list with merged ranges
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.MMS">
            <summary>
            MMS: ADDMENU/DELMENU Record Group Count (C1h)
            This record stores the number of ADDMENU groups and DELMENU groups in 
            the Book stream.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.MMS.caitm">
            <summary>
            Number of ADDMENU record groups.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.MMS.cditm">
            <summary>
            Number of DELMENU record groups.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.MsoDrawing">
            <summary>
            MSODRAWING: Microsoft Office Drawing (ECh)
            This record contains a drawing object provided by the Microsoft Office 
            Drawing tool. For more information on this file format, see the article "Microsoft Office Drawing File Format" on the Microsoft Developer Network Online Web site (http://www.microsoft.com/msdn/).
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.MulBlank">
            <summary>
            MULBLANK: Multiple Blank Cells (BEh)
            The MULBLANK record stores up to the equivalent of 256 BLANK records; 
            the MULBLANK record is a file size optimization. The number of ixfe 
            fields can be determined from the ColLast field and is equal to 
            (colLast - colFirst + 1). The maximum length of the MULBLANK record is 
            (256 x 2 + 10) = 522 bytes, because Microsoft Excel has at most 256 
            columns. Note that storing 256 blank cells in the MULBLANK record takes 
            522 bytes as compared with 2560 bytes for 256 BLANK records.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.MulBlank.colFirst">
            <summary>
            Column number (0-based) of the first column of the multiple RK 
            record
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.MulBlank.colLast">
            <summary>
            Last column containing the BLANKREC structure
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.MulBlank.row">
            <summary>
            Row number (0-based)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Name">
            <summary>
            NAME: Defined Name (18h)
            The NAME record describes a defined name in the workbook.
            The NAME record stores two types of names: global names and local names. 
            A global name is defined for an entire workbook, and a local name is 
            defined on a single sheet. For example, MyName is a global name, whereas 
            Sheet1!MyName is a local name.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Name.grbit">
            <summary>
            Option flags
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Name.chKey">
            <summary>
            Keyboard shortcut
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Name.cch">
            <summary>
            Length of the name text
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Name.cce">
            <summary>
            Length of the name definition
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Name.ixals">
            <summary>
            Index to the sheet that contains this name, if the name is a local 
            name. The ixals field in the NAME record will be nonzero for local 
            names and will index the list of EXTERNSHEET records for the sheets 
            in the workbook. The following field, itab, is equal to ixals.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Name.itab">
            <summary>
            This field is equal to ixals.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Name.cchCustMenu">
            <summary>
            Length of the custom menu text
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Name.cchDescription">
            <summary>
            Length of the description text
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Name.lcchHelpTopic">
            <summary>
            Length of the help topic text
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Name.cchStatusText">
            <summary>
            Length of the status bar text
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Name.unicodeByte">
            <summary>
            Unicode Flag
            0 = Compressed
            1 = Uncompressed
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Name.rgch">
            <summary>
            Name text
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Name.rgce">
            <summary>
            Name definition
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.NineteenFourRecord">
            <summary>
            1904: 1904 Date System (22h)
            The 1904 record stores the date system used by Microsoft Excel.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.NineteenFourRecord.f1904">
            <summary>
            = 1 if the 1904 date system is used
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Number">
            <summary>
            NUMBER: Cell Value, Floating-Point Number (203h)
            A NUMBER record describes a cell containing a constant floating-point 
            number. The rw field contains the 0-based row number. The col field 
            contains the 0-based column number. The number is contained in the num 
            field in 8-byte IEEE floating-point format.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Number.rw">
            <summary>
            Row
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Number.col">
            <summary>
            Column
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Number.ixfe">
            <summary>
            Index to the XF record
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Number.num">
            <summary>
            Floating-point number value
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Obj">
            <summary>
            OBJ: Describes a Graphic Object (5Dh)
            BIFF files may contain several different variations of the OBJ record. 
            They correspond to the graphic objects and dialog box controls available 
            in Microsoft Excel: line object, rectangle object, check box object, 
            and so on.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Obj.objId">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Obj.pictureData">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Obj.reserveData">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Pane">
            <summary>
            PANE: Number of Panes and Their Position (41h)
            The PANE record describes the number and position of unfrozen panes in 
            a window.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Pane.verticalSplit">
            <summary>
            Vertical position of the split; 0 (zero) if none
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Pane.horizontalSplit">
            <summary>
            Horizontal position of the split; 0 (zero) if none
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Pane.rwTop">
            <summary>
            Top row visible in the bottom pane
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Pane.colLeft">
            <summary>
            Leftmost column visible in the right pane
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Pane.pnnAct">
            <summary>
            Pane number of the active pane
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.PasswordRecord">
            <summary>
            PASSWORD: Protection Password (13h)
            The PASSWORD record contains the encrypted password for a protected 
            sheet or workbook. Note that this record specifies a sheet-level or 
            workbook-level protection password, as opposed to the FILEPASS record, 
            which specifies a file password.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.PasswordRecord.wPassword">
            <summary>
            Encrypted password.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Precision">
            <summary>
            PRECISION: Precision (0Eh)
            The PRECISION record stores the Precision As Displayed option from the 
            Options dialog box, Calculation tab.
            </summary>s
        </member>
        <member name="F:Telerik.Reporting.Excel97.Precision.fFullPrecision">
            <summary>
            = 0 if Precision As Displayed option is selected
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.PrintGridLines">
            <summary>
            PRINTGRIDLINES: Print Gridlines Flag (2Bh)
            This record stores the Gridlines option from the Page Setup dialog box, 
            Sheet tab.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.PrintGridLines.fPrintGrid">
            <summary>
            = 1 to print gridlines
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.PrintHeaders">
            <summary>
            PRINTHEADERS: Print Row/Column Labels (2Ah)
            The PRINT HEADERS record stores the Row And Column Headings option from 
            the Page Setup dialog box, Sheet tab.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.PrintHeaders.fPrintRwCol">
            <summary>
            = 1 to print row and column headings
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Prot4Rev">
            <summary>
            PROT4REV: Shared Workbook Protection Flag (1AFh)
            The PROT4REV record stores a shared-workbook protection flag.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Prot4Rev.fRevLock">
            <summary>
            = 1 if the Sharing with Track Changes option is on (Protect Shared 
            Workbook dialog box)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Prot4RevPass">
            <summary>
            PROT4REVPASS: Shared Workbook Protection Password (1BCh)
            The PROT4REV record stores an encrypted password for shared-workbook 
            protection.    
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Prot4RevPass.wRevPass">
            <summary>
            Encrypted password (if this field is 0 (zero), there is no Shared 
            Workbook Protection Password; the password is entered in the 
            Protect Shared Workbook dialog box)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Protect">
            <summary>
            PROTECT: Protection Flag (12h)
            The PROTECT record stores the protection state for a sheet or workbook.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Protect.fLock">
            <summary>
            = 1 if the sheet or workbook is protected
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Range">
            <summary>
            Range
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Excel97.Range.CalculateAnchor(Telerik.Reporting.Excel97.Range.Direction,System.Double,System.UInt16,System.UInt16@,System.Double@)" -->
        <member name="M:Telerik.Reporting.Excel97.Range.GetDimension(Telerik.Reporting.Excel97.Range.Direction,System.UInt16)">
            <summary>
            Gets a column width or row height in pixels.
            </summary>
            <param name="dir">Horizontal for column width, Vertical for row 
            height.</param>
            <param name="index">The zero based index of the col/row</param>
            <returns>The dimension of the col/row in pixels.</returns>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Range.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.RecalcID">
            <summary>
            This record contains an ID that marks when a worksheet was last
            recalculated. It's an optimization Excel uses to determine if it
            needs to  recalculate the spreadsheet when it's opened. So far, only
            the two values              0xC1 0x01 0x00 0x00 0x80 0x38 0x01 0x00
            (do not recalculate) and    0xC1 0x01 0x00 0x00 0x60 0x69 0x01 0x00 
            have been seen. If the field isNeeded is set to false (default), then 
            this record is swallowed during the serialization process
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.RecalcID.rt">
            <summary>
            rt
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.RecalcID.reserved">
            <summary>
            reserved
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.RecalcID.dwBuild">
            <summary>
            dwBuild
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.RefMode">
            <summary>
            REFMODE: Reference Mode (0Fh)
            The REFMODE record stores the Reference Style option from the Options dialog box, General tab.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.RefMode.fRefA1">
            <summary>
            Reference mode:
            = 1 for A1 mode
            = 0 for R1C1 mode
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.RefreshAll">
            <summary>
            REFRESHALL: Refresh Flag (1B7h)
            This record stores an option flag.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.RefreshAll.fRefreshAll">
            <summary>
            = 1 then Refresh All should be done on all external data ranges and 
            PivotTables when loading the workbook (the default is = 0)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Excel97.Row.Height">
            <summary>
            The height of the row in points
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Excel97.Row.AutoSize">
            <summary>
            Determines whether the row should be autosized by Excel.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.RowRecord">
            <summary>
            ROW: Describes a Row (208h)
            A ROW record describes a single row on a Microsoft Excel sheet. ROW 
            records and their associated cell records occur in blocks of up to 
            32 rows. Each block ends with a DBCELL record. For more information 
            about row blocks and about optimizing your code when searching for cell 
            records, see "Finding Cell Records in BIFF Files" on page 440.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.RowRecord.rw">
            <summary>
            Row number.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.RowRecord.colMic">
            <summary>
            First defined column in the row.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.RowRecord.colMax">
            <summary>
            Last defined column in the row, plus 1.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.RowRecord.miyRw">
            <summary>
            The miyRw field contains the row height, in units of 1/20th of a 
            point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.RowRecord.irwMac">
            <summary>
            Used by Microsoft Excel to optimize loading the file; if you are 
            creating a BIFF file, set irwMac to 0.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.RowRecord.reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.RowRecord.grbit">
            <summary>
            Option flags.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.RowRecord.ixfe">
            <summary>
            If fGhostDirty = 1 (see grbit field), this is the index to the XF 
            record for the row. Otherwise, this field is undefined.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Excel97.RowRecord.RowHeight">
            <summary>
            Sets the row height in points
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.SaveRecalc">
            <summary>
            SAVERECALC: Recalculate Before Save (5Fh)
            If the Recalculate Before Save option is selected in the Options dialog 
            box, Calculation tab, then fSaveRecalc = 1.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.SaveRecalc.fSaveRecalc">
            <summary>
            = 1 to recalculate before saving
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Selection">
            <summary>
            SELECTION: Current Selection (1Dh)
            The SELECTION record stores the selection.s
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Selection.pnn">
            <summary>
            Number of the pane described
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Selection.rwAct">
            <summary>
            Row number of the active cell
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Selection.colAct">
            <summary>
            Column number of the active cell
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Selection.irefAct">
            <summary>
            Ref number of the active cell
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Selection.cref">
            <summary>
            Number of refs in the selection
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Selection.rgref">
            <summary>
            Array of refs
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Setup">
            <summary>
            SETUP: Page Setup (A1h)
            The SETUP record stores options and measurements from the Page Setup 
            dialog box.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Setup.iPaperSize">
            <summary>
            Paper size (see fNoPls in the following table)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Setup.iScale">
            <summary>
            Scaling factor (see fNoPls in the following table)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Setup.iPageStart">
            <summary>
            Starting page number
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Setup.iFitWidth">
            <summary>
            Fit to width; number of pages
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Setup.iFitHeight">
            <summary>
            Fit to height; number of pages
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Setup.grbit">
            <summary>
            Option flags (see the following table)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Setup.iRes">
            <summary>
            Print resolution (see fNoPls in the following table)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Setup.iVRes">
            <summary>
            Vertical print resolution (see fNoPls in the following table)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Setup.numHdr">
            <summary>
            Header margin (IEEE number)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Setup.numFtr">
            <summary>
            Footer margin (IEEE number)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Setup.iCopies">
            <summary>
            Number of copies (see fNoPls in the following table)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.SST">
            <summary>
            SST: Shared String Table (FCh)
            The SST record contains string constants.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.SST.cstTotal">
            <summary>
            Total number of strings in the shared string table and extended 
            string table (EXTSST record)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.SST.cstUnique">
            <summary>
            Number of unique strings in the shared string table.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.SST.rgb">
            <summary>
            Array of unique strings.
            The rgb field contains an array of unicode strings.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.SSTHelper">
            <summary>
            SSTHelper
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.StyleBIFF">
            <summary>
            STYLE: Style Information (293h)
            Each style in a Microsoft Excel workbook, whether built-in or 
            user-defined, requires a style record in the BIFF file. When Microsoft 
            Excel saves the workbook, it writes the STYLE records in alphabetical 
            order, which is the order in which the styles appear in the drop-down 
            list box.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.StyleBIFF.ixfe">
            <summary>
            Index to the style XF record.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.StyleBIFF.istyBuiltIn">
            <summary>
            Built-in style numbers:
            = 00h Normal
            = 01h RowLevel_n
            = 02h ColLevel_n
            = 03h Comma
            = 04h Currency
            = 05h Percent
            = 06h Comma[0]
            = 07h Currency[0]
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.StyleBIFF.iLevel">
            <summary>
            Level of the outline style RowLevel_n or ColLevel_n.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.SupBook">
            <summary>
            SUPBOOK: Supporting Workbook (1AEh)
            This record stores data about a supporting external workbook.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.SupBook.cTab">
            <summary>
            Number of tabs in the workbook.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.SupBook.ownWorkBook">
            <summary>
            WTF?
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.TabID">
            <summary>
            TABID: Sheet Tab Index Array (13Dh)
            This record contains an array of sheet tab index numbers. The record is 
            used by the Shared Lists feature. The sheet tab indexes have type short 
            int (2 bytes each). The index numbers are 0-based and are assigned when 
            a sheet is created; the sheets retain their index numbers throughout 
            their lifetime in a workbook. If you rearrange the sheets in a workbook,
            the rgiTab array will change to reflect the new sheet arrangement. This 
            record does not appear in BIFF5 files.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.TabID.rgiTab">
            <summary>
            Array of tab indexes.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.UsesElfs">
            <summary>
            USESELFS: Natural Language Formulas Flag (160h)
            This record stores a flag bit.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.UsesElfs.fUsesElfs">
            <summary>
            = 1 if this file was written by a version of Microsoft Excel that 
            can use natural-language formula input
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.VCenter">
            <summary>
            VCENTER: Center Between Vertical Margins (84h)
            If the Center On Page Vertically option is on in the Page Setup dialog 
            box, Margins tab, then fVCenter = 1.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.VCenter.fVCenter">
            <summary>
            = 1 if the sheet is to be centered between the vertical margins 
            when printed
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Window1">
            <summary>
            WINDOW1: Window Information (3Dh)
            The WINDOW1 record contains workbook-level window attributes. The xWn 
            and yWn fields contain the location of the window in units of 1/20th of 
            a point, relative to the upper-left corner of the Microsoft Excel 
            window client area. The dxWn and dyWn fields contain the window size, 
            also in units of 1/20th of a point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window1.xWn">
            <summary>
            Horizontal position of the window.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window1.yWn">
            <summary>
            Vertical position of the window.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window1.dxWn">
            <summary>
            Width of the window.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window1.dyWn">
            <summary>
            Height of the window.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window1.grbit">
            <summary>
            Option flags:
                Bit 0: = 1 if the window is hidden
                Bit 1: = 1 if the window is currently displayed as an icon
                Bit 2: Reserved
                Bit 3: = 1 if the horizontal scroll bar is displayed
                Bit 4: = 1 if the vertical scroll bar is displayed
                Bit 5: = 1 if the workbook tabs are displayed
                Bit 6: Reserved
                Bit 7: Reserved
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window1.itabCur">
            <summary>
            Index of the selected workbook tab (0-based).
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window1.itabFirst">
            <summary>
            Index of the first displayed workbook tab (0-based).
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window1.ctabSel">
            <summary>
            Number of workbook tabs that are selected.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window1.wTabRatio">
            <summary>
            Ratio of the width of the workbook tabs to the width of the 
            horizontal scroll bar; to obtain the ratio, convert to decimal and 
            then divide by 1000.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Window2">
            <summary>
            WINDOW2: Sheet Window Information (23Eh)
            The WINDOW2 record contains window attributes for a sheet in a workbook.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window2.grbit">
            <summary>
            Option flags
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window2.rwTop">
            <summary>
            Top row visible in the window
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window2.colLeft">
            <summary>
            Leftmost column visible in the window
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window2.icvHdr">
            <summary>
            Index to color value for row/column headings and gridlines
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window2.wScaleSLV">
            <summary>
            Zoom magnification in page break preview
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window2.wScaleNormal">
            <summary>
            Zoom magnification in normal view
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.Window2.reserved">
            <summary>
            Reserved
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.WindowProtect">
            <summary>
            WINDOWPROTECT: Windows Are Protected (19h)
            The WINDOWPROTECT record stores an option from the Protect Workbook 
            dialog box.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.WindowProtect.fLockWn">
            <summary>
            = 1 if the workbook windows are protected.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Workbook.WorksheetCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.Worksheet">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.WriteAccess">
            <summary>
            WRITEACCESS: Write Access User Name (5Ch)
            This record contains the user name, which is the name you type when 
            you install Microsoft Excel.
            For more info on how to write Unicode string in Excel, see 2.3.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.WriteAccess.cch">
            <summary>
            Length of the Unicode string.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.WriteAccess.grbit">
            <summary>
            Option flags
                1 = Uncompressed (16-bit characters)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.WriteAccess.name">
            <summary>
            User name
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.WSBool">
            <summary>
            WSBOOL: Additional Workspace Information (81h)
            This record stores information about workspace settings.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.WSBool.grbit">
            <summary>
            Option flags
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.XF">
            <summary>
            XF: Extended Format (E0h)
            The XF record stores formatting properties. There are two different XF 
            records, one for cell records and another for style records. The fStyle 
            bit is true if the XF is a style XF. The ixfe of a cell record 
            (BLANK, LABEL, NUMBER, RK, and so on) points to a cell XF record, and 
            the ixfe of a STYLE record points to a style XF record. Note that in 
            previous BIFF versions, the record number for the XF record was 43h.
            Prior to BIFF5, all number format information was included in FORMAT 
            records in the BIFF file. Beginning with BIFF5, many of the built-in 
            number formats were moved to an public table and are no longer saved 
            with the file as FORMAT records. You still use the ifmt to associate 
            the built-in number formats with an XF record. However, the public 
            number formats are no longer visible in the BIFF file.    
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.XF.ifnt">
            <summary>
            Index to the FONT record.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.XF.ifmt">
            <summary>
            Index to the FORMAT record.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.XF.bitLockedHiddenStyle">
            <summary>
            Bits about hiding, locking and others.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.XF.bitAlignWrapJustLastRotate">
            <summary>
            Alignment, Wrap, Rotation bits.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.XF.bitIndentShrinkToFitMergeCell">
            <summary>
            Shrink to fit and merger bits.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.XF.bitBorderLineStyle">
            <summary>
            Border Line Style
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.XF.bitIndexColorPaletteBorder">
            <summary>
            Bits about indices to color pallete of borders.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.XF.bitIndexColorPaletteTopBottomDiag">
            <summary>
            Bits about indices to color pallete of borders.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Excel97.XF.bitIndexColorPaletteFill">
            <summary>
            Index to the color pallete for the fill.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Excel97.XL9File">
            <summary>
            This is a 0-byte record, so it only needs to exist in order to tell 
            Excel 2000 that the file has been written to by Excel 2000.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.RenderingItem.GetClientBounds">
            <summary>
            Get client bounds in points
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.CheckBox.DrawText(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.Brush,System.Drawing.StringFormat,System.Single)">
            <summary>
            Draws rotated text lines in an image.
            </summary>
            <param name="angle">In degrees.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.ExcelUtility.ResolveColumnName(System.Int32)">
            <summary>
            The columNumber starts from 1, i.e. 1 = "A", 2 = "B", etc.
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.ExcelRendering.RenderingSectionContainer">
            <summary>
            Base class for items that contain only sections (Report, Group, SubReport, etc.)
            </summary>    
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.RenderingItemContainer.AdjustItemForRendering(Telerik.Reporting.ExcelRendering.RenderingItem)">
            <summary>
            Checks weather the rendering item is completely outside its container.
            Adjust the Top and Left positions if the item's location is negative.
            </summary>
            <param name="renderingItem"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.RenderingItemContainer.Intersects(Telerik.Reporting.Drawing.RectangleU,Telerik.Reporting.Drawing.RectangleU,Telerik.Reporting.Drawing.UnitType,System.Single)">
            <summary>
            Checks whether two rectangles intersect with each other 
            using the specified measurement unit and precision.
            </summary>
            <param name="rect1"></param>
            <param name="rect2"></param>
            <param name="workingUnit"></param>
            <param name="precision"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.RenderingItemContainer.AdjustItemsPosition(Telerik.Reporting.Drawing.UnitType,System.Single)">
            <summary>
            Arranges the items so that they do not overlap each other and
            adjusts the position to preserve the minimal space between them.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.RenderingItemContainer.LRTBComparer(Telerik.Reporting.ExcelRendering.RenderingItem,Telerik.Reporting.ExcelRendering.RenderingItem)">
            <summary>
            Compares items to arrange them in Left-Right Top-Bottom order.
            </summary>
            <param name="item1"></param>
            <param name="item2"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.RenderingItemContainer.TBLRComparer(Telerik.Reporting.ExcelRendering.RenderingItem,Telerik.Reporting.ExcelRendering.RenderingItem)">
            <summary>
            Compares items to arrange them in Top-Bottom Left-Right order.
            </summary>
            <param name="item1"></param>
            <param name="item2"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.ExcelRendering.HorizontalAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ExcelRendering.LineStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.NativePageSectionBuilder.GetPageSection(Telerik.Reporting.ExcelRendering.IPartContainer,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Generates the old school Excel page section content.
            For an example, open Excel -> Page Setup -> Header/Footer.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.NativePageSectionBuilder.GetPartTextBoxes(Telerik.Reporting.ExcelRendering.IPartContainer,System.Single,System.Single)">
            <summary>
            Get the PartTextBox items which will be placed inside the current Page Section part.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.NativePageSectionBuilder.CreatePart(System.String,System.Collections.Generic.IEnumerable{Telerik.Reporting.ExcelRendering.IPartTextBox},System.Int32,System.String@)">
            <summary>
            Creates the content for a single part in the page section.
            Excel page sections are separated in 3 parts (left, center, right).
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.NativePageSectionBuilder.CreateTextRun(Telerik.Reporting.ExcelRendering.IPartTextBox,Telerik.Reporting.ExcelRendering.IPartTextBox,System.Int32,System.String@)">
            <summary>
            Translates the content of a single text box to Excel page section formatted text.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.NativePageSectionBuilder.CreateText(System.String,System.Int32)">
            <summary>
            Creates the text for the text box.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.NativePageSectionBuilder.CreateFormat(Telerik.Reporting.ExcelRendering.IPartTextBox,Telerik.Reporting.ExcelRendering.IPartTextBox,System.String@,System.String@)">
            <summary>
            Creates the format of the text box text.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.NativePageSectionBuilder.CompareLeftTop(Telerik.Reporting.ExcelRendering.IPartItem,Telerik.Reporting.ExcelRendering.IPartItem)">
            <summary>
            Compares items to arrange them in Left then Top order.
            </summary>
            <param name="item1"></param>
            <param name="item2"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.PictureBox.ProcessImage(System.Drawing.Image,Telerik.Reporting.Drawing.RectangleU@,System.Drawing.Image@)">
            <summary>
            Modifies the image according to its sizing mode.
            </summary>
            <param name="originalImage"></param>
            <param name="excelRectangle"></param>
            <param name="excelImage"></param>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.PictureBox.GetAdjustedImage(System.Drawing.Image,Telerik.Reporting.Drawing.RectangleU,Telerik.Reporting.Drawing.RectangleU)">
            <summary>
            Adjust the image to fit the destination rectangle.
            </summary>
            <param name="originalImage"></param>
            <param name="srcRectangle"></param>
            <param name="dstRectangle"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.ExcelRendering.Report.UseNativePageHeader">
            <summary>
            If true, the PageHeader is rendered as a Excel page header.
            If false, the PageHeader is rendered as a sequence of frozen rows.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ExcelRendering.Report.UseNativePageFooter">
            <summary>
            If true, the PageFooter section is rendered as a true Excel page Footer.
            If false, the PageFooter section is rendered as worksheet cells.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ExcelRendering.Report.Parameters">
            <summary>
            Parameters
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.TextBox.AdjustRotationModelWithAlignment">
            <summary>
            Adjusts the horizontal/vertical alignment so that our rotation model is more consistent with the Excel rotation model
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ExcelRendering.TextBox.ConvertToExcelValue(System.Object,System.Boolean)">
            <summary>
            Converts the processing textbox value to the format or type that is Excel-compliant.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.ExcelRendering.VerticalAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ExcelRendering.Weight">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.IAggregateFunction">
            <summary>
            Provides custom (user-defined) implementation for aggregate function.
            </summary>
            <remarks>
            Implement this interface to provide custom logic when aggregating values
            over a set of rows from the data source.
            Apply the <see cref="T:Telerik.Reporting.Expressions.AggregateFunctionAttribute"/> class to the
            aggregate implementation in order to set the name and description 
            of the aggregate function. If no <see cref="T:Telerik.Reporting.Expressions.AggregateFunctionAttribute"/> 
            is defined, the name of the aggregate function is the name of the actual type 
            that implements the <b>IAggregateFunction</b> interface. 
            The word "Aggregate" is trimmed from the type name if it ends with it.
            </remarks>
            <example>
            This example shows how to implement user-defined aggregate.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Expressions\IAggregateFunctionSnippets.cs" region="AggregateFunctionImplementation"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Expressions\IAggregateFunctionSnippets.vb" region="AggregateFunctionImplementation"/>
            </example>
        </member>
        <member name="M:Telerik.Reporting.Expressions.IAggregateFunction.Init">
            <summary>
            Initializes the aggregate function instance. Implement to set the 
            aggregate in its initial state ready to accumulate and merge values.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Expressions.IAggregateFunction.Accumulate(System.Object[])">
            <summary>
            Accumulates the passed values in the aggregate.
            </summary>
            <param name="values">
            The values that will be accumulated on a single accumulation operation.
            The length of the values array equals to the number of parameters that
            the defined aggregate expects (most common one).
            </param>
        </member>
        <member name="M:Telerik.Reporting.Expressions.IAggregateFunction.Merge(Telerik.Reporting.Expressions.IAggregateFunction)">
            <summary>
            Merges another instance of the same aggregate function into the current instance.
            Implement this method to allow the reporting engine to merge the two resulting
            aggregates coming from two subsets of the aggregated data source rows.
            </summary>
            <param name="aggregateFunction">
            Another instance of the same aggregate function that will be merged
            in the current instance.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Expressions.IAggregateFunction.GetValue">
            <summary>
            Gets the value that the aggregate instance keeps currently accumulated.
            </summary>
            <returns>
            Returns the currently accumulated value.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.Expressions.LeafNumberAggregate">
            <summary>
            Used for RowNumber/ColumnNumber
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Expressions.CompareAggregate.Compare(System.Object,System.Object)" -->
        <member name="T:Telerik.Reporting.Expressions.AggregateFunctionAttribute">
            <summary>
            Used to specify the usage and the design time description of the
            aggregate function. This class cannot be inherited. 
            </summary>
            <example>
            This example shows the usage of the attribute.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Expressions\IAggregateFunctionSnippets.cs" region="AggregateFunctionImplementation" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Expressions\IAggregateFunctionSnippets.vb" region="AggregateFunctionImplementation" />
            </example>
        </member>
        <member name="F:Telerik.Reporting.Expressions.AggregateFunctionAttribute.Default">
            <summary>
            Returns the default instance of the attribute with all its
            properties set to default values.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Expressions.AggregateFunctionAttribute.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Expressions.AggregateFunctionAttribute"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Expressions.AggregateFunctionAttribute.IsDefaultAttribute">
            <summary>
            Determines if this attribute is the default.
            </summary>
            <returns>
            <c>true</c> if the attribute is the default value for this attribute
            class;  otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Expressions.AggregateFunctionAttribute.Equals(System.Object)">
            <summary>
            Indicates whether this attribute instance and a specified object are
            equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns><c>true</c> if obj is equal to this instance; otherwise,
            <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.Reporting.Expressions.AggregateFunctionAttribute.GetHashCode">
            <summary>
            Returns the hash code for this attribute instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="P:Telerik.Reporting.Expressions.AggregateFunctionAttribute.Name">
            <summary>
            Gets the name of the aggregate function as it should be used in the
            expressions.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Expressions.AggregateFunctionAttribute.Description">
            <summary>
            Gets the description of the aggregate function displayed in the
            expression builder.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Expressions.AggregateFunctionAttribute.IsVisible">
            <summary>
            Gets a value indicating whether the aggregate should be shown at
            design time. Default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Expressions.AggregateFunctionAttribute.ReturnType">
            <summary>
            Gets or sets the return type of the aggregate function as it should be used in the
            expressions.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.AggregateFunctionParameterAttribute">
            <summary>
            Used to specify the usage and the design time description of the
            aggregate function parameter.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Expressions.AggregateFunctionParameterAttribute.Default">
            <summary>
            Returns the default instance of the attribute with all its
            properties set to default values.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Expressions.AggregateFunctionParameterAttribute.Equals(System.Object)">
            <summary>
            Indicates whether this attribute instance and a specified object are
            equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns><c>true</c> if obj is equal to this instance; otherwise,
            <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.Reporting.Expressions.AggregateFunctionParameterAttribute.GetHashCode">
            <summary>
            Returns the hash code for this attribute instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="P:Telerik.Reporting.Expressions.AggregateFunctionParameterAttribute.Name">
            <summary>
            Gets or sets the name of the aggregate function parameter as it should be used in the
            expressions.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Expressions.AggregateFunctionParameterAttribute.Description">
            <summary>
            Gets or sets the description of the aggregate function parameter as it should be used in the
            expressions.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Expressions.AggregateFunctionParameterAttribute.PropertyType">
            <summary>
            Gets or sets the type of the aggregate function parameter as it should be used in the
            expressions.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Expressions.AggregateFunctionParameterAttribute.Position">
            <summary>
            Gets or sets the zero-based position of the aggregate function parameter as it should be used in the
            expressions.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.DataStorageHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Expressions.DataStorageHelper.ResultSqlType(Telerik.Reporting.Expressions.StorageType,Telerik.Reporting.Expressions.StorageType,System.Boolean,System.Boolean,Telerik.Reporting.Expressions.Operator)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Expressions.DataStorageHelper.ResultType(Telerik.Reporting.Expressions.StorageType,Telerik.Reporting.Expressions.StorageType,System.Boolean,System.Boolean,Telerik.Reporting.Expressions.Operator)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.ExampleAttribute">
            <summary>
            Used to specify the usage and the design time description of the
            functions. 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Expressions.ExampleAttribute.Default">
            <summary>
            Returns the default instance of the attribute with all its
            properties set to default values.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Expressions.ExampleAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Expressions.ExampleAttribute"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Expressions.ExampleAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Expressions.ExampleAttribute"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Telerik.Reporting.Expressions.ExampleAttribute.IsDefaultAttribute">
            <summary>
            Determines if this attribute is the default.
            </summary>
            <returns>
            <c>true</c> if the attribute is the default value for this attribute
            class;  otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Expressions.ExampleAttribute.Equals(System.Object)">
            <summary>
            Indicates whether this attribute instance and a specified object are
            equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns><c>true</c> if obj is equal to this instance; otherwise,
            <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.Reporting.Expressions.ExampleAttribute.GetHashCode">
            <summary>
            Returns the hash code for this attribute instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="P:Telerik.Reporting.Expressions.ExampleAttribute.Text">
            <summary>
            Gets or sets the example text.
            </summary>
            <value>The example text.</value>
        </member>
        <member name="T:Telerik.Reporting.Expressions.ExpressionParser.NodeType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.ExpressionParser.OperatorInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.FunctionAttribute">
            <summary>
            Used to specify the usage and the design time description of the
            functions. 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Expressions.FunctionAttribute.Default">
            <summary>
            Returns the default instance of the attribute with all its
            properties set to default values.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Expressions.FunctionAttribute.IsDefaultAttribute">
            <summary>
            Determines if this attribute is the default.
            </summary>
            <returns>
            <c>true</c> if the attribute is the default value for this attribute
            class;  otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Expressions.FunctionAttribute.Equals(System.Object)">
            <summary>
            Indicates whether this attribute instance and a specified object are
            equal.
            </summary>
            <param name="obj">Another object to compare to.</param>
            <returns><c>true</c> if obj is equal to this instance; otherwise,
            <c>false</c>.</returns>
        </member>
        <member name="M:Telerik.Reporting.Expressions.FunctionAttribute.GetHashCode">
            <summary>
            Returns the hash code for this attribute instance.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="P:Telerik.Reporting.Expressions.FunctionAttribute.Namespace">
            <summary>
            Gets or sets the namespace of the function as it should be used in the
            expressions.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Expressions.FunctionAttribute.Name">
            <summary>
            Gets or sets the name of the function as it should be used in the
            expressions.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Expressions.FunctionAttribute.Description">
            <summary>
            Gets or sets the description of the function displayed in the
            expression builder.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Expressions.FunctionAttribute.Category">
            <summary>
            Gets or sets the category of the function as it should be displayed 
            in the expression builder.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Expressions.FunctionAttribute.IsVisible">
            <summary>
            Gets or sets a value indicating whether the function should be shown at
            design time. Default value is <c>true</c>.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.FunctionContext">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.GlobalFunctionLoader">
            <summary>
            Global functions have no namespace
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.InvalidExpressionException">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.Lexer">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.Lexer.StringReader">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.Lexer.ReservedWord">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.Lexer.ReservedWords">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.LexicalException">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.AggregateNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.ExpressionNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.BinaryOpNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.ConstNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.FunctionNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.ZeroOpNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.Operand">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.Operator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Expressions.Operator.GetResultType(Telerik.Reporting.Expressions.Operator,Telerik.Reporting.Expressions.Operand,Telerik.Reporting.Expressions.Operand,Telerik.Reporting.Expressions.StorageType@)">
            <summary>
            Use for all op except And, Or, In, Is and IsNot
            </summary>
            <returns>if false to stop processing the op and return the retValue</returns>
        </member>
        <member name="T:Telerik.Reporting.Expressions.OperatorContext">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.ParserException">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.StorageType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Expressions.Token">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Html5Rendering.RenderingContext.WritePredefinedImage(System.Drawing.Image)">
            <summary>
            Writes image as resource and returns the url.
            Stores a reference to the image, so that the already stored bytes 
            can be reused if used second time.
            This method is not applicable for instantly created images!
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Html5Rendering.RenderingContext.WriteInstantImage(System.Drawing.Image)">
            <summary>
            Writes image as resource and returns the url.
            Applicable for instantly created images.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Html5Rendering.RenderingContext.WritePredefinedImage(Telerik.Reporting.Processing.Imaging.IImageContainer)">
            <summary>
            Writes image contained in the container as resource and returns the url.
            Stores the image key (see IImageContainer), so that the already stored bytes 
            can be reused if used second time.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Html5Rendering.Writers.Html.RotatedTextElement.CreateDrawingFormat(Telerik.Reporting.Drawing.TextFormat)">
            <summary>
            Creates the string format used for drawing.
            </summary>
            <param name="textFormat">The original string format of the report item.</param>
        </member>
        <member name="M:Telerik.Reporting.Html5Rendering.Writers.Html.RotatedTextElement.TextToImage(System.Drawing.RectangleF,System.Collections.IEnumerable,System.Drawing.Font,System.Drawing.Brush,Telerik.Reporting.Drawing.TextFormat,System.Single,System.Int32)">
            <summary>
            Draws rotated text lines in an image.
            </summary>
            <param name="textFormat">The original string format of the report item.</param>
            <param name="angle">In degrees.</param>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.NodeLayoutEngine.InitializeMeasurements(Telerik.Reporting.HtmlEngine.IHtmlMeasureContext,Telerik.Reporting.Drawing.IStyle,Telerik.Reporting.Processing.Common.Measurements)">
            <summary>
            Initializes the Measurements with values converted in graphical units
            and zoomed 
            </summary>
            <param name="style"></param>
            <param name="graphicsUnit"></param>
            <param name="dotsPerInch"></param>
            <param name="zoom"></param>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.ILineManager.GetContainingBlock">
            <summary>
            Used only if Block node is placed inside Inline node (not allowed by XHTML)
            </summary>
            <returns>The current BlockLayoutEngine that contains the inline node with the block node in it.</returns>
        </member>
        <member name="P:Telerik.Reporting.HtmlEngine.ILineManager.RemainingClientWidth">
            <summary>
            Gets the remaining width in the current line that can be occupied.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.HtmlEngine.ILineManager.ExistsCurrentLine">
            <summary>
            Gets a value indicating if there is current line available
            </summary>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.CssBorderParser.ApplyBorder(System.String,Telerik.Reporting.Drawing.IStyle)">
            <summary>
            border: solid 3px Red
            </summary>
            <param name="shorthandValue">e.g. solid 3px Red</param>
            <param name="style"></param>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.CssFontParser.ConvertFontSize(System.String,Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Gets a Telerik.Reporting.Drawing.Unit based on a provided string value 
            </summary>
            <param name="value"></param>
            <param name="parentSize"></param>
            <param name="baseSize"></param>
            <returns>If the expression is not a valid font-size expression, Unit.Empty is returned</returns>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.CssFontParser.ApplyFontWeight(System.String,Telerik.Reporting.Drawing.IStyle)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="style"></param>
            <returns>The returned value indicates if a value is parsed and assigned successfully</returns>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.CssParser.ConvertUnit(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns>If the expression is not representing a valid Unit, Unit.Empty is returned</returns>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.CssParser.ConvertPercent(System.String)">
            <summary>
            Gets the number part of the string ending with the '%' sign.
            </summary>
            <param name="value"></param>
            <returns>If the parameter is not a valid percentage expression, float.NaN is returned</returns>
        </member>
        <member name="T:Telerik.Reporting.HtmlEngine.HtmlNode">
            <summary>
            Base class for all HTML Elements.
            </summary>
            <summary>
            Base class for all HTML Elements.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ReportObject">
            <summary>
            Represents a base class for all Telerik Reporting objects
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportObject.TryGetValue(Telerik.Reporting.ReportProperty,System.Object@)">
            <summary>
            Gets the value of the specified property if such is available inline
            or in any linked / parent ReportObject
            </summary>
            <param name="property"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.ReportObject.ShouldSerializeProperty(Telerik.Reporting.ReportProperty)">
            <summary>
            Has inline value?
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportObject.GetAllLinks">
            <summary>
            TEST purposes only
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.ReportObject.Copy(Telerik.Reporting.ReportObject,Telerik.Reporting.ReportObject,System.Boolean,System.Boolean,System.Collections.Generic.IEnumerable{Telerik.Reporting.ReportProperty})">
            <summary>
            This method supports the Telerik Reporting infrastructure 
            and is not intended to be used directly from your code.
            </summary>
            <param name="src">
            ReportObject to copy the values from.
            </param>
            <param name="dest">
            ReportObject to copy the values to.
            </param>
            <param name="copyAll">
            Indicates whether to copy all the properties of the source object (if true) 
            or only the explicitly set values for the source object.
            </param>
            <param name="copyDiff">
            Indicates whether to copy only the different properties (if true) 
            or all properties.
            </param>
        </member>
        <member name="T:Telerik.Reporting.HtmlEngine.HtmlParser">
            <summary>
            Summary description for HtmlParser.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.HtmlParser.Parse(System.String,Telerik.Reporting.ReportObject)">
            <summary>
            Parse html string producing HtmlNode tree
            </summary>
            <param name="html">input html string</param>
            <param name="style">base style for the html nodes
            (Some style attributes are relative to the base style)</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.HtmlParser.CreateXhtmlContext">
            <summary>
            Initializes a <see cref="T:System.Xml.XmlParserContext"/> instance configured with the XHTML strict DTD as the default DTD for the content.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.HtmlParser.InsertAnonymousNodes(Telerik.Reporting.HtmlEngine.HtmlNode)">
            <summary>
            When there are sibling inline and block nodes 
            we need to put all inline elements that are next to another 
            in one "anonymous" block element. This way all siblings are 
            either inline or block nodes. (Needed by the layout).
            More info: http://www.w3.org/TR/CSS2/visuren.html#anonymous-block-level
            </summary>
        </member>
        <member name="T:Telerik.Reporting.HtmlEngine.KnownResourceXmlResolver">
            <summary>
            Resolves a known and limited set of URIs and entities as local resources.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.KnownResourceXmlResolver.AddResource(System.Uri,System.Type,System.String)">
            <summary>
            Adds the specified entity  resource to this resolver's list of known resources.
            </summary>
            <param name="xmlUri">The identifier for the XML resource.
            The XML resolver uses this for XmlResolver.GetEntity and XmlResolver.GetResolveUri.</param>
            <param name="resourceNamespaceType">The type to use to resolve the assembly resource's assembly and namespace.</param>
            <param name="resourceName">The name of the assembly resource.</param>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.KnownResourceXmlResolver.GetEntity(System.Uri,System.String,System.Type)">
            <summary>
            Resolves entities using local resources if it is a known entity.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.KnownResourceXmlResolver.ResolveUri(System.Uri,System.String)">
            <summary>
            Resolves known URIs to known local resource URIs.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.HtmlEngine.KnownResourceXmlResolver.Credentials">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.HtmlEngine.KnownResourceXmlResolver.XmlResource">
            <summary>
            Used internally to track xml entity resource info...
            </summary>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.KnownResourceXmlResolver.XmlResource.GetResourceStream">
            <summary>
            Returns the resource stream that this object describes.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.HtmlEngine.HtmlSubNode">
            <summary>
            Represents node for displaying subscript text
            </summary>
        </member>
        <member name="T:Telerik.Reporting.HtmlEngine.HtmlSupNode">
            <summary>
            Represents node for displaying superscript text
            </summary>
        </member>
        <member name="T:Telerik.Reporting.HtmlEngine.HtmlWhitespaceNode">
            <summary>
            Represents any whitespace (converted to " " )
            between two html tags (no matter open/close tag).
            </summary>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.IHtmlMeasureContext.CreateMeasureTextFormat">
            <summary>
            Calling method must dispose the returned FormatString
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.HtmlEngine.InlineLayoutEngine">
            <summary>
            Layouts one inline node producing one or more (if it does not fit)
            (inline) layout elements on different lines.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.HtmlEngine.ListItemLayoutEngine.ListItemMarkerRightMarginPixels">
            <summary>
            The distance in pixels between the list item marker ant the list item content
            </summary>
        </member>
        <member name="F:Telerik.Reporting.HtmlEngine.ListLayoutEngine.ListLeftPaddingPixels">
            <summary>
            The left padding/indent of html lists which is used to draw list item markers
            </summary>
        </member>
        <member name="T:Telerik.Reporting.HtmlEngine.TextLayoutEngine">
            <summary>
            Layouts one text node producing one or more (if it does not fit)
            text layout elements on different lines.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.HtmlEngine.TextLayoutEngine.LayoutText(Telerik.Reporting.Drawing.TextFormat,Telerik.Reporting.Drawing.IFont,System.String,Telerik.Reporting.HtmlEngine.IHtmlMeasureContext)">
            <summary>
            Fit as much characters as possible on the current line/new line. 
            Word-wrap is used if possible, else character-wrap.
            </summary>
            <param name="textFormat"></param>
            <param name="font"></param>
            <param name="text"></param>
            <param name="g"></param>
            <returns>Returns the count of the fitted characters</returns>
        </member>
        <member name="M:Telerik.Reporting.HtmlRendering2.Common.Writers.RotatedTextElement.CreateDrawingFormat(Telerik.Reporting.Drawing.TextFormat)">
            <summary>
            Creates the string format used for drawing.
            </summary>
            <param name="textFormat">The original string format of the report item.</param>
        </member>
        <member name="M:Telerik.Reporting.HtmlRendering2.Common.Writers.RotatedTextElement.TextToImage(System.Drawing.RectangleF,System.Collections.IEnumerable,System.Drawing.Font,System.Drawing.Brush,Telerik.Reporting.Drawing.TextFormat,System.Single,System.Int32)">
            <summary>
            Draws rotated text lines in an image.
            </summary>
            <param name="textFormat">The original string format of the report item.</param>
            <param name="angle">In degrees.</param>
        </member>
        <member name="T:Telerik.Reporting.Processing.IRenderStream">
            <summary>
            Provides support for rendering multiple streams from a rendering extension.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.IRenderStream.Finish">
            <summary>
            Allows the rendering extension to indicate that there is no additional 
            content to be added to the given stream.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.IRenderContainer">
            <summary>
            Holds arbitrary rendering information.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.IRenderContainer.Info">
            <summary>
            Holds arbitrary information e.g., PageSettings.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.DocumentBase.EndDocument">
            <summary>
            Called when the rendering of the entire report document is completed.
            Ends the composition and disposes all composition-wide resources
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.DocumentBase.SendPhysicalPagesInternal">
            <summary>
            Called when the rendering of the current page is completed and is ready
            for sending to the client.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ImageRendering.DocumentBase.BitsGraphics">
            <summary>
            Graphics for the string measurements
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.DocumentGdiBase.AddPage">
            <summary>
            Called when new page should be prepared for rendering.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.BitmapDocument.SendPhysicalPagesInternal">
            <summary>
            Called when the rendering of the current page is completed and is ready
            for sending to the client.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.BitonalImage.Create(System.Drawing.Bitmap)">
            <summary>
            Creates 1bpp bitmap from a given bitmap.
            </summary>
            <param name="bitmap">bitmap to conver to bitonal</param>
            <returns>1bpp bitmap</returns>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.Border">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.BorderSegment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.DashedSegment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.LineSegment">
            <summary>
            For dashed and dotted borders
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.DottedSegment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.DoubleLineSegment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.StripedSegment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.SolidSegment">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.Borders.StripedSegment.GetStripeBounds(System.Drawing.PointF[],System.Single,System.Single)">
            <summary>
            Outer stripe
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.GrooveSegment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.Segment2Stripes">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.InsetSegment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.LineStyle">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.OutsetSegment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.RidgeSegment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.Borders.WindowInsetSegment">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.CanvasBase.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            DrawImage
            </summary>
            <param name="image">Image to draw</param>
            <param name="destRectMm">in Millimeters</param>
            <param name="srcRectPx">in Pixels</param>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.CanvasBase.DrawImageRaw(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Draws a non-antialiased image with destinationRectangle bounds rounded to a whole pixel
            </summary>
            <param name="image"></param>
            <param name="destinationRectangleMm"></param>
            <param name="sourceRectanglePx"></param>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.CanvasState">
            <summary>
            Helper class. 
            Saves current canvas state and restores in on disposal
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.CanvasGdi.DrawImageRaw(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Draws a non-antialiased image with destinationRectangle bounds rounded to a whole pixel
            </summary>
            <param name="image"></param>
            <param name="destinationRectangleMm"></param>
            <param name="sourceRectanglePx"></param>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.CanvasGdi.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            DrawImage
            </summary>
            <param name="image">Image to draw</param>
            <param name="destRectMm">in Millimeters</param>
            <param name="srcRectPx">in Pixels</param>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.CanvasPdf.ToPoints(System.Drawing.RectangleF)">
            <summary>
            Converts a rectangle in mm to points.
            </summary>
            <param name="rectMm"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.DocumentPdf.AddPage">
            <summary>
            Called when new page should be prepared for rendering.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.DocumentPdf.EndDocument">
            <summary>
            Called when the rendering of the entire report document is completed.
            Ends the composition and disposes all document-wide resources.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.DocumentPdf.WriteAction(Telerik.Reporting.Processing.NavigateToUrlAction,System.Drawing.RectangleF)">
            <summary>
            Write action in device-dependent bounds
            </summary>
            <param name="action"></param>
            <param name="boundsDP"></param>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.DocumentPdf.WriteActionCore(Telerik.Reporting.Processing.NavigateToBookmarkAction,System.Drawing.RectangleF,Telerik.Reporting.Pdf.PdfPageDictionary)">
            <summary>
            Write action in device-dependent bounds
            </summary>
            <param name="action"></param>
            <param name="boundsDP"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.DocumentPdf.GetActionRectangle(System.Drawing.RectangleF,Telerik.Reporting.Pdf.PdfPageDictionary)">
            <summary>
            Get action rectangle from bounds in device-dependent pixels
            </summary>
            <param name="boundsDP"></param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="F:Telerik.Reporting.ImageRendering.ImageRenderingContextBase.ClearPages">
            <summary>
            true if each page will be cleared in White color before any content
            </summary>
        </member>
        <member name="P:Telerik.Reporting.BaseRendering.DocumentRenderingExtensionBase.DrawTrial">
            <summary>
            Used from design-time to suppress trial message
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ImageRendering.ShapeRenderer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ImageRendering.TiffDocument.EndDocument">
            <summary>
            Called when the rendering of the entire report document is completed.
            Ends the composition and disposes all composition-wide resources
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Interfaces.ResXResourceReader.GetEnumerator">
            <summary>
            Returns an enumerator for the internal ResXResourceReader
            </summary>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.Interfaces.Attributes.ExtensionAttribute">
            <summary>
            The base attribute.
            This attribute intended for types which we want to use for extension.
            Each other attribute must derived from the base
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Interfaces.IExtensionInfo.DefaultParameterValues">
            <summary>
            Extension parameter values coming from the extension definition - The ExtensionParameterAttribute
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Interfaces.IExtensionInfo.MergedParameterValues">
            <summary>
            DefaultParameterValues merged with any specific values like the configuration values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Interfaces.IExtensionInfo.ExplicitParameterValues">
            <summary>
            Parameter values explicitly set in configuration
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Interfaces.IOSGraphicsUnitConverter.DefaultDpiForOpenXmlDocuments">
            <summary>
            Stores the default DPI for OpenXml documents. On Windows it's 300dpi to ensure crisp rendering. On Linux it's 96dpi so the clippings and transforms would work.
            TODO: Render the OpenXML documents on 300 dpi on Linux or move the property in a more appropriate place.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Interfaces.IGraphicsHelper">
            <summary>
            Ensures proper clipping on Linux where the graphics and clip should be in pixels
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Interfaces.IReportConverter.Convert(System.Object,System.IServiceProvider,Telerik.Reporting.Interfaces.ILog,System.Collections.Hashtable)">
            <param name="context">Reserved for future use</param>
        </member>
        <member name="M:Telerik.Reporting.ObjectUtils.EnumerableOrderedEquals(System.Collections.IEnumerable,System.Collections.IEnumerable)">
            <summary>
            Compares two IEnumerable-s in an ordered fashion (easier)
            </summary>
            <param name="enumA"></param>
            <param name="enumB"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.ObsoleteDate">
            <summary>
            Marks the date when the ObsoleteAttribute has been applied to.
            </summary>
            <remarks>
            This attribute is for internal use only and is for reference purposes only.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.ObsoleteDate.#ctor(System.String)">
            <param name="date">Format: MM/dd/yyyy</param>
        </member>
        <member name="F:Telerik.Reporting.Interfaces.Product.PublicKeyString">
            <summary>
            Use in InternalsVisibleToAttribute
            </summary>
        </member>
        <member name="T:Telerik.Reporting.AnchoringStyles">
            <summary>
            Specifies how a <see cref="T:Telerik.Reporting.ReportItem"/> anchors to the edges of its container.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.AnchoringStyles.None">
            <summary>
            The <see cref="T:Telerik.Reporting.ReportItem"/> is not anchored to any edge of its container.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.AnchoringStyles.Top">
            <summary>
            The <see cref="T:Telerik.Reporting.ReportItem"/> is anchored to the top edge of its container.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.AnchoringStyles.Bottom">
            <summary>
            The <see cref="T:Telerik.Reporting.ReportItem"/> is anchored to the bottom edge of its container.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.AnchoringStyles.Left">
            <summary>
            The <see cref="T:Telerik.Reporting.ReportItem"/> is anchored to the left edge of its container.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.AnchoringStyles.Right">
            <summary>
            The <see cref="T:Telerik.Reporting.ReportItem"/> is anchored to the right edge of its container.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Barcode">
            <summary>
            Represents a barcode report item. 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ReportItem">
            <summary>
            Defines the base class for all report items that can be placed in a
            <see cref="T:Telerik.Reporting.ReportSectionBase"/>. Items of this type
            have a location and a size.
            </summary>    
        </member>
        <member name="T:Telerik.Reporting.ReportItemBase">
            <summary>
            Defines the base class for visual report items used for creating 
            reports.
            </summary>   
        </member>
        <member name="T:Telerik.Reporting.IActionTarget">
            <summary>
            Represents a report object which may be used as a target of an interactive action.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IActionTarget.Name">
            <summary>
            Gets the name of the report object used as action target. 
            </summary>
            <value>
            The name of the report object. 
            </value>
            <remarks>
            The <B>Name</B> of the action target should be unique in the report scope so 
            that triggering the action does not interfere with other report objects.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.IToggleVisibilityTarget">
            <summary>
            This interface is Obsolete. PPlease use Telerik.Reporting.IActionTarget instead.
            Represents a report object which may be used as target of a <see cref="T:Telerik.Reporting.ToggleVisibilityAction"/>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IDesignTimeStyleEditable.Style">
            <summary>
            Gets or sets the text style with StyleBuilder.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current 
            <see cref="T:Telerik.Reporting.ReportItemBase"/>.
            </summary>
            <returns>
            A <B>String</B> that contains the <B>Name</B> and the Type's 
            FullName of the current 
            <see cref="T:Telerik.Reporting.ReportItemBase"/>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.Contains(Telerik.Reporting.ReportItemBase)">
            <summary>
            Retrieves a value indicating whether the specified report item is 
            a child of the report item.
            </summary>
            <returns>
            <b>true</b> if the specified report item is a child of the report 
            item; otherwise, <b>false</b>.
            </returns>
            <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase"/> to evaluate.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.RaiseItemDataBinding(System.Object,System.EventArgs)">
            <summary>
            Raises the 
            <see cref="E:Telerik.Reporting.ReportItemBase.ItemDataBinding"/> 
            event.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.RaiseItemDataBound(System.Object,System.EventArgs)">
            <summary>
            Raises the 
            <see cref="E:Telerik.Reporting.ReportItemBase.ItemDataBound"/> event.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.OnItemAdded(Telerik.Reporting.ReportItemBase)">
            <summary>
            Raises the <see cref="E:Telerik.Reporting.ReportItemBase.ItemAdded"/> 
            event.
            </summary>
            <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase"/> being added.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.OnItemRemoved(Telerik.Reporting.ReportItemBase)">
            <summary>
            Raises the 
            <see cref="E:Telerik.Reporting.ReportItemBase.ItemRemoved"/> event.
            </summary>
            <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase"/> being removed.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.CanAdd(Telerik.Reporting.ReportItemBase)">
            <summary>
            Indicates whether this item can add the specified <i>item</i> as a 
            child.
            </summary>
            <param name="item">The <i>item</i> to check.</param>
            <returns><B>true</B> if the specified <I>item</I> can be a 
            <B>added</B> to this item, otherwise <B>false</B>.</returns>
            <remarks>
            The CanAdd method checks two conditions
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.CanParent(System.Type)">
            <summary>
            Indicates whether an object of the specified <I>type</I> can be a 
            <B>direct child</B> of this item.
            </summary>
            <param name="type">The <I>type</I> to check.</param>
            <returns><B>true</B> if an object of the specified <I>type</I> can 
            be a <B>direct child</B> of this item, otherwise <B>false</B>.
            </returns>
            <remarks>
            If an item cannot contain an object of a given type, then it cannot 
            parent it as well. If an item cannot parent an object of a given 
            type, this does not mean that it cannot contain it. For example, a 
            Report cannot directly parent a TextBox, but it can contain a 
            TextBox.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.CanContain(System.Type)">
            <summary>
            Indicates whether this item can contain an object of the specified 
            <I>type</I>.
            </summary>
            <param name="type">The <I>type</I> to check.</param>
            <returns><B>true</B> if this item can contain an object of the 
            specified <I>type</I>, otherwise <B>false</B>.</returns>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.CanBeAncestorOf(Telerik.Reporting.ReportItemBase)">
            <summary>
            Indicates whether this can be an ancestor of the specified item.
            THIS OBJECT CAN BE AN ANCESTOR OF THE SPECIFIED ITEM WHEN IT CAN 
            CONTAIN THE TYPE OF THE ITEM AND ALL OF ITS DESCENDANTS.
            </summary>
            <param name="item">The <see cref="T:Telerik.Reporting.ReportItemBase"/> 
            to check.</param>
            <returns><B>true</B> if this can be an ancestor of the specified 
            item, otherwise <B>false</B>.</returns>
            <remarks>
            Invalid ancestor-descendant relationships may occur even if the 
            direct parent-child relation (as indicated by the CanParent method) 
            is OK, but the item hierarchy as a whole is not OK (as indicated by 
            the CanContain method). 
            For example, a PageSection can have a Panel as a direct child and a 
            Panel can have a SubReport as a direct child (as indicated by the 
            CanParent method), but if we add a Panel with a SubReport in it to 
            a PageSection we will break the rule that PageSections cannot be
            ancestors of SubReports (CanContain method).
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ApplyStyleRules(System.Collections.Generic.IEnumerable{Telerik.Reporting.Drawing.StyleRule},System.Boolean)">
            <summary>
            Applies the specified 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule"/>s to this item. 
            </summary>
            <param name="rule">
            The <see cref="T:Telerik.Reporting.Drawing.StyleRule"/>s to apply to 
            this instance.
            </param>        
            <param name="recursive">A value indicating whether to apply the
            style to the children of this item recursively.
            </param>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.Margins">
            <summary>
            Design time purposes only
            </summary>
        </member>
        <member name="E:Telerik.Reporting.ReportItemBase.ItemAdded">
            <summary>
            Occurs when a new report item is added to the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection"/>. 
            </summary>
        </member>
        <member name="E:Telerik.Reporting.ReportItemBase.ItemRemoved">
            <summary>
            Occurs when a report item is removed from the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection"/>. 
            </summary>
        </member>
        <member name="E:Telerik.Reporting.ReportItemBase.ItemDataBinding">
            <summary>
            Occurs when the report item binds to a data source. 
            </summary>
        </member>
        <member name="E:Telerik.Reporting.ReportItemBase.ItemDataBound">
            <summary>
            Occurs after the report item binds to a data source. 
            </summary>
        </member>
        <member name="E:Telerik.Reporting.ReportItemBase.Disposed">
            <summary>
            Occurs when the report item is disposed.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.Name">
            <summary>
            Gets or sets the name of the report item. 
            </summary>
            <value>
            The name of the report item. 
            </value>
            <remarks>
            The <B>Name</B> property can be used at run time to evaluate the 
            object by name rather than type and programmatic name.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.Visible">
            <summary>
            Gets or sets a value indicating whether the report item is
            displayed. 
            </summary>
            <value>
            <B>true</B> if the report item is displayed; otherwise,
            <B>false</B>. The default is <B>true</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.StyleName">
            <summary>
            Gets or sets the name of the report item's global style. 
            </summary>
            <value>
            A string value specifying the style name.
            </value>
            <remarks>
            Global styles are defined through the 
            <see cref="T:Telerik.Reporting.Report"/>'s 
            <see cref="T:Telerik.Reporting.Drawing.StyleSheet"/> property.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.Style">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.Style"/> object 
            specifying the appearance of the report item. 
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Style"/> object specifying
            the items' style. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.Items">
            <summary>
            Gets the collection of report items contained within the report
            item. 
            </summary>
            <value>
            An <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection"/>
            representing the collection of items contained within the item.
            </value>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.Parent">
            <summary>Gets or sets the parent container of the report item.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.ReportItemBase"/> that represents
            the parent item of the report item. 
            </value>
            <remarks>
            Setting the <B>Parent</B> property value to a null reference
            (Nothing in Visual Basic) removes the item from the
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection"/> of 
            its current parent item.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.Report">
            <summary>
            Gets the report this item belongs to.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Report"/> object which the item 
            belongs to.
            </value>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.ConditionalFormatting">
            <summary>
            Gets the collection of the conditional formatting rules, associated with this item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.Bookmark">
            <summary>
            Gets or sets a bookmark label to be displayed for this report item. 
            </summary>
            <value>
            A string / expression value specifying the bookmark label.
            </value>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.BookmarkId">
            <summary>
            Gets or sets a bookmark id for this item. 
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the resulting id,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also. 
            When processed should evaluate to an unique value 
            for each processing instance of the item.
            Any duplicated occurrences at runtime get modified in order to avoid duplication in the resulting report.
            </value>
            <remarks>
            BookmarkId must be used along with <see cref="T:Telerik.Reporting.NavigateToBookmarkAction"/> interactive action
            in order to specify the target of the action.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.DocumentMapText">
            <summary>
            Gets or sets a text to be displayed for this item in the document map. 
            </summary>
            <remarks>When defined the document map displays nodes 
            that navigate to the instances of the item.</remarks>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.TocText">
            <summary>
            Gets or sets a text to be displayed for this item in the table of contents. 
            </summary>
            <remarks>When defined the table of contents displays nodes 
            that navigate to the instances of the item.</remarks>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.Action">
            <summary>
            Gets or sets an interactive action associated with this report item. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.Bindings">
            <summary>
            Gets the collection of binding rules contained within the report item. 
            </summary>
            <value>
            An collection of <see cref="T:Telerik.Reporting.Binding"/> instances
            representing the list of property bindings defined within the item.
            </value>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.ToolTip">
            <summary>
            Gets the tooltip associated with the current report item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.AccessibleDescription">
            <summary>
            Gets or sets the accessible description for the current report item.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ReportItemBase.ItemCollection">
            <summary>
            Represents a collection of 
            <see cref="T:Telerik.Reporting.ReportItemBase"/> objects. 
            </summary>
            <remarks>
            The <see cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)"/>, 
            <see cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)"/>, 
            and <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)"/> 
            methods enable you to add and remove individual items from the 
            collection. You can also use the 
            <see cref="M:Telerik.Reporting.ReportItemBase.ItemCollection.AddRange(Telerik.Reporting.ReportItemBase[])"/> 
            or <see cref="M:System.Collections.ObjectModel.Collection`1.Clear"/> methods 
            to add or remove all the items from the collection.
            You can determine if a 
            <see cref="T:Telerik.Reporting.ReportItemBase"/> is a member of the 
            collection by passing the item into the 
            <see cref="M:System.Collections.ObjectModel.Collection`1.Contains(`0)"/> 
            method. To get the index value of the location of a 
            <see cref="T:Telerik.Reporting.ReportItemBase"/> in the collection, 
            pass the item into the <see cref="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)"/> 
            method. The collection can be copied into an array by calling the 
            <see cref="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)"/> 
            method.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.#ctor(Telerik.Reporting.ReportItemBase)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection"/> 
            class. 
            </summary>
            <param name="owner">
            A <see cref="T:Telerik.Reporting.ReportItemBase"/> representing 
            the report item that owns the report item collection.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.AddRange(Telerik.Reporting.ReportItemBase[])">
            <summary>
            Adds an array of report item objects to the collection. 
            </summary>
            <param name="items">
            An array of <see cref="T:Telerik.Reporting.ReportItemBase"/> 
            objects to add to the collection.
            </param>
            <remarks>
            <para>The <B>ReportItemBase</B> objects contained in the 
            items array are appended to the end of the collection.</para>
            <para>You can use the <B>AddRange</B> method to quickly add a 
            group of <B>ReportItemBase</B> objects to the collection 
            instead of manually adding each <B>ReportItemBase</B> to the 
            collection using the 
            <see cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)"/> 
            method.</para>
            <para>To remove a <B>ReportItemBase</B> that you previously 
            added, use the 
            <see cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)"/>, 
            <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)"/>, 
            or <see cref="M:System.Collections.ObjectModel.Collection`1.Clear"/> 
            methods.</para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.RemoveByKey(System.String)">
            <summary>
            Removes the child report item with the specified key.
            </summary>
            <param name="key">
            The name of the child report item to remove.
            </param>
            <remarks>
            The <see cref="P:Telerik.Reporting.ReportItemBase.Name"/> 
            property of a <see cref="T:Telerik.Reporting.ReportItemBase"/> 
            corresponds to the key for a <B>ReportItemBase</B> in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection"/>.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.ContainsKey(System.String)">
            <summary>
            Determines whether the <B>ReportItemBase.ItemCollection</B> 
            contains an item with the specified key.
            </summary>
            <param name="key">
            The key to locate in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection"/>.
            </param>
            <returns>
            <B>true</B> if the <B>ReportItemBase.ItemCollection</B> 
            contains an item with the specified key; otherwise, 
            <B>false</B>.
            </returns>
            <remarks>
            The <see cref="P:Telerik.Reporting.ReportItemBase.Name"/> 
            property of a <see cref="T:Telerik.Reporting.ReportItemBase"/> 
            corresponds to the key for a <B>ReportItemBase</B> in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection"/>.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.IsValidIndex(System.Int32)">
            <summary>
            Gets a value indicating whether the specified index exists in
            the collection.
            </summary>
            <param name="index">
            An index value to check.
            </param>
            <returns>
            <B>true</B> if the collection contains an item with the 
            specified index; otherwise <B>false</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.IndexOfKey(System.String)">
            <summary>
            Retrieves the index of the first occurrence of the specified 
            item within the collection.
            </summary>
            <param name="key">
            The name of the report item to search for. 
            </param>
            <returns>
            The zero-based index of the first occurrence of the report item 
            with the specified name in the collection. 
            </returns>
            <remarks>
            <para>
            The key comparison is not case-sensitive. If the <I>key</I> 
            parameter is a null reference (Nothing in Visual Basic) or an 
            empty string, or an item with the specified key is not found, 
            <B>IndexOfKey</B> returns -1.
            </para>
            <para>
            The <see cref="P:Telerik.Reporting.ReportItemBase.Name"/> 
            property of a <see cref="T:Telerik.Reporting.ReportItemBase"/> 
            corresponds to the key for a <B>ReportItemBase</B> in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection"/>.
            </para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.OnValidate(Telerik.Reporting.ReportItemBase)">
            <summary>
            Performs additional custom processes when validating a value. 
            </summary>
            <param name="value">
            The object to validate.
            </param>
            <exception cref="T:System.ArgumentException">
            The object is not an instance of the 
            <see cref="T:Telerik.Reporting.ReportItemBase"/> class or one of 
            its derived classes.
            </exception>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.InsertItem(System.Int32,Telerik.Reporting.ReportItemBase)">
            <summary>
            Overrides the <see cref="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)"/> 
            method.
            </summary>
            <param name="index">
            The zero-based index at which to insert <I>value</I>.
            </param>
            <param name="value">
            The new value of the element at <I>index</I>.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.RemoveItem(System.Int32)">
            <summary>
            Overrides the <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)"/> 
            method.
            </summary>
            <param name="index">
            The zero-based index at which <I>value</I> can be found.
            </param>
            <param name="value">
            The value of the element to remove from <I>index</I>.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.Find(System.String,System.Boolean)">
            <summary>
            Searches for report items by their 
            <see cref="P:Telerik.Reporting.ReportItemBase.Name"/> 
            property and builds an array of all the report items that 
            match.
            </summary>
            <param name="key">
            The key to locate in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection"/>.
            </param>
            <param name="recursive">
            <B>true</B> to search all child report items; otherwise, 
            <B>false</B>.
            </param>
            <returns>
            An array of type 
            <see cref="T:Telerik.Reporting.ReportItemBase"/> containing the 
            matching report items.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            The <I>key</I> parameter is <B>null</B> or empty.
            </exception>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.FindItem(System.Type)">
            <summary>
            Searches the collection for a report item of the specified 
            type. 
            </summary>
            <param name="type">
            The <see cref="T:System.Type"/> to search for.
            </param>
            <returns>
            The first <see cref="T:Telerik.Reporting.ReportItemBase"/> in 
            the collection that matches the given 
            <see cref="T:System.Type"/>. If no item in the collection
            matches the given <see cref="T:System.Type"/> the method returns
            <B>null</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.Find(System.Type)">
            <summary>
            Searches for report items by their Type and builds an array of 
            all the items that match.
            </summary>
            <param name="type">
            The <see cref="T:System.Type"/> to search for.
            </param>
            <returns>
            An array of type 
            <see cref="T:Telerik.Reporting.ReportItemBase"/> containing the 
            matching report items.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.Find(System.Type,System.Boolean)">
            <summary>
            Searches for report items by their Type and builds an array of 
            all the items that match.
            </summary>
            <param name="type">
            The <see cref="T:System.Type"/> to search for.
            </param>
            <param name="recursive">A value indicating whether to search 
            all children recursively.</param>
            <returns>
            An array of type 
            <see cref="T:Telerik.Reporting.ReportItemBase"/> containing the 
            matching report items.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.GetChildIndex(Telerik.Reporting.ReportItemBase)">
            <summary>
            Retrieves the index of a report item within the item 
            collection. 
            </summary>
            <param name="child">
            The <see cref="T:Telerik.Reporting.ReportItemBase"/> to search 
            for in the item collection. 
            </param>
            <returns>
            A zero-based index value that represents the location of the 
            specified child report item within the item collection.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.ReportItemBase.ItemCollection.GetChildIndex(Telerik.Reporting.ReportItemBase,System.Boolean)">
            <summary>
            Retrieves the index of the specified child report item within 
            the item collection, and optionally raises an exception if the 
            specified report item is not within the item collection.
            </summary>
            <param name="child">
            The <see cref="T:Telerik.Reporting.ReportItemBase"/> to search 
            for in the item collection. 
            </param>
            <param name="throwException">
            <B>true</B> to throw an exception if the <B>ReportItemBase</B> 
            specified in the child parameter is not an item in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection"/>; 
            otherwise, <B>false</B>.
            </param>
            <returns>
            A zero-based index value that represents the location of the 
            specified child report item within the item collection; 
            otherwise -1 if the specified <B>ReportItemBase</B> is not 
            found in the 
            <see cref="T:Telerik.Reporting.ReportItemBase.ItemCollection"/>. 
            </returns>
            <exception cref="T:System.ArgumentException">
            The <I>child</I> is not contained in the collection and the
            <I>throwException</I> parameter is <B>true</B>.
            </exception>
        </member>
        <member name="P:Telerik.Reporting.ReportItemBase.ItemCollection.Item(System.String)">
            <summary>
            Returns the <see cref="T:Telerik.Reporting.ReportItemBase"/> with 
            the specified key in the collection.            
            </summary>
            <param name="key">
            The name of the report item to retrieve from the report item 
            collection.
            </param>
            <value>
            The <see cref="T:Telerik.Reporting.ReportItemBase"/> with the 
            specified key in the collection. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.ReportItem.Size">
            <summary>
            Gets or sets the height and width of the report item. 
            </summary>
            <value>
            The <see cref="T:Telerik.Reporting.Drawing.SizeU"/> that represents 
            the height and width of the report item in <B>Units</B>. 
            </value>
            <remarks>
            Because the <B>SizeU</B> class is a value type (<B>Structure</B> in 
            Visual Basic, <B>struct</B> in Visual C#), it is returned by value, 
            meaning accessing the property returns a copy of the size of the 
            report item. So, adjusting the 
            <see cref="P:Telerik.Reporting.Drawing.SizeU.Width"/> or 
            <see cref="P:Telerik.Reporting.Drawing.SizeU.Height"/> properties of 
            the <B>SizeU</B> returned from this property will not affect the 
            <see cref="P:Telerik.Reporting.ReportItem.Width"/> or 
            <see cref="P:Telerik.Reporting.ReportItem.Height"/> of the report 
            item. To adjust the <B>Width</B> or <B>Height</B> of the report 
            item, you must set the item's <B>Width</B> or <B>Height</B> 
            property, or set the <B>Size</B> property with a new <B>SizeU</B>.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItem.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of the report 
            item relative to the upper-left corner of its container.
            </summary>
            <value>
            The <see cref="T:Telerik.Reporting.Drawing.PointU"/> that represents 
            the upper-left corner of the report item relative to the upper-left 
            corner of its container. 
            </value>
            <remarks>
            Because the <B>PointU</B> class is a value type (<B>Structure</B> 
            in Visual Basic, <B>struct</B> in Visual C#), it is returned by 
            value, meaning accessing the property returns a copy of the 
            upper-left point of the report item. So, adjusting the 
            <see cref="P:Telerik.Reporting.Drawing.PointU.X"/> or 
            <see cref="P:Telerik.Reporting.Drawing.PointU.Y"/> properties of the 
            <B>PointU</B> returned from this property will not affect the 
            <see cref="P:Telerik.Reporting.ReportItem.Left"/>, 
            <see cref="P:Telerik.Reporting.ReportItem.Right"/>, 
            <see cref="P:Telerik.Reporting.ReportItem.Top"/>, or 
            <see cref="P:Telerik.Reporting.ReportItem.Bottom"/> property values 
            of the report item. To adjust these properties set each property 
            value individually, or set the <B>Location</B> property with a new 
            <B>PointU</B>.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItem.Anchoring">
            <summary>
            Gets or sets the edges of the container to which a report is bound 
            and determines how a report items is resized with its parent.
            </summary>
            <value>
            A bitwise combination of the 
            <see cref="T:Telerik.Reporting.AnchoringStyles"/> values. The default 
            is <see cref="F:Telerik.Reporting.AnchoringStyles.None"/>. 
            </value>
            <remarks>
            <para>
            Use the <B>Anchoring</B> property to define how a report is automatically 
            resized as its parent item is resized. Anchoring a report to its 
            parent ensures that the anchored edges remain in the same position 
            relative to the edges of the parent when the parent control is 
            resized.
            </para>
            <para>
            You can anchor a report item to one or more edges of its 
            container. For example, if you have a <B>DetailSection</B> with a 
            <B>TextBox</B> whose <B>Anchoring</B> property value is set to 
            <B>Top</B> and <B>Bottom</B>, the <B>TextBox</B> is stretched to 
            maintain the anchored distance to the top and bottom edges of the 
            <B>DetailSection</B> as the <B>Height</B> of the 
            <B>DetailSection</B> is increased.
            </para>
            <para>
            <B>Note:</B>The <B>Anchoring</B> and 
            <see cref="P:Telerik.Reporting.ReportItem.Docking"/> properties are 
            mutually exclusive. Only one can be set at a time, and the last one 
            set takes precedence.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItem.Docking">
            <summary>
            Gets or sets which report item borders are docked to its parent 
            and determines how a report item is resized with its parent. 
            </summary>
            <value>
            One of the <see cref="T:System.Windows.Forms.DockStyle"/> values. 
            The default is <see cref="F:System.Windows.Forms.DockStyle.None"/>. 
            </value>
            <remarks>
            <para>
            Use the <B>Docking</B> property to define how a report is 
            automatically resized as its parent is resized. For example, 
            setting <B>Docking</B> to 
            <see cref="F:System.Windows.Forms.DockStyle.Bottom"/> causes the report 
            item to align itself with the bottom edges of its parent and to 
            resize as the parent is resized.
            </para>
            <para>
            A report item can be docked to one edge of its parent container or 
            can be docked to all edges and fill the parent container.
            </para>
            <para>
            <B>Note:</B>The <see cref="P:Telerik.Reporting.ReportItem.Anchoring"/> 
            and <B>Docking</B> properties are mutually exclusive. Only one can be 
            set at a time, and the last one set takes precedence.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItem.Bounds">
            <summary>
            Gets or sets the size and location of the report item including its 
            nonclient elements, in Units, relative to the parent report item.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> relative to 
            the parent report item that represents the size and location of the 
            report item including its nonclient elements.
            </value>
            <remarks>
            The bounds of the report item include the nonclient elements such 
            as borders and padding.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItem.Left">
            <summary>
            Gets or sets the distance, in Units, between the left edge of the 
            report item and the left edge of its container's client area.
            </summary>
            <value>
            An <see cref="T:Telerik.Reporting.Drawing.Unit"/> representing the 
            distance between the left edge of the report item and the left edge 
            of its container's client area.
            </value>
            <remarks>
            <para>
            The <B>Left</B> property value is equivalent to the 
            <see cref="P:Telerik.Reporting.Drawing.PointU.X"/> property of the 
            <see cref="P:Telerik.Reporting.ReportItem.Location"/> property value 
            of the report item.
            </para>
            <para>
            Changes made to the 
            <see cref="P:Telerik.Reporting.ReportItem.Width"/> and <B>Left</B> 
            property values cause the 
            <see cref="P:Telerik.Reporting.ReportItem.Right"/> property value of 
            the report item to change.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItem.Right">
            <summary>
            Gets the distance, in Units, between the right edge of the 
            report item and the left edge of its container's client area.
            </summary>
            <value>
            An <see cref="T:Telerik.Reporting.Drawing.Unit"/> representing the 
            distance between the right edge of the report item and the left edge 
            of its container's client area.
            </value>
            <remarks>
            <para>
            The value of the <B>Right</B> property is equal to the sum of the 
            <see cref="P:Telerik.Reporting.ReportItem.Left"/> property value and 
            the <see cref="P:Telerik.Reporting.ReportItem.Width"/> property 
            value.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItem.Top">
            <summary>
            Gets or sets the distance, in Units, between the top edge of the 
            report item and the top edge of its container's client area.
            </summary>
            <value>
            An <see cref="T:Telerik.Reporting.Drawing.Unit"/> representing the 
            distance between the top edge of the report item and the top edge 
            of its container's client area.
            </value>
            <remarks>
            <para>
            The <B>Top</B> property value is equivalent to the 
            <see cref="P:Telerik.Reporting.Drawing.PointU.Y"/> property of the 
            <see cref="P:Telerik.Reporting.ReportItem.Location"/> property value 
            of the report item.
            </para>
            <para>
            Changes made to the 
            <see cref="P:Telerik.Reporting.ReportItem.Height"/> and <B>Top</B> 
            property values cause the 
            <see cref="P:Telerik.Reporting.ReportItem.Bottom"/> property value of 
            the report item to change.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItem.Bottom">
            <summary>
            Gets the distance, in Units, between the bottom edge of the 
            report item and the top edge of its container's client area.
            </summary>
            <value>
            An <see cref="T:Telerik.Reporting.Drawing.Unit"/> representing the 
            distance between the bottom edge of the report item and the top 
            edge of its container's client area.
            </value>
            <remarks>
            <para>
            The value of the <B>Bottom</B> property is equal to the sum of the 
            <see cref="P:Telerik.Reporting.ReportItem.Top"/> property value and 
            the <see cref="P:Telerik.Reporting.ReportItem.Height"/> property 
            value.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItem.Width">
            <summary>
            Gets or sets the width of the report item.
            </summary>
            <value>
            The width of the report item in Units.
            </value>
            <remarks>
            Changes made to the <B>Width</B> and 
            <see cref="P:Telerik.Reporting.ReportItem.Left"/> property values 
            cause the <see cref="P:Telerik.Reporting.ReportItem.Right"/> property 
            value of the report item to change.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItem.Height">
            <summary>
            Gets or sets the height of the report item.
            </summary>
            <value>
            The height of the report item in Units.
            </value>
            <remarks>
            Changes made to the <B>Height</B> and 
            <see cref="P:Telerik.Reporting.ReportItem.Top"/> property values 
            cause the <see cref="P:Telerik.Reporting.ReportItem.Bottom"/> property 
            value of the report item to change.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportItem.DefaultSize">
            <summary>
            Gets the default size of the report item.
            </summary>
            <value>
            The default <see cref="T:Telerik.Reporting.Drawing.SizeU"/> of the 
            report item. 
            </value>
            <remarks>
            The <B>DefaultSize</B> property represents the <B>SizeU</B> of the 
            report item when it is initially created. You can adjust the size 
            of the report item by setting its 
            <see cref="P:Telerik.Reporting.ReportItem.Size"/> property value.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Barcode.Value">
            <summary>
            Gets or sets the current value to be encoded in the barcode.
            </summary>
            <value>
            A <see cref="T:System.String"/> that starts with the symbol "=" is 
            interpreted as an expression to calculate the value of the current
            barcode, otherwise the value is interpreted as a literal string.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Barcode.Module">
            <summary>
            Gets or sets a <see cref="T:Telerik.Reporting.Drawing.Unit"/> 
            representing the width of of the narrowest bar of the barcode.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit"/> value representing 
            the width of the narrowest bar of the barcode.
            </value>
            <example>
            This example illustrates how to set the Module property.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_Common_Settings"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_Common_Settings"/>
            </example>
        </member>
        <member name="P:Telerik.Reporting.Barcode.Angle">
            <summary>
            Gets or sets a value indicating the angle of rotation of the bar
            code inside the report item, specified in degrees.
            </summary>
            <value>
            A <I>double</I> value indicating the angle of rotation in degrees.
            </value>
            <example>
            This example illustrates how to set the Angle property.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_Common_Settings" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_Common_Settings" />
            </example>
        </member>
        <member name="P:Telerik.Reporting.Barcode.Stretch">
            <summary>
            Gets or sets a value indicating whether to stretch the barcode to 
            fill the entire area of the report item item or not.
            </summary>
            <value>
            <B>true</B> if the barcode should be stretched, otherwise <B>false</B>.
            </value>
            <example>
            This example illustrates how to set the Stretch property.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_Common_Settings" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_Common_Settings" />
            </example>
        </member>
        <member name="P:Telerik.Reporting.Barcode.Checksum">
            <summary>
            Gets or sets a value indicating whether the barcode should contain a
            checksum for validation purposes during the scanning process or not.
            </summary>
            <value>
            <B>true</B> if the barcode should contain a checksum for validation 
            purposes during the scanning process, otherwise <B>false</B>.
            </value>
            <example>
            This example illustrates how to set the Checksum property.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_Common_Settings" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_Common_Settings" />
            </example>
        </member>
        <member name="P:Telerik.Reporting.Barcode.ShowText">
            <summary>
            Gets or sets a value indicating whether the barcode should display a 
            human-readable text representation of the encoded value.
            </summary>
            <value>
            <B>true</B> if the barcode should display text, otherwise <B>false</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Barcode.BarAlign">
            <summary>
            Gets or sets the horizontal alignment of the barcode in the report item. 
            </summary>
            <value>
            One of the <see cref="T:Telerik.Reporting.Drawing.HorizontalAlign"/> values. 
            The default value is <B>HorizontalAlign.Center</B>.
            </value>
            <example>
            This example illustrates how to set the BarAlign property.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_Common_Settings"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_Common_Settings"/>
            </example>
        </member>
        <member name="P:Telerik.Reporting.Barcode.Symbology">
            <summary>
            Gets or sets a value indicating the current symbology used to 
            encode the <B>Value</B> property as series of bars and spaces.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Barcode.SymbologyType"/> enumerated value 
            indicating the symbology associated with the current barcode.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Barcode.Encoder">
            <summary>
            Gets or sets the current encoder used to 
            encode the <B>Value</B> property as series of bars and spaces.
            </summary>
            <example>
            This example illustrates how to set the Encoder property.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\BarcodeSnippets.cs" region="Barcode_Common_Settings" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\BarcodeSnippets.vb" region="Barcode_Common_Settings" />
            </example>
        </member>
        <member name="T:Telerik.Reporting.Binding">
            <summary>
            Represents the simple binding between the target property of a report item 
            and an expression.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Binding.Path">
            <summary>
            Gets or sets the property path determining the item's bound 
            simple/nested property.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Binding.Expression">
            <summary>
            Gets or sets the expression used to evaluate the value of the specified
            in <see cref="P:Telerik.Reporting.Binding.Path"/> target property.  
            </summary>
        </member>
        <member name="T:Telerik.Reporting.BindingCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.Binding"/>s.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.BindingConverter">
            <summary>
            Used by the design time serialization
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Chart">
            <summary>
            Represents a chart report item
            </summary>
        </member>
        <member name="T:Telerik.Reporting.IDataItem">
            <summary>
            Defines an interface for data-bound items.
            </summary>
        </member>
        <member name="E:Telerik.Reporting.DataItem.NeedDataSource">
            <summary>
            Occurs when the processing of the data item processing instance (i.e., <see cref="T:Telerik.Reporting.Processing.DataItem"/> instance) begins
            and this instance has no <see cref="P:Telerik.Reporting.Processing.DataItem.DataSource"/> property set.
            </summary>
            <remarks>
            The event is hooked on the definition <see cref="T:Telerik.Reporting.DataItem"/> instance, 
            but the sender object in the event handler is the processing <see cref="T:Telerik.Reporting.Processing.DataItem"/> instance.
            The processing instance of the data item inherits its DataSource from the definition instance,
            but if neither has DataSource set, this event is raised. 
            </remarks>
            <example>
            The following example demonstrates how to implement a <strong>NeedDataSource</strong> event handler:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\DataItemEvents.cs" region="NeedDataSourceEventHandlerSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\DataItemEvents.vb" region="NeedDataSourceEventHandlerSnippet"/>
            </example>
        </member>
        <member name="P:Telerik.Reporting.DataItem.DataSource">
            <summary>
            Gets or sets the data source that the 
            <see cref="T:Telerik.Reporting.Table"/> is displaying data for.
            </summary>
            <value>
            An object that functions as a data source. 
            </value>
            <remarks>
            <para>
            The following data sources are valid:
            </para>
            <ul>
            <li>A <see cref="T:System.Data.DataTable"/></li>
            <li>A <see cref="T:System.Data.DataView"/></li>
            <li>A <see cref="T:System.Data.DataSet"/></li>
            <li>A <see cref="T:System.Data.DataViewManager"/></li>
            <li>Any component that implements the 
            <see cref="T:System.ComponentModel.IListSource"/> interface</li>
            <li>Any component that implements the 
            <see cref="T:System.Collections.IEnumerable"/> interface</li>
            <li>Any component that implements the 
            <see cref="T:System.Data.IDataAdapter"/> interface</li>
            </ul>
            <para>
            If the <B>DataSource</B> reference contains more than one table, 
            you must set the <B>DataMember</B> property a string that specifies 
            the table to bind to. For example, if the <B>DataSource</B> is a 
            <B>DataSet</B> or <B>DataViewManager</B> that contains three tables 
            named <CODE>Customers</CODE>, <CODE>Orders</CODE>, and 
            <CODE>OrderDetails</CODE>, you must specify the table to bind to.
            </para>
            <para>
            Setting the <B>DataSource</B> to an object that does not implement 
            the <B>IListSource</B>, <B>IEnumerable</B>, or <B>IDataAdapter</B> 
            will cause an exception.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.DataItem.Filters">
            <summary>
            Gets a 
            <see cref="T:Telerik.Reporting.FilterCollection"/> 
            that defines the filter expression(s) for the
            <see cref="T:Telerik.Reporting.Table"/>
            </summary>
            <value>
            <see cref="T:Telerik.Reporting.FilterCollection"/> 
            that contains the 
            <see cref="T:Telerik.Reporting.Filter"/> objects for 
            the <B>Table</B>
            </value>
            <remarks>
            Filter expressions limit the data that is displayed to the user 
            after the data is retrieved from the data source.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.DataItem.NoDataMessage">
            <summary>
            Gets or sets the current data item no data message.
            </summary>
            <value>
            A <see cref="T:System.String"/> that starts with "=" is interpreted as expression 
            to calculate the no data message;
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.DataItem.NoDataStyle">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.Style"/> object 
            specifying the appearance of the no data message. 
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Style"/> object specifying
            the items's style. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.DataItem.Sortings">
            <summary>
            Gets a 
            <see cref="T:Telerik.Reporting.SortingCollection"/> 
            that defines the sort column(s), and their type and order for the
            <see cref="T:Telerik.Reporting.Table"/>
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.SortingCollection"/> 
            that contains the 
            <see cref="T:Telerik.Reporting.Sorting"/> objects for the
            <B>Table</B>
            </value>
            <remarks>
            Sort expressions sort the data that is displayed to the user 
            after the data is retrieved from the data source.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Chart.ClearSkin">
            <summary>
            Resets current chart skin to the default one.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Chart.CustomPalettes">
            <summary>
            Specifies the custom palettes for chart.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Chart.ChartTitle">
            <summary>
            Collection of titles for chart
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Chart.Legend">
            <summary>
            Chart legend
            </summary>                        
        </member>
        <member name="P:Telerik.Reporting.Chart.Appearance">
            <summary>
            Link to visualization and design properties
            </summary>        
        </member>
        <member name="P:Telerik.Reporting.Chart.Skin">
            <summary>
            Gets or sets the name of the chart's skin.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Chart.PlotArea">
            <summary>
            Chart plot area
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Chart.DefaultType">
            <summary>
            Default chart type
            </summary>                
        </member>
        <member name="P:Telerik.Reporting.Chart.DataGroupColumn">
            <summary>
            Defines a data source column name for grouping data
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Chart.Series">
            <summary>
            Gets or sets the chart's series collection object.
            </summary>  
        </member>
        <member name="P:Telerik.Reporting.Chart.SeriesPalette">
            <summary>
            Specifies the series palette
            </summary>        
        </member>
        <member name="P:Telerik.Reporting.Chart.ImageFormat">
            <summary>
            Specifies the image format in which the image is streamed.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Chart.SeriesOrientation">
            <summary>
            Specifies the orientation of the chart series on the plot area.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Chart.BitmapResolution">
            <summary>
            Specifies the resolution of the chart image when rendered as Bitmap.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Chart.AutoLayout">
            <summary>
            Specifies AutoLayout mode to all items on the chart control.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Chart.AutoTextWrap">
            <summary>
            Specifies AutoTextWrap mode for all wrappable text blocks of the chart control.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Chart.IntelligentLabelsEnabled">
            <summary>
            Toggles the use of the IntelligentLabels feature.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.CheckBox">
            <summary>
            Represents a check box report item. 
            </summary>    
        </member>
        <member name="T:Telerik.Reporting.TextItemBase">
            <summary>
            Represents a Text Item - a base class for report items like TextBox and CheckBox.
            </summary>    
        </member>
        <member name="P:Telerik.Reporting.IDesignTimeFormattable.Format">
            <summary>
            Gets or sets the numeric format.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.TextItemBase.Angle">
            <summary>
            Gets or sets the angle of rotation of the text in degrees.
            </summary>
            <value>
            A <I>double</I> value indicating the angle of rotation in degrees.
            </value>
            <remarks>
            More info on the Angle property behavior can be found at <conceptualLink target="2DCC7E20-E4CA-497D-B4C1-841CC2E9D19E#text-orientation">Text Box - Text Orientation</conceptualLink>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.TextItemBase.Format">
            <summary>
            Gets or sets the character(s) that specify how text is formatted.
            </summary>
            <value>
            The character or characters that specify how text is formatted.
            </value>
            <remarks>
            <para>
            Uses the The .NET Framework 
            <a href="https://msdn.microsoft.com/en-us/library/txafckwd.aspx">Composite Formatting</a> 
            feature which takes a composite format string as input.
            </para>
            <para>
            The format string is provided in the same manner as in the 
            <see cref="M:System.String.Format(String, Object)"/> 
            method. It uses the following syntax: 
            {index[,alignment][:formatString]}
            </para>
            <para>
            For more information and examples see 
            <a href="https://msdn.microsoft.com/en-us/library/System.String.Format(v=vs.110).aspx">String.Format Method</a>.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.TextItemBase.CanGrow">
            <summary>
            Gets or sets a value indicating whether the Text Item can grow 
            vertically. 
            </summary>
            <value>
            <B>true</B> if the Text Item can grow vertically; otherwise 
            <B>false</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.TextItemBase.CanShrink">
            <summary>
            Gets or sets a value indicating whether the Text Item can shrink 
            vertically. 
            </summary>
            <value>
            <B>true</B> if the Text Item can shrink vertically; otherwise 
            <B>false</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.TextItemBase.Multiline">
            <summary>
            Gets or sets a value indicating whether this is a multiline Text Item.
            </summary>
            <value>
            <B>true</B> if the Text Item supports multiple lines; otherwise 
            <B>false</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.TextItemBase.TextWrap">
            <summary>
            Gets or sets a value indicating whether a Text Item 
            automatically wraps words to the beginning of the next line when 
            necessary. 
            </summary>
            <value>
            <B>true</B> if the Text Item wraps words; otherwise 
            <B>false</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.TextItemBase.Culture">
            <summary>
            Gets or sets the culture information associated with the Text Item.
            </summary>
            <value>
            A <see cref="T:System.Globalization.CultureInfo"/> representing the 
            culture supported by the <see cref="T:Telerik.Reporting.TextItemBase"/>. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.CheckBox.Text">
            <summary>
            Gets or sets the current text (aka label) in the check box.
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.CheckBox.Value">
            <summary>
            Gets or sets the value of the check box.
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string.
            </value>
        </member>
        <member name="P:Telerik.Reporting.CheckBox.CheckAlign">
            <summary>
            Gets or sets the alignment of the check mark on a CheckBox. 
            </summary>
            <value>
            One of the <see cref="T:System.Drawing.ContentAlignment"/> values.
            The default is <see cref="F:System.Drawing.ContentAlignment.MiddleLeft"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.CheckBox.FalseValue">
            <summary>
            Gets or sets the value template corresponding to an Unchecked CheckBox
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string.
            </value>
        </member>
        <member name="P:Telerik.Reporting.CheckBox.TrueValue">
            <summary>
            Gets or sets the value template corresponding to an Selected CheckBox
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string.
            </value>
        </member>
        <member name="P:Telerik.Reporting.CheckBox.IndeterminateValue">
            <summary>
            Gets or sets the value template corresponding to an Indeterminate CheckBox
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string.
            </value>
        </member>
        <member name="P:Telerik.Reporting.CheckBox.UncheckedImage">
            <summary>
            Gets or sets the image corresponding to an Unchecked CheckBox
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression,
            </value>
        </member>
        <member name="P:Telerik.Reporting.CheckBox.CheckedImage">
            <summary>
            Gets or sets the image corresponding to an Selected CheckBox
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression,
            </value>
        </member>
        <member name="P:Telerik.Reporting.CheckBox.IndeterminateImage">
            <summary>
            Gets or sets the image corresponding to an Indeterminate CheckBox
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression,
            </value>
        </member>
        <member name="T:Telerik.Reporting.DetailSection">
            <summary>
            Represents the main section of a 
            <see cref="T:Telerik.Reporting.Report"/>. It is printed once for 
            every record in the data source of the report.
            </summary>
            <remarks>
            The Detail section appears below
            <see cref="T:Telerik.Reporting.PageHeaderSection"/> and 
            <see cref="T:Telerik.Reporting.ReportHeaderSection"/> sections and
            above <see cref="T:Telerik.Reporting.PageFooterSection"/> and
            <see cref="T:Telerik.Reporting.ReportFooterSection"/> sections.
            </remarks>    
        </member>
        <member name="T:Telerik.Reporting.ReportSection">
            <summary>
            Base abstract class for all report sections contained in the report
            body. Inherited by 
            <see cref="T:Telerik.Reporting.DetailSection"/>, 
            <see cref="T:Telerik.Reporting.GroupSection"/>, 
            <see cref="T:Telerik.Reporting.ReportHeaderSection"/>, 
            <see cref="T:Telerik.Reporting.ReportFooterSection"/>, 
            <see cref="T:Telerik.Reporting.TocSection"/>, 
            </summary>  
        </member>
        <member name="T:Telerik.Reporting.ReportSectionBase">
            <summary>
            Defines the base class for report sections.
            </summary>    
        </member>
        <member name="M:Telerik.Reporting.ReportSectionBase.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.ReportSectionBase"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportSectionBase.Height">
            <summary>
            Gets or sets the height of the current section.
            </summary>
            <value>
            The height of the current section in Units.
            </value>
        </member>
        <member name="P:Telerik.Reporting.ReportSection.CanShrink">
            <summary>
            Gets or sets a value indicating whether the 
            <see cref="T:Telerik.Reporting.ReportSection"/> 
            will shrink if a child item is shrunk or hidden.
            </summary>
            <value>
            A <I>boolean</I> value indicating whether the rendering engine should
            try to shrink the <see cref="T:Telerik.Reporting.ReportSection"/> 
            if a child item is shrunk or hidden.
            </value>
        </member>
        <member name="P:Telerik.Reporting.ReportSection.PageBreak">
            <summary>
            Gets or sets the page breaking rule for this
            <see cref="T:Telerik.Reporting.ReportSection"/>.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.PageBreak"/> object specifying the
            page breaking rule for this
            <see cref="T:Telerik.Reporting.ReportSection"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.ReportSection.KeepTogether">
            <summary>
            Gets or sets a value indicating whether the rendering engine should
            try to keep the 
            <see cref="T:Telerik.Reporting.ReportSection"/>
            on one page if possible.
            </summary>
            <value>
            A <I>boolean</I> value indicating whether the rendering engine 
            should try to keep the 
            <see cref="T:Telerik.Reporting.ReportSection"/>
            on one page if possible.
            </value>
        </member>
        <member name="P:Telerik.Reporting.DetailSection.ColumnCount">
            <summary>
            Gets or sets a value that specifies how many columns are present
            in the <see cref="T:Telerik.Reporting.DetailSection"/> of the report.
            </summary>
            <value>
            An integer value specifying the number of columns. 
            The value should be equal to or greater than 1. The default is 1.
            </value>
            <remarks>
            <para>
            Column widths are calculated based on the following rule:
            <B>DetailWidth</B> = <B>ColumnWidth</B> * <B>ColumnCount</B> + 
            <B>ColumSpacing</B> * (<B>ColumnCount</B> - 1)
            </para>
            <para>
            Multi-column reports are primarily used for printing labels. 
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.DetailSection.ColumnSpacing">
            <summary>
            Gets or sets a value indicating the space in Units between two 
            adjacent columns.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit"/> value specifying the
            space between two adjacent columns. The value should be a
            non-negative <B>Unit</B>. The default is 
            <see cref="F:Telerik.Reporting.Drawing.Unit.Zero"/>
            </value>
            <remarks>
            <para>
            This property should be used when there should be some blank space
            left between adjacent columns.
            </para>
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.DockingStyle">
            <summary>
            Specifies how a <see cref="T:Telerik.Reporting.ReportItem"/> docks to the edges of its container.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DockingStyle.None">
            <summary>
            The <see cref="T:Telerik.Reporting.ReportItem"/> is not docked to any edge of its container.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DockingStyle.Top">
            <summary>
            The <see cref="T:Telerik.Reporting.ReportItem"/> is docked to the top edge of its container.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DockingStyle.Bottom">
            <summary>
            The <see cref="T:Telerik.Reporting.ReportItem"/> is docked to the bottom edge of its container.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DockingStyle.Left">
            <summary>
            The <see cref="T:Telerik.Reporting.ReportItem"/> is docked to the left edge of its container.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DockingStyle.Right">
            <summary>
            The <see cref="T:Telerik.Reporting.ReportItem"/> is docked to the right edge of its container.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DockingStyle.Fill">
            <summary>
            The <see cref="T:Telerik.Reporting.ReportItem"/> is docked to all of the edges of its container.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.AttributeSelector">
            <summary>
            Represents a selector that matches a property value of a report item.
            </summary>
            <remarks>
            <para>
            Selectors are defined for each 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule"/> in the 
            <see cref="P:Telerik.Reporting.Report.StyleSheet"/>.
            </para>
            <para>
            <B>AttributeSelector</B> should be used when you want to match all 
            report items of a certain <B>Type</B> that have a property set to a 
            certain value.
            </para>
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.Drawing.AttributeSelectorBase">
            <summary>
            Provides the <B>abstract</B> base class for an attribute selector. 
            </summary>
            <remarks>
            <para>
            Selectors are defined for each 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule"/> in the 
            <see cref="P:Telerik.Reporting.Report.StyleSheet"/>.
            </para>
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.Drawing.TypeSelector">
            <summary>
            Represents a selector base on a <see cref="T:System.Type"/>
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.ISelector">
            <summary>
            Allows an object to implement a style selector, and represents a set
            of methods to match a <see cref="T:Telerik.Reporting.ReportItemBase"/> 
            and clone the selector.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.ISelector.Match(Telerik.Reporting.ReportItemBase)">
            <summary>
            Matches a <see cref="T:Telerik.Reporting.ReportItemBase"/> based on 
            certain criteria.
            </summary>
            <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase"/> to match.
            </param>
            <returns>
            <B>true</B> if <I>item</I> matches; otherwise <B>false</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.TypeSelector.PopulateInternalMap">
            <summary>
            Shortcut for all built-in types: appear as type names only in the type selector
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.TypeSelector.AnyType">
            <summary>
            Initializes a new type that matches any type of report item.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.TypeSelector.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.TypeSelector"/> class that
            matches any type of report item.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.TypeSelector.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.TypeSelector"/> class that
            matches items of the specified <I>type</I>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> that this selector
            matches.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.TypeSelector.Match(Telerik.Reporting.ReportItemBase)">
            <summary>
            Matches a <see cref="T:Telerik.Reporting.ReportItemBase"/> based on 
            its type.
            </summary>
            <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase"/> to match.
            </param>
            <returns>
            <B>true</B> if <I>item</I> matches; otherwise <B>false</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.TypeSelector.DeepClone">
            <summary>
            Performs a deep clone of the 
            <see cref="T:Telerik.Reporting.Drawing.TypeSelector"/>.
            </summary>
            <returns>
            The cloned <see cref="T:Telerik.Reporting.Drawing.TypeSelector"/>
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.TypeSelector.CopyTo(Telerik.Reporting.Drawing.TypeSelector)">
            <summary>
            Copies this <B>TypeSelector</B> to the specified <I>typeSelector</I>.
            </summary>
            <param name="typeSelector">
            The <see cref="T:Telerik.Reporting.Drawing.TypeSelector"/> to copy 
            to.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.TypeSelector.OnTypeChange">
            <summary>
            Called when the 
            <see cref="P:Telerik.Reporting.Drawing.TypeSelector.Type"/> of this
            selector changes.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.TypeSelector.ToString">
            <summary>
            Creates a human-readable string that represents this 
            <see cref="T:Telerik.Reporting.Drawing.TypeSelector"/>. 
            </summary>
            <returns>
            A string that represents this <B>TypeSelector</B>. 
            </returns>
        </member>
        <member name="P:Telerik.Reporting.Drawing.TypeSelector.Type">
            <summary>
            Gets or sets the <see cref="T:System.Type"/> that this selector
            matches.
            </summary>
            <value>
            A <see cref="T:System.Type"/> value to match.
            </value>
        </member>
        <member name="F:Telerik.Reporting.Drawing.AttributeSelectorBase.descriptor">
            <summary>
            The property descriptor associated with the property that this
            selector matches.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.AttributeSelectorBase.attributeName">
            <summary>
            The name of the property to match.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.AttributeSelectorBase.attributeValue">
            <summary>
            The value of the property to match.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.AttributeSelectorBase.#ctor">
            <summary>
            Initializes a new instance of the <B>AttributeSelectorBase</B> 
            class with an empty property name and value, that matches all
            <see cref="T:Telerik.Reporting.ReportItemBase"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.AttributeSelectorBase.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <B>AttributeSelectorBase</B> 
            class with the specified property name and value, that matches all
            <see cref="T:Telerik.Reporting.ReportItemBase"/> objects.
            </summary>
            <param name="propertyName">
            A string value indicating the property name to match.
            </param>
            <param name="propertyValue">
            A string value indicating the property value to match.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.AttributeSelectorBase.#ctor(System.Type,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <B>AttributeSelectorBase</B> 
            class with the specified property name and value, that matches 
            items of the specified type.
            </summary>
            <param name="type">
            A <see cref="T:System.Type"/> value indicating the type of the items
            to match.
            </param>
            <param name="propertyName">
            A string value indicating the property name to match.
            </param>
            <param name="propertyValue">
            A string value indicating the property value to match.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.AttributeSelectorBase.CopyTo(Telerik.Reporting.Drawing.TypeSelector)">
            <summary>
            Copies the property name and value of the selector to the target
            <I>typeSelector</I>.
            </summary>
            <param name="typeSelector">
            The <see cref="T:Telerik.Reporting.Drawing.TypeSelector"/> to copy 
            to.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.AttributeSelectorBase.Match(Telerik.Reporting.ReportItemBase)">
            <summary>
            Matches a report item by the value of its property.
            </summary>
            <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase"/> to match.
            </param>
            <returns>
            <B>true</B> if the <I>item</I>'s property value matches.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.AttributeSelector.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>
            A string value describing the selector.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.AttributeSelector.OnTypeChange">
            <summary>
            This member overrides 
            <see cref="M:Telerik.Reporting.Drawing.TypeSelector.OnTypeChange"/>.
            The method resets the selector.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Drawing.AttributeSelector.PropertyName">
            <summary>
            Gets or sets the name of the property to match.
            </summary>
            <value>
            The name of the property to match.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.AttributeSelector.PropertyValue">
            <summary>
            Gets or sets the value of the property to match.
            </summary>
            <value>
            The value of the property to match.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.AttributeSelector.PropertyValueDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.AttributeSelectorConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.AutoPalette">
            <summary>
            Default ColorPalette
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.IColorPalette">
            <summary>
            A common interface for all the color palette implementations.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.BackgroundImage">
            <summary>
            Represents a background image associated with a 
            <see cref="T:Telerik.Reporting.Drawing.Style"/>
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.BackgroundImage.#ctor(Telerik.Reporting.ReportObject)">
            <summary>
            Initializes a new instance of the <B>BackgroundImage</B> class as
            a member of the given 
            <see cref="T:Telerik.Reporting.Drawing.Style"/>
            </summary>
            <param name="style">
            A <see cref="T:Telerik.Reporting.Drawing.Style"/> value representing
            the parent style of the <B>BackgroundImage</B>.
            </param>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BackgroundImage.Repeat">
            <summary>
            Gets or sets a 
            <see cref="T:Telerik.Reporting.Drawing.BackgroundRepeat"/> value
            defining the repeat style of the <B>BackgroundImage</B>.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.BackgroundRepeat"/> value
            representing the repeat style of the <B>BackgroundImage</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BackgroundImage.ImageData">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.Image"/> containing the
            image data of this <B>BackgroundImage</B>.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Image"/> object containing the
            image data of this <B>BackgroundImage</B>.
            </value>
            <remarks>
            Use this property if you want to bind the <B>BackgroundImage</B>
            to an image that is not in the data source.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BackgroundImage.MimeType">
            <summary>
            Gets or sets the <B>MIME</B> type of the current 
            <see cref="T:Telerik.Reporting.Drawing.BackgroundImage"/> object.
            </summary>
            <value>
            The MIME type of the current <B>BackgroundImage</B> object. 
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.BackgroundRepeat">
            <summary>
            Indicates how a background image will be repeated.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.BackgroundRepeat.NoRepeat">
            <summary>
            The background-image will be displayed only once.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.BackgroundRepeat.RepeatX">
            <summary>
            The background image will be repeated horizontally.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.BackgroundRepeat.RepeatY">
            <summary>
            The background image will be repeated vertically.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.BackgroundRepeat.Repeat">
            <summary>
            The background image will be repeated vertically and horizontally.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.BorderBase">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.BorderBaseConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.BorderColor">
            <summary>
            A class used to specify the color of the border of an item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderColor.Default">
            <summary>
            Gets or sets the default color of the border.
            </summary>
            <value>
            The default border <see cref="T:System.Drawing.Color"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderColor.Top">
            <summary>
            Gets or sets the top color of the border.
            </summary>
            <value>
            The top border <see cref="T:System.Drawing.Color"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderColor.Bottom">
            <summary>
            Gets or sets the bottom color of the border.
            </summary>
            <value>
            The bottom border <see cref="T:System.Drawing.Color"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderColor.Left">
            <summary>
            Gets or sets the left color of the border.
            </summary>
            <value>
            The left border <see cref="T:System.Drawing.Color"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderColor.Right">
            <summary>
            Gets or sets the right color of the border.
            </summary>
            <value>
            The right border <see cref="T:System.Drawing.Color"/>.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.BorderColorFacade">
            <summary>
            A class used to specify the color of the border of an item.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.BorderStyle">
            <summary>
            A class used to specify the style of the border of an item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderStyle.Default">
            <summary>
            Gets or sets the default style of the border.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderType"/> object 
            specifying the default border style.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderStyle.Top">
            <summary>
            Gets or sets the top style of the border.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderType"/> object 
            specifying the top border style.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderStyle.Bottom">
            <summary>
            Gets or sets the bottom style of the border.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderType"/> object 
            specifying the bottom border style.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderStyle.Left">
            <summary>
            Gets or sets the left style of the border.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderType"/> object 
            specifying the left border style.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderStyle.Right">
            <summary>
            Gets or sets the right style of the border.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderType"/> object 
            specifying the right border style.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.BorderType">
            <summary>
            Specifies the type of a border.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.BorderType.None">
            <summary>
            No line.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.BorderType.Solid">
            <summary>
            A solid line.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.BorderType.Dotted">
            <summary>
            A dotted line.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.BorderType.Dashed">
            <summary>
            A dashed line.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.BorderType.Double">
            <summary>
            A double solid line.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.BorderType.Groove">
            <summary>
            A grooved line for a sunken border appearance.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.BorderType.Ridge">
            <summary>
            A ridged line for a raised border appearance.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.BorderType.Inset">
            <summary>
            An inset line for a sunken item appearance.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.BorderType.Outset">
            <summary>
            An outset line for a raised item appearance.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.BorderWidth">
            <summary>
            A class used to specify the width of the border of an item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderWidth.Default">
            <summary>
            Gets or sets the default width of the border.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit"/>  
            specifying the default border width.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderWidth.Top">
            <summary>
            Gets or sets the top width of the border.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit"/>  
            specifying the top border width.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderWidth.Bottom">
            <summary>
            Gets or sets the bottom width of the border.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit"/>  
            specifying the bottom border width.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderWidth.Left">
            <summary>
            Gets or sets the left width of the border.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit"/>  
            specifying the left border width.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.BorderWidth.Right">
            <summary>
            Gets or sets the right width of the border.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit"/>  
            specifying the right border width.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.ColorPalette">
            <summary>
            Represents a collection of user-selected colors.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.ConditionalFormatting">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.DescendantSelector">
            <summary>
            Represents a selector that matches an item that is a descendant of
            another item.
            </summary>
            <remarks>
            <para>
            At times, authors may want selectors to match an item that is the 
            descendant of another item in the report item tree (e.g., "Match those 
            TextBox elements that are contained by a Panel element"). Descendant 
            selectors express such a relationship in a pattern.
            </para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Drawing.DescendantSelector.#ctor">
            <summary>
            Initializes a new instance of the <B>DescendantSelector</B>.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.DescendantSelector.#ctor(Telerik.Reporting.Drawing.ISelector[])">
            <summary>
            Initializes a new instance of the <B>DescendantSelector</B> 
            class with the specified <I>selectors</I>.
            </summary>
            <param name="selectors">
            A <see cref="T:Telerik.Reporting.Drawing.ISelector"/> array
            containing the selectors that define the descendance pattern used 
            to match the item.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.DescendantSelector.Match(Telerik.Reporting.ReportItemBase)">
            <summary>
            Matches a report item based on the descendance pattern defined by 
            the 
            <see cref="P:Telerik.Reporting.Drawing.DescendantSelector.Selectors"/>
            </summary> of this selector.
            <param name="item">
            The <see cref="T:Telerik.Reporting.ReportItemBase"/> to match.
            </param>
            <returns>
            <B>true</B> if the <I>item</I> matches the descendance pattern.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.DescendantSelector.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>
            A string value describing the selector.
            </returns>
        </member>
        <member name="P:Telerik.Reporting.Drawing.DescendantSelector.Selectors">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.SelectorCollection"/>
            containing the selectors that define the descendance pattern used 
            to match the item.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.ExternalStyleSheet">
            <summary>
            Represents an external style sheet used to style a report.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.ExternalStyleSheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Drawing.ExternalStyleSheet"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.ExternalStyleSheet.#ctor(System.String)">
            <summary>
            Creates a new ExternalStyleSheet with the given resource identifier.
            </summary>
            <param name="name">The identifier for the resource
            containing the external style sheet. This parameter can be an 
            absolute or relative filepath, an absolute or relative URL, or the 
            name of an embedded resource.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.ExternalStyleSheet.#ctor(System.IO.Stream)">
            <summary>
            Creates a new ExternalStyleSheet by loading it from the specified 
            stream.
            </summary>
            <param name="stream">The stream to load from.</param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.ExternalStyleSheet.#ctor(System.Uri)">
            <summary>
            Creates a new ExternalStyleSheet by loading it from the specified 
            Uri.
            </summary>
            <param name="uri">The Uri to load from.</param>
        </member>
        <member name="T:Telerik.Reporting.Drawing.ExternalStyleSheetCollection">
            <summary>
            Represents a collection of 
            <see cref="T:Telerik.Reporting.Drawing.ExternalStyleSheet"/> objects. 
            </summary>
            <remarks>
            Each time an <see cref="T:Telerik.Reporting.Drawing.ExternalStyleSheet"/>
            object is inserted, deleted or set in this collection, the 
            <see cref="T:Telerik.Reporting.Report"/> that owns the collection is
            refreshed by re-applying or internal and external style sheets.
            </remarks>        
        </member>
        <member name="T:Telerik.Reporting.Drawing.ExternalStyleSheetCollectionConverter">
            <summary>
            ExternalStyleSheetCollectionConverter
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.ExternalStyleSheetConverter">
            <summary>
            ExternalStyleSheetConverter
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Font">
            <summary>
            Defines a particular format for text, including font face, size, and 
            style attributes.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Font.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>
            A string value describing the <B>Font</B>.
            </returns>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Font.Name">
            <summary>
            Gets or sets the face name of this 
            <see cref="T:Telerik.Reporting.Drawing.Font"/>. 
            </summary>
            <value>
            A string representation of the face name of this <B>Font</B>. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Font.Size">
            <summary>
            Gets or sets the size of this 
            <see cref="T:Telerik.Reporting.Drawing.Font"/> measured in 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/>s.
            </summary>
            <value>
            The <see cref="T:Telerik.Reporting.Drawing.Unit"/> size of this 
            <B>Font</B>.  
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Font.Bold">
            <summary>
            Gets a value that indicates whether this 
            <see cref="T:Telerik.Reporting.Drawing.Font"/> is bold. 
            </summary>
            <value>
            <B>true</B> if this <B>Font</B> is bold; otherwise, <B>false</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Font.Italic">
            <summary>
            Gets a value that indicates whether this 
            <see cref="T:Telerik.Reporting.Drawing.Font"/> is italic. 
            </summary>
            <value>
            <B>true</B> if this <B>Font</B> is italic; otherwise, <B>false</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Font.Underline">
            <summary>
            Gets a value that indicates whether this 
            <see cref="T:Telerik.Reporting.Drawing.Font"/> is underlined. 
            </summary>
            <value>
            <B>true</B> if this <B>Font</B> is underlined; otherwise, <B>false</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Font.Strikeout">
            <summary>
            Gets a value that indicates whether this 
            <see cref="T:Telerik.Reporting.Drawing.Font"/> specifies a horizontal 
            line through the font. 
            </summary>
            <value>
            <B>true</B> if this <B>Font</B> has a horizontal line through it; 
            otherwise, <B>false</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Font.Style">
            <summary>
            Gets or sets style information for this 
            <see cref="T:Telerik.Reporting.Drawing.Font"/>.
            </summary>
            <value>
            A <see cref="T:System.Drawing.FontStyle"/> enumeration that contains 
            style information for this <B>Font</B>.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.FormattingRule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Drawing.FormattingRule.StopIfTrue">
            <summary>
            Indicates whether to proceed
            with the next FormattingRule in the ReportItemBase.ConditionalFormattings
            collection if the current rule is applied.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.GradientPalette">
            <summary>
            A color palette that generates transitional colors based on a continuous linear gradient between two base colors.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.HorizontalAlign">
            <summary>
            Specifies the horizontal alignment of the text in a report item.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.HorizontalAlign.Left">
            <summary>
            Specifies that the text is aligned to the left.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.HorizontalAlign.Center">
            <summary>
            Specifies that the text is aligned to the center.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.HorizontalAlign.Right">
            <summary>
            Specifies that the text is aligned to the right.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.HorizontalAlign.Justify">
            <summary>
            Specifies that the text is justified.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.ImageSizeMode">
            <summary>
            Specifies how an image is positioned within an item.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.ImageSizeMode.AutoSize">
            <summary>
            Grows or shrinks borders of the image item to fit the image.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.ImageSizeMode.Center">
            <summary>
            The image is displayed in the center of the item. 
            If the image is larger than the item, the image is clipped.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.ImageSizeMode.Normal">
            <summary>
            Clips the image to fit the height and width of the item.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.ImageSizeMode.Stretch">
            <summary>
            Resizes the image to match the height and width of the item.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.ImageSizeMode.ScaleProportional">
            <summary>
            Resizes the image to match the height and width of the item, 
            preserving the aspect ratio.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.LineStyle">
            <summary>
            Specifies the type of a line item
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.LineStyle.Solid">
            <summary>
            A solid line.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.LineStyle.Dashed">
            <summary>
            A dashed line.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.LineStyle.Dotted">
            <summary>
            A dotted line.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.MarginsU">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.MonochromaticPalette">
            <summary>
            A color palette that provides colors generated using a variable lightness between defined minimum and maximum values.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Drawing.MonochromaticPalette.MinLightness">
            <summary>
            Gets or sets a value defining the minimal lightness of the generated colors
            </summary>
            <value>
            Value between 0M and 0.5M
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.MonochromaticPalette.MaxLightness">
            <summary>
            Gets or sets a value defining the maximal lightness of the generated colors
            </summary>
            <value>
            Value between 0.5M and 1M
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Padding">
            <summary>
            Represents padding information associated with a report item.
            </summary>
            <remarks>
            <para>
            The padding is the internal space between the body of the item and its 
            edge.
            </para> 
            <para>
            Padding has a different effect on report items that are containers than 
            on report items that are not. For example, in a 
            <see cref="T:Telerik.Reporting.Panel"/> item, the <B>Padding</B> property 
            defines the spacing between the border of the <B>Panel</B> and its 
            child items. For a <see cref="T:Telerik.Reporting.TextBox"/> item, the 
            <B>Padding</B> property defines the spacing between the border of the 
            <B>TextBox</B> item and its contained text.
            </para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Padding.#ctor(Telerik.Reporting.ReportObject)">
            <summary>
            Initializes a new instance of the <B>Padding</B> class as
            a member of the given 
            <see cref="T:Telerik.Reporting.Drawing.Style"/>
            </summary>
            <param name="style">
            A <see cref="T:Telerik.Reporting.Drawing.Style"/> value representing
            the parent style of the <B>Padding</B>.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Padding.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString"/>
            </summary>
            <returns>
            A string value listing the <B>Padding</B>'s members.
            </returns>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Padding.Left">
            <summary>
            Gets or sets the padding value for the left edge.
            </summary>
            <value>
            The padding, in <see cref="T:Telerik.Reporting.Drawing.Unit"/>s, for 
            the left edge.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Padding.Right">
            <summary>
            Gets or sets the padding value for the right edge.
            </summary>
            <value>
            The padding, in <see cref="T:Telerik.Reporting.Drawing.Unit"/>s, for 
            the right edge.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Padding.Top">
            <summary>
            Gets or sets the padding value for the top edge.
            </summary>
            <value>
            The padding, in <see cref="T:Telerik.Reporting.Drawing.Unit"/>s, for 
            the top edge.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Padding.Bottom">
            <summary>
            Gets or sets the padding value for the bottom edge.
            </summary>
            <value>
            The padding, in <see cref="T:Telerik.Reporting.Drawing.Unit"/>s, for 
            the bottom edge.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.PageSettings">
            <summary>
            Specifies settings that apply to a single, printed page. 
            </summary>
            <remarks>
            The <B>PageSettings</B> class is used to specify settings that modify 
            the way a page will be printed.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PageSettings.#ctor(System.Drawing.Printing.PageSettings,System.Drawing.Printing.PrinterSettings)">
            <summary>
            Initializes a new instance of the <B>PageSettings</B> 
            class with the specified 
            <see cref="T:System.Drawing.Printing.PageSettings"/> and
            <see cref="T:System.Drawing.Printing.PrinterSettings"/>.
            </summary>
            <param name="pageSettings">
            A <see cref="T:System.Drawing.Printing.PageSettings"/> object
            specifying the landscape and paper kind.
            </param>
            <param name="printerSettings">
            A <see cref="T:System.Drawing.Printing.PrinterSettings"/> object
            specifying the papers size and margins.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PageSettings.Clone">
            <summary>
            This member implements <see cref="M:System.ICloneable.Clone"/>
            </summary>
            <returns>
            The cloned <B>PageSettings</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PageSettings.ToPageSettings(System.Drawing.Printing.PrinterSettings)">
            <summary>
            Returns a <see cref="T:System.Drawing.Printing.PageSettings"/>
            object based on the given
            <see cref="T:System.Drawing.Printing.PrinterSettings"/> parameter.
            </summary>
            <param name="printerSettings">
            A <see cref="T:System.Drawing.Printing.PrinterSettings"/> object
            from which to create the 
            <see cref="T:System.Drawing.Printing.PageSettings"/>.
            </param>
            <returns>
            A <see cref="T:System.Drawing.Printing.PageSettings"/> object 
            initialized from the <I>printerSettings</I>.
            </returns>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PageSettings.PaperKind">
            <summary>
            Gets or sets the paper kind for the page.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Printing.PaperKind"/> that represents 
            the kind of the paper.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PageSettings.PaperSize">
            <summary>
            Gets or sets the paper size for the page.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.SizeU"/> that represents 
            the size of the paper.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PageSettings.Landscape">
            <summary>
            Gets or sets a value indicating whether the page is printed in 
            landscape or portrait orientation.
            </summary>
            <value>
            <B>true</B> if the page should be printed in landscape orientation; 
            otherwise, <B>false</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PageSettings.Margins">
            <summary>
            Gets or sets the margins for this page.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.MarginsU"/> that represents 
            the margins for the page.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PageSettings.Watermarks">
            <summary>
            Specifies a collection of watermarks for the page.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PageSettings.ColumnCount">
            <summary>
            Gets or sets a value that specifies how many columns are present
            in the <see cref="T:Telerik.Reporting.DetailSection"/> of the report.
            </summary>
            <value>
            An integer value specifying the number of columns. 
            The value should be equal to or greater than 1. The default is 1.
            </value>
            <remarks>
            <para>
            Column widths are calculated based on the following rule:
            <B>DetailWidth</B> = <B>ColumnWidth</B> * <B>ColumnCount</B> + 
            <B>ColumSpacing</B> * (<B>ColumnCount</B> - 1)
            </para>
            <para>
            Multi-column reports are primarily used for printing labels. 
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PageSettings.ColumnSpacing">
            <summary>
            Gets or sets a value indicating the space in Units between two 
            adjacent columns.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit"/> value specifying the
            space between two adjacent columns. The value should be a
            non-negative <B>Unit</B>. The default is 
            <see cref="F:Telerik.Reporting.Drawing.Unit.Zero"/>
            </value>
            <remarks>
            <para>
            This property should be used when there should be some blank space
            left between adjacent columns.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PageSettings.BackgroundColor">
            <summary>
            Gets or sets the background color of the page. 
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the background 
            color of the page. The default is 
            <see cref="F:System.Drawing.Color.Empty"/>, which indicates that this 
            property is not set. 
            </value>
            <remarks>
            Use the <B>BackgroundColor</B> property to specify the background color 
            of the page. This property is set using a 
            <see cref="T:System.Drawing.Color"/> object.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PageSettings.BorderStyle">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.BorderStyle"/> object
            used to define the page border style.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderStyle"/> representing
            the page border style.
            </value>
            <remarks>
            You can set the page border style by using the properties
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Default"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Left"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Right"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Top"/>, and
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Bottom"/>.
            The <B>Default</B> property is used to set all borders styles at 
            once. All borders are 
            <B>BorderType.None</B> by default.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PageSettings.BorderColor">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.BorderColor"/> object
            used to define the page border color.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderColor"/> representing
            the page border color.
            </value>
            <remarks>
            You can set the page border color by using the properties
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Default"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Left"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Right"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Top"/>, and
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Bottom"/>.
            The <B>Default</B> property is used to set all borders colors at 
            once. All borders are 
            <see cref="P:System.Drawing.Color.Black"/> by default.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PageSettings.BorderWidth">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.BorderWidth"/> object
            used to define the page border width.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderWidth"/> representing
            the page border width.
            </value>
            <remarks>
            You can set the page border width by using the properties
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Default"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Left"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Right"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Top"/>, and
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Bottom"/>.
            The <B>Default</B> property is used to set all borders widths at 
            once. All borders are 1pt wide by default.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PageSettings.BackgroundImage">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.BackgroundImage"/> 
            object that controls the image displayed in the background of the 
            page.
            </summary>
            <value>
            An <see cref="T:Telerik.Reporting.Drawing.BackgroundImage"/> that 
            represents the image to display in the background of the report 
            item. Report items have no background image by default.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PageSettings.ContinuousPaper">
            <summary>
            Gets or sets a value indicating whether the report is printed
            without being paginated (as one long page).
            </summary>
            <value>
            <B>true</B> if the report should be printed as one page; 
            otherwise, <B>false</B>. The default value is false
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.PageSettingsConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.PageSettingsConverter.PaperSizeConverter">
            <summary>
            Non-expandable SizeU Converter
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.PictureWatermark">
            <summary>
            Represents a picture watermark on a printable page.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Watermark">
            <summary>
            Represents a watermark on a printable page.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Watermark.Position">
            <summary>
            Gets or sets the position of the watermark relative to the other
            items on the printable page.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.WatermarkPosition"/> value
            that specifies the position of the watermark relative to the other
            items on the printable page.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Watermark.Opacity">
            <summary>
            Gets or sets the opacity of the watermark when combining it with the
            other items on the printable page.
            </summary>
            <value>
            A value that specifies the opacity of the watermark when combining it
            with the other items on the printable page.
            </value>
            <remarks>
            The value can be specified in the range from 0.0 to 1.0, where 0.0 is
            completely transparent, while 1.0 is completely opaque. Any other value
            outside that range is clamped to the closest allowed value.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Watermark.PrintOnFirstPage">
            <summary>
            Gets or sets a value indicating whether to print the watermark on
            the first printable page of the report.
            </summary>
            <value>
            A boolean value indicating whether to print the watermark on the
            first printable page of the report.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Watermark.PrintOnLastPage">
            <summary>
            Gets or sets a value indicating whether to print the watermark on
            the last printable page of the report.
            </summary>
            <value>
            A boolean value indicating whether to print the watermark on the
            last printable page of the report.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PictureWatermark.Image">
            <summary>
            Gets or sets the image of the watermark to be printed on the page.
            </summary>
            <value>
            The image of the watermark to be printed on the page.
            </value>
            <remarks>
            The specified image can be in one of the following supported formats:
            an object instance inherited from <see cref="T:System.Drawing.Image"/>;
            an array of bytes containing binary image data; a local file path
            (relative or absolute) or an URL to an external image file. 
            Instead of providing the image directly, 
            it is possible to specify it indirectly as an expression
            that gets evaluated at runtime for each printable page.
            The result of the evaluation should be of one of the support types
            enumerated above. If the image
            is null (Nothing in Visual Basic), or if the specified expression
            evaluates to null (Nothing in Visual Basic), the watermark is not
            printed on the current page.
            </remarks>
            <example>
            The following expression prints a watermark on every second page:
            <code>
            = IIf(PageNumber % 2 = 0, "Watermark.png", Null)
            </code>
            </example>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PictureWatermark.Sizing">
            <summary>
            Gets or sets the sizing mode of the watermark image on the printable page.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.ImageSizeMode"/> value that
            specifies the sizing mode of the watermark image on the printable page.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.PointU">
            <summary>
            Represents an ordered pair of unit-based point x- and y-coordinates
            that defines a point in a two-dimensional plane.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.PointU.Empty">
            <summary>
            Represents a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.PointU"/> class with member 
            data left uninitialized. 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Drawing.PointU.#ctor(System.Drawing.Point)" -->
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Drawing.PointU.#ctor(System.Drawing.PointF)" -->
        <member name="M:Telerik.Reporting.Drawing.PointU.#ctor(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Initializes a new instance of the PointU class with the specified
            coordinates.
            </summary>
            <param name="x">
            The horizontal position of the point.
            </param>
            <param name="y">
            The vertical position of the point.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PointU.op_Addition(Telerik.Reporting.Drawing.PointU,Telerik.Reporting.Drawing.SizeU)">
            <summary>
            Translates the <B>PointU</B> by the specified <B>SizeU</B>. 
            </summary>
            <param name="pt">
            The <see cref="T:Telerik.Reporting.Drawing.PointU"/> to translate.
            </param>
            <param name="size">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU"/> that specifies 
            the numbers to add to the x- and y-coordinates of the 
            <B>PointU</B>.
            </param>
            <returns>
            The translated <B>PointU</B>.
            </returns>
            <remarks>
            <para>
            The <B>op_Addition</B> operator adds the 
            <see cref="P:Telerik.Reporting.Drawing.SizeU.Width"/> of the 
            specified size to the x-coordinate of the <B>PointU</B> and the 
            <see cref="P:Telerik.Reporting.Drawing.SizeU.Height"/> to the 
            y-coordinate of the <B>PointU</B>.
            </para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PointU.op_Subtraction(Telerik.Reporting.Drawing.PointU,Telerik.Reporting.Drawing.SizeU)">
            <summary>
            Translates the <B>PointU</B> by the negative of a specified 
            <B>SizeU</B>. 
            </summary>
            <param name="pt">
            The <see cref="T:Telerik.Reporting.Drawing.PointU"/> to translate.
            </param>
            <param name="size">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU"/> that specifies 
            the numbers to subtract from the x- and y-coordinates of the 
            <B>PointU</B>.
            </param>
            <returns>
            The translated <B>PointU</B>.
            </returns>
            <remarks>
            <para>
            The <B>op_Subtraction</B> operator subtracts the 
            <see cref="P:Telerik.Reporting.Drawing.SizeU.Width"/> of the 
            specified size from the x-coordinate of the <B>PointU</B> and the 
            <see cref="P:Telerik.Reporting.Drawing.SizeU.Height"/> from the 
            y-coordinate of the <B>PointU</B>.
            </para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PointU.op_Equality(Telerik.Reporting.Drawing.PointU,Telerik.Reporting.Drawing.PointU)">
            <summary>
            Compares two <B>PointU</B> structures. The result specifies whether 
            the values of the <see cref="P:Telerik.Reporting.Drawing.PointU.X"/> 
            and <see cref="P:Telerik.Reporting.Drawing.PointU.Y"/> properties of 
            the two <B>PointU</B> structures are equal. 
            </summary>
            <param name="pt1">
            A <see cref="T:Telerik.Reporting.Drawing.PointU"/> to compare. 
            </param>
            <param name="pt2">
            A <see cref="T:Telerik.Reporting.Drawing.PointU"/> to compare. 
            </param>
            <returns>
            <B>true</B> if the <B>X</B> and <B>Y</B> values of the left and 
            right <B>PointU</B> structures are equal; otherwise, <B>false</B>. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PointU.op_Inequality(Telerik.Reporting.Drawing.PointU,Telerik.Reporting.Drawing.PointU)">
            <summary>
            Determines whether the coordinates of the specified points are not 
            equal. 
            </summary>
            <param name="pt1">
            A <see cref="T:Telerik.Reporting.Drawing.PointU"/> to compare. 
            </param>
            <param name="pt2">
            A <see cref="T:Telerik.Reporting.Drawing.PointU"/> to compare. 
            </param>
            <returns>
            <B>true</B> to indicate the 
            <see cref="P:Telerik.Reporting.Drawing.PointU.X"/> and 
            <see cref="P:Telerik.Reporting.Drawing.PointU.Y"/> values of 
            <I>pt1</I> and <I>pt2</I> are not equal; otherwise, <B>false</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PointU.op_Explicit(Telerik.Reporting.Drawing.PointU)~System.Drawing.PointF">
            <summary>
            Converts the specified reporting 
            <see cref="T:Telerik.Reporting.Drawing.PointU"/> to a 
            <see cref="T:System.Drawing.PointF"/> in device-dependent pixels.
            </summary>
            <param name="point">
            The <see cref="T:Telerik.Reporting.Drawing.PointU"/> to convert.
            </param>
            <returns>
            The <see cref="T:System.Drawing.PointF"/> that is converted from the 
            specified reporting <B>Point</B> structure. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PointU.ToFDP">
            <summary>
            Calculates the Unit point into device-dependent pixels.
            Alternative of the dedicated explicit operator.
            </summary>
            <returns>
            Float point having the magnitude of the unit point, but in device-dependent pixels
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PointU.op_Explicit(Telerik.Reporting.Drawing.PointU)~System.Drawing.Point">
            <summary>
            Converts the specified reporting 
            <see cref="T:Telerik.Reporting.Drawing.PointU"/> to a 
            <see cref="T:System.Drawing.Point"/> in device-dependent pixels.
            </summary>
            <param name="point">
            The <see cref="T:Telerik.Reporting.Drawing.PointU"/> to convert.
            </param>
            <returns>
            The <see cref="T:System.Drawing.Point"/> that is converted from the 
            specified reporting <B>Point</B> structure. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PointU.ToDP">
            <summary>
            Calculates the Unit point into device-dependent pixels.
            Alternative of the dedicated explicit operator.
            </summary>
            <returns>
            Integer point having the magnitude of the unit point, but in device-dependent pixels
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PointU.Equals(System.Object)">
            <summary>
            Specifies whether this 
            <see cref="T:Telerik.Reporting.Drawing.PointU"/> contains the same 
            coordinates as the specified <B>Object</B>. 
            </summary>
            <param name="obj">
            The <see cref="T:System.Object"/> to test.
            </param>
            <returns>
            This method returns <B>true</B> if <I>obj</I> is a <B>PointU</B> 
            and has the same coordinates as this 
            <see cref="T:Telerik.Reporting.Drawing.PointU"/>. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PointU.GetHashCode">
            <summary>
            Returns a hash code for this 
            <see cref="T:Telerik.Reporting.Drawing.PointU"/> structure. 
            </summary>
            <returns>
            An integer value that specifies a hash value for this <B>PointU</B> 
            structure. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PointU.ToString">
            <summary>
            Converts this <see cref="T:Telerik.Reporting.Drawing.PointU"/> to a 
            human readable string. 
            </summary>
            <returns>
            A string that represents this <B>PointU</B>. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PointU.ToString(System.Globalization.CultureInfo)">
            <summary>
            Converts this <see cref="T:Telerik.Reporting.Drawing.PointU"/> to a 
            human readable string according to the 
            <see cref="T:System.Globalization.CultureInfo"/> specified. 
            </summary>
            <param name="culture">
            A <see cref="T:System.Globalization.CultureInfo"/> that is used to
            format the string.
            </param>
            <returns>
            A string that represents this <B>PointU</B>. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.PointU.Offset(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Offsets this <see cref="T:Telerik.Reporting.Drawing.PointU"/> 
            structure by a specified amount in the x- and y-direction.
            </summary>
            <param name="dx">
            A <see cref="T:Telerik.Reporting.Drawing.Unit"/> value specifying
            the amount to offset in the horizontal direction.
            </param>
            <param name="dy">
            A <see cref="T:Telerik.Reporting.Drawing.Unit"/> value specifying
            the amount to offset in the vertical direction.
            </param>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PointU.X">
            <summary>
            Gets or sets the x-coordinate of this
            <see cref="T:Telerik.Reporting.Drawing.PointU"/>
            </summary>
            <value>
            The x-coordinate of this <B>PointU</B>. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PointU.Y">
            <summary>
            Gets or sets the y-coordinate of this
            <see cref="T:Telerik.Reporting.Drawing.PointU"/>
            </summary>
            <value>
            The y-coordinate of this <B>PointU</B>. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.PointU.IsEmpty">
            <summary>
            Gets a value indicating whether this 
            <see cref="T:Telerik.Reporting.Drawing.PointU"/> is empty. 
            </summary>
            <value>
            <B>true</B> if both 
            <see cref="P:Telerik.Reporting.Drawing.PointU.X"/> and 
            <see cref="P:Telerik.Reporting.Drawing.PointU.Y"/> are equal to zero;
            otherwise, <B>false</B>.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.PropertyNameConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.RectangleU">
            <summary>
            Stores a set of four Unit-based numbers that represent the location and 
            size of a rectangle. 
            </summary>
            <remarks>
            A <B>RectangleU</B> is defined by its width, height, and upper-left 
            corner.
            </remarks>
        </member>
        <member name="F:Telerik.Reporting.Drawing.RectangleU.Empty">
            <summary>
            Represents an instance of the 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> class with its 
            members uninitialized. 
            </summary>
            <remarks>
            The members of the new <B>RectangleU</B> are left uninitialized.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.#ctor(System.Drawing.Rectangle)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> class from the 
            specified <see cref="T:System.Drawing.Rectangle"/> in device-independent pixels.
            </summary>
            <param name="rectangleDips">
            A <see cref="T:System.Drawing.Rectangle"/> that represents the 
            rectangular region.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> class from the 
            specified <see cref="T:System.Drawing.RectangleF"/> in device-independent pixels.
            </summary>
            <param name="rectangleDips">
            A <see cref="T:System.Drawing.RectangleF"/> that represents the 
            rectangular region.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.#ctor(Telerik.Reporting.Drawing.PointU,Telerik.Reporting.Drawing.SizeU)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> class with the 
            specified location and size. 
            </summary>
            <param name="location">
            A <see cref="T:Telerik.Reporting.Drawing.PointU"/> that represents 
            the upper-left corner of the rectangular region. 
            </param>
            <param name="size">
            A <see cref="T:Telerik.Reporting.Drawing.SizeU"/> that represents the 
            width and height of the rectangular region. 
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.#ctor(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> class with the 
            specified location and size. 
            </summary>
            <param name="x">
            The x-coordinate of the upper-left corner of the rectangle. 
            </param>
            <param name="y">
            The y-coordinate of the upper-left corner of the rectangle. 
            </param>
            <param name="width">
            The width of the rectangle. 
            </param>
            <param name="height">
            The height of the rectangle. 
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.op_Equality(Telerik.Reporting.Drawing.RectangleU,Telerik.Reporting.Drawing.RectangleU)">
            <summary>
            Tests whether two <B>RectangleU</B> structures have equal location 
            and size. 
            </summary>
            <param name="rect1">
            The <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure 
            that is to the left of the equality operator. 
            </param>
            <param name="rect2">
            The <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure 
            that is to the right of the equality operator. 
            </param>
            <returns>
            This operator returns <B>true</B> if the two specified 
            <B>RectangleU</B> structures have equal 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.X"/>,
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Y"/>,
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Width"/>, and 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Height"/> 
            properties. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.op_Inequality(Telerik.Reporting.Drawing.RectangleU,Telerik.Reporting.Drawing.RectangleU)">
            <summary>
            Tests whether two <B>RectangleU</B> structures differ in location 
            or size.
            </summary>
            <param name="rect1">
            The <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure 
            that is to the left of the equality operator. 
            </param>
            <param name="rect2">
            The <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure 
            that is to the right of the equality operator. 
            </param>
            <returns>
            This operator returns <B>true</B> if any of the 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.X"/>,
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Y"/>,
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Width"/>, or 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Height"/> 
            properties of the two 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> 
            structures are unequal; otherwise <B>false</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.op_Explicit(Telerik.Reporting.Drawing.RectangleU)~System.Drawing.Rectangle">
            <summary>
            Converts the specified <B>RectangleU</B> structure to a 
            <see cref="T:System.Drawing.Rectangle"/> structure in device-dependent pixels. 
            </summary>
            <param name="rect">
            The <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure
            to convert.
            </param>
            <returns>
            The <B>Rectangle</B> structure that is converted from the specified 
            <B>RectangleU</B> structure. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.ToDP">
            <summary>
            Calculates the Unit rectangle into device-dependent pixels.
            Alternative of the dedicated explicit operator.
            </summary>
            <returns>
            Integer rectangle having the magnitude of the unit rectangle, but in device-dependent pixels
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.op_Explicit(Telerik.Reporting.Drawing.RectangleU)~System.Drawing.RectangleF">
            <summary>
            Converts the specified <B>RectangleU</B> structure to a 
            <see cref="T:System.Drawing.RectangleF"/> structure in device-dependent pixels. 
            </summary>
            <param name="rect">
            The <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure
            to convert.
            </param>
            <returns>
            The <B>RectangleF</B> structure that is converted from the specified 
            <B>RectangleU</B> structure. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.ToFDP">
            <summary>
            Calculates the Unit rectangle into device-dependent pixels.
            Alternative of the dedicated explicit operator.
            </summary>
            <returns>
            Float rectangle having the magnitude of the unit rectangle, but in device-dependent pixels
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.Contains(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Determines if the specified point is contained within this 
            <B>RectangleU</B> structure. 
            </summary>
            <param name="x">
            The x-coordinate of the point to test.
            </param>
            <param name="y">
            The x-coordinate of the point to test.
            </param>
            <returns>
            This method returns <B>true</B> if the point defined by <I>x</I> 
            and <I>y</I> is contained within this <B>RectangleU</B> structure; 
            otherwise <B>false</B>. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.Contains(Telerik.Reporting.Drawing.PointU)">
            <summary>
            Determines if the specified point is contained within this 
            <B>RectangleU</B> structure. 
            </summary>
            <param name="pt">
            The <see cref="T:Telerik.Reporting.Drawing.PointU"/> to test.
            </param>
            <returns>
            This method returns <B>true</B> if the point represented by the 
            <I>pt</I> parameter is contained within this <B>RectangleU</B> 
            structure; otherwise <B>false</B>. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.Contains(Telerik.Reporting.Drawing.RectangleU)">
            <summary>
            Determines if the rectangular region represented by <I>rect</I> is 
            entirely contained within this <B>RectangleU</B> structure.
            </summary>
            <param name="rect">
            The <see cref="T:System.Drawing.RectangleF"/> to test.
            </param>
            <returns>
            This method returns <B>true</B> if the rectangular region 
            represented by <I>rect</I> is entirely contained within the 
            rectangular region represented by this <B>RectangleU</B>; otherwise 
            <B>false</B>. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.Inflate(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Inflates this <B>RectangleU</B> structure by the specified amount. 
            </summary>
            <param name="width">
            The amount to inflate this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure 
            horizontally.
            </param>
            <param name="height">
            The amount to inflate this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure 
            vertically.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.Inflate(Telerik.Reporting.Drawing.SizeU)">
            <summary>
            Inflates this <B>RectangleU</B> structure by the specified amount. 
            </summary>
            <param name="size">
            The amount to inflate this rectangle.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.Inflate(Telerik.Reporting.Drawing.RectangleU,Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Inflates <I>rect</I> by the specified amount.
            </summary>
            <param name="rect">
            The <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure
            to inflate.
            </param>
            <param name="x">
            The amount to inflate this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure 
            horizontally.
            </param>
            <param name="y">
            The amount to inflate this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure 
            vertically.
            </param>
            <returns>
            The inflated <B>RectangleU</B> structure.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.IntersectsWith(Telerik.Reporting.Drawing.RectangleU)">
            <summary>
            Determines if this rectangle intersects with <I>rect</I>. 
            </summary>
            <param name="rect">
            The rectangle to test.
            </param>
            <returns>
            This method returns <B>true</B> if there is any intersection; 
            otherwise <B>false</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.Offset(Telerik.Reporting.Drawing.PointU)">
            <summary>
            Adjusts the location of this rectangle by the specified amount. 
            </summary>
            <param name="pos">
            The amount to offset the location.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.Offset(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Adjusts the location of this rectangle by the specified amount. 
            </summary>
            <param name="x">
            The amount to offset the location horizontally. 
            </param>
            <param name="y">
            The amount to offset the location vertically.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.Equals(System.Object)">
            <summary>
            Tests whether <I>obj</I> is a 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> with the same 
            location and size of this <B>RectangleU</B>. 
            </summary>
            <param name="obj">
            The <see cref="T:System.Object"/> to test. 
            </param>
            <returns>
            This method returns <B>true</B> if <I>obj</I> is a 
            <B>RectangleU</B> and its <B>X</B>, <B>Y</B>, <B>Width</B>, and 
            <B>Height</B> properties are equal to the corresponding properties 
            of this <B>RectangleU</B>; otherwise, <B>false</B>. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.ToString">
            <summary>
            Converts the <B>Location</B> and <B>Size</B> of this 
            <B>RectangleU</B> to a human-readable string. 
            </summary>
            <returns>
            A human-readable representation of the rectangle.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.ToString(System.Globalization.CultureInfo)">
            <summary>
            Converts the <B>Location</B> and <B>Size</B> of this 
            <B>RectangleU</B> to a human-readable string. 
            </summary>
            <param name="culture">
            A <see cref="T:System.Globalization.CultureInfo"/> object according
            to which to format the string.
            </param>
            <returns>
            A human-readable representation of the rectangle.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.RectangleU.GetHashCode">
            <summary>
            Returns a hash code for this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure. 
            </summary>
            <returns>
            An integer value that specifies a hash value for this 
            <B>RectangleU</B> structure. 
            </returns>
        </member>
        <member name="P:Telerik.Reporting.Drawing.RectangleU.X">
            <summary>
            Gets or sets the x-coordinate of the upper-left corner of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure.
            </summary>
            <value>
            The x-coordinate of the upper-left corner of this <B>RectangleF</B> 
            structure. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.RectangleU.Y">
            <summary>
            Gets or sets the y-coordinate of the upper-left corner of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure.
            </summary>
            <value>
            The y-coordinate of the upper-left corner of this <B>RectangleF</B> 
            structure. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.RectangleU.Width">
            <summary>
            Gets or sets the width of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure.
            </summary>
            <value>
            The width of this <B>RectangleF</B> structure. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.RectangleU.Height">
            <summary>
            Gets or sets the height of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure.
            </summary>
            <value>
            The height of this <B>RectangleF</B> structure. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.RectangleU.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.PointU"/> that represents 
            the upper-left corner of this RectangleF structure. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.RectangleU.Size">
            <summary>
            Gets or sets the size of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/>. 
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.SizeU"/> that represents the 
            width and height of this <B>RectangleU</B> structure. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.RectangleU.Left">
            <summary>
            Gets the x-coordinate of the left edge of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure. 
            </summary>
            <value>
            The x-coordinate of the left edge of this 
            <B>RectangleU</B> structure. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.RectangleU.Top">
            <summary>
            Gets the y-coordinate of the left edge of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> structure. 
            </summary>
            <value>
            The y-coordinate of the left edge of this 
            <B>RectangleU</B> structure. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.RectangleU.Right">
            <summary>
            Gets the x-coordinate that is the sum of 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.X"/> and 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Width"/> of this 
            <B>RectangleU</B> structure. 
            </summary>
            <value>
            The x-coordinate that is the sum of <B>X</B> and <B>Width</B> of 
            this <B>RectangleU</B> structure. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.RectangleU.Bottom">
            <summary>
            Gets the y-coordinate that is the sum of 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Y"/> and 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Height"/> of this 
            <B>RectangleU</B> structure. 
            </summary>
            <value>
            The y-coordinate that is the sum of <B>Y</B> and <B>Height</B> of 
            this <B>RectangleU</B> structure. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.RectangleU.IsEmpty">
            <summary>
            Tests whether the 
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.X"/>,
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Y"/>,
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Width"/>, and
            <see cref="P:Telerik.Reporting.Drawing.RectangleU.Height"/> 
            properties of this 
            <see cref="T:Telerik.Reporting.Drawing.RectangleU"/> have a value of 
            zero.
            </summary>
            <value>
            This property returns <B>true</B> if the <B>X</B>, <B>Y</B>, 
            <B>Width</B>, and <B>Height</B> properties of this 
            <B>RectangleU</B> have a value of zero; otherwise, <B>false</B>. 
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.SelectorCollection">
            <summary>
            Represents a collection of objects that implement 
            <see cref="T:Telerik.Reporting.Drawing.ISelector"/>
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SelectorCollection.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.SelectorCollection"/> class. 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Drawing.SelectorCollection.#ctor(Telerik.Reporting.Drawing.ISelector[])" -->
        <member name="M:Telerik.Reporting.Drawing.SelectorCollection.AddRange(Telerik.Reporting.Drawing.ISelector[])">
            <summary>
            Adds an array of selector objects to the collection. 
            </summary>
            <param name="selectors">
            An array of <see cref="T:Telerik.Reporting.Drawing.ISelector"/> 
            objects to add to the collection.
            </param>
            <remarks>
            <para>
            The <B>ISelector</B> objects contained in the 
            selectors array are appended to the end of the collection.
            </para>
            <para>
            You can use the <B>AddRange</B> method to quickly add a 
            group of <B>ISelector</B> objects to the collection 
            instead of manually adding each <B>ISelector</B> to the 
            collection using the 
            <see cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)"/> 
            method.
            </para>
            <para>
            To remove a 
            <see cref="T:Telerik.Reporting.Drawing.ISelector"/> that you 
            previously added, use the 
            <see cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)"/>, 
            <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)"/>, 
            or <see cref="M:System.Collections.ObjectModel.Collection`1.Clear"/> 
            methods.
            </para>
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.Drawing.SelectorPrecedenceEvaluator">
            <summary>
            Compares two ISelector instances.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SelectorPrecedenceEvaluator.Compare(Telerik.Reporting.Drawing.ISelector,Telerik.Reporting.Drawing.ISelector)">
            <summary>
            Compares two ISelector instances.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns>
            -1 if x is weaker (less determinant) selector.
            1 if y is weaker (less determinant) selector.
            0 if x and y have the same weight
            </returns>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.ArrowShape">
            <summary>
            Represents an arrow shape.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.RoundedCornerShape">
            <summary>
            Represents shape with rounded corners.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.ShapeBase">
            <summary>
            Base class for all shape types. The examples below illustrate how to inherit it when creating custom shapes
            </summary>
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\ShapeSnippets.cs" region="CustomShapeClassDeclarationSnippet" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\ShapeSnippets.vb" region="CustomShapeClassDeclarationSnippet" />
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\ShapeSnippets.cs" region="CreateCustomShapeSnippet" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\ShapeSnippets.vb" region="CreateCustomShapeSnippet" />
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.ShapeBase"/> with 
            zero angle of rotation.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.ShapeBase"/> with 
            the specified angle of rotation in degrees.
            </summary>
            <param name="startAngle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.CreateShape">
            <summary>
            When overridden this method should create the shape.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.AddLine(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Adds a straight line to the shape.
            </summary>
            <param name="point1">
            The statr point of the line.
            </param>
            <param name="point2">
            The end point of the line.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.AddLines(System.Drawing.PointF[],System.Boolean)">
            <summary>
            Adds a series of straight lines to the shape.
            </summary>
            <param name="points">
            A point array representing the starting and ending points of the
            lines.
            </param>
            <param name="close">
            A <I>boolean</I> value specifying whether to close the shape.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.AddBeziers(System.Drawing.PointF[])">
            <summary>
            Adds a Bezier curve to the shape.
            </summary>
            <param name="points">
            A point array representing the points of the Bezier curve.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.AddEllipse(System.Drawing.RectangleF)">
            <summary>
            Adds an ellipse to the shape.
            </summary>
            <param name="bounds">
            The bounding rectangle of the ellipse.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.ShapeBase.RecreateShape">
            <summary>
            Recreates the shape.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.ShapeBase.AngleInRad">
            <summary>
            Gets the angle of rotation of this shape in radians.
            </summary>
            <value>
            A <I>double</I> value representing the angle of rotation of this 
            shape in radians.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.ShapeBase.Bounds">
            <summary>
            Gets or sets the bounds of this shape.
            </summary>
            <value>
            A <see cref="T:System.Drawing.RectangleF"/> structure representing
            the bounds of this shape.
            </value>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.RoundedCornerShape.#ctor(System.Double,System.Int32)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.RoundedCornerShape"/> 
            with the specified angle of rotation in degrees.
            </summary>
            <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
            <param name="rounding">
            An <I>int</I> value between 0 and 100 specifying the rounding of
            the edges in percentage.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.RoundedCornerShape.CreateShape">
            <summary>
            Creates the shape.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.RoundedCornerShape.CreateRawShape">
            <summary>
            When overridden this method should create shape 
            that will be rounded using the RoundVertexOp operator.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.RoundedCornerShape.Rounding">
            <summary>
            Gets or sets the rounding factor for the shape.
            </summary>
            <value>
            A <I>double</I> value between 0 and 100 specifying the rounding
            factor of the shape in percentage. 0 means no rounding, 100 means full rounding.
            </value>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.ArrowShape.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.ArrowShape"/> with 
            zero angle of rotation.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.ArrowShape.#ctor(System.Double,System.Int32)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.ArrowShape"/> with 
            the specified angle of rotation in degrees.
            </summary>
            <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
            <param name="rounding">
            An <I>int</I> value between 0 and 100 specifying the rounding of
            the edges in percent.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.ArrowShape.CreateRawShape">
            <summary>
            Creates the raw shape.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.ArrowShape.ToString">
            <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.ArrowShape"/>.
            </summary>
            <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.ArrowShape"/>.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.BezierSegment">
            <summary>
            Represents a Bezier curve segment of a shape.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.IShapeSegment">
            <summary>
            Represents a shape segment.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.IShapeSegment.Points">
            <summary>
            Gets the points of this segment.
            </summary>
            <value>
            A point array representing the points of the segment.
            </value>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.BezierSegment.#ctor(System.Drawing.PointF[])">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.BezierSegment"/> class 
            with the specified points.
            </summary>
            <param name="points">
            A point array representing the points of the segment. The array 
            should contain 4 points -- start, control1, control2 and end.
            </param>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.BezierSegment.Points">
            <summary>
            Gets the points of this segment.
            </summary>
            <value>
            A point array representing the points of the segment.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.BezierSegment.StartPoint">
            <summary>
            Gets the start point of this segment.
            </summary>
            <value>
            The start point of the segment.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.BezierSegment.ControlPoint1">
            <summary>
            Gets the first control point of this segment.
            </summary>
            <value>
            The first control point of the segment.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.BezierSegment.ControlPoint2">
            <summary>
            Gets the second control point of this segment.
            </summary>
            <value>
            The second control point of the segment.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.BezierSegment.EndPoint">
            <summary>
            Gets the end point of this segment.
            </summary>
            <value>
            The end point of the segment.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.CrossShape">
            <summary>
            Represents an cross shape.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.CrossShape.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.CrossShape"/> with 
            zero angle of rotation.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.CrossShape.#ctor(System.Double,System.Int32)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.CrossShape"/> with 
            the specified angle of rotation in degrees.
            </summary>
            <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
            <param name="rounding">
            An <I>int</I> value between 0 and 100 specifying the rounding of
            the edges in percent.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.CrossShape.CreateRawShape">
            <summary>
            Creates the raw shape.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.CrossShape.ToString">
            <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.CrossShape"/>.
            </summary>
            <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.CrossShape"/>.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.Ellipse">
            <summary>
            Represents an ellipse segment of a shape.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.Ellipse.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.Ellipse"/> class 
            with the specified points.
            </summary>
            <param name="rectangle">
            A <see cref="T:System.Drawing.RectangleF"/> structure representing
            the bounding rectangle of the segment. 
            </param>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.Ellipse.Rectangle">
            <summary>
            Gets the bounding rectangle of the segment. 
            </summary>
            <value>
            A <see cref="T:System.Drawing.RectangleF"/> structure representing
            the bounding rectangle of the segment. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.Ellipse.Points">
            <summary>
            Gets the points of this segment.
            </summary>
            <value>
            A point array representing the points of the segment.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.EllipseShape">
            <summary>
            Represents an ellipse shape.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.EllipseShape.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.EllipseShape"/> with 
            zero angle of rotation.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.EllipseShape.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.EllipseShape"/> with 
            the specified angle of rotation in degrees.
            </summary>
            <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.EllipseShape.CreateShape">
            <summary>
            Creates the shape.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.EllipseShape.ToString">
            <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.EllipseShape"/>.
            </summary>
            <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.EllipseShape"/>.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.IShapeOperation">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.LineDirection">
            <summary>
            Represents the direction of a line in a shape.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.Shapes.LineDirection.NS">
            <summary>
            Vertical line
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.Shapes.LineDirection.EW">
            <summary>
            Horizontal line
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.Shapes.LineDirection.NWSE">
            <summary>
            Top-Right - Bottom-Left line
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.Shapes.LineDirection.NESW">
            <summary>
            Top-Left - Bottom-Right line
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.LineSegment">
            <summary>
            Represents line segment of a shape.
            </summary>    
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.LineSegment.#ctor(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.LineSegment"/> class 
            with the specified points.
            </summary>
            <param name="point1">
            The start point of the line segment.
            </param>
            <param name="point2">
            The end point of the line segment.
            </param>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.LineSegment.Points">
            <summary>
            Gets the points of this segment.
            </summary>
            <value>
            A point array representing the points of the segment.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.LineSegment.StartPoint">
            <summary>
            Gets the start point of this segment.
            </summary>
            <value>
            The start point of the segment.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.LineSegment.EndPoint">
            <summary>
            Gets the end point of this segment.
            </summary>
            <value>
            The end point of the segment.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.LineSegment.Length">
            <summary>
            Gets the length of the line.
            </summary>
            <value>
            A <I>float</I> value representing the lenght of the line segment.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.LineShape">
            <summary>
            Represents a line shape.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.LineShape.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.LineShape"/>
            with EW line direction.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.LineShape.#ctor(Telerik.Reporting.Drawing.Shapes.LineDirection)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.LineShape"/> with 
            specified line direction.
            </summary>
            <param name="lineDirection">
            The direction of the line.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.LineShape.CreateShape">
            <summary>
            Creates the shape.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.LineShape.ToString">
            <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.LineShape"/>.
            </summary>
            <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.LineShape"/>.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.MathHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.MathHelper.CalcCirclePoint(System.Drawing.PointF,System.Double,System.Double)">
            <summary>
            The circle in polar coordinates.
            x = x0 + R*cos(Alpha)
            y = y0 + R*sin(Alpha)
            </summary>
            <param name="center">Center of the circle</param>
            <param name="radius">Radius of the circle</param>
            <param name="angle">An angle, measured in radians</param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.MathHelper.CenterOfRect(System.Drawing.RectangleF)">
            <summary>
            Returns the center of point of a rectangle
            </summary>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.MathHelper.CalcScaleFactor(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Returns the scaling factor to stretch the size of the source rectangle
            to the size of the destination rectangle.
            </summary>
            <param name="source">Rectangle to stretch</param>
            <param name="destination">Rectangle to which the src rectangle will be stretched</param>
            <param name="proportional">
            if true the source rectangle will be scaled proportional by width and height;
            otherwise the width/height ratio won't be preserved.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.MathHelper.Divide(System.Single,System.Single,System.Single)">
            <summary>
            Factor [0 - 1]
                0 - result === start
                1 - result === end
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.PolygonShape">
            <summary>
            Represents a polygon shape.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.PolygonShapeBase">
            <summary>
            Represents  the base class for all polygon shapes.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShapeBase.#ctor(System.Int32,System.Double,System.Int32)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.PolygonShapeBase"/> with 
            the specified vertex count and angle of rotation in degrees.
            </summary>
            <param name="vertexCount">
            The number of vertices of the polygon.
            </param>
            <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
            <param name="rounding">
            An <I>int</I> value between 0 and 100 specifying the rounding of
            the edges in percent.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShapeBase.CreateRawShape">
            <summary>
            Creates the raw shape.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShapeBase.GetPoints(System.Drawing.RectangleF)">
            <summary>
            Gets the points of this shape.
            </summary>
            <param name="bounds">
            The bound of the shape.
            </param>
            <returns>
            A point array representing the points of this shape.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShapeBase.GetPointsCore(System.Drawing.PointF,System.Int32,System.Double,System.Double)">
            <summary>
            Gets the core points for this shape.
            </summary>
            <param name="center">
            The center of the shape.
            </param>
            <param name="segmentCount">
            The number of segments of the shape.
            </param>
            <param name="radius">
            The radius of the shape.
            </param>
            <param name="angle">
            The angle of rotation of the shape.
            </param>
            <returns>
            A point array representing the core points of this shape.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShape.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.PolygonShape"/> with 
            3 vertexes and zero angle of rotation.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShape.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.PolygonShape"/> with 
            the specified vertex count and zero angle of rotation.
            </summary>
            <param name="vertexCount">
            The number of vertices of the shape.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShape.#ctor(System.Int32,System.Double,System.Int32)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.PolygonShape"/> with 
            the specified vertex count and angle of rotation in degrees.
            </summary>
            <param name="vertexCount">
            The number of vertices of the shape.
            </param>
            <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
            <param name="rounding">
            An <I>int</I> value between 0 and 100 specifying the rounding of
            the edges in percent.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShape.GetPoints(System.Drawing.RectangleF)">
            <summary>
            Gets the points of this shape.
            </summary>
            <param name="bounds">
            The bound of the shape.
            </param>
            <returns>
            A point array representing the points of this shape.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.PolygonShape.ToString">
            <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.PolygonShape"/>.
            </summary>
            <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.PolygonShape"/>.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.RotateShapeOp">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.ShapeOperationBase">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.RoundVertexOp">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.ScaleShapeOp">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.ShapeBoundingRectangleOp">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.Action">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.ShapeIterator">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.ShapeOperator">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.ShortestLineVertexOp">
            <summary>
            Scans the shape segments and for any 2 consecutive lines
            splits the longer line in 2 parts so the vertex
            will occur between 2 equal lines.
            
                     L2
                   +-----
                  /  L1' == L2
            L1  ./  
                /
               /   L1"
              /
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.StarShape">
            <summary>
            Represents a star shape.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.StarShape.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.StarShape"/> with 
            3 vertexes, 50% concavity, and zero angle of rotation.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.StarShape.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.StarShape"/> with 
            the specified vertex count, 50% concavity, and zero angle of rotation.
            </summary>
            <param name="vertexCount">
            The number of vertices of the shape.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.StarShape.#ctor(System.Int32,System.Int32,System.Double,System.Int32)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.StarShape"/> with 
            the specified vertex count, concavity, and angle of rotation in degrees.
            </summary>
            <param name="vertexCount">
            The number of vertices of the shape.
            </param>
            <param name="concavity">
            The concavity in percent of the shape.
            </param>
            <param name="angle">
            A <I>double</I> value specifying the angle of rotation of the 
            shape in degrees.
            </param>
            <param name="rounding">
            An <I>int</I> value between 0 and 100 specifying the rounding of
            the edges in percent.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.StarShape.GetPoints(System.Drawing.RectangleF)">
            <summary>
            Gets the points of this shape.
            </summary>
            <param name="bounds">
            The bound of the shape.
            </param>
            <returns>
            A point array representing the points of this shape.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Shapes.StarShape.ToString">
            <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.StarShape"/>.
            </summary>
            <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.Shapes.StarShape"/>.
            </returns>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Shapes.StarShape.Concavity">
            <summary>
            Gets or sets a percent value specifying the concavity of the shape. 
            </summary>
            <value>
            An <I>int</I> value between 0 and 100 specifying the concavity
            of the shape in percentage.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Shapes.TranslateShapeOp">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.SizeU">
            <summary>
            Stores an ordered pair of Unit-based numbers, typically the width and
            height of a rectangle.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.SizeU.Empty">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.SizeU"/> class. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.#ctor(System.Drawing.Size)">
            <summary>
            Initializes a new instance of the <B>SizeU</B> class from the 
            specified existing <B>Size</B> in device-independent pixels. 
            </summary>
            <param name="sizeDips">
            The <see cref="T:System.Drawing.Size"/> from which to create the new 
            <B>SizeU</B>.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.#ctor(System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the <B>SizeU</B> class from the 
            specified existing <B>SizeF</B> in device-independent pixels. 
            </summary>
            <param name="sizeDips">
            The <see cref="T:System.Drawing.SizeF"/> from which to create the new 
            <B>SizeU</B>.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.#ctor(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Initializes a new instance of the <B>SizeU</B> class from the specified
            dimensions.
            </summary>
            <param name="width">
            The width component of the new 
            <see cref="T:Telerik.Reporting.Drawing.SizeU"/>. 
            </param>
            <param name="height">
            The height component of the new 
            <see cref="T:Telerik.Reporting.Drawing.SizeU"/>. 
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.op_Addition(Telerik.Reporting.Drawing.SizeU,Telerik.Reporting.Drawing.SizeU)">
            <summary>
            Adds the width and height of one <B>SizeU</B> structure to the 
            width and height of another <B>SizeU</B> structure. 
            </summary>
            <param name="size1">
            The first <see cref="T:Telerik.Reporting.Drawing.SizeU"/> to add.
            </param>
            <param name="size2">
            The second <see cref="T:Telerik.Reporting.Drawing.SizeU"/> to add.
            </param>
            <returns>
            A <see cref="T:Telerik.Reporting.Drawing.SizeU"/> structure that is 
            the result of the addition operation. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.op_Subtraction(Telerik.Reporting.Drawing.SizeU,Telerik.Reporting.Drawing.SizeU)">
            <summary>
            Subtracts the width and height of one <B>SizeU</B> structure from 
            the width and height of another <B>SizeU</B> structure.
            </summary>
            <param name="size1">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU"/> on the left side 
            of the subtraction operator.
            </param>
            <param name="size2">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU"/> on the right side 
            of the subtraction operator.
            </param>
            <returns>
            A <see cref="T:Telerik.Reporting.Drawing.SizeU"/> structure that is 
            the result of the subtraction operation. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.op_Division(Telerik.Reporting.Drawing.SizeU,System.Double)">
            <summary>
            Devides a <see cref="T:Telerik.Reporting.Drawing.SizeU"/> by a 
            specified <I>value</I>.
            </summary>
            <param name="size">
            The <B>SizeU</B> to divide (scale).
            </param>
            <param name="value">
            A <I>double</I> value to divide by.
            </param>
            <returns>
            A <B>SizeU</B> that is the quotient of <I>size</I> and 
            <I>value</I>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.op_Multiply(Telerik.Reporting.Drawing.SizeU,System.Double)">
            <summary>
            Multiplies a <see cref="T:Telerik.Reporting.Drawing.SizeU"/> by a 
            specified <I>value</I>.
            </summary>
            <param name="size">
            The <B>SizeU</B> to multiply.
            </param>
            <param name="value">
            A <I>double</I> value to multiply by.
            </param>
            <returns>
            A <B>SizeU</B> that is the product of <I>size</I> and 
            <I>value</I>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.op_Equality(Telerik.Reporting.Drawing.SizeU,Telerik.Reporting.Drawing.SizeU)">
            <summary>
            Tests whether two <B>SizeU</B> structures are equal. 
            </summary>
            <param name="size1">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU"/> structure on the 
            left side of the equality operator. 
            </param>
            <param name="size2">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU"/> structure on the 
            right side of the equality operator. 
            </param>
            <returns>
            This operator returns <B>true</B> if <I>size1</I> and <I>size2</I> 
            have equal width and height; otherwise, <B>false</B>. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.op_Inequality(Telerik.Reporting.Drawing.SizeU,Telerik.Reporting.Drawing.SizeU)">
            <summary>
            Tests whether two <B>SizeU</B> structures are different. 
            </summary>
            <param name="size1">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU"/> structure on the 
            left side of the equality operator. 
            </param>
            <param name="size2">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU"/> structure on the 
            right side of the equality operator. 
            </param>
            <returns>
            This operator returns <B>true</B> if <I>size1</I> and <I>size2</I> 
            differ either in width or height; <B>false</B> if <I>size1</I> and 
            <I>size2</I> are equal. 
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Drawing.SizeU.op_Explicit(Telerik.Reporting.Drawing.SizeU)~System.Drawing.SizeF" -->
        <member name="M:Telerik.Reporting.Drawing.SizeU.ToFDP">
            <summary>
            Calculates the Unit size into device-dependent pixels.
            Alternative of the dedicated explicit operator.
            </summary>
            <returns>
            Float size having the magnitude of the unit size, but in device-dependent pixels
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.op_Explicit(Telerik.Reporting.Drawing.SizeU)~System.Drawing.Size">
            <summary>
            Converts the specified <B>SizeU</B> to a 
            <see cref="T:System.Drawing.Size"/> in device-dependent pixels. 
            </summary>
            <param name="size">
            The <see cref="T:Telerik.Reporting.Drawing.SizeU"/> structure to be 
            converted.
            </param>
            <returns>
            The <see cref="T:System.Drawing.Size"/> structure to which this 
            operator converts. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.ToDP">
            <summary>
            Calculates the Unit rectangle into device-dependent pixels.
            Alternative of the dedicated explicit operator.
            </summary>
            <returns>
            Integer size having the magnitude of the unit size, but in device-dependent pixels
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.Equals(System.Object)">
            <summary>
            Tests to see whether the specified object is a 
            <see cref="T:Telerik.Reporting.Drawing.SizeU"/> with the same 
            dimensions as this <B>SizeU</B>. 
            </summary>
            <param name="obj">
            The <see cref="T:System.Object"/> to test. 
            </param>
            <returns>
            This method returns <B>true</B> if <I>obj</I> is a 
            <see cref="T:Telerik.Reporting.Drawing.SizeU"/> and has the same 
            width and height as this <B>SizeU</B>; otherwise, <B>false</B>. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.GetHashCode">
            <summary>
            Returns a hash code for this 
            <see cref="T:Telerik.Reporting.Drawing.SizeU"/> structure. 
            </summary>
            <returns>
            An integer value that specifies a hash value for this <B>SizeU</B> 
            structure. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.ToString">
            <summary>
            Creates a human-readable string that represents this 
            <see cref="T:Telerik.Reporting.Drawing.SizeU"/>. 
            </summary>
            <returns>
            A string that represents this <B>SizeU</B>. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.SizeU.ToString(System.Globalization.CultureInfo)">
            <summary>
            Creates a human-readable string that represents this 
            <see cref="T:Telerik.Reporting.Drawing.SizeU"/>. 
            </summary>
            <param name="culture">
            A <see cref="T:System.Globalization.CultureInfo"/> object according
            to which to format the string.
            </param>
            <returns>
            A string that represents this <B>SizeU</B>. 
            </returns>
        </member>
        <member name="P:Telerik.Reporting.Drawing.SizeU.Width">
            <summary>
            Gets or sets the horizontal component of this
            <see cref="T:Telerik.Reporting.Drawing.SizeU"/>.
            </summary>
            <value>
            The horizontal component of this <B>SizeU</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.SizeU.Height">
            <summary>
            Gets or sets the vertical component of this 
            <see cref="T:Telerik.Reporting.Drawing.SizeU"/>.
            </summary>
            <value>
            The vertical component of this <B>SizeU</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.SizeU.IsEmpty">
            <summary>
            Gets a value indicating whether this 
            <see cref="T:Telerik.Reporting.Drawing.SizeU"/> has zero width and 
            height. 
            </summary>
            <value>
            This property returns <B>true</B> when this <B>SizeU</B> has both 
            a width and height of zero; otherwise, <B>false</B>. 
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Style">
            <summary>
            Represents the style of a report item.
            </summary>    
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.Visible">
            <summary>
            Gets or sets a value indicating whether the report item is
            displayed. 
            </summary>
            <value>
            <B>true</B> if the report item is displayed; otherwise,
            <B>false</B>. The default is <B>true</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.BackgroundColor">
            <summary>
            Gets or sets the background color of the report item. 
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> that represents the background 
            color of the report item. The default is 
            <see cref="F:System.Drawing.Color.Empty"/>, which indicates that this 
            property is not set. 
            </value>
            <remarks>
            Use the <B>BackgroundColor</B> property to specify the background color 
            of the report item. This property is set using a 
            <see cref="T:System.Drawing.Color"/> object.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.BackgroundImage">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.BackgroundImage"/> 
            object that controls the image displayed in the background of the 
            report item.
            </summary>
            <value>
            An <see cref="T:Telerik.Reporting.Drawing.BackgroundImage"/> that 
            represents the image to display in the background of the report 
            item. Report items have no background image by default.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.Color">
            <summary>
            Gets or sets the foreground color of the report item. 
            </summary>
            <value>
            The foreground <see cref="T:System.Drawing.Color"/> of the report 
            item. The default is <see cref="P:System.Drawing.Color.Black"/>. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.TextIndent">
            <summary>
            Gets or sets the horizontal indentation of the first line of text in the report item. 
            </summary>
            <value>
            The indentation in <see cref="T:Telerik.Reporting.Drawing.Unit"/>s. 
            The default is 
            <see cref="F:Telerik.Reporting.Drawing.Unit.Zero"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.TextAlign">
            <summary>
            Gets or sets the horizontal alignment of text in the report item. 
            </summary>
            <value>
            One of the 
            <see cref="T:Telerik.Reporting.Drawing.HorizontalAlign"/> values. 
            The default is 
            <B>HorizontalAlign.Left</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.VerticalAlign">
            <summary>
            Gets or sets the vertical alignment of text in the report item. 
            </summary>
            <value>
            One of the 
            <see cref="T:Telerik.Reporting.Drawing.VerticalAlign"/> values. 
            The default is <B>VerticalAlign.Top</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.BorderStyle">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.BorderStyle"/> object
            used to define the border style of a report item.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderStyle"/> representing
            the border style of the report item.
            </value>
            <remarks>
            You can set the border style of the item by using the properties
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Default"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Left"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Right"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Top"/>, and
            <see cref="P:Telerik.Reporting.Drawing.BorderStyle.Bottom"/>.
            The <B>Default</B> property is used to set all borders styles at 
            once. All borders are 
            <B>BorderType.None</B> by default.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.BorderColor">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.BorderColor"/> object
            used to define the border color of a report item.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderColor"/> representing
            the border color of the report item.
            </value>
            <remarks>
            You can set the border color of the item by using the properties
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Default"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Left"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Right"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Top"/>, and
            <see cref="P:Telerik.Reporting.Drawing.BorderColor.Bottom"/>.
            The <B>Default</B> property is used to set all borders colors at 
            once. All borders are 
            <see cref="P:System.Drawing.Color.Black"/> by default.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.BorderWidth">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.BorderWidth"/> object
            used to define the border width of a report item.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.BorderWidth"/> representing
            the border width of the report item.
            </value>
            <remarks>
            You can set the border width of the item by using the properties
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Default"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Left"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Right"/>,
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Top"/>, and
            <see cref="P:Telerik.Reporting.Drawing.BorderWidth.Bottom"/>.
            The <B>Default</B> property is used to set all borders widths at 
            once. All borders are 1pt wide by default.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.Font">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.Font"/> object 
            representing the font of the report item.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Font"/> object used to
            define the font of a report item. By default the font of a report
            item is Arial-Regular, 10pts.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.Padding">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.Padding"/> object
            used to define the padding of a report item.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Padding"/> object 
            representing the padding of the report item.
            </value>
            <remarks>
            You can set the padding of the item by using the properties
            <see cref="P:Telerik.Reporting.Drawing.Padding.Left"/>,
            <see cref="P:Telerik.Reporting.Drawing.Padding.Right"/>,
            <see cref="P:Telerik.Reporting.Drawing.Padding.Top"/>, and
            <see cref="P:Telerik.Reporting.Drawing.Padding.Bottom"/>.
            Padding on all sides is 
            <see cref="F:Telerik.Reporting.Drawing.Unit.Zero"/> by default.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.LineStyle">
            <summary>
            Gets or sets a <see cref="T:Telerik.Reporting.Drawing.LineStyle"/> 
            object used to define the line style of report items that 
            support it, such as lines and shapes.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.LineStyle"/> object 
            representing the line style of the report item. By default the line 
            style is <B>LineStyle.Solid</B>. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.LineWidth">
            <summary>
            Gets or sets a <see cref="T:Telerik.Reporting.Drawing.Unit"/> 
            representing the line width of report items that support it, such 
            as lines and shapes.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Unit"/> value representing 
            the line width of the report item. By default the width is 1pt.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Style.LineColor">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Color"/> (stroke)
            representing the line color of report items that support it, such 
            as lines and shapes.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value representing 
            the line color of the report item. By default its value is Black.
            </value>
        </member>
        <member name="M:Telerik.Reporting.Drawing.StyleFacade.ForEach(Telerik.Reporting.ReportProperty.Action)">
            <summary>
            Performs the specified action on each registered Style property key. 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.StyleRule">
            <summary>
            Represents a style rule to be applied.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.StyleRule.#ctor">
            <summary>
            Initializes a new empty 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule"/>.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.StyleRule.ToString">
            <summary>
            Returns a human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule"/>.
            </summary>
            <returns>
            A human-readable representation ot this 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule"/>.
            </returns>
        </member>
        <member name="P:Telerik.Reporting.Drawing.StyleRule.Selectors">
            <summary>
            A collection of selectors that determine which report items the
            style applies to.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.SelectorCollection"/> object
            containing all of the selectors for this rule.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.StyleRule.Style">
            <summary>
            The <see cref="T:Telerik.Reporting.Drawing.Style"/> to apply to all 
            report items selected by the 
            <see cref="P:Telerik.Reporting.Drawing.StyleRule.Selectors"/>
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Style"/> object defining the
            style of this <see cref="T:Telerik.Reporting.Drawing.StyleRule"/>
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.StyleRuleCollection">
            <summary>
            Represents a collection of 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule"/> objects.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.StyleRuleCollection.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.StyleRuleCollection"/> class. 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Drawing.StyleRuleCollection.#ctor(Telerik.Reporting.Drawing.StyleRule[])" -->
        <member name="M:Telerik.Reporting.Drawing.StyleRuleCollection.AddRange(Telerik.Reporting.Drawing.StyleRule[])">
            <summary>
            Adds an array of style rule objects to the collection. 
            </summary>
            <param name="rules">
            An array of <see cref="T:Telerik.Reporting.Drawing.StyleRule"/> 
            objects to add to the collection.
            </param>
            <remarks>
            <para>
            The <B>StyleRule</B> objects contained in the 
            rules array are appended to the end of the collection.
            </para>
            <para>
            You can use the <B>AddRange</B> method to quickly add a 
            group of <B>StyleRule</B> objects to the collection 
            instead of manually adding each <B>StyleRule</B> to the 
            collection using the 
            <see cref="M:System.Collections.ObjectModel.Collection`1.Add(`0)"/> 
            method.
            </para>
            <para>
            To remove a 
            <see cref="T:Telerik.Reporting.Drawing.StyleRule"/> that you 
            previously added, use the 
            <see cref="M:System.Collections.ObjectModel.Collection`1.Remove(`0)"/>, 
            <see cref="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)"/>, 
            or <see cref="M:System.Collections.ObjectModel.Collection`1.Clear"/> 
            methods.
            </para>
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.Drawing.StyleSelector">
            <summary>
            An attribute selector based on the style name property.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.StyleSelector.#ctor">
            <summary>
            Initializes a new 
            <see cref="T:Telerik.Reporting.Drawing.StyleSelector"/>.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.StyleSelector.#ctor(System.String)">
            <summary>
            Initializes a new 
            <see cref="T:Telerik.Reporting.Drawing.StyleSelector"/> with the
            specified style name.
            </summary>
            <param name="name">
            A string value specifying the style name to
            match.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.StyleSelector.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new 
            <see cref="T:Telerik.Reporting.Drawing.StyleSelector"/> with the
            specified style name, that matches items of the specified 
            <see cref="T:System.Type"/>
            </summary>
            <param name="type">
            The <see cref="T:System.Type"/> of items to match. 
            </param>
            <param name="name">
            A string value specifying the style name to
            match.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.StyleSelector.ToString">
            <summary>
            Returns a human-readable representation of this 
            <see cref="T:Telerik.Reporting.Drawing.StyleSelector"/>.
            </summary>
            <returns>
            A human-readable representation of this 
            <see cref="T:Telerik.Reporting.Drawing.StyleSelector"/>.
            </returns>
        </member>
        <member name="P:Telerik.Reporting.Drawing.StyleSelector.StyleName">
            <summary>
            Gets or sets the name of the style that this selector matches.
            </summary>
            <value>
            A string value representing the style name to match.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.StyleSelectorConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.StyleSheet">
            <summary>
            Represents a collection of styles for a 
            <see cref="T:Telerik.Reporting.ReportItemBase"/>
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.TextFormat.#ctor(System.Drawing.StringFormat)">
            <summary>
            </summary>
            <param name="templateStringFormat">templateStringFormat will not be automatically disposed.</param>
        </member>
        <member name="T:Telerik.Reporting.Drawing.TextWatermark">
            <summary>
            Represents a text watermark on a printable page.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Drawing.TextWatermark.Text">
            <summary>
            Gets or sets the text of the watermark to be printed on the page.
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
            <remarks>
            The text can be specified either directly as a string literal or
            indirectly as an expression that is evaluated at runtime for each
            printable page. If the text is null (Nothing in Visual Basic) or
            an empty string, or if the specified expression evaluates to null
            (Nothing in Visual Basic) or an empty string, the watermark is not
            printed on the current page.
            </remarks>
            <example>
            The following expression prints a watermark on every second page:
            <code>
            = IIf(PageNumber % 2 = 0, "Watermark", Null)
            </code>
            </example>
        </member>
        <member name="P:Telerik.Reporting.Drawing.TextWatermark.Color">
            <summary>
            Gets or sets the color of the watermark text.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value that specifies the color
            of the watermark text without the transparency.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.TextWatermark.Orientation">
            <summary>
            Gets or sets the orientation of the watermark text on the printable page.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.WatermarkOrientation"/> value that
            specifies the orientation of the watermark text on the printable page.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.TextWatermark.Font">
            <summary>
            Gets the font settings of the watermark text.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Font"/> value that specifies
            the font settings of the watermark text.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.TypeSelectorConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.Unit">
            <summary>
            A structure representing a unit of measure.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.Unit.epsilonMm">
            <summary> 
            The precision that the report model uses, in mm
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.Unit.Empty">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/> structure. 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.Unit.Zero">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/> structure equal to
            zero. 	    
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Pixel(System.Double)">
            <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit"/>
            of type <B>UnitType.Pixel</B> and magnitude equal to <I>value</I> in device-independent pixels.
            </summary>
            <param name="dips">
            A <I>double</I> value specifying the magnitude of the <B>Unit</B> in device-independent pixels (96 DPI pixels or dips).
            </param>
            <returns>
            The created <B>Unit</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Pixel(System.Int32)">
            <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit"/>
            of type <B>UnitType.Pixel</B>
            and magnitude equal to <I>value</I> in device-independent pixels.
            </summary>
            <param name="dips">
            An <I>int</I> value specifying the magnitude of the <B>Unit</B> in device-independent pixels (96 DPI pixels or dips).
            </param>
            <returns>
            The created <B>Unit</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Point(System.Double)">
            <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit"/>
            of type <B>UnitType.Point</B>
            and magnitude equal to <I>value</I>.
            </summary>
            <param name="value">
            A <I>double</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
            <returns>
            The created <B>Unit</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Point(System.Int32)">
            <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit"/>
            of type <B>UnitType.Point</B>
            and magnitude equal to <I>value</I>.
            </summary>
            <param name="value">
            An <I>int</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
            <returns>
            The created <B>Unit</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Cm(System.Double)">
            <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit"/>
            of type <B>UnitType.Cm</B>
            and magnitude equal to <I>value</I>.
            </summary>
            <param name="value">
            A <I>double</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
            <returns>
            The created <B>Unit</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Cm(System.Int32)">
            <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit"/>
            of type <B>UnitType.Cm</B>
            and magnitude equal to <I>value</I>.
            </summary>
            <param name="value">
            An <I>int</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
            <returns>
            The created <B>Unit</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Mm(System.Double)">
            <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit"/>
            of type <B>UnitType.Mm</B>
            and magnitude equal to <I>value</I>.
            </summary>
            <param name="value">
            A <I>double</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
            <returns>
            The created <B>Unit</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Mm(System.Int32)">
            <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit"/>
            of type <B>UnitType.Mm</B>
            and magnitude equal to <I>value</I>.
            </summary>
            <param name="value">
            An <I>int</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
            <returns>
            The created <B>Unit</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Inch(System.Double)">
            <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit"/>
            of type <B>UnitType.Inch</B>
            and magnitude equal to <I>value</I>.
            </summary>
            <param name="value">
            A <I>double</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
            <returns>
            The created <B>Unit</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Inch(System.Int32)">
            <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit"/>
            of type <B>UnitType.Inch</B>
            and magnitude equal to <I>value</I>.
            </summary>
            <param name="value">
            An <I>int</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
            <returns>
            The created <B>Unit</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Pica(System.Double)">
            <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit"/>
            of type <B>UnitType.Pica</B>
            and magnitude equal to <I>value</I>.
            </summary>
            <param name="value">
            A <I>double</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
            <returns>
            The created <B>Unit</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Pica(System.Int32)">
            <summary>
            Creates a new <see cref="T:Telerik.Reporting.Drawing.Unit"/>
            of type <B>UnitType.Pica</B>
            and magnitude equal to <I>value</I>.
            </summary>
            <param name="value">
            An <I>int</I> value specifying the magnitude of the <B>Unit</B>.
            </param>
            <returns>
            The created <B>Unit</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.FromPixels(System.Double)">
            <summary>
            Creates a pixel unit from device-dependent pixels.
            </summary>
            <param name="devicePixels">The magnitude of the new Unit in device-dependent pixels.</param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.FromPixels(System.Double,Telerik.Reporting.Drawing.UnitType)">
            <summary>
            Creates a unit from device-dependent pixels in the specified unit type.
            </summary>
            <param name="devicePixels">The magnitude of the new Unit in device-dependent pixels.</param>
            <param name="resultType">The unit type of the newly created Unit</param>
            <returns>Newly created Unit</returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.FromDips(System.Double,Telerik.Reporting.Drawing.UnitType)">
            <summary>
            Creates a unit from device-independent pixels in the specified unit type.
            </summary>
            <param name="dips">The magnitude of the new Unit in device-independent pixels.</param>
            <param name="resultType">The unit type of the newly created Unit</param>
            <returns>Newly created Unit</returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.#ctor(System.Double)">
            <summary>
            Creates a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/> structure from the 
            specified <I>device-independent pixels</I>. The <B>Unit</B>'s type is 
            <see cref="P:Telerik.Reporting.Drawing.Unit.DefaultType"/>
            </summary>
            <param name="dips">
            A <I>double</I> value specifying the magnitude of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/> in device-independent pixels.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.#ctor(System.Double,Telerik.Reporting.Drawing.UnitType)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/> structure with the 
            specified <I>value</I> and <I>type</I>.
            </summary>
            <param name="value">
            A <I>double</I> value representing the magnitude of the 
            <B>Unit</B>.
            </param>
            <param name="type">
            A <see cref="T:Telerik.Reporting.Drawing.UnitType"/> specifying the
            type of the <B>Unit</B>.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.#ctor(System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/> structure from the 
            specified string <I>value</I>.
            </summary>
            <param name="value">
            A <I>string</I> value representing the magnitude and type of the 
            <B>Unit</B>.
            </param>
            <remarks>
            Parameters passed to this constructor should be of the form "2px",
            "3.4in", "4cm", "2mm", "12.5pt", "4pc", etc. For more information
            on string representations of units see 
            <see cref="T:Telerik.Reporting.Drawing.UnitType"/>.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.#ctor(System.String,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/> structure from the 
            specified string <I>value</I> and using the specified 
            <see cref="T:System.Globalization.CultureInfo"/>.
            </summary>
            <param name="value">
            A <I>string</I> value representing the magnitude and type of the 
            <B>Unit</B>.
            </param>
            <param name="culture">
            A <see cref="T:System.Globalization.CultureInfo"/>. If a null 
            reference (<B>Nothing</B> in Visual Basic) is passed, the current 
            culture is assumed. 
            </param>
            <remarks>
            The <I>culture</I> parameters is used to parse the string value.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.#ctor(System.String,System.Globalization.CultureInfo,Telerik.Reporting.Drawing.UnitType)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/> structure from the 
            specified string <I>value</I>, <I>culture</I>, and <I>type</I>.
            </summary>
            <param name="value">
            A <I>string</I> value representing the magnitude of the 
            <B>Unit</B>.
            </param>
            <param name="culture">
            A <see cref="T:System.Globalization.CultureInfo"/>. If a null 
            reference (<B>Nothing</B> in Visual Basic) is passed, the current 
            culture is assumed. 
            </param>
            <param name="type">
            A <see cref="T:Telerik.Reporting.Drawing.UnitType"/> specifying the
            type of the <B>Unit</B>.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Parse(System.String)">
            <summary>
            Parses a string value to create a new <B>Unit</B>.
            </summary>
            <param name="value">
            A <I>string</I> value defining the unit.
            </param>
            <returns>
            The created <B>Unit</B>.
            </returns>
            <remarks>
            The parameter passed to this Method should be of the form "2px",
            "3.4in", "4cm", "2mm", "12.5pt", "4pc", etc. For more information
            on string representations of units see 
            <see cref="T:Telerik.Reporting.Drawing.UnitType"/>.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Parse(System.String,System.Globalization.CultureInfo)">
            <summary>
            Parses a string value to create a new <B>Unit</B> based on the
            specified culture.
            </summary>
            <param name="value">
            A <I>string</I> value defining the unit.
            </param>
            <param name="culture">
            The <see cref="T:System.Globalization.CultureInfo"/> object defining
            the rules for the parsing.
            </param>
            <returns>
            The created <B>Unit</B>.
            </returns>
            <remarks>
            The parameter passed to this Method should be of the form "2px",
            "3.4in", "4cm", "2mm", "12.5pt", "4pc", etc. For more information
            on string representations of units see 
            <see cref="T:Telerik.Reporting.Drawing.UnitType"/>.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.ChangeType(Telerik.Reporting.Drawing.UnitType)">
            <summary>
            Returns a unit equal by magnitude to this 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/> but with its type
            changed.
            </summary>
            <param name="type">
            The <see cref="T:Telerik.Reporting.Drawing.UnitType"/> to change to.
            </param>
            <returns>
            A <B>Unit</B> equal to this <B>Unit</B>, but with type that equals
            the <I>type</I> parameter.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.ToPixel">
            <summary>
            Convert to device-independent pixels (96 DPI or dips)
            </summary>
            <returns>A number in device-independent pixels equal by magnitude to the this Unit</returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Add(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.UnitType)">
            <summary>
            Returns a <see cref="T:Telerik.Reporting.Drawing.Unit"/> that is the 
            sum of two units and is of the specified <I>type</I>.
            </summary>
            <param name="unit1">
            The first <B>Unit</B>.
            </param>
            <param name="unit2">
            The second <B>Unit</B>.
            </param>
            <param name="type">
            A <see cref="T:Telerik.Reporting.Drawing.UnitType"/> specifying the
            type of the resultant unit.
            </param>
            <returns>
            The sum of the two units.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Add(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Returns a <see cref="T:Telerik.Reporting.Drawing.Unit"/> that is the 
            sum of two units and its unit type matches the first argument type.
            </summary>
            <param name="unit1">
            The first <B>Unit</B>.
            </param>
            <param name="unit2">
            The second <B>Unit</B>.
            </param>
            <returns>
            The sum of the two units in the unit type of the first argument unit.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Subtract(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Returns a <see cref="T:Telerik.Reporting.Drawing.Unit"/> that is the 
            difference of two units and is of the specified <I>type</I>.
            </summary>
            <param name="unit1">
            The <B>Unit</B> to subtract from.
            </param>
            <param name="unit2">
            The <B>Unit</B> to subtract.
            </param>
            <returns>
            The difference of the two units in the unit type of the first argument unit.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Subtract(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.UnitType)">
            <summary>
            Returns a <see cref="T:Telerik.Reporting.Drawing.Unit"/> that is the 
            difference of two units and is of the specified <I>type</I>.
            </summary>
            <param name="unit1">
            The <B>Unit</B> to subtract from.
            </param>
            <param name="unit2">
            The <B>Unit</B> to subtract.
            </param>
            <param name="type">
            A <see cref="T:Telerik.Reporting.Drawing.UnitType"/> specifying the
            type of the resultant unit.
            </param>
            <returns>
            The difference of the two units in the specified unit type.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Add(Telerik.Reporting.Drawing.Unit)">
            <summary>
            Adds a unit to this <see cref="T:Telerik.Reporting.Drawing.Unit"/>.
            </summary>
            <param name="unit1">
            The <B>Unit</B> to add.
            </param>
            <returns>
            The sum of <I>unit1</I> and this <B>Unit</B> in this <B>Unit</B>'s
            type.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Subtract(Telerik.Reporting.Drawing.Unit)">
            <summary>
            Subtracts a unit from this 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/>.
            </summary>
            <param name="unit1">
            The <B>Unit</B> to subtract.
            </param>
            <returns>
            The difference of this <B>Unit</B> and <I>unit1</I> in this 
            <B>Unit</B>'s type.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Multiply(System.Double)">
            <summary>
            Multiplies this <see cref="T:Telerik.Reporting.Drawing.Unit"/> by a 
            specified <I>value</I>.
            </summary>
            <param name="value">
            A <I>double</I> value to multiply by.
            </param>
            <returns>
            The product of multiplying this <B>Unit</B> by the specified 
            <I>value</I>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Divide(System.Double)">
            <summary>
            Divides this <see cref="T:Telerik.Reporting.Drawing.Unit"/> by a 
            specified <I>value</I>.
            </summary>
            <param name="value">
            A <I>double</I> value to divide by.
            </param>
            <returns>
            The quotient resulting by dividing this <B>Unit</B> by the 
            specified <I>value</I>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Divide(Telerik.Reporting.Drawing.Unit)">
            <summary>
            Divides this <see cref="T:Telerik.Reporting.Drawing.Unit"/> by another.
            </summary>
            <param name="value">
            A <I>Unit</I> value to divide by.
            </param>
            <returns>The quotient resulting by dividing this <B>Unit</B> by the 
            specified <I>Unit</I>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.op_Addition(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Adds one <see cref="T:Telerik.Reporting.Drawing.Unit"/> to another.
            </summary>
            <param name="unit1">
            The first <B>Unit</B>.
            </param>
            <param name="unit2">
            The second <B>Unit</B>.
            </param>
            <returns>
            The sum of the two units.
            </returns>
            <remarks>
            <para>
            If <I>unit1</I> is empty the method returns <I>unit2</I>. If 
            <I>unit2</I> is empty the method returns <I>unit1</I>. Otherwise,
            the method returns the sum of the two units in <I>unit1</I>'s type.
            </para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.op_Subtraction(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Subtract one <see cref="T:Telerik.Reporting.Drawing.Unit"/> from 
            another.
            </summary>
            <param name="unit1">
            The <B>Unit</B> to subtract from.
            </param>
            <param name="unit2">
            The <B>Unit</B> to subtract.
            </param>
            <returns>
            The difference of the two units.
            </returns>
            <exception cref="T:System.ArgumentException">
            Thrown when <I>unit1</I> is empty.
            </exception>
            <remarks>
            <para>
            If <I>unit2</I> is empty the method returns <I>unit1</I>.
            Otherwise, the method returns the difference of the two units 
            in <I>unit1</I>'s type.
            </para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.op_UnaryNegation(Telerik.Reporting.Drawing.Unit)">
            <summary>
            Unary minus. Reverses the sign of
            <see cref="T:Telerik.Reporting.Drawing.Unit"/>
            </summary>
            <param name="unit">
            The <B>unit</B> to negate.
            </param>
            <returns>
            A <B>Unit</B> of the same type as <I>unit</I> but with opposite
            sign.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.op_Multiply(Telerik.Reporting.Drawing.Unit,System.Double)">
            <summary>
            Multiplies a <see cref="T:Telerik.Reporting.Drawing.Unit"/> by a 
            specified <I>value</I>.
            </summary>
            <param name="unit1">
            The <B>Unit</B> to multiply.
            </param>
            <param name="value">
            A <I>double</I> value to multiply by.
            </param>
            <returns>
            The product of <I>unit1</I> and <I>value</I>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.op_Multiply(System.Double,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Multiplies a <I>value</I> by a 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/>.
            </summary>
            <param name="value">
            The <I>double</I> value to multiply.
            </param>
            <param name="unit1">
            The <B>Unit</B> to multiply by.
            </param>
            <returns>
            A <B>Unit</B> that is the product of <I>value</I> and <I>unit1</I>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.op_Division(Telerik.Reporting.Drawing.Unit,System.Double)">
            <summary>
            Divides a <see cref="T:Telerik.Reporting.Drawing.Unit"/> by a 
            specified <I>value</I>.
            </summary>
            <param name="unit1">
            The <B>Unit</B> to divide.
            </param>
            <param name="value">
            A <I>double</I> value to divide by.
            </param>
            <returns>
            A <B>Unit</B> that is the quotient of <I>unit1</I> and 
            <I>value</I>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.op_Division(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Divides the first <see cref="T:Telerik.Reporting.Drawing.Unit"/> by the second.
            </summary>
            <param name="unit1">
            A <see cref="T:Telerik.Reporting.Drawing.Unit"/> to divide.
            </param>
            <param name="unit2">
            A <see cref="T:Telerik.Reporting.Drawing.Unit"/> to divide by.
            </param>
            <returns>The quotient resulting by dividing of two <I>Units</I>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.op_LessThan(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Compares two units.
            </summary>
            <param name="unit1">
            The first unit to compare.
            </param>
            <param name="unit2">
            The second unit to compare.
            </param>
            <returns>
            <B>true</B> if <I>unit1</I> is less than <I>unit2</I>; otherwise
            <B>false</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.op_GreaterThan(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Compares two units.
            </summary>
            <param name="unit1">
            The first unit to compare.
            </param>
            <param name="unit2">
            The second unit to compare.
            </param>
            <returns>
            <B>true</B> if <I>unit1</I> is greater than <I>unit2</I>; otherwise
            <B>false</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.op_LessThanOrEqual(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Compares two units.
            </summary>
            <param name="unit1">
            The first unit to compare.
            </param>
            <param name="unit2">
            The second unit to compare.
            </param>
            <returns>
            <B>true</B> if <I>unit1</I> is less than or equal to <I>unit2</I>; 
            otherwise <B>false</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.op_GreaterThanOrEqual(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Compares two units.
            </summary>
            <param name="unit1">
            The first unit to compare.
            </param>
            <param name="unit2">
            The second unit to compare.
            </param>
            <returns>
            <B>true</B> if <I>unit1</I> is greater than or equal to 
            <I>unit2</I>; otherwise <B>false</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.op_Equality(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Compares two units.
            </summary>
            <param name="unit1">
            The first unit to compare.
            </param>
            <param name="unit2">
            The second unit to compare.
            </param>
            <returns>
            <B>true</B> if <I>unit1</I> is equal to <I>unit2</I>; otherwise <B>false</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.op_Inequality(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Compares two units.
            </summary>
            <param name="unit1">
            The first unit to compare.
            </param>
            <param name="unit2">
            The second unit to compare.
            </param>
            <returns>
            <B>true</B> if <I>unit1</I> is not equal to <I>unit2</I>; otherwise 
            <B>false</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.GetHashCode">
            <summary>
            Returns a hash code for this 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/> structure. 
            </summary>
            <returns>
            An integer value that specifies a hash value for this 
            <B>Unit</B> structure. 
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Equals(System.Object)">
            <summary>
            Tests whether <I>obj</I> is a 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/> that equals this
            <B>Unit</B>.
            </summary>
            <param name="obj">
            The <see cref="T:System.Object"/> to test. 
            </param>
            <returns>
            This method returns <B>true</B> if <I>obj</I> is a 
            <B>Unit</B> and its magnitude is equal to this <B>Unit</B>'s
            magnitude; otherwise <B>false</B>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Max(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Returns the larger of two units.
            </summary>
            <param name="val1">The first of two units to compare.</param>
            <param name="val2">The second of two units to compare.</param>
            <returns>Parameter val1 or val2, whichever is larger.</returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.Min(Telerik.Reporting.Drawing.Unit,Telerik.Reporting.Drawing.Unit)">
            <summary>
            Returns the smaller of two units.
            </summary>
            <param name="val1">The first of two units to compare.</param>
            <param name="val2">The second of two units to compare.</param>
            <returns>Parameter val1 or val2, whichever is smaller.</returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.ToString">
            <summary>
            Returns a human-readable representation of this 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/>.
            </summary>
            <returns>
            A human-readable representation of this 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/>.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.Unit.ToString(System.Globalization.CultureInfo)">
            <summary>
            Returns a human-readable representation of this 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/>.
            </summary>
            <param name="culture">
            A <see cref="T:System.Globalization.CultureInfo"/> specifying the
            culture to use.
            </param>
            <returns>
            A human-readable representation of this 
            <see cref="T:Telerik.Reporting.Drawing.Unit"/>.
            </returns>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Unit.DefaultType">
            <summary>
            Gets or sets a <see cref="T:Telerik.Reporting.Drawing.UnitType"/>
            representing the default units of measure for a 
            <see cref="T:Telerik.Reporting.Report"/>.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.UnitType"/> value
            that defines the default units of measure for a <B>Report</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Unit.DotsPerInch">
            <summary>
            Gets a double value representing the DPI of the current graphics
            context (the DPI of a device-dependent pixel).
            </summary>
            <value>
            A double value representing the DPI of the current graphics
            context.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Unit.CurrentDpiRatio">
            <summary>
            The ratio between current machine DPI and 96DPI.
            For a machine with higher than 96DPI this number is greater than 1.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Unit.IsEmpty">
            <summary>
            Specifies whether this <see cref="T:Telerik.Reporting.Drawing.Unit"/> 
            structure is uninitialized. 
            </summary>
            <value>
            This property returns <B>true</B> if this unit is uninitialized; 
            otherwise, <B>false</B>. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Unit.Type">
            <summary>
            Gets the type of the <B>Unit</B>.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.UnitType"/> specifying the
            type of this <B>Unit</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Unit.Value">
            <summary>
            Gets the magnitude of this <B>Unit</B>.
            </summary>
            <value>
            A <I>float</I> value indicating the magnitude of the <B>Unit</B>.
            </value>
            <remarks>
            This property makes sense only in combination with the 
            <see cref="P:Telerik.Reporting.Drawing.Unit.Type"/> property.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Unit.Pixels">
            <summary>
            Gets the magnitude of this <B>Unit</B> in device-dependent pixels.
            </summary>
            <value>
            An <I>int</I> value specifying the unit's magnitude in device-dependent pixels.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Unit.FPixels">
            <summary>
            Gets or sets the magnitude of this <B>Unit</B> in device-dependent pixels.
            </summary>
            <value>
            A <I>float</I> value specifying the unit's magnitude in device-dependent pixels.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Unit.FDips">
            <summary>
            Gets the magnitude of this <B>Unit</B> in device-independent pixels.
            </summary>
            <value>
            An <I>float</I> value specifying the unit's magnitude in device-independent pixels.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Drawing.Unit.Dips">
            <summary>
            Gets the magnitude of this <B>Unit</B> in device-independent pixels.
            </summary>
            <value>
            An <I>int</I> value specifying the unit's magnitude in device-independent pixels.
            </value>
        </member>
        <member name="M:Telerik.Reporting.Drawing.UnitHelper.ConvertToDevicePixels(System.Double,Telerik.Reporting.Drawing.UnitType)">
            <summary>
            Returns a magnitude in device-dependent pixels (using current system's DPI) based on the specified <I>value</I>
            and <I>type</I>.
            </summary>
            <param name="value">
            A <I>double</I> value specifying the magnitude.
            </param>
            <param name="type">
            A <see cref="T:Telerik.Reporting.Drawing.UnitType"/> specifying the
            unit type.
            </param>
            <returns>
            A <I>double</I> value representing the magnitude in device-dependent pixels.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Drawing.UnitHelper.ConvertToUnits(System.Double,Telerik.Reporting.Drawing.UnitType)">
            <summary>
            Returns a magnitude in units based on the specified current device-dependent <I>pixels</I>
            and <I>type</I>.
            </summary>
            <param name="devicePixels">
            A <I>double</I> value specifying the magnitude in device-dependent pixels.
            </param>
            <param name="type">
            A <see cref="T:Telerik.Reporting.Drawing.UnitType"/> specifying the
            unit type to convert to.
            </param>
            <returns>
            A <I>double</I> value representing the magnitude in the specified
            units.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.Drawing.UnitType">
            <summary>
            Represents the type of a <see cref="T:Telerik.Reporting.Drawing.Unit"/>.
            </summary>
            <remarks>
            <para>
            1 inch = 6 picas = 72 points.
            </para>
            <para>
            1 centimeter = 10 millimeters.
            </para>
            <para>
            Pixels convert to and from other units based on the dpi of the current
            graphics context.
            </para>
            </remarks>
        </member>
        <member name="F:Telerik.Reporting.Drawing.UnitType.Pixel">
            <summary>
            Represents device independent pixels (dips). String equivalent used in <B>Unit</B>'s 
            constructor should be "px".
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.UnitType.Point">
            <summary>
            Represents points. String equivalent used in <B>Unit</B>'s 
            constructor should be "pt".
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.UnitType.Pica">
            <summary>
            Represents picas. String equivalent used in <B>Unit</B>'s 
            constructor should be "pc".
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.UnitType.Inch">
            <summary>
            Represents inches. String equivalent used in <B>Unit</B>'s 
            constructor should be "in".
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.UnitType.Mm">
            <summary>
            Represents millimeters. String equivalent used in <B>Unit</B>'s 
            constructor should be "mm".
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.UnitType.Cm">
            <summary>
            Represents centimeters. String equivalent used in <B>Unit</B>'s 
            constructor should be "cm".
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.VerticalAlign">
            <summary>
            Specifies the vertical alignment of an object or text in a report item.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.VerticalAlign.Top">
            <summary>
            Specifies that the object is aligned to the top.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.VerticalAlign.Middle">
            <summary>
            Specifies that the object is aligned to the middle.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.VerticalAlign.Bottom">
            <summary>
            Specifies that the object is aligned to the bottom.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.WatermarkCollection">
            <summary>
            Represents a collection of watermarks on a printable page.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.WatermarkOrientation">
            <summary>
            Defines the orientation of the watermark text on the printable page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.WatermarkOrientation.Horizontal">
            <summary>
            The watermark text is oriented horizontally on the printable page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.WatermarkOrientation.Vertical">
            <summary>
            The watermark text is oriented vertically on the printable page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.WatermarkOrientation.Diagonal">
            <summary>
            The watermark text is oriented diagonally on the printable page.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.WatermarkPosition">
            <summary>
            Defines the position of the watermark relative to the other items on the printable page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.WatermarkPosition.Behind">
            <summary>
            Specifies that the watermark is behind the other items on the printable page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.WatermarkPosition.Front">
            <summary>
            Specifies that the watermark is in front of the other items on the printable page.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Drawing.WatermarkSizeMode">
            <summary>
            Defines the sizing mode of the watermark image on the printable page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.WatermarkSizeMode.Normal">
            <summary>
            The watermark image is centered on the printable area of the page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.WatermarkSizeMode.Stretch">
            <summary>
            The watermark image is stretched to fill the printable area of the
            page without preserving its original proportions.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Drawing.WatermarkSizeMode.ScaleProportional">
            <summary>
            The watermark image is scaled to fill the printable area of the
            page while preserving its original proportions.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ErrorEventArgs">
            <summary>
            Provides a data for the <see cref="E:Telerik.Reporting.Report.Error"/> event of a <see cref="T:Telerik.Reporting.Report"/>.
            </summary>
            <remarks>
            A <see cref="T:Telerik.Reporting.ErrorEventArgs"/> object is passed to the event handler, which allows you to
            determine the current exception that has occurred during the report processing and to 
            indicate that the report operation should be canceled. To cancel the report operation, 
            set the ErrorEventArgs.Cancel property to True.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ErrorEventArgs.Exception">
            <summary>
            Gets the current exception.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Telerik.Reporting.ErrorEventHandler" -->
        <member name="T:Telerik.Reporting.Filter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Filter.Expression">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Filter.Operator">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Filter.Value">
            <summary>
            If the Value starts with the equal (=) sign, it will be evaluated as an expression
            otherwise - as string value. For ex. if the value is 7 it is interpreted as
            the string "7"; To compare a numeric expression with the number 7, use the
            expression syntax which begins with the equal sign: =7.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.FilterCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.FilterCombineOperator">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.FilterConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.FilterOperator">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphAxis">
            <summary>
            Represents an axis in a <see cref="T:Telerik.Reporting.GraphCoordinateSystem"/>.
            </summary>
            <remarks>
            
            </remarks>
        </member>
        <member name="E:Telerik.Reporting.GraphAxis.Disposed">
            <summary>
            Occurs when the report item is disposed.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.Scale">
            <summary>
            Gets or sets the scale for the current axis.
            </summary>
            <remarks>
            The scale can be one of the following types: <see cref="T:Telerik.Reporting.CategoryScale"/>, <see cref="T:Telerik.Reporting.NumericalScale"/>, <see cref="T:Telerik.Reporting.LogarithmicScale"/>, <see cref="T:Telerik.Reporting.DateTimeScale"/>.
            </remarks>                             
            <seealso cref="T:Telerik.Reporting.CategoryScale"/>        
            <seealso cref="T:Telerik.Reporting.NumericalScale"/>       
            <seealso cref="T:Telerik.Reporting.LogarithmicScale"/>
            <seealso cref="T:Telerik.Reporting.DateTimeScale"/>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.Style">
            <summary>
            Gets the default style for the current axis, tick marks and labels.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.TitleStyle">
            <summary>
            Gets the default style for the title of the current axis.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.MajorGridLineStyle">
            <summary>
            Gets the style of the grid lines that correspond to the major axis steps.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.MinorGridLineStyle">
            <summary>
            Gets the style of the grid lines that correspond to the minor axis steps.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.MajorTickMarkDisplayType">
            <summary>
            Gets or sets a value that indicates how to display the tick marks that correspond to the major axis steps.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.MinorTickMarkDisplayType">
            <summary>
            Gets or sets a value that indicates how to display the tick marks that correspond to the minor axis steps.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.LabelFormat">
            <summary>
            Gets or sets a value that indicates how to format the labels.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.LabelPlacement">
            <summary>
            Gets or sets the position of the axis labels according to the complementary axis' min/max values.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.LabelAngle">
            <summary>
            Gets or sets the angle in degrees at which the axis labels are rotated.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.Title">
            <summary>
            Gets or sets the title of the axis.
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.TitlePlacement">
            <summary>
            Gets or sets the placement of the axis title.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.Size">
            <summary>
            Specifies the Axis exact size.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.MinSize">
            <summary>
            Specifies the minimum Axis size.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.MaxSize">
            <summary>
            Specifies the graph item's left position.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphAxis.MultiLevelCategoryLabels">
            <summary>
            Gets or sets a value indicating whether to display multidimensional category scale labels on one or more levels.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphAxisLabelPlacement">
            <summary>
            Specifies how axis labels are placed on the axis.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphAxisLabelPlacement.None">
            <summary>
            No axis labels.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphAxisLabelPlacement.NextToAxis">
            <summary>
            Follows the axis.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphAxisLabelPlacement.AtMinimum">
            <summary>
            Labels at min value of the related axis.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphAxisLabelPlacement.AtMaximum">
            <summary>
            Labels at max value of the related axis.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphAxisTickMarkDisplayType">
            <summary>
            Specifies how tick marks are drawn on the axis.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphAxisTickMarkDisplayType.None">
            <summary>
            No tick marks.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphAxisTickMarkDisplayType.Inside">
            <summary>
            Display the tick marks inside the graph area.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphAxisTickMarkDisplayType.Outside">
            <summary>
            Display the tick marks outside the graph area.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphAxisTickMarkDisplayType.Cross">
            <summary>
            Display the tick marks so that it crosses the axis line, displaying both inside and outside the graph area.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphAxisTitlePlacement">
            <summary>
            Specifies how the axis title is placed on the axis.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphAxisTitlePlacement.None">
            <summary>
            No axis title.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphAxisTitlePlacement.Auto">
            <summary>
            Uses the default value for the axis title placement.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphAxisTitlePlacement.AtMinimum">
            <summary>
            The axis title is placed at min value of the axis.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphAxisTitlePlacement.AtMaximum">
            <summary>
            The axis title is placed at max value of the axis.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphAxisTitlePlacement.Centered">
            <summary>
            The axis title is centered according to the axis.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.AngularAxisLabelOrientation">
            <summary>
            The orientation of the angular axis labels.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.AngularAxisLabelOrientation.Circular">
            <summary>
            Labels are arranged in circle. 
            </summary>
            <remarks>
            The angle of the data-point is the base angle for the label. 
            Additionally the LabelAngle property of the axis is taken into account.
            The overall angle of the label is [data-point angle] + [LabelAngle]
            </remarks>
        </member>
        <member name="F:Telerik.Reporting.AngularAxisLabelOrientation.Fixed">
            <summary>
            Labels are arranged at a fixed angle.
            </summary>
            <remarks>
            All labels will have the same angle equal to the value of the LabelAngle property of the axis.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.CartesianCoordinateSystem">
            <summary>
            Represents a two-dimensional Cartesian (rectangular) coordinate system. 
            </summary>    
        </member>
        <member name="T:Telerik.Reporting.GraphCoordinateSystem">
            <summary>
            Represents a coordinate system in a <see cref="T:Telerik.Reporting.Graph"/> item.
            </summary>
            <remarks>
            In the <see cref="T:Telerik.Reporting.Graph"/> item
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.GraphCoordinateSystem.Name">
            <summary>
            Gets or sets the name of the coordinate system.
            </summary>
            <remarks>
            The <B>Name</B> should uniquely identify the coordinate system in the context 
            of the <see cref="T:Telerik.Reporting.Graph"/> item it belongs to.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.GraphCoordinateSystem.Style">
            <summary>
            Gets the default style for the axes, tick marks and labels.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphCoordinateSystem.Bindings">
            <summary>
            Gets the collection of binding rules contained within the report item. 
            </summary>
            <value>
            An collection of <see cref="T:Telerik.Reporting.Binding"/> instances
            representing the list of property bindings defined within the item.
            </value>
        </member>
        <member name="P:Telerik.Reporting.CartesianCoordinateSystem.XAxis">
            <summary>
            Gets or sets the X-axis (horizontal) of the <B>CartesianCoordinateSystem</B>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CartesianCoordinateSystem.YAxis">
            <summary>
            Gets or sets the Y-axis (vertical) of the <B>CartesianCoordinateSystem</B>.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphCoordinateSystemCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.GraphCoordinateSystem"/> objects.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.PolarCoordinateSystem">
            <summary>
            Represents a two-dimensional polar coordinate system. Points in the polar coordinate
            system are defined with radial and angular coordinates.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.PolarCoordinateSystem.RadialAxis">
            <summary>
            Gets or sets the radial axis of the <B>PolarCoordinateSystem</B>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.PolarCoordinateSystem.AngularAxis">
            <summary>
            Gets or sets the angular axis of the <B>PolarCoordinateSystem</B>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.PolarCoordinateSystem.AngularAxisLabelOrientation">
            <summary>
            Gets or sets the orientation of the angular axis labels.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.PolarCoordinateSystem.AngularAxisStartAngle">
            <summary>
            Gets or sets the angle in degrees measured clockwise from the radial axis to the starting point of the angular axis.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.PolarCoordinateSystem.AngularAxisSweepAngle">
            <summary>
            Gets or sets the angle in degrees measured clockwise from the startAngle parameter to ending point of the angular axis. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.PolarCoordinateSystem.InnerRadiusRatio">
            <summary>
            Gets or sets a value indicating the ratio between the inner and the outer radius of the <b>PolarCoordinateSystem</b>.
            </summary>
            <remarks>
            Use <b>InnerRadiusRatio</b> greater than 0 to create 'doughnut' like graphs.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.Graph">
            <summary>
            Use the Graph item to add charts to a report.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Graph.CoordinateSystems">
            <summary>
            Gets the collection of <see cref="T:Telerik.Reporting.GraphCoordinateSystem"/>s.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Graph.SeriesGroups">
            <summary>
            Gets the hierarchy of <see cref="T:Telerik.Reporting.GraphGroup"/>s that define the series for the current <B>Graph</B>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Graph.CategoryGroups">
            <summary>
            Gets the hierarchy of <see cref="T:Telerik.Reporting.GraphGroup"/>s that define the categories for the current <B>Graph</B>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Graph.Series">
            <summary>
            Gets the collection of <see cref="T:Telerik.Reporting.GraphSeries"/> defined for the current <B>Graph</B>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Graph.Legend">
            <summary>
            Gets the <B>Legend</B> for the current <B>Graph</B>
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Graph.Titles">
            <summary>
            Gets the collection of <see cref="T:Telerik.Reporting.GraphTitle"/> defined for the current <B>Graph</B>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Graph.PlotAreaStyle">
            <summary>
            Gets the style of the plot area.
            </summary>
            <remarks>
            The plot area of a <B>Graph</B> is the area where all series including the data points
            and labels are rendered. The plot area also contains all grid lines if defined.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Graph.Culture">
            <summary>
            Gets or sets the culture information associated with the Graph item. 
            </summary>
            <value>
            A <see cref="T:System.Globalization.CultureInfo"/> representing the 
            culture supported by the <see cref="T:Telerik.Reporting.Graph"/>. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Graph.ColorPalette">
            <summary>
            Gets or sets the color palette used for graph series. 
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.IColorPalette"/> implementation 
            representing color palette used for graph series. 
            </value>
        </member>
        <member name="T:Telerik.Reporting.GraphGroup">
            <summary>
            Represents a group in a <see cref="T:Telerik.Reporting.Graph"/> item.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.IGroup">
            <summary>
            Represents an interface for grouping, filtering and sorting data.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GroupBase.Name">
            <summary>
            Gets or sets the name of the group. 
            </summary>
            <value>
            The name of the group. 
            </value>
            <remarks>
            The <B>Name</B> property can be used at run time to set the scope of aggregate functions.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.GroupBase.Groupings">
            <summary>
            Gets a 
            <see cref="T:Telerik.Reporting.GroupingCollection"/>
            object that holds all 
            <see cref="T:Telerik.Reporting.Grouping"/> objects for
            the group.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.GroupingCollection"/>
            value containing the group expressions of the group.
            </value>
            <remarks>
            Groups are defined by adding one or more group expressions to the
            collection. Grouping can be done by one or more data fields. Each
            data field is represented by a group expression in the collection.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.GroupBase.Sortings">
            <summary>
            Gets a 
            <see cref="T:Telerik.Reporting.SortingCollection"/> 
            that defines the sort column(s), and their type and order for the
            <B>Group</B>
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.SortingCollection"/> 
            that contains the 
            <see cref="T:Telerik.Reporting.Sorting"/> objects for the
            <B>Group</B>
            </value>
            <remarks>
            Sort expressions sort the data that is displayed in the 
            <B>Group</B>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.GroupBase.Filters">
            <summary>
            Gets a 
            <see cref="T:Telerik.Reporting.FilterCollection"/> 
            that defines the filter expression(s) for the
            <see cref="T:Telerik.Reporting.Group"/>
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.FilterCollection"/> 
            that contains the 
            <see cref="T:Telerik.Reporting.Filter"/> objects for 
            the <B>Group</B>
            </value>
            <remarks>
            Filter expressions limit the data that is displayed in the
            <B>Group</B>
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.IGroupHierarchy">
            <summary>
            Defines hierarchy of groups
            </summary>
        </member>
        <member name="T:Telerik.Reporting.IMergeableGroup">
            <summary>
            Interface representing a group that can merge its members runtime group instances into a single "Others" instance
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphGroup.Label">
            <summary>
            Gets or sets the label for the categories in category axis.
            </summary>
            <remarks>
            Applicable only to groups from the <see cref="P:Telerik.Reporting.Graph.CategoryGroups"/> hierarchy.
            </remarks>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.GraphGroup.Action">
            <summary>
            Gets or sets an interactive action associated with this graph group. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphGroup.Visible">
            <summary>
            Gets or sets a value indicating whether the graph group is displayed. 
            </summary>
            <value>
            <B>true</B> if the table group is displayed; otherwise,
            <B>false</B>. The default is <B>true</B>.
            </value>
        </member>
        <member name="T:Telerik.Reporting.GraphGroupCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.GraphGroup"/>s.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphItem.Bounds">
            <summary>
            Specifies the graph item's bounds.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphItem.Location">
            <summary>
            Specifies the graph item's location.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphItem.Size">
            <summary>
            Specifies the graph item's size.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphItem.Top">
            <summary>
            Specifies the graph item's top position.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphItem.Left">
            <summary>
            Specifies the graph item's left position.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphItem.Width">
            <summary>
            Specifies the graph item's width.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphItem.Height">
            <summary>
            Specifies the graph item's height.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphItem.Style">
            <summary>
            Specifies the graph item's style.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphItem.IsInsidePlotArea">
            <summary>
            Determines whether the graph item is inside or outside the plot area.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphItemPosition">
            <summary>
            Specifies the graph item's position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphItemPosition.TopLeft">
            <summary>
            Specifies top left position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphItemPosition.TopCenter">
            <summary>
            Specifies top center position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphItemPosition.TopRight">
            <summary>
            Specifies top right position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphItemPosition.LeftTop">
            <summary>
            Specifies left top position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphItemPosition.LeftCenter">
            <summary>
            Specifies left center position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphItemPosition.LeftBottom">
            <summary>
            Specifies left bottom position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphItemPosition.RightTop">
            <summary>
            Specifies right top position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphItemPosition.RightCenter">
            <summary>
            Specifies right center position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphItemPosition.RightBottom">
            <summary>
            Specifies right bottom position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphItemPosition.BottomLeft">
            <summary>
            Specifies bottom left position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphItemPosition.BottomCenter">
            <summary>
            Specifies bottom center position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphItemPosition.BottomRight">
            <summary>
            Specifies bottom right position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphItemPosition.Absolute">
            <summary>
            Specifies absolute position.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphItemPosition.Center">
            <summary>
            Specifies center position.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphLegend">
            <summary>
            Specifies the legend for the graph.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphLegend.Title">
            <summary>
            Specifies the text for the legend's title.
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.GraphLegend.TitleStyle">
            <summary>
            Specifies the <see cref="T:Telerik.Reporting.Drawing.Style"/> for the legend's title.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphLegend.Position">
            <summary>
            Specifies the position of the <see cref="T:Telerik.Reporting.GraphLegend"/>.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphSeriesBase">
            <summary>
            Represents a series of data points with labels in the <see cref="T:Telerik.Reporting.Graph"/> and <see cref="T:Telerik.Reporting.Map"/> report items.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.DataPointLabel">
            <summary>
            Data point label.
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.DataPointLabelAngle">
            <summary>
            Gets or sets the angle in degrees at which the data point labels are rotated.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.DataPointLabelFormat">
            <summary>
            Data point label format.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.DataPointLabelStyle">
            <summary>
            Gets the style for the labels of the data points.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.DataPointLabelConditionalFormatting">
            <summary>
            Gets the <see cref="T:Telerik.Reporting.Drawing.ConditionalFormatting"/> to applied on the data points' labels.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.DataPointTooltip">
            <summary>
            Reserved for future use
            Data point tooltip
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.DataPointTooltipFormat">
            <summary>
            Reserved for future use
            Data point tooltip format
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.ToolTip">
            <summary>
            Gets the <see cref="T:Telerik.Reporting.IToolTip"/> instance associated with the data points.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.DataPointConditionalFormatting">
            <summary>
            Gets the <see cref="T:Telerik.Reporting.Drawing.ConditionalFormatting"/> applied on the data points.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.DataPointStyle">
            <summary>
            Gets the default style of a data point.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.Legend">
            <summary>
            Gets or sets an expression or a text which is displayed in the legend.
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.LegendFormat">
            <summary>
            Gets or sets the number format for the legend value.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.LegendItem">
            <summary>
            Gets or sets the <see cref="T:Telerik.Reporting.LegendItem"/> for the current <B>GraphSeries</B>
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.Name">
            <summary>
            Gets or sets the name of the graph series. 
            </summary>
            <value>
            The name of the graph series. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.GraphSeriesBase.ColorPalette">
            <summary>
            Gets or sets the color palette used for graph series. 
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.IColorPalette"/> implementation 
            representing color palette used for graph series. 
            </value>
        </member>
        <member name="T:Telerik.Reporting.GraphTitle">
            <summary>
            Represents a title for the graph.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphTitle.Text">
            <summary>
            Specifies the text for the title.
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.GraphTitle.Position">
            <summary>
            Specifies the position of <see cref="T:Telerik.Reporting.GraphTitle"/>.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphTitleCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.GraphTitle"/> objects.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.AxisPositionMode">
            <summary>
            Specifies how tick marks are positioned in relation to the data points.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.AxisPositionMode.BetweenTicks">
            <summary>
            Specifies data points to be positioned between tick marks.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.AxisPositionMode.OnTicks">
            <summary>
            Specifies data points to be positioned on tick marks.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.CategoryScale">
            <summary>
            Specifies a category scale for a <see cref="T:Telerik.Reporting.GraphAxis"/>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Scale.Reversed">
            <summary>
            Indicates whether to arrange values in reverse order.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Scale.CrossAxisPosition">
            <summary>
            Zero value is where the other axis crosses the current axis;
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Scale.SpacingSlotCount">
            <summary>
            Determines the number of space slots that will be left around the DataPoints per category slot,
            measured relatively to the DataPoint slot's width:
            Empty Space = SpacingSlotCount * DataPoint_SlotWidth
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CategoryScale.PositionMode">
            <summary>
            Specifies how the tick marks are positioned in relation to data points.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CategoryScale.CrossAxisValue">
            <summary>
            Applied when GraphScaleCrossAxisPosition is set to GraphAxisZeroValueMode.Specific.
            Zero value is where the other axis crosses the current axis.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.CategoryScaleCrossAxisPosition">
            <summary>
            Represents the position on an axis with <see cref="T:Telerik.Reporting.CategoryScale"/> where the axes cross.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.CrossAxisPositionBase">
            <summary>
            Represents the position on an axis where the axes cross.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CrossAxisPositionBase.Position">
            <summary>
            Gets or sets the value that indicates the position where the axes cross.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CategoryScaleCrossAxisPosition.Value">
            <summary>
            Gets or sets the value where the other axis crosses the current axis.
            </summary>
            <remarks>
            The <b>Value</b> property is applied only if <see cref="P:Telerik.Reporting.CrossAxisPositionBase.Position"/> is set to <B>GraphAxisZeroValueMode.Specific</B>.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.CategoryScaleCrossAxisPositionCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.CategoryScaleCrossAxisPosition"/> objects.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.DateTimeScale">
            <summary>
            A graph axis scale that displays dates in chronological order at specific intervals, or base units, 
            even if the dates from the data source are not in order or in the same base units.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.DateTimeScale.BaseUnit">
            <summary>
            Gets or sets the base unit for the current DateTimeScale. The base unit
            defines the interval between the points on the axis. By default the base units
            are according to the smallest difference between any two dates in the data. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.DateTimeScale.MinorUnit">
            <summary>
            Gets or sets the unit for the interval/step between the minor ticks/grid lines. 
            In conjunction with the <see cref="P:Telerik.Reporting.DateTimeScale.MinorStep"/> property defines the interval between 
            the minor ticks and minor grid lines, ex.: 1 day, 3 months, 1 year.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.DateTimeScale.MinorStep">
            <summary>
            Gets or sets the step/interval for the minor ticks/grid lines. 
            In conjunction with the <see cref="P:Telerik.Reporting.DateTimeScale.MinorStep"/> property defines the interval between 
            the minor ticks and minor grid lines, ex.: 1 day, 3 months, 1 year.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.DateTimeScale.MajorUnit">
            <summary>
            Gets or sets the unit for the interval/step between the major ticks/grid lines.
            In conjunction with the <see cref="P:Telerik.Reporting.DateTimeScale.MajorStep"/> property defines the interval between 
            the major ticks and major grid lines, ex.: 1 day, 3 months, 1 year.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.DateTimeScale.MajorStep">
            <summary>
            Gets or sets the step/interval between the major ticks/grid lines.
            In conjunction with the <see cref="P:Telerik.Reporting.DateTimeScale.MajorUnit"/> property defines the interval between 
            the major ticks and major grid lines, ex.: 1 day, 3 months, 1 year.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.DateTimeScale.LabelUnit">
            <summary>
            Gets or sets the unit for the interval/step between the labels.
            In conjunction with the <see cref="P:Telerik.Reporting.DateTimeScale.LabelStep"/> property defines the interval between 
            the labels on the axis, ex.: 1 day, 3 months, 1 year.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.DateTimeScale.LabelStep">
            <summary>
            Gets or sets the step/interval between the labels.
            In conjunction with the <see cref="P:Telerik.Reporting.DateTimeScale.LabelUnit"/> property defines the interval between 
            the labels on the axis, ex.: 1 day, 3 months, 1 year. The property is applied only when 
            <see cref="P:Telerik.Reporting.DateTimeScale.LabelUnit"/> is set to a value other than <b>Auto</b>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.DateTimeScale.Minimum">
            <summary>
            Gets or sets the minimum value for the current axis.
            </summary>
            <value>A DateTime value that is the minimum value of the scale's range. The default value is null.</value>
            <remarks>
            When the <b>Minimum</b> property is set to null (Nothing in Visual Basic) then the minimum value of the scale's range is defined by the data.
            In case there are no data points available then the <b>Minimum</b> value is set according to <see cref="P:System.DateTime.Now"/> and the selected <see cref="P:Telerik.Reporting.DateTimeScale.BaseUnit"/>.
            In case the <b>Maximum</b> and <b>Minimum</b> values are set to an equal value, then their values are ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.DateTimeScale.Maximum">
            <summary>
            Gets or sets the maximum value for the current axis. 
            </summary>
            <value>A DateTime value that is the maximum value of the scale's range. The default value is null.</value>
            <remarks>
            When the <b>Maximum</b> property is set to null (Nothing in Visual Basic) then the maximum value of the scale's range is defined by the data.
            In case there are no data points available then the <b>Maximum</b> value is set according to <see cref="P:System.DateTime.Now"/> and the selected <see cref="P:Telerik.Reporting.DateTimeScale.BaseUnit"/>.
            In case the <b>Maximum</b> and <b>Minimum</b> values are set to an equal value, then their values are ignored.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.DateTimeScale.CrossAxisValue">
            <summary>
            Applied when GraphScaleCrossAxisPosition is set to GraphAxisZeroValueMode.Specific.
            Zero value is where the other axis crosses the current axis.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.DateTimeScale.DataPointTicks">
            <summary>
            Gets or sets a value indicating weather to shows ticks and labels on the axis 
            for every point in the data set instead of regular major ticks.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.DateTimeScaleCrossAxisPosition">
            <summary>
            Represents the position on an axis with <see cref="T:Telerik.Reporting.DateTimeScale"/> where the axes cross.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.DateTimeScaleCrossAxisPosition.Value">
            <summary>
            Gets or sets the value where the other axis crosses the current axis.
            </summary>
            <remarks>
            The <b>Value</b> property is applied only if <see cref="P:Telerik.Reporting.CrossAxisPositionBase.Position"/> is set to <B>GraphAxisZeroValueMode.Specific</B>.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.DateTimeScaleCrossAxisPositionCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.DateTimeScaleCrossAxisPosition"/> objects.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.DateTimeScaleUnits">
            <summary>
            Determines the unit for the interval/step between minor/major ticks/grid lines.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DateTimeScaleUnits.Seconds">
            <summary>
            Specifies a seconds unit for the datetime interval.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DateTimeScaleUnits.Minutes">
            <summary>
            Specifies a minute unit for the datetime interval.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DateTimeScaleUnits.Hours">
            <summary>
            Specifies an hour unit for the datetime interval.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DateTimeScaleUnits.Days">
            <summary>
            Specifies a day unit for the datetime interval.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DateTimeScaleUnits.Months">
            <summary>
            Specifies a month unit for the datetime interval.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DateTimeScaleUnits.Years">
            <summary>
            Specifies a year unit for the datetime interval.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphScaleCrossAxisPosition">
            <summary>
            Determines the position at which axes cross each other.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphScaleCrossAxisPosition.Auto">
            <summary>
            Uses the default value at which the other axis crosses this axis.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphScaleCrossAxisPosition.AtMinimum">
            <summary>
            Specifies that the other axis crosses this axis at its minimum value.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphScaleCrossAxisPosition.AtMaximum">
            <summary>
            Specifies that the other axes crosses this axis at its maximum value.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphScaleCrossAxisPosition.Specific">
            <summary>
            Calculates the zero value at which the other axis crosses this axis.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.LogarithmicScale">
            <summary>
            The <b>LogarithmicScale</b> is similar to the <see cref="T:Telerik.Reporting.NumericalScale"/>, except there's a logarithmic transform that is 
            applied to the input domain value before the output range value is computed. The mapping 
            to the output range value y can be expressed as a function of the input domain 
            value x: y = m log(x) + b. The <b>LogarithmicScale</b> does not support zero or negative values. 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.NumericalScaleBase">
            <summary>
            The base class for all numerical scales.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.NumericalScaleBase.Minimum">
            <summary>
            Axis' minimum value. Set to float.NaN to automatically calculate the value based on the data.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.NumericalScaleBase.Maximum">
            <summary>
            Graph axis range - maximum value. Set to float.NaN to automatically calculate the value based on the data.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.NumericalScaleBase.DataPointTicks">
            <summary>
            Gets or sets a value indicating weather to shows ticks and labels on the axis 
            for every point in the data set instead of regular major ticks.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LogarithmicScale.Base">
            <summary>
            Gets or sets the base value of the logarithm.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LogarithmicScale.Minimum">
            <summary>
            Axis' minimum value. Set to float.NaN to automatically calculate the value based on the data.
            </summary>
            <remarks>
            Due to the nature of the logarithmic transformation applied to the scale 
            the <B>Minimum</B> property accepts only positive numbers and
            throws an error for zero or negative values.
            </remarks>
            <value>
            A positive number that defines the minimum value for the scale. 
            A <see cref="F:System.Double.NaN"/> value indicates that the scale will automatically 
            calculate its minimum value based on the data. 
            The default value is <see cref="F:System.Double.NaN"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.LogarithmicScale.Maximum">
            <summary>
            Graph axis range - maximum value. Set to float.NaN to automatically calculate the value based on the data.
            </summary>
            <remarks>
            Due to the nature of the logarithmic transformation applied to the scale the <B>Maximum</B> property accepts only positive numbers and
            throws an error for zero or negative values.
            </remarks>
            <value>A positive number that indicates the maximum value for the scale.</value>
            <value>
            A positive number that defines the maximum value for the scale. 
            A <see cref="F:System.Double.NaN"/> value indicates that the scale will automatically 
            calculate its maximum value based on the data. 
            The default value is <see cref="F:System.Double.NaN"/>.
            </value>[MergableProperty(true)]
        </member>
        <member name="P:Telerik.Reporting.LogarithmicScale.CrossAxisPositions">
            <summary>
            A collection of <see cref="T:Telerik.Reporting.LogarithmicScaleCrossAxisPosition"/> items that defines
            the where the other axes cross the current one.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LogarithmicScale.MajorStep">
            <summary>
            Gets or sets the step/interval for the major ticks/grid lines.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LogarithmicScale.MinorStep">
            <summary>
            Gets or sets the step/interval for the minor ticks/grid lines.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LogarithmicScale.CrossAxisValue">
            <summary>
            Applied when GraphScaleCrossAxisPosition is set to GraphAxisZeroValueMode.Specific.
            Zero value is where the other axis crosses the current axis.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.LogarithmicScaleCrossAxisPosition">
            <summary>
            Represents the position on an axis with <see cref="T:Telerik.Reporting.LogarithmicScale"/> where the axes cross.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LogarithmicScaleCrossAxisPosition.Value">
            <summary>
            Gets or sets the value where the other axis crosses the current axis.
            </summary>
            <remarks>
            The <b>Value</b> property is applied only if <see cref="P:Telerik.Reporting.CrossAxisPositionBase.Position"/> is set to <B>GraphAxisZeroValueMode.Specific</B>.
            </remarks>
            <remarks>
            Due to the nature of the logarithmic transformation applied to the scale 
            the <B>Value</B> property accepts only positive numbers and
            throws an error for zero or negative values.
            </remarks>
            <value>
            A positive number that defines the exact value where the other axis crosses the current one.
            The default value is 1.0.
            </value>
        </member>
        <member name="T:Telerik.Reporting.LogarithmicScaleCrossAxisPositionCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.LogarithmicScaleCrossAxisPosition"/> objects.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.NumericalScale">
            <summary>
            Represents a numerical scale with continuous input domain.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.NumericalScale.MajorStep">
            <summary>
            Gets or sets the step/interval for the major ticks/grid lines.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.NumericalScale.MinorStep">
            <summary>
            Gets or sets the step/interval for the minor ticks/grid lines.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.NumericalScale.LabelStep">
            <summary>
            Gets or sets the step/interval for the labels on the axis.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.NumericalScale.CrossAxisValue">
            <summary>
            Applied when GraphScaleCrossAxisPosition is set to GraphAxisZeroValueMode.Specific.
            Zero value is where the other axis crosses the current axis.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.NumericalScale.CrossAxisPositions">
            <summary>
            A collection of <see cref="T:Telerik.Reporting.NumericalScaleCrossAxisPosition"/> items that defines
            the where the other axes cross the current one.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.NumericalScaleCrossAxisPosition">
            <summary>
            Represents the position on an axis with <see cref="T:Telerik.Reporting.NumericalScale"/> where the axes cross.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.NumericalScaleCrossAxisPosition.Value">
            <summary>
            Gets or sets the value where the other axis crosses the current axis.
            </summary>
            <remarks>
            The <b>Value</b> property is applied only if <see cref="P:Telerik.Reporting.CrossAxisPositionBase.Position"/> is set to <B>GraphAxisZeroValueMode.Specific</B>.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.NumericalScaleCrossAxisPositionCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.NumericalScaleCrossAxisPosition"/> objects.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.AreaSeries">
            <summary>
            Represents an area chart displays a series as a set of points connected by a line, with all the area filled in below the line
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphSeries2D">
            <summary>
            Represents a series of data points in a two-dimensional coordinate system.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphSeries">
            <summary>
            Represents a series of data points with labels in the <see cref="T:Telerik.Reporting.Graph"/> report item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeries.ArrangeByAxis">
            <summary>
            Gets or sets the axis/direction that the <see cref="P:Telerik.Reporting.GraphSeries2D.ArrangeMode"/> is applied to.
            </summary>
            <remarks>
            This property is applicable if the ArrangeMode is set to Stacked or Stacked100; otherwise it is ignored. 
            
            Use the ArrangeByAxis property to specify how the series will be arranged (stacked) at runtime. 
            By default the Graph item always stacks the series by the axis with the Numeric scale 
            (including LogarithmicScale and ExponentialScale). 
            
            If a series is to be projected on a coordinate system with a combination of 
            NumericScale/CategoryScale or NumericScale/DateTimeScale, and the series has an 
            ArrangeMode set to Stacked or Stacked100, the series will always be stacked 
            by the value projected on the NumericScale, no matter if this is X/Y/Angular or Radial axis. 
            
            In the case a series is to be projected on a coordinate system where both axes 
            are NumercScales you can choose how you want to stack the series’ values. 
            If no axis is specified, the default is the X axis (in CartesianCoordinateSytem) 
            or the Angular axis (in the case of PolarCooordinateSystem).
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.GraphSeries.CoordinateSystem">
            <summary>
            The coordinate system to project the data points (category/value) onto.
            </summary>
            <remarks>
            The coordinate system can be a <see cref="T:Telerik.Reporting.CartesianCoordinateSystem"/> or a <see cref="T:Telerik.Reporting.PolarCoordinateSystem"/>.
            </remarks>
            <seealso cref="T:Telerik.Reporting.CartesianCoordinateSystem"/>
            <seealso cref="T:Telerik.Reporting.PolarCoordinateSystem"/>
        </member>
        <member name="P:Telerik.Reporting.GraphSeries.CategoryGroup">
            <summary>
            Gets or sets the <see cref="T:Telerik.Reporting.GraphGroup"/> from the <see cref="P:Telerik.Reporting.Graph.CategoryGroups"/> 
            hierarchy associated with this series.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeries.SeriesGroup">
            <summary>
            Gets or sets the <see cref="T:Telerik.Reporting.GraphGroup"/> from the <see cref="P:Telerik.Reporting.Graph.SeriesGroups"/> 
            hierarchy associated with this series.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeries2D.X">
            <summary>
            Gets or sets an expression that defines the <b>X</b> coordinate for the data points when in a 
            <see cref="T:Telerik.Reporting.CartesianCoordinateSystem"/>; For a <see cref="T:Telerik.Reporting.PolarCoordinateSystem"/> gets or sets
            the <b>Angular</b> coordinate;
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeries2D.Y">
            <summary>
            Gets or sets an expression that defines the <b>Y</b> coordinate for the data points when in a 
            <see cref="T:Telerik.Reporting.CartesianCoordinateSystem"/>; For a <see cref="T:Telerik.Reporting.PolarCoordinateSystem"/> gets or sets
            the <b>Radial</b> coordinate;
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraphSeries2D.ArrangeMode">
            <summary>
            Gets or sets a value indicating how to arrange the series at runtime.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.AreaSeries.ConditionalFormatting">
            <summary>
            Gets the <see cref="P:Telerik.Reporting.AreaSeries.ConditionalFormatting"/> rules which are applied on the series' style.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.AreaSeries.AreaStyle">
            <summary>
            Gets the style applied to the area defined by the data points of this series.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.AreaSeries.MissingValuesAreaStyle">
            <summary>
            Gets the style applied to the area determined by data points with missing values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.AreaSeries.SmoothLine">
            <summary>
            Gets or sets a value indicating how to connect the data points: with a smooth or
            straight lines.
            </summary>
            <remarks>
            When the <b>SmoothLine</b> is enabled the data points are connected with Bezier curves.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.AreaSeries.LineType">
            <summary>
            Gets or sets a value indicating how to connect the data points: with smooth,
            straight or stepped lines.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.AreaSeries.MarkerType">
            <summary>
            Gets or sets the type of the markers for the data points.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.AreaSeries.MarkerSize">
            <summary>
            Gets or sets the size of the markers for the data points.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.AreaSeries.X0">
            <summary>
            Gets or sets an expression that defines the <b>X0</b> coordinate for the data points when in a 
            <see cref="T:Telerik.Reporting.CartesianCoordinateSystem"/>; For <see cref="T:Telerik.Reporting.PolarCoordinateSystem"/> gets or sets
            the <b>angular</b> coordinate;
            </summary>
            <remarks>
            If omitted, the BarSeries' data points start from the corresponding axis.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.AreaSeries.Y0">
            <summary>
            Gets or sets an expression that defines the <b>Y0</b> coordinate for the data points when in a 
            <see cref="T:Telerik.Reporting.CartesianCoordinateSystem"/>; For <see cref="T:Telerik.Reporting.PolarCoordinateSystem"/> gets or sets
            the <b>radial</b> coordinate;
            </summary>
            <remarks>
            If omitted, the BarSeries' data points start from the corresponding axis.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.BarDataPointLabelAlignment">
            <summary>
            Specifies how to align the labels for the data points of the <see cref="T:Telerik.Reporting.BarSeries"/>.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.BarDataPointLabelAlignment.OutsideEnd">
            <summary>
            Labels outside the end of each data point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.BarDataPointLabelAlignment.InsideEnd">
            <summary>
            Labels inside the end of each data point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.BarDataPointLabelAlignment.Center">
            <summary>
            Labels in the middle of each data point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.BarDataPointLabelAlignment.InsideBase">
            <summary>
            Labels inside the base of each data point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.BarDataPointLabelAlignment.OutsideBase">
            <summary>
            Labels outside the base of each data point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.BarDataPointLabelAlignment.OutsideColumn">
            <summary>
            Labels aligned in a column outside the farthest end of the data points. Applicable to PieCharts.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.BarSeries">
            <summary>
            Represents a series of data points with rectangular (Bar) shape when projected on a <see cref="T:Telerik.Reporting.CartesianCoordinateSystem"/>.
            For the <see cref="T:Telerik.Reporting.PolarCoordinateSystem"/> the items of the <b>BarSeries</b> have a wedge shape like in a 
            Pie or Doughnut charts.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.BarSeries.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Telerik.Reporting.BarSeries"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.BarSeries.DataPointLabelAlignment">
            <summary>
            Specifies the data point label alignment.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.BarSeries.DataPointLabelOffset">
            <summary>
            Gets or sets the DataPointLabel offset, according the DataPointLabelPosition.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.BarSeries.DataPointLabelConnectorStyle">
            <summary>
            Gets the style for the data point label connectors.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.BarSeries.DataPointLabelConnectorConditionalFormatting">
            <summary>
            Gets the <see cref="T:Telerik.Reporting.Drawing.ConditionalFormatting"/> to be applied on the data points' label connectors.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.BarSeries.X0">
            <summary>
            Gets or sets an expression that defines the <b>X0</b> coordinate for the data points when in a 
            <see cref="T:Telerik.Reporting.CartesianCoordinateSystem"/>; For <see cref="T:Telerik.Reporting.PolarCoordinateSystem"/> gets or sets
            the <b>angular</b> coordinate;
            </summary>
            <remarks>
            If omitted, the BarSeries' data points start from the corresponding axis.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.BarSeries.Y0">
            <summary>
            Gets or sets an expression that defines the <b>Y0</b> coordinate for the data points when in a 
            <see cref="T:Telerik.Reporting.CartesianCoordinateSystem"/>; For <see cref="T:Telerik.Reporting.PolarCoordinateSystem"/> gets or sets
            the <b>radial</b> coordinate;
            </summary>
            <remarks>
            If omitted, the BarSeries' data points start from the corresponding axis.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.BarSeries.MergedDataPoints">
            <summary>
            Gets the settings necessary to determine if and by what algorithm to merge data points.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.DataPointMarkerType">
            <summary>
            Determines the data point markers.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DataPointMarkerType.Auto">
            <summary>
            Uses the default marker type.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DataPointMarkerType.Square">
            <summary>
            Uses a square shape for the data point marker.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DataPointMarkerType.Diamond">
            <summary>
            Uses a diamond shape for the data point marker.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DataPointMarkerType.Circle">
            <summary>
            Uses a circle shape for the data point marker.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DataPointMarkerType.Triangle">
            <summary>
            Uses a triangle shape for the data point marker.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DataPointMarkerType.X">
            <summary>
            Uses an X shape for the data point marker.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DataPointMarkerType.Plus">
            <summary>
            Uses a '+' shape for the data point marker.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.DataPointMarkerType.Minus">
            <summary>
            Uses a '-' shape for the data point marker.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphSeriesArrangeMode">
            <summary>
            Specifies how the graph series are arranged according to each other.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphSeriesArrangeMode.Overlapped">
            <summary>
            Specifies that the series are overlapped.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphSeriesArrangeMode.Clustered">
            <summary>
            Specifies that the graph series are clustered. This value is applicable to Bar/Column charts only. 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphSeriesArrangeMode.Stacked">
            <summary>
            Specifies that the graph series are stacked.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GraphSeriesArrangeMode.Stacked100">
            <summary>
            Specifies that the graph series are stacked so that the data points from different series show a relative to each other value.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphSeriesCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.GraphSeries"/> objects.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.LegendItem">
            <summary>
            Specifies the legend for the graph series.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LegendItem.ConditionalFormatting">
            <summary>
            Gets the collection of the conditional formatting rules, associated with the item's style.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LegendItem.MarkConditionalFormatting">
            <summary>
            Gets the collection of the conditional formatting rules, associated with the mark style.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LegendItem.Format">
            <summary>
            Gets or sets the format for the legend value.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LegendItem.Value">
            <summary>
            Specifies the text or expression which is displayed in the legend
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LegendItem.Style">
            <summary>
            Specifies the legend item's style.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LegendItem.MarkStyle">
            <summary>
            Specifies the legend item's mark style.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.LineDataPointLabelAlignment">
            <summary>
            Specifies how to align the labels for the data points of the scatter series: <see cref="T:Telerik.Reporting.IScatterSeries"/>.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.LineDataPointLabelAlignment.Left">
            <summary>
            Labels on the left of each data point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.LineDataPointLabelAlignment.Right">
            <summary>
            Labels on the right of each data point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.LineDataPointLabelAlignment.Above">
            <summary>
            Labels above each data point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.LineDataPointLabelAlignment.Below">
            <summary>
            Labels below each data point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.LineDataPointLabelAlignment.Center">
            <summary>
            Labels in the middle of each data point.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.LineSeries">
            <summary>
            Represents a <see cref="T:Telerik.Reporting.LineSeries"/> in which the data points are connected with a line.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.LineSeries.#ctor">
            <summary>
            Creates an instance of the <see cref="T:Telerik.Reporting.LineSeries"/>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LineSeries.ConditionalFormatting">
            <summary>
            Gets the <see cref="P:Telerik.Reporting.LineSeries.ConditionalFormatting"/> rules which are applied on the series' style.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LineSeries.Size">
            <summary>
            Gets or sets an expression that defines the size of the markers. Use this property to 
            create a Bubble like charts.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LineSeries.MinimumSize">
            <summary>
            Gets or sets a value that defines the minimum size of the markers. Use this property to 
            create a Bubble like charts.
            </summary>
            <value>
            The minimum size of the markers/bubbles.
            Set to <see cref="F:System.Double.NaN"/> for the value to be defined at run time according to the data. 
            The default value is <see cref="F:System.Double.NaN"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.LineSeries.MaximumSize">
            <summary>
            Gets or sets a value that defines the maximum size of the markers. Use this property to 
            create a Bubble like charts.
            </summary>
            <value>
            The maximum size of the markers/bubbles. 
            Set to <see cref="F:System.Double.NaN"/> for the value to be defined at run time according to the data. 
            The default value is <see cref="F:System.Double.NaN"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.LineSeries.SmoothLine">
            <summary>
            Gets or sets a value indicating how to connect the data points: with a smooth or
            straight lines.
            </summary>
            <remarks>
            When the <b>SmoothLine</b> is enabled the data points are connected with Bezier curves.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.LineSeries.LineType">
            <summary>
            Gets or sets a value indicating how to connect the data points: with smooth,
            straight or stepped lines.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LineSeries.LineStyle">
            <summary>
            Gets the style applied to the line that connects the data points of this series.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LineSeries.MissingValuesLineStyle">
            <summary>
            Gets the style applied to the line that connects the points on both sides of a data point with a missing value.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LineSeries.MarkerType">
            <summary>
            Gets or sets the shape of the marker.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LineSeries.MarkerSize">
            <summary>
            Gets or sets the size of the markers if no <see cref="P:Telerik.Reporting.LineSeries.Size"/> is specified;
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LineSeries.MarkerMinSize">
            <summary>
            Gets or sets the size of the markers for the minimum value of the <see cref="P:Telerik.Reporting.LineSeries.Size"/> property.
            </summary>
            <remarks>
            Use the <b>MarkerMinSize</b> and <see cref="P:Telerik.Reporting.LineSeries.MarkerMaxSize"/> properties in conjunction with the <see cref="P:Telerik.Reporting.LineSeries.Size"/> property
            to create a Bubble chart;
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.LineSeries.MarkerMaxSize">
            <summary>
            Gets or sets the size for the maximum value of the <see cref="P:Telerik.Reporting.LineSeries.Size"/> property.
            </summary>
            <remarks>
            Use the <b>MarkerMinSize</b> and <see cref="P:Telerik.Reporting.LineSeries.MarkerMaxSize"/> properties in conjunction with the <see cref="P:Telerik.Reporting.LineSeries.Size"/> property
            to create a Bubble chart;
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.LineSeries.DataPointLabelAlignment">
            <summary>
            Gets or sets a value indicating how the labels of the data points to be aligned. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LineSeries.DataPointLabelOffset">
            <summary>
            Gets or sets the DataPointLabel offset, according the DataPointLabelPosition.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MergedDataPoints">
            <summary>
            Represents the settings necessary to determine if and by what algorithm to merge data points.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MergedDataPoints.MergeMode">
            <summary>
            Determines if and what presentation to be used for the data points merging.
            The merge algorithm is further specified by <see cref="P:Telerik.Reporting.MergedDataPoints.ThresholdMode"/> and <see cref="P:Telerik.Reporting.MergedDataPoints.ThresholdValue"/> complementary settings.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MergedDataPoints.ThresholdMode">
            <summary>
            Gets or sets the algorithm to be used when determining which data points to get merged.
            Each algorithm takes into account the value of the <see cref="P:Telerik.Reporting.MergedDataPoints.ThresholdValue"/> property as well.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MergedDataPoints.ThresholdValue">
            <summary>
            Gets or sets the threshold value when determining which data points to get merged.
            </summary>
            <remarks>
            Depending on the chosen <see cref="P:Telerik.Reporting.MergedDataPoints.ThresholdMode"/> this property might represent count, value, or percentage.
            It might be a string representing a number in invariant culture or an expression evaluating to a numeric value.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.MergedDataPoints.LegendItemLabel">
            <summary>
            Specifies the text which gets displayed as a label of the legend item corresponding with the resulting data point.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MergeMode">
            <summary>
            Represents the mode of data points merging.
            The merge algorithm is further specified by complementary settings.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.MergeMode.None">
            <summary>
            No data slices merge should be applied
            </summary>
        </member>
        <member name="F:Telerik.Reporting.MergeMode.SingleSlice">
            <summary>
            Some data slices get merged based on further settings
            </summary>
        </member>
        <member name="T:Telerik.Reporting.OhlcMarks">
            <summary>
            Represents the vertical indicators of the financial (stock) series.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.OhlcMarks.#ctor">
            <summary>
            Creates an instance of the OhlcMarks
            </summary>
        </member>
        <member name="P:Telerik.Reporting.OhlcMarks.Open">
            <summary>
            Gets or sets an expression that defines the <b>Open</b> point for an OHLC data point in a <see cref="T:Telerik.Reporting.CartesianCoordinateSystem"/>
            </summary>
        </member>
        <member name="P:Telerik.Reporting.OhlcMarks.High">
            <summary>
            Gets or sets an expression that defines the <b>High</b> point for an OHLC data point in a <see cref="T:Telerik.Reporting.CartesianCoordinateSystem"/>
            </summary>
        </member>
        <member name="P:Telerik.Reporting.OhlcMarks.Low">
            <summary>
            Gets or sets an expression that defines the <b>Low</b> point for an OHLC data point in a <see cref="T:Telerik.Reporting.CartesianCoordinateSystem"/>
            </summary>
        </member>
        <member name="P:Telerik.Reporting.OhlcMarks.Close">
            <summary>
            Gets or sets an expression that defines the <b>Close</b> point for an OHLC data point in a <see cref="T:Telerik.Reporting.CartesianCoordinateSystem"/>
            </summary>
        </member>
        <member name="T:Telerik.Reporting.OhlcSeries">
            <summary>
            Represents a series of OHLC data points in a two-dimensional Cartesian coordinate system. Not supported in polar coordinate system.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.OhlcSeries.#ctor">
            <summary>
            Creates an instance of the series
            </summary>
        </member>
        <member name="P:Telerik.Reporting.OhlcSeries.Y">
            <summary>
            Gets or sets a value indicating the four vertical indicators of the series (OHLC). 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.OhlcSeries.DataPointLabelAlignment">
            <summary>
            Gets or sets a value indicating how the labels of the data points to be aligned. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.OhlcSeries.DataPointLabelOffset">
            <summary>
            Gets or sets the DataPointLabel offset, according the DataPointLabelPosition.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.OhlcSeries.MarkerType">
            <summary>
            Gets or sets a value determining the series marker type - candlestick or bar. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.OhlcSeries.MinMarkerWidth">
            <summary>
            Gets or sets the width of the data point markers;
            </summary>
        </member>
        <member name="T:Telerik.Reporting.OhlcMarkerType">
            <summary>
            Determines the marker type in OHLC series
            </summary>
        </member>
        <member name="F:Telerik.Reporting.OhlcMarkerType.Candlestick">
            <summary>
            Creates a candlestick markers on data points
            </summary>
        </member>
        <member name="F:Telerik.Reporting.OhlcMarkerType.Bar">
            <summary>
            Creates a bar markers on data points
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RangeAreaSeries">
            <summary>
            Represents an <see cref="T:Telerik.Reporting.AreaSeries"/> with both start (X0, Y0) and end (Y, Y) values.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RangeBarSeries">
            <summary>
            Represents a <see cref="T:Telerik.Reporting.BarSeries"/> with both start (X0, Y0) and end (Y, Y) values.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ThresholdMode">
            <summary>
            Represents the behavior when determining which data points to get merged. 
            </summary>
            <remarks>
            Each mode requires accompanying threshold number in specific range.
            To compare and order the data points each data point gets associated with a value.
            This value gets evaluated from appropriate definition expression. 
            For example, the <see cref="T:Telerik.Reporting.BarSeries"/> data points value expression 
            is the <see cref="!:BarSeries.X"/> expression (<see cref="!:BarSeries.Y"/> when no X is available).
            </remarks>
        </member>
        <member name="F:Telerik.Reporting.ThresholdMode.Count">
            <summary>
            The threshold value should be an integer number determining how many data points 
            should be presented on their own (without being merged) at most. 
            The data points are first ordered by their value. All data points 
            appearing after the count of points determined by the threshold value get merged. 
            For example, in a set of 10 data points and threshold value of 3, 
            all but the top 3 data points will get merged.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.ThresholdMode.PercentageCount">
            <summary>
            The threshold value should be a decimal or integer number between 0 and 100 
            and represents a percentage of the count of the data points that should be presented 
            on their own (without being merged). The data points are first ordered by their value. 
            Then the count of the data points that are not merged is calculated as a percentage 
            of all data points count. For example, in a set of 10 data points and threshold value of 40, 
            all but the top 4 data points will get merged.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.ThresholdMode.PercentageValue">
            <summary>
            The threshold value should be a decimal or integer number between 0 and 100 
            and represents a percentage of the summary value of all data points. 
            Once the absolute threshold value gets calculated all data points having value 
            less than it get merged. For example, in a set of 10 data points with values from 1 to 10, 
            the summary value is 55. If the threshold value is 10, 
            it means the absolute threshold value is 55 * 10% = 5.5 . 
            This means that all data points with value smaller than 5.5 will get merged.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.ThresholdMode.Value">
            <summary>
            The threshold value should be a decimal or integer number representing the minimum value 
            that a data point should have in order to get presented on its own (not getting merged). 
            All data points having value less than the threshold value get merged. For example, 
            in a set of 10 data points with values from 1 to 10, if the threshold value is 8.5, 
            all data points having value less than 8.5 will get merged.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Group">
            <summary>
            Represents a class that defines a report group.
            </summary>
            <remarks>
            <para>
            The <B>Group</B> class represents a set of grouping criteria. It also
            acts as a logical holder of the 
            <see cref="T:Telerik.Reporting.GroupHeaderSection"/> and 
            <see cref="T:Telerik.Reporting.GroupFooterSection"/> of the group.
            </para>
            <para>
            The <B>Group</B> objects of a report reside in the component tray.
            </para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Group.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Group"/> class with default settings.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Group.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Group"/> class with the specified
            group header/footer creation option.
            </summary>
            <param name="createHeaderFooter">
            <B>true</B> to create a 
            <see cref="T:Telerik.Reporting.GroupHeaderSection"/> and a 
            <see cref="T:Telerik.Reporting.GroupFooterSection"/>; otherwise, 
            <B>false</B>. 
            </param>
        </member>
        <member name="P:Telerik.Reporting.Group.GroupKeepTogether">
            <summary>
            Set to FirstDetail to ensure that the group header and the first detail record 
            are printed on the same page of output, 
            or All to ensure that the entire group is printed on the same page of output. 
            If there is not enough space on the current page, then rendering will skip to the top of the next page.
            </summary>
            <remarks>
            When set to All, the PageBreak settings of the internal report sections get neglected 
            and no soft page breaks get produced.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Group.GroupHeader">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.GroupHeaderSection"/> 
            representing the group's header section.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.GroupHeaderSection"/> value that
            represents the group header section of the <B>Group</B>.
            </value>
            <remarks>
            <para>
            The Group header section is rendered <I>before</I> the detail 
            sections of the <B>Group</B>. Typically, this section will contain 
            report items that are bound to the data fields of the 
            <B>Group</B>'s grouping expressions.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Group.GroupFooter">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.GroupFooterSection"/> 
            representing the group's footer section.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.GroupFooterSection"/> value that
            represents the group footer section of the <B>Group</B>.
            </value>
            <remarks>
            <para>
            The Group footer section is rendered <I>after</I> the detail 
            sections of the <B>Group</B>.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Group.Report">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Report"/> 
            representing the group's owner report.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Report"/> value that
            represents the owner report of the <B>Group</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Group.BookmarkId">
            <summary>
            Gets or sets a bookmark id for this group. 
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the resulting id,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also. 
            When processed should evaluate to an unique value 
            for each processing instance of the group.
            Any duplicated occurrences at runtime get modified in order to avoid duplication in the resulting report.
            </value>
            <remarks>
            BookmarkId must be used along with <see cref="T:Telerik.Reporting.NavigateToBookmarkAction"/> interactive action
            in order to specify the target of the action.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Group.DocumentMapText">
            <summary>
            Gets or sets a text to be displayed for this group in the document map. 
            </summary>
            <remarks>When defined the document map displays nodes 
            that navigate to the instances of the group.</remarks>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Group.TocText">
            <summary>
            Gets or sets a text to be displayed for this group in the table of contents. 
            </summary>
            <remarks>When defined the table of contents displays nodes 
            that navigate to the instances of the group.</remarks>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Group.Visible">
            <summary>
            Gets or sets a value indicating whether the group is displayed. 
            </summary>
            <value>
            <B>true</B> if the group is displayed; otherwise,
            <B>false</B>. The default is <B>true</B>.
            </value>
        </member>
        <member name="T:Telerik.Reporting.GroupCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GroupCollectionConverter">
            <summary>
            ExternalStyleSheetCollectionConverter
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GroupFooterSection">
            <summary>
            Represents a group footer section. Group footers are displayed at the
            end of a group. Group headers and footers are unified by the
            <see cref="T:Telerik.Reporting.Group"/> class.
            </summary>	
        </member>
        <member name="T:Telerik.Reporting.GroupSection">
            <summary>
            Base abstract class for group sections. 
            <see cref="T:Telerik.Reporting.GroupHeaderSection"/> and 
            <see cref="T:Telerik.Reporting.GroupFooterSection"/> inherit from this
            class.
            </summary>    
        </member>
        <member name="P:Telerik.Reporting.GroupSection.Group">
            <summary>
            Gets the <see cref="T:Telerik.Reporting.Group"/> object associated
            with this section.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Group"/> object that this section 
            belong to.
            </value>
        </member>
        <member name="P:Telerik.Reporting.GroupSection.PrintOnEveryPage">
            <summary>
            Indicates whether the section should be printed on every page
            that the group occupies.
            </summary>
            <value>
            A <I>boolean</I> value indicating whether the section should be 
            printed on every page that the group occupies.
            </value>
        </member>
        <member name="M:Telerik.Reporting.GroupFooterSection.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.GroupFooterSection"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GroupFooterSection.PrintAtBottom">
            <summary>
            Gets or sets a value indicating whether the rendering engine should
            print the section at the bottom of the page that contains the section.
            </summary>
            <value>
            A <I>boolean</I> value indicating whether the rendering engine should
            print the section at the bottom of the page that contains the section.
            </value>
            <remarks>When false, the section will be printed right after the preceeding
            section. When true, the section will be printed at the bottom of the
            page that contains the section. All subsequent sections will be moved
            on the next page. If there is no preceeding section on the page,
            the section will print on the top of the page.</remarks>
        </member>
        <member name="T:Telerik.Reporting.GroupHeaderSection">
            <summary>
            Represents a group header section. Group headers are displayed at the
            beginning of a group. Group headers and footers are unified by the
            <see cref="T:Telerik.Reporting.Group"/> class.
            </summary>    
        </member>
        <member name="M:Telerik.Reporting.GroupHeaderSection.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.GroupHeaderSection"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Grouping">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GroupingCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GroupKeepTogether">
            <summary>
            <B>GroupKeepTogether</B> applies to a group and has similar to the 
            <see cref="P:Telerik.Reporting.ReportSection.KeepTogether"/> meaning, 
            but for the whole group. It indicates whether the rendering engine 
            should try to render the <I>whole group</I> on a single page, the 
            <I>group header plus the first detail</I> on a single page, or leave
            the group flow as it is. If <B>GroupKeepTogether</B> is set to 
            <B>FirstDetail</B> -- the group header and at least one detail in this 
            group should be on the same page; if set to <B>All</B> -- the whole 
            group should be on a single page. The following rule applies: the 
            rendering engine will try to render the group as specified, but if 
            there is not enough space on the current page, the group is moved to 
            the next page and it continues as long as it needs.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GroupKeepTogether.None">
            <summary>
            The rendering engine will leave the group flow as it is.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GroupKeepTogether.FirstDetail">
            <summary>
            The rendering engine should try to keep the <I>group header and at 
            least 1 detail</I> on the same page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.GroupKeepTogether.All">
            <summary>
            The rendering engine should try to keep the <I>whole</I> group on 
            the same 
            page. This value has higher priority compared with the PageBreak property 
            of the contained report sections.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.HtmlTextBox">
            <summary>
            Represents a html text box report item. 
            </summary>    
        </member>
        <member name="P:Telerik.Reporting.IDesignTimeExpressionEditable.Value">
            <summary>
            Gets or sets the expression value.
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.HtmlTextBox.Value">
            <summary>
            Gets or sets the current text in the text box.
            </summary>
            <value>
            A <see cref="T:System.String"/> that starts with "=" is interpreted as expression 
            to calculate the value of the current TextBox;
            otherwise - literal string.
            </value>
        </member>
        <member name="P:Telerik.Reporting.HtmlTextBox.KeepTogether">
            <summary>
            Gets or sets a value indicating whether the rendering engine should
            try to keep the <see cref="T:Telerik.Reporting.HtmlTextBox"/> on one page
            if possible.
            </summary>
            <value>
            A <I>boolean</I> value indicating whether the rendering engine should
            try to keep the <see cref="T:Telerik.Reporting.HtmlTextBox"/> on one page
            if possible.
            </value>
        </member>
        <member name="P:Telerik.Reporting.HtmlTextBox.CanGrow">
            <summary>
            Gets or sets a value indicating whether the Text Item can grow 
            vertically. 
            </summary>
            <value>
            <B>true</B> if the Text Item can grow vertically; otherwise 
            <B>false</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.HtmlTextBox.CanShrink">
            <summary>
            Gets or sets a value indicating whether the Text Item can shrink 
            vertically. 
            </summary>
            <value>
            <B>true</B> if the Text Item can shrink vertically; otherwise 
            <B>false</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.HtmlTextBox.Culture">
            <summary>
            Gets or sets the culture information associated with the Text Item.
            </summary>
            <value>
            A <see cref="T:System.Globalization.CultureInfo"/> representing the 
            culture supported by the <see cref="T:Telerik.Reporting.TextItemBase"/>. 
            </value>
        </member>
        <member name="M:Telerik.Reporting.ActionTargetCollection.AddRange(Telerik.Reporting.IActionTarget[])">
            <summary>
            Adds multiple <see cref="T:Telerik.Reporting.IActionTarget"/> objects to the collection.
            </summary>
            <param name="targets">An array of <see cref="T:Telerik.Reporting.IActionTarget"/> objects 
            to add to the list.</param>
        </member>
        <member name="T:Telerik.Reporting.CustomAction">
            <summary>
            Represents an interactive action that contains parameters that will be evaluated during the report item processing.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.IAction">
            <summary>
            Represents an interactive action associated with a report item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.CustomAction.Parameters">
            <summary>
            Gets the collection of name-value parameter pairs defined for this custom action.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.NavigateToBookmarkAction">
            <summary>
            Represent an interactive action that navigates the report viewer 
            to a predefined bookmark in the same report.
            </summary>
            <remarks>
            <para>Use this action to specify an interactive action on a report item 
            that navigates the report viewer to an item with defined <b>BookmarkId</b>
            in the same report.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.NavigateToBookmarkAction.TargetBookmarkId">
            <summary>
            Gets or sets the target bookmark of the action.
            </summary>
            <remarks>
            <para>Use this property to specify the value of the target bookmark.
            This property accepts expressions.</para>
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.NavigateToReportAction">
            <summary>
            Represent an interactive action that navigates the report viewer to another report.
            </summary>
            <remarks>
            Use this action to specify an interactive action on a report item that navigates the 
            report viewer to another report (drillthrough). Report parameter values may be passed
            to the target report.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.NavigateToReportAction.ReportDocumentType">
            <summary>
            Gets or sets the type name of the target report.
            </summary>
            <remarks>
            <para>Use this property to specify the type name of the target report of the action.
            Must be the assembly qualified name of the <see cref="T:System.Type"/> of the report.</para>
            <para>The target type should implement the 
            <see cref="T:Telerik.Reporting.IReportDocument"/> interface 
            and should have default (parameterless) constructor. 
            The default constructor is used from the reporting engine to create a report
            instance when the action is triggered.</para>
            <para>This property accepts expressions.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.NavigateToReportAction.Parameters">
            <summary>
            Determines the report parameters that are passed to the target report when the
            action is triggered.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.NavigateToReportAction.ReportSource">
            <summary>
            Specifies the <see cref="T:Telerik.Reporting.ReportSource"/> for the action.
            </summary>
            <seealso cref="T:Telerik.Reporting.ReportSource"/>
            <seealso cref="T:Telerik.Reporting.UriReportSource"/>
            <seealso cref="T:Telerik.Reporting.TypeReportSource"/>
            <seealso cref="T:Telerik.Reporting.InstanceReportSource"/>
            <seealso cref="T:Telerik.Reporting.XmlReportSource"/>
        </member>
        <member name="T:Telerik.Reporting.NavigateToUrlAction">
            <summary>
            Represent an interactive action that opens a URL.
            </summary>
            <remarks>
            <para>Use this action to specify an interactive action on a report item 
            that opens a URL.</para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.NavigateToUrlAction.#ctor">
            <summary>
            Creates a new instance of NavigateToUrlAction class
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Telerik.Reporting.NavigateToUrlAction.Url" -->
        <member name="P:Telerik.Reporting.NavigateToUrlAction.Target">
            <summary>
            Gets or sets the URL target.
            </summary>
            <remarks>
            Use this property to specify a URL target. 
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.UrlTarget">
            <summary>
            Represents NavigateToUrlAction target types. 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.UrlTarget.NewWindow">
            <summary>
            Open in new window
            </summary>
        </member>
        <member name="F:Telerik.Reporting.UrlTarget.SameWindow">
            <summary>
            Open in the same window
            </summary>
        </member>
        <member name="T:Telerik.Reporting.SortingAction">
            <summary>
            Represents an interactive action that toggles sorting of one or more data items and groups.
            </summary>
            <remarks>
            <para>Use this action to specify an interactive action on a report item that 
            triggers sorting to one or more items / groups.</para>
            <para>When this action is set on an item, the item is rendered with a sort
            mark in all report viewers. Clicking on that mark triggers the action.</para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.SortingAction.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Reporting.SortingAction"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SortingAction.#ctor(Telerik.Reporting.IActionTarget,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Reporting.SortingAction"/> class
            with the specified sorting target and sorting expression.
            </summary>
            <param name="target">The <see cref="P:Telerik.Reporting.ReportItemBase.Name"/> 
            <see cref="P:GroupBase.Name"/> 
            of the sorting target.</param>
            <param name="direction">The initial sorting mark of the item.</param>
        </member>
        <member name="M:Telerik.Reporting.SortingAction.#ctor(Telerik.Reporting.IActionTarget[],System.String)">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Reporting.SortingAction"/> class
            with specified sorting targets and sorting expression.
            </summary>
            <param name="targets">An enumerable of <see cref="P:Telerik.Reporting.ReportItemBase.Name"/> 
            <see cref="P:GroupBase.Name"/> 
            of the sorting targets.</param>
            <param name="direction">The initial sorting mark of the item.</param>
        </member>
        <member name="P:Telerik.Reporting.SortingAction.Targets">
            <summary>
            Gets the list of sort targets which data will be sort
            when the action is triggered.
            </summary>
            <remarks>
            <para>Use this property to add / remove sorting targets of the action. 
            To add an table group as sort target you need to add / remove
            the value of the <see cref="P:GroupBase.Name"/> 
            <see cref="P:GroupBase.Name"/> of the target respectively. 
            The used names must be unique in the report scope.</para>
            <para>The items in this list do not accept expressions.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.SortingAction.SortingExpression">
            <summary>
            Gets or sets an expression that defines the sort field
            </summary>
            <remarks>
            Sorting expression sort the data that is displayed to the user 
            after the data is retrieved from the data source.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.ToggleVisibilityAction">
            <summary>
            Represents an interactive action that toggles the visibility of one or more items / groups.
            </summary>
            <remarks>
            <para>Use this action to specify an interactive action on a report item that 
            toggles the visibility of one or more items / groups (drilldown).</para>
            <para>When this action is set on an item, the item is rendered with an expand / collapse
            mark in all report viewers. Clicking on that mark triggers the action.</para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.ToggleVisibilityAction.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Reporting.ToggleVisibilityAction"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ToggleVisibilityAction.#ctor(Telerik.Reporting.IActionTarget,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Reporting.ToggleVisibilityAction"/> class
            with the specified toggle visibility target and initial toggle mark state.
            </summary>
            <param name="target">The <see cref="P:Telerik.Reporting.ReportItemBase.Name"/> 
            <see cref="P:GroupBase.Name"/> 
            of the toggle visibility target.</param>
            <param name="displayExpandedMark">The initial toggle visibility mark of the item.</param>
        </member>
        <member name="M:Telerik.Reporting.ToggleVisibilityAction.#ctor(Telerik.Reporting.IActionTarget[],System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Reporting.ToggleVisibilityAction"/> class
            with specified toggle visibility targets and initial toggle mark state.
            </summary>
            <param name="targets">An enumerable of <see cref="P:Telerik.Reporting.ReportItemBase.Name"/> 
            <see cref="P:GroupBase.Name"/> 
            of the toggle visibility targets.</param>
            <param name="displayExpandedMark">The initial toggle visibility mark of the item.</param>
        </member>
        <member name="P:Telerik.Reporting.ToggleVisibilityAction.Targets">
            <summary>
            Gets the list of toggle targets which visibility will be toggled
            when the action is triggered.
            </summary>
            <remarks>
            <para>Use this property to add / remove toggle targets of the action. 
            To add an item / report group / table group as toggle target you need to add / remove
            the value of the <see cref="P:Telerik.Reporting.ReportItemBase.Name"/> / <see cref="P:GroupBase.Name"/> 
            <see cref="P:GroupBase.Name"/> of the target respectively. 
            The used names must be unique in the report scope.</para>
            <para>The items in this list do not accept expressions.</para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ToggleVisibilityAction.DisplayExpandedMark">
            <summary>
            Determines if the item exposing the action will be rendered initially with 
            expanded or with collapsed mark.
            </summary>
            <remarks>
            A <b>true</b> value will determine an expanded mark to be rendered (minus sign).
            A <b>false</b> value will determine an collapsed mark to be rendered (plus sign).
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.IReportDocument">
            <summary>
            Represents a report document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IReportDocument.Reports">
            <summary>
            Gets the reports contained in the document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IReportDocument.ReportSources">
            <summary>
            Gets the collection of report sources take part in this ReportBook.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IReportDocument.DocumentName">
            <summary>
            Gets or sets the name of the document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IReportDocument.PageSettings">
            <summary>
            Gets or sets the page setting for the document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IReportDocument.ReportParameters">
            <summary>
            Gets the parameters for the document.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.IReportParameter">
            <summary>
            Represents a report parameter.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IReportParameter.Name">
            <summary>
            Gets or sets the name of the parameter. Used to access the parameter.
            </summary>
            <remarks>
            Parameter names must be unique in the context of a single report.
            The name must be a valid identifier - may contain only digits (0-9), letters (a-z, A-Z), 
            and underscore sign (_). Must begin with a letter or underscore.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.IReportParameter.Type">
            <summary>
            Gets or sets the data type of the parameter.
            </summary>
            <remarks>
            Determines the type of the values. Acceptable values for each type are listed in <see cref="T:Telerik.Reporting.ReportParameterType"/>.
            The default parameter type is <see cref="F:Telerik.Reporting.ReportParameterType.String"/>.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.IReportParameter.Value">
            <summary>
            Gets or sets the value of the parameter. Can be an Expression that 
            evaluates to an object, value of the allowed types, 
            or <see cref="T:System.Collections.IEnumerable"/> containing values of the allowed types.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IReportParameter.Mergeable">
            <summary>
            Gets or sets a value indicating whether this parameter should be 
            merged with identical parameters from other reports when this report 
            is part of a <see cref="T:Telerik.Reporting.ReportBook"/>.
            </summary>
            <remarks>
            Controls parameter merging in <see cref="T:Telerik.Reporting.ReportBook"/>. 
            The default value of the <b>Mergeable</b> property is <b>true</b>. 
            Set the <b>Mergeable</b> property to <b>false</b> if you want to prevent a parameter 
            from being merged with its equivalent ones.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.IReportParameter.Text">
            <summary>
            Gets or sets the text for the parameter's automatic UI displayed in the report viewer.
            </summary>
            <remarks>
            The Text property specifies the text for the parameter to be displayed 
            in the report viewer as prompt to the end user. 
            If value for the property is not provided the <see cref="P:Telerik.Reporting.IReportParameter.Name"/> 
            of the parameter is used.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.IReportParameter.Visible">
            <summary>
            Determines whether automatic user interface (UI) prompting for values
            to be generated for the parameter.
            </summary>
            <remarks>
            Specifies whether the parameter will have UI in the parameters area.
            When at least one report parameter has the <b>Visible</b> property turned on, 
            a parameter area is shown as part of the report viewer. 
            If this property is set to <b>false</b>, the parameter must be populated 
            programmatically or at design time.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.IReportParameter.MultiValue">
            <summary>
            Determines if the parameter can hold more then one value.
            </summary>
            <remarks>
            If the value is set to <b>true</b> as a valid value of the parameter is accepted
            or <see cref="T:System.Collections.IEnumerable"/> of values 
            of the specified <see cref="P:Telerik.Reporting.ReportParameter.Type"/> of the parameter.
            Parameters with <b>MultiValue</b> turned on are mainly used with the <b>IN</b> logical operator.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.IReportParameter.AllowNull">
            <summary>
            Determines if the parameter allows no value to be passed from it's
            editor.
            </summary>
            <remarks>
            Only if this property is set to <b>false</b> <c>null</c> (
            <c>Nothing</c> in VB) are considered as valid values of the
            parameter.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.IReportParameter.AllowBlank">
            <summary>
            Gets or sets a value that indicates whether an empty string is a valid value for the parameter.
            Only for parameters of <see cref="P:Telerik.Reporting.ReportParameter.Type"/> <b>String</b>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IReportParameter.AvailableValues">
            <summary>
            Gets an object that defines a set of valid values the parameter can accept from.
            </summary>
            <remarks>
            The available values, or valid values, are a set of predefined values 
            which are acceptable as value of the parameter. 
            Each available value may have label that will be displayed if the parameter is visible.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.IReportParameter.AutoRefresh">
            <summary>
            Determines whether to trigger the report preview after changing the value for a parameter.
            Applies only for visible parameters.
            </summary>
            <remarks>
            If this property is set to <b>true</b>, the report viewer will trigger
            the report preview automatically when the parameter value is changed. 
            The parameter should be visible in order to auto preview the report.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.IResourceResolutionService">
            <summary>
            Provides an interface for resolving resources.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ItemEventArgs">
            <summary>
            Provides data for the 
            <see cref="E:Telerik.Reporting.ReportItemBase.ItemAdded"/> and
            <see cref="E:Telerik.Reporting.ReportItemBase.ItemRemoved"/> events. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ItemEventArgs.#ctor(Telerik.Reporting.ReportItemBase)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.ItemEventArgs"/> class with the
            specified item that is added or removed.
            </summary>
            <param name="item">
            A <see cref="T:Telerik.Reporting.ReportItemBase"/> that is the item
            being added or removed.
            </param>
        </member>
        <member name="P:Telerik.Reporting.ItemEventArgs.Item">
            <summary>
            Gets the report item that is added/removed.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.ReportItemBase"/> that is the item
            being added or removed.
            </value>
        </member>
        <member name="T:Telerik.Reporting.ItemEventHandler">
            <summary>
            Handles the events that occur when items are being added to or removed
            from an items collection.
            </summary>
            <param name="sender">
            The item whose collection is being modified.
            </param>
            <param name="e">
            An object of the <see cref="T:Telerik.Reporting.ItemEventArgs"/> class 
            that contains the item that is being added or removed.
            </param>
        </member>
        <member name="T:Telerik.Reporting.DistanceUnitType">
            <summary>
            Represents the available distance unit types.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Extent">
            <summary>
            Class defining the Minimum and Maximum latitudes and longitudes in WGS84 coordinates.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Extent.Minimum">
            <summary>
            The TopLeft corner of the bounding box
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Extent.Maximum">
            <summary>
            The BottomRight corner of the bounding box
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraticuleLine">
            <summary>
            Represents a graticule line.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraticuleLine.Style">
            <summary>
            Specifies the style of the graticule line.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GraticuleLine.Step">
            <summary>
            Specifies the step of the graticule line.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.EsriShapeFileSourceType">
            <summary>
            Gets the spatial data for the <see cref="T:Telerik.Reporting.ShapeMapSeries"/> from an ESRI Shapefile.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.SpatialDataSourceTypeBase">
            <summary>
            Specifies the source that the <see cref="T:Telerik.Reporting.ShapeMapSeries"/> will use to obtain the spatial data.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.EsriShapeFileSourceType.FileName">
            <summary>
            Gets or sets the expression that defines the <b>name of the shape file</b> used to get the spatial coordinates for the data points.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.EsriShapeFileSourceType.RelationPairs">
            <summary>
            Gets or sets the expressions that match the analytical data set fields to the spatial data fields.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GeoLocationMapGroup">
            <summary>
            Represents a group by a geographical location (usually region, country, city, etc.) in a <see cref="T:Telerik.Reporting.Map"/> item.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapGroupBase">
            <summary>
            A base class for the groups of a <see cref="T:Telerik.Reporting.Map"/> report item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapGroupBase.Visible">
            <summary>
            Gets or sets a value indicating whether the Map group is displayed. 
            </summary>
            <value>
            <B>true</B> if the table group is displayed; otherwise,
            <B>false</B>. The default is <B>true</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.GeoLocationMapGroup.Location">
            <summary>
            Gets or sets a value that represents the location of the data points.
            </summary>
            <remarks>
            In order a <see cref="T:Telerik.Reporting.Map"/> item to be able to resolve the actual geographic location a <see cref="T:Telerik.Reporting.ILocationProvider"/> should be configured.
            </remarks>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.GeoLocationMapGroup.ChildGroups">
            <summary>
            A collection of <b>GeoLocationMapGroup</b>s that defines the children of a GeoLocationMapGroup group.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GeoLocationMapGroupCollection">
            <summary>
            A collection of <B>GeoLocationMapGroup</B>s groups.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapGroup">
            <summary>
            Represents a series group in a <see cref="T:Telerik.Reporting.Map"/> item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapGroup.Action">
            <summary>
            Gets or sets an interactive action associated with this graph group. 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapGroupBaseCollection">
            <summary>
            A collection of <B>MapGroupBase</B> groups.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapGroupCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.MapGroup"/>s.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ShapeMapGroup">
            <summary>
            Represents a group used in a <see cref="T:Telerik.Reporting.ShapeMapSeries"/> that allows to set a shape source type for any group instance.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ShapeMapGroup.ChildGroups">
            <summary>
            A collection of <B>ShapeFileMapGroup</B>s that defines the children of a ShapeFileMapGroup group.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ShapeMapGroupCollection">
            <summary>
            A collection of <B>GeoLocationMapGroup</B>s groups.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.WellKnownTextSourceType">
            <summary>
            Gets the spatial data for the <see cref="T:Telerik.Reporting.ShapeMapSeries"/> from an Well-known text string or its binary (WKB) representation.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WellKnownTextSourceType.SpatialField">
            <summary>
            Gets or sets an expression that defines the <b>spatial coordinates</b> for the data points.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.IExtent">
            <summary>
            Represents the extent of the <see cref="T:Telerik.Reporting.Map"/> report item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IExtent.LatitudeMin">
            <summary>
            Gets or sets the minimum latitude coordinate of the extent.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IExtent.LatitudeMax">
            <summary>
            Gets or sets the maximum latitude coordinate of the extent.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IExtent.LongitudeMin">
            <summary>
            Gets or sets the minimum longitude coordinate of the extent.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IExtent.LongitudeMax">
            <summary>
            Gets or sets the maximum longitude coordinate of the extent.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Location">
            <summary>
            Defines a point in the geographic coordinate system.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Location.Latitude">
            <summary>
            The latitude of the location.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Location.Longitude">
            <summary>
            The longitude of the location.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.BingLocationProvider">
            <summary>
            A class used to match the addresses or locations with geographical coordinates (latitude and longitude) using the Bing™ Maps REST API.    /// 
            Requires a valid Bing Maps Key that could be obtained from "http://www.microsoft.com/maps/create-a-bing-maps-key.aspx"
            </summary>
            <remarks>The more detailed information is used in the query, the more accurate the results will be.</remarks>
            <remarks>For example, if you are looking for Vienna, Austria, you need to provide the country name as well, because otherwise the first returned result would be Vienna, VA, United States</remarks>
            <remarks>Bing™ Maps geocoding service is able to determine the relation between the query arguments - i.e. the results will be the same if you search for either "Vienna, Austria" or "Austria, Vienna"</remarks>
        </member>
        <member name="T:Telerik.Reporting.WebLocationProvider">
            <summary>
            An abstract class for all the web-based location service providers    
            </summary>
        </member>
        <member name="T:Telerik.Reporting.LocationProvider">
            <summary>
            An abstract class for the location providers that can be used for geocoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ILocationProvider">
            <summary>
            Represents a common interface for all location providers used for geocoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.IWebLocationProvider">
            <summary>
            Represents a common interface for all the web-based location service providers    
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IWebLocationProvider.ClientToken">
            <summary>
            The client token that authenticates the request.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IWebLocationProvider.ServerUrl">
            <summary>
            The Url of the location server.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebLocationProvider.ClientToken">
            <summary>
            The client token that authenticates the request.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.WebLocationProvider.ServerUrl">
            <summary>
            The Url of the location server
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapQuestLocationProvider">
            <summary>
            A class used to match the addresses or locations with geographical coordinates (latitude and longitude) using the MapQuest Licensed Geocoding API.
            Requires a valid MapQuest AppKey that could be obtained from "http://developer.mapquest.com/web/products/open"
            </summary>
            <remarks>The more detailed information is used in the query, the more accurate the results will be.</remarks>
            <remarks>For example, if you are looking for Vienna, Austria, you need to provide the country name as well, because otherwise the first returned result would be Vienna, GA, United States</remarks>
            <remarks>Please note that the query arguments order is of a huge significance.</remarks>
            <remarks>In the example above if you switch the query arguments to "Austria, Vienna", the service will return "Vienna, Dooly County, GA, USA"  </remarks>
        </member>
        <member name="T:Telerik.Reporting.MapQuestOpenAPILocationProvider">
            <summary>
            A class used to match the addresses or locations with geographical coordinates (latitude and longitude) using the MapQuest Open Geocoding API Web Service: http://developer.mapquest.com/web/products/open/geocoding-service
            Requires a valid MapQuest AppKey that could be obtained from "http://developer.mapquest.com/web/products/open"
            </summary>
            <remarks>The more detailed information is used in the query, the more accurate the results will be.</remarks>
            <remarks>For example, if you are looking for Vienna, Austria, you need to provide the country name as well, because otherwise the first returned result would be Vienna, GA, United States</remarks>
            <remarks>Please note that the query arguments order is of a huge significance.</remarks>
            <remarks>In the example above if you switch the query arguments to "Austria, Vienna", the service will return "Vienna, Dooly County, GA, USA"  </remarks>
        </member>
        <member name="T:Telerik.Reporting.Map">
            <summary>
            Use the Map item to add maps to a report.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Map.SeriesGroups">
            <summary>
            Gets the hierarchy of <see cref="T:Telerik.Reporting.MapGroup"/>s that define the series for the current <B>Map</B>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Map.GeoLocationGroups">
            <summary>
            Gets the hierarchy of <see cref="T:Telerik.Reporting.MapGroupBase"/>s that define the geographical location of the data points for the current <B>Map</B>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Map.Series">
            <summary>
            Gets the collection of <see cref="T:Telerik.Reporting.MapSeriesBase"/> defined for the current <B>Map</B>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Map.Extent">
            <summary>
            Gets the requested extent in geographic coordinates.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Map.TileProvider">
            <summary>
            Gets or sets the tile provider.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Map.LocationProvider">
            <summary>
            Gets or sets the location provider.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Map.Projection">
            <summary>
            Gets or sets the projection.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Map.Legends">
            <summary>
            Gets the collection of <see cref="T:Telerik.Reporting.MapLegend"/> defined for the current <B>Map</B>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Map.Titles">
            <summary>
            Gets the collection of <see cref="T:Telerik.Reporting.MapTitle"/> defined for the current <B>Map</B>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Map.PlotAreaStyle">
            <summary>
            Gets the style of the plot area.
            </summary>
            <remarks>
            The plot area of a <B>Graph</B> is the area where all series including the data points
            and labels are rendered. The plot area also contains all grid lines if defined.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Map.Parallels">
            <summary>
            Specifies the parallels graticule line.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Map.Meridians">
            <summary>
            Specifies the meridians graticule line.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Map.Culture">
            <summary>
            Gets or sets the culture information associated with the Graph item. 
            </summary>
            <value>
            A <see cref="T:System.Globalization.CultureInfo"/> representing the 
            culture supported by the <see cref="T:Telerik.Reporting.Graph"/>. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Map.ColorPalette">
            <summary>
            Gets or sets the color palette used for map series. 
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.IColorPalette"/> implementation 
            representing color palette used for map series. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Map.ScaleLegend">
            <summary>
            Specifies the map scale legend.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapSeriesBaseCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.MapSeriesBase"/> objects.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapItem.Bounds">
            <summary>
            Specifies the map item's bounds.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapItem.Location">
            <summary>
            Specifies the map item's location.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapItem.Size">
            <summary>
            Specifies the map item's size.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapItem.Top">
            <summary>
            Specifies the map item's top position.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapItem.Left">
            <summary>
            Specifies the map item's left position.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapItem.Width">
            <summary>
            Specifies the map item's width.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapItem.Height">
            <summary>
            Specifies the map item's height.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapItem.Style">
            <summary>
            Specifies the map item's style.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapItem.IsInsidePlotArea">
            <summary>
            Determines whether the map item is inside or outside the plot area.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapLegend">
            <summary>
            Specifies the legend for the map.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapLegend.Title">
            <summary>
            Specifies the text for the legend's title.
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.MapLegend.TitleStyle">
            <summary>
            Specifies the <see cref="T:Telerik.Reporting.Drawing.Style"/> for the legend's title.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapLegend.Position">
            <summary>
            Specifies the position of the <see cref="T:Telerik.Reporting.MapLegend"/>.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapLegendCollection">
            <summary>
            A collection of <see cref="T:Telerik.Reporting.MapLegend"/> instances.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapRelationPair">
            <summary>
            Collection of relation pairs that match the fields from the Shapefile with the fields from the analytical data set.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.MapRelationPair.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Reporting.MapRelationPair"/> class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.MapRelationPair.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:Telerik.Reporting.MapRelationPair"/> class with passed arguments
            </summary>
            <param name="analyticalField">Field from the analytical data set</param>
            <param name="shapeFileField">Field from the ShapeFile data set</param>
        </member>
        <member name="P:Telerik.Reporting.MapRelationPair.AnalyticalField">
            <summary>
            An expression that defines the field from the <b>analytical data source</b> that will be matched with a field from the shape file bundle.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapRelationPair.ShapeFileField">
            <summary>
            An expression that defines the field from the shape file bundle that will be matched with a field from <b>analytical data source</b>.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapRelationPairCollection">
            <summary>
            A collection of <see cref="T:Telerik.Reporting.MapRelationPair"/>.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapScaleLegend">
            <summary>
            Specified the legend used to indicate the current map scale in various distance units.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.MapScaleLegend.#ctor">
            <summary>
            Initializes a <see cref="T:Telerik.Reporting.MapScaleLegend"/> instance.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapScaleLegend.ScaleUnits">
            <summary>
            Specifies in what units (metric, imperial, both) the map scale will be shown.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapScaleLegend.Width">
            <summary>
            Specifies the ScaleLegend's width.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapScaleLegend.Height">
            <summary>
            Specifies the ScaleLegend's height.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapScaleLegend.Style">
            <summary>
            Specifies the map scale container's style.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapScaleLegend.ItemStyle">
            <summary>
            Specifies the scale mark and text style.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapScaleLegend.Size">
            <summary>
            Specifies the map ScaleLegend's size.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapTitle">
            <summary>
            Represents a title for the map
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapTitle.Text">
            <summary>
            Specifies the text for the title.
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.MapTitle.Position">
            <summary>
            Specifies the position of <see cref="T:Telerik.Reporting.MapTitle"/>.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapTitleCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.MapTitle"/> objects.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.IProjection">
            <summary>
            Interface describing the representation model used to project the globe or celestial sphere on a surface
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MercatorProjection">
            <summary>
            A cylindrical map projection known also as Normal Mercator.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ColumnMapSeries">
            <summary>
            Represents a series of data points in the <see cref="T:Telerik.Reporting.Map"/> report item that displays embedded column charts as data points.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GraphMapSeries">
            <summary>
            Represents a series of data points in the <see cref="T:Telerik.Reporting.Map"/> report item that displays embedded charts as data points.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.PointMapSeries">
            <summary>
            Represents a series of data points in the <see cref="T:Telerik.Reporting.Map"/> report item that displays markers for the point location.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.LocationMapSeries">
            <summary>
            The base class for all the series that use <see cref="T:Telerik.Reporting.MapGroupBase"/> to obtain the coordinates of their data points.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapSeriesBase">
            <summary>
            The base class for the series of data points with labels in the <see cref="T:Telerik.Reporting.Map"/> report item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapSeriesBase.SeriesGroup">
            <summary>
            Gets or sets the <see cref="T:Telerik.Reporting.MapGroup"/> from the <see cref="P:Telerik.Reporting.Map.SeriesGroups"/> 
            hierarchy associated with this series.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.LocationMapSeries.GeoLocationGroup">
            <summary>
            Gets or sets the <see cref="T:Telerik.Reporting.GeoLocationMapGroup"/> from the <see cref="P:Telerik.Reporting.Map.GeoLocationGroups"/> 
            hierarchy associated with this series.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.PointMapSeries.Longitude">
            <summary>
            Gets or sets an expression that defines the <b>Longitude</b> coordinate for the data points.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.PointMapSeries.Latitude">
            <summary>
            Gets or sets an expression that defines the <b>Latitude</b> coordinate for the data points.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.PointMapSeries.Size">
            <summary>
            Gets or sets an expression that defines the size of the markers. Use this property to 
            create a Bubble like charts.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.PointMapSeries.MinimumSize">
            <summary>
            Gets or sets a value that defines the minimum size of the markers. Use this property to 
            create a Bubble like charts.
            </summary>
            <value>
            The minimum size of the markers/bubbles.
            Set to <see cref="F:System.Double.NaN"/> for the value to be defined at run time according to the data. 
            The default value is <see cref="F:System.Double.NaN"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.PointMapSeries.MaximumSize">
            <summary>
            Gets or sets a value that defines the maximum size of the markers. Use this property to 
            create a Bubble like charts.
            </summary>
            <value>
            The maximum size of the markers/bubbles. 
            Set to <see cref="F:System.Double.NaN"/> for the value to be defined at run time according to the data. 
            The default value is <see cref="F:System.Double.NaN"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.PointMapSeries.MarkerSize">
            <summary>
            Gets or sets the size of the markers if no <see cref="P:Telerik.Reporting.PointMapSeries.Size"/> is specified;
            </summary>
        </member>
        <member name="P:Telerik.Reporting.PointMapSeries.MarkerMinSize">
            <summary>
            Gets or sets the size of the markers for the minimum value of the <see cref="P:Telerik.Reporting.PointMapSeries.Size"/> property.
            </summary>
            <remarks>
            Use the <b>MarkerMinSize</b> and <see cref="P:Telerik.Reporting.PointMapSeries.MarkerMaxSize"/> properties in conjunction with the <see cref="P:Telerik.Reporting.PointMapSeries.Size"/> property
            to create a Bubble chart;
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.PointMapSeries.MarkerMaxSize">
            <summary>
            Gets or sets the size for the maximum value of the <see cref="P:Telerik.Reporting.PointMapSeries.Size"/> property.
            </summary>
            <remarks>
            Use the <b>MarkerMinSize</b> and <see cref="P:Telerik.Reporting.PointMapSeries.MarkerMaxSize"/> properties in conjunction with the <see cref="P:Telerik.Reporting.PointMapSeries.Size"/> property
            to create a Bubble chart;
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.PointMapSeries.MarkerType">
            <summary>
            Gets or sets the shape of the marker.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.PointMapSeries.DataPointLabelAlignment">
            <summary>
            Gets or sets a value indicating how the labels of the data points to be aligned. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.PointMapSeries.DataPointLabelOffset">
            <summary>
            Gets or sets the DataPointLabel offset, according the DataPointLabelPosition.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ColumnMapSeries.#ctor">
            <summary>
            Creates a new instance of ColumnMapSeries.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.PieMapSeries">
            <summary>
            Represents a series of data points in the <see cref="T:Telerik.Reporting.Map"/> report item that displays embedded pie charts as data points.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.PieMapSeries.#ctor">
            <summary>
            Creates a new instance of PieMapSeries.
            /// </summary>
        </member>
        <member name="T:Telerik.Reporting.ShapeMapSeries">
            <summary>
            Represents a series of data points in the <see cref="T:Telerik.Reporting.Map"/> report item that displays a shape defined by geographical coordinates.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ShapeMapSeries.ShapeMapGroup">
            <summary>
            Gets or sets the <see cref="P:Telerik.Reporting.ShapeMapSeries.ShapeMapGroup"/> from the <see cref="P:Telerik.Reporting.Map.GeoLocationGroups"/> 
            hierarchy associated with this series.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ShapeMapSeries.ColorData">
            <summary>
            Gets or sets an expression that defines the <b>color</b> field for the data points.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ShapeMapSeries.DataPointLabelAlignment">
            <summary>
            Gets or sets a value indicating how the labels of the data points to be aligned. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ShapeMapSeries.DataPointLabelOffset">
            <summary>
            Gets or sets the DataPointLabel offset, according the DataPointLabelPosition.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ShapeMapSeries.ColorsCount">
            <summary>
            Gets or sets the count of the colors that show the data ranges. The property is not respected when RangeGrouping is <b>None</b>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ShapeMapSeries.RangeGrouping">
            <summary>
            Gets or sets the data points grouping in ranges.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ShapeMapSeries.SourceType">
            <summary>
            Gets or sets the <b>source type</b> of the spatial data that will be used to get the coordinates for the data points.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ShapeMapSeries.RangeGroupings">
            <summary>
            Determines which algorithm will be used to split the data into groups. 
            The count of groups is determined by the ColorsCount property.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.ShapeMapSeries.RangeGroupings.None">
            <summary>
            No grouping will be used.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.ShapeMapSeries.RangeGroupings.EqualInterval">
            <summary>
            The range between the minimum and maximum values will be divided by the group count, so every value will fall in a specific interval.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.ShapeMapSeries.RangeGroupings.EqualDistribution">
            <summary>
            The processing engine will try to distribute the amount of data values evenly among the groups, assigning a group to each value in the range.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.BingMapsTileProvider">
            <summary>
            A class used to provide map tiles from the Bing™ Maps tile servers.
            </summary>
            <remarks>Requires a valid Bing Maps Key that could be obtained from "http://www.microsoft.com/maps/create-a-bing-maps-key.aspx"</remarks>
            <example>
            The following example demonstrates how to initialize a <strong>BingMapsTileProvider</strong> instance:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\MapTileProviderSnippets.cs" region="HowToInitializeBingMapsTileProvider" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\MapTileProviderSnippets.vb" region="HowToInitializeBingMapsTileProvider" />
            </example>
        </member>
        <member name="T:Telerik.Reporting.TileProvider">
            <summary>
            An abstract class for the tile providers that fetch tiles from any source.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ITileProvider">
            <summary>
            Represents a common interface for all the tile providers
            </summary>        
        </member>
        <member name="P:Telerik.Reporting.TileProvider.TileImageFormat">
            <summary>
            Gets or sets the <see cref="T:Telerik.Reporting.TileImageFormat"/> that will be used when returning the requested tile image to the client.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.BingMapsTileProvider.ClientToken">
            <summary>
            The client token that authenticates the request.
            Represents the Bing Maps Key that could be obtained from "http://www.microsoft.com/maps/create-a-bing-maps-key.aspx"
            </summary>
        </member>
        <member name="P:Telerik.Reporting.BingMapsTileProvider.ImagerySet">
            <summary>
            Gets or sets the <see cref="T:Telerik.Reporting.ImagerySet"/> used when requesting the tile images
            </summary>        
        </member>
        <member name="T:Telerik.Reporting.ClientRequestSettings">
            <summary>
            Settings applied to the TileProvider's WebClient which will download the tiles.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ClientRequestSettings.Headers">
            <summary>
            The headers that will be applied to the WebClient.Headers.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ClientRequestSettings.UseDefaultCredentials">
            <summary>
            If set to true, it will apply the default user credentials to the WebClient
            </summary>
        </member>
        <member name="T:Telerik.Reporting.GenericTileProvider">
            <summary>
            A class used to obtain map tiles from any tile server compliant with Web Map Tile Service protocol.
            </summary>
            <remarks>
            By default, the GenericTileProvider is initialized using the MapQuest tile server properties.
            </remarks>
            <example>
            The following example demonstrates how to initialize a <strong>GenericTileProvider</strong> instance:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\MapTileProviderSnippets.cs" region="HowToInitializeGenericTileProvider" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\MapTileProviderSnippets.vb" region="HowToInitializeGenericTileProvider" />
            </example>
        </member>
        <member name="P:Telerik.Reporting.GenericTileProvider.UrlTemplate">
            <summary>
            A templated URL that will be used to fetch the tiles from the tile provider. 
            Valid template patterns are {subdomain}, {x}, {y}, {zoom}.
            </summary>        
            <remarks>
            The <strong>UrlTemplate</strong> have the following format: 
            <example>
            http://{subdomain}.mqcdn.com/tiles/1.0.0/map/{zoom}/{x}/{y}.jpg
            </example>
            <para>The {subdomain} tag marks the place where a subdomain from the <see cref="P:Telerik.Reporting.GenericTileProvider.UrlSubdomains"/> collection would be placed. This tag is not mandatory, since the selected tile provider may not offer more than one subdomain.</para>
            <para>The {zoom} tag will be replaced by the calculated zoom level (level of details) of the current tile set.</para>
            <para>The {x} and {y} tags are used as a placeholders for the tile position.</para>
            </remarks>        
        </member>
        <member name="P:Telerik.Reporting.GenericTileProvider.UrlSubdomains">
            <summary>
            Set of subdomains that will replace the {subdomain} tag in the <see cref="P:Telerik.Reporting.GenericTileProvider.UrlTemplate"/>.
            When more than one subdomain is specified, the tile requests will be distributed evenly among the subdomains.
            </summary>
            <remarks>
            For example, for MapQuest Tile server the subdomains are:
            <example>
            otile1, otile2, otile3, otile4
            </example>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.GenericTileProvider.Attribution">
            <summary>
            The Attribution property must be set manually according to the tile provider usage policy. 
            This text will be displayed in the lower right corner of the map area. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GenericTileProvider.LogoUrl">
            <summary>
            The LogoUrl property denotes the URL used to download the tile provider logo, if required by the provider's usage policy. 
            In case the URL points to a valid image, it will be displayed in the lower left corner of the map area.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GoogleMapsTileProvider.Language">
            <summary>
            The language that will be used when requesting tiles from the server.        
            For reference see "https://spreadsheets.google.com/pub?key=p9pdwsai2hDMsLkXsoM05KQ&amp;gid=1"
            </summary>
        </member>
        <member name="P:Telerik.Reporting.GoogleMapsTileProvider.ClientToken">
            <summary>
            The client token that authenticates the request.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MapQuestTileProvider">
            <summary>
            A class used to obtain map tiles from the MapQuest tile servers.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapQuestTileProvider.ServerUrls">
            <summary>
            Collection of maps server addresses used to fetch the tiles.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.MapQuestTileProvider.ImagerySet">
            <summary>
            Gets or sets the <see cref="T:Telerik.Reporting.ImagerySet"/> used when requesting the tile images
            </summary>        
        </member>
        <member name="T:Telerik.Reporting.ImagerySet">
            <summary>
            The imagery set (mode) that is used when requesting the tile images
            </summary>
        </member>
        <member name="T:Telerik.Reporting.TileImageFormat">
            <summary>
            The image format that will be used when returning the requested tile image to the client.
            <remarks>Some of the tile providers might not support all of the image formats</remarks>
            </summary>
        </member>
        <member name="T:Telerik.Reporting.MemberBindingType">
            <summary>
            Determines the binding type of the instance and its members.
            None - The instance and its members will not be used for binding.
            Members - Only the instance members will be used for binding.
            Full - Both the instance and its members will be used for binding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ObjectValueConverter">
            <summary>
            Allows a property of type Object to be edited like a string property in the Properties window
            </summary>
        </member>
        <member name="T:Telerik.Reporting.PageBreak">
            <summary>
            Specifies where to make a page break, with respect to a
            <see cref="T:Telerik.Reporting.ReportSection"/>.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.PageBreak.None">
            <summary>
            No page break will occur.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.PageBreak.Before">
            <summary>
            A page break will occur before the 
            <see cref="T:Telerik.Reporting.ReportSection"/>
            </summary>
        </member>
        <member name="F:Telerik.Reporting.PageBreak.After">
            <summary>
            A page break will occur after the 
            <see cref="T:Telerik.Reporting.ReportSection"/>
            </summary>
        </member>
        <member name="F:Telerik.Reporting.PageBreak.BeforeAndAfter">
            <summary>
            A page break will occur before and after the 
            <see cref="T:Telerik.Reporting.ReportSection"/>
            </summary>
        </member>
        <member name="T:Telerik.Reporting.PageFooterSection">
            <summary>
            Represents a page footer section. Page footers are displayed at the
            end of a page.
            </summary>    
            <remarks>
            <B>Note:</B>Page header/footer section of nested reports are ignored by the reporting 
            engine (only the master report respects page sections). In order to have 
            a header/footer that repeats on every page, you may consider using an unbound group 
            (a group without any grouping criteria specified) and set its 
            GroupHeader/FooterSection.PrintOnEveryPage = True
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.PageSection">
            <summary>
            Base abstract class for page sections. 
            <see cref="T:Telerik.Reporting.PageHeaderSection"/> and 
            <see cref="T:Telerik.Reporting.PageFooterSection"/> inherit from this
            class.
            </summary>    
        </member>
        <member name="P:Telerik.Reporting.PageSection.PrintOnFirstPage">
            <summary>
            Gets or sets a value indicating whether the section should print
            on the first page of the report.
            </summary>
            <value>
            A <I>boolean</I> value indicating whether the section should print
            on the first page of the report.
            </value>
        </member>
        <member name="P:Telerik.Reporting.PageSection.PrintOnLastPage">
            <summary>
            Gets or sets a value indicating whether the section should print
            on the last page of the report.
            </summary>
            <value>
            A <I>boolean</I> value indicating whether the section should print
            on the last page of the report.
            </value>
        </member>
        <member name="T:Telerik.Reporting.PageHeaderSection">
            <summary>
            Represents a page header section. Page headers are displayed at the
            beginning of a page.
            </summary>    
            <remarks>
            <B>Note:</B>Page header/footer section of nested reports are ignored by the reporting 
            engine (only the master report respects page sections). In order to have 
            a header/footer that repeats on every page, you may consider using an unbound group 
            (a group without any grouping criteria specified) and set its 
            GroupHeader/FooterSection.PrintOnEveryPage = True
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.PageNumberingStyle">
            <summary>
            Specifies the page numbering style of a report.
            Has meaning and effect only when the report is part of a report book.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.PageNumberingStyle.Restart">
            <summary>
            Page numbering starts from 1.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.PageNumberingStyle.ResetNumbering">
            <summary>
            Resets page numbering while page count aggregation continues.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.PageNumberingStyle.ResetNumberingAndCount">
            <summary>
            Resets both page numbering and page count.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.PageNumberingStyle.Continue">
            <summary>
            Page numbering and page count aggregations continue.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Panel">
            <summary>
            Provides a grouping mechanism for organizing report items. 
            </summary>    
        </member>
        <member name="P:Telerik.Reporting.Panel.CanShrink">
            <summary>
            Gets or sets a value indicating whether the 
            <see cref="T:Telerik.Reporting.Panel"/> 
            will shrink if a child item is shrunk or hidden.
            </summary>
            <value>
            A <I>boolean</I> value indicating whether the rendering engine should
            try to shrink the <see cref="T:Telerik.Reporting.Panel"/> 
            if child is shrunk or hidden.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Panel.KeepTogether">
            <summary>
            Gets or sets a value indicating whether the rendering engine should
            try to keep the <see cref="T:Telerik.Reporting.Panel"/> on one page
            if possible.
            </summary>
            <value>
            A <I>boolean</I> value indicating whether the rendering engine should
            try to keep the <see cref="T:Telerik.Reporting.Panel"/> on one page
            if possible.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Parameter">
            <summary>
            Represents a parameter consisting of name and value. The value might be an expression or a precalculated value (number, date time, string)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Parameter.Name">
            <summary>
            The name of the parameter. 
            Should be a valid identifier 
            (contains only digits, letters, and the underscore sign;
            starting with a letter or underscore)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Parameter.Value">
            <summary>
            The value of th parameter.
            Might be an expression starting with the equals (=) sign 
            or a predefined value (number, date-time, boolean, string)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ParameterCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.Parameter"/> objects. 
            </summary>
            <remarks>
            The collection does not allow adding two parameters with matching names.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.ParameterCollection.Add(System.String,System.Object)">
            <summary>
            Creates a <see cref="T:Telerik.Reporting.Parameter"/> with specific settings and
            adds it to the 
            <see cref="T:Telerik.Reporting.ParameterCollection"/> or updates an existing one. 
            </summary>
            <param name="name">
            A <see cref="T:System.String"/> value that will be used as 
            <see cref="P:Telerik.Reporting.Parameter.Name"/> for the newly created 
            <see cref="T:Telerik.Reporting.Parameter"/>.
            </param>
            <param name="value">
            A <see cref="T:System.Object"/> value that will be used as 
            <see cref="P:Telerik.Reporting.Parameter.Value"/> for the newly created 
            <see cref="T:Telerik.Reporting.Parameter"/>. Can be an expression.
            </param>
        </member>
        <member name="M:Telerik.Reporting.ParameterCollection.AddRange(System.Collections.Generic.IEnumerable{Telerik.Reporting.Parameter})">
            <summary>
            Adds/updates an enumerable of <see cref="T:Telerik.Reporting.Parameter"/> objects to/in the 
            <see cref="T:Telerik.Reporting.ParameterCollection"/>. 
            </summary>
            <param name="enumerable">
            An enumerable of <see cref="T:Telerik.Reporting.Parameter"/> objects to add to/update in 
            the <see cref="T:Telerik.Reporting.ParameterCollection"/>.
            </param>
            <remarks>
            <para>The <see cref="T:Telerik.Reporting.Parameter"/> objects returned from the
            enumerable are appended to the end of the 
            <see cref="T:Telerik.Reporting.ParameterCollection"/> or updated in place.</para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.ParameterCollection.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:Telerik.Reporting.ParameterCollection"/>
            contains a parameter with a specific name.
            </summary>
            <param name="name">
            A <see cref="T:System.String"/> that specifies the parameter name for which
            to search the elements of the 
            <see cref="T:Telerik.Reporting.ParameterCollection"/>.
            </param>
            <returns>
            Returns a <see cref="T:System.Boolean"/> value indicating whether the
            <see cref="T:Telerik.Reporting.ParameterCollection"/> object contains a
            parameter with the specified name.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.ParameterCollection.IndexOf(System.String)">
            <summary>
            Determines the index of a specific parameter in the
            <see cref="T:Telerik.Reporting.ParameterCollection"/>.
            </summary>
            <param name="name">The parameter name used to locate the
            parameter in the <see cref="T:Telerik.Reporting.ParameterCollection"/>.</param>
            <returns>The index of parameter if found in the 
            <see cref="T:Telerik.Reporting.ParameterCollection"/>; otherwise, -1.</returns>
        </member>
        <member name="P:Telerik.Reporting.ParameterCollection.Item(System.String)">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Parameter"/> by name.
            </summary>
            <param name="name">The name of the parameter.</param>
            <returns>A parameter if found; otherwise null (Nothing)</returns>
        </member>
        <member name="T:Telerik.Reporting.ParameterConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.PictureBox">
            <summary>
            Represents a picture box report item for displaying an image.
            </summary>    
        </member>
        <member name="P:Telerik.Reporting.PictureBox.Value">
            <summary>
            Gets or sets the value associated with this <see cref="T:Telerik.Reporting.PictureBox"/>.
            </summary>
            <value>
            A <see cref="T:System.String"/> that starts with "=" is interpreted as data expression;
            <see cref="T:System.Drawing.Image"/> that holds an image data.
            </value>
        </member>
        <member name="P:Telerik.Reporting.PictureBox.Sizing">
            <summary>
            Gets or sets the sizing mode of the 
            <see cref="T:Telerik.Reporting.PictureBox"/>.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.ImageSizeMode"/> object
            that specifies the sizing mode of the 
            <see cref="T:Telerik.Reporting.PictureBox"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.PictureBox.MimeType">
            <summary>
            Gets or sets a string that contains the picture box's Multipurpose 
            Internet Mail Extensions (MIME) type.
            </summary>
            <value>
            A string that contains the picture box's Multipurpose Internet Mail 
            Extensions (MIME) type. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.PictureBox.DefaultSize">
            <summary>
            This member overrides 
            <see cref="P:Telerik.Reporting.ReportItem.DefaultSize"/>.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.SizeU"/> object that defines
            the default size of the <see cref="T:Telerik.Reporting.PictureBox"/>.
            It is 100 pixels wide by 100 pixels high by default.
            </value>
        </member>
        <member name="T:Telerik.Reporting.PropertyChangeEventArgs">
            <summary>
            Used in ReportObject
            </summary>
        </member>
        <member name="T:Telerik.Reporting.PropertyChangeEventHandler">
            <summary>
            Used in ReportObject
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Report">
            <summary>
            Represents the base class for any report in the Telerik Reporting. 
            </summary>
            <remarks>
            All reports created with Telerik Reporting inherit from the 
            <see cref="T:Telerik.Reporting.Report"/> class. The <B>Report</B>
            comprises of one or more report sections which contain report items.
            </remarks>    
        </member>
        <member name="M:Telerik.Reporting.Report.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.Report"/> class with default settings.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Report.RaiseNeedDataSource(System.Object,System.EventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Reporting.Report.NeedDataSource"/>
            event.
            </summary>
            <param name="sender">
            The report being processed.
            </param>
            <param name="e">
            An <see cref="T:System.EventArgs"/> that contains event data.
            </param>
        </member>
        <member name="E:Telerik.Reporting.Report.NeedDataSource">
            <summary>
            Occurs when the processing of the report processing instance (i.e., <see cref="T:Telerik.Reporting.Processing.Report"/> instance) begins
            and this instance has no <see cref="P:Telerik.Reporting.Processing.Report.DataSource"/> property set.
            </summary>
            <remarks>
            The event is hooked on the definition <see cref="T:Telerik.Reporting.Report"/> instance, 
            but the sender object in the event handler is the processing <see cref="T:Telerik.Reporting.Processing.Report"/> instance.
            The processing instance of the report inherits its DataSource from the definition instance,
            but if neither has DataSource set, this event is raised. 
            </remarks>
            <example>
            The following example demonstrates how to implement a <strong>NeedDataSource</strong> event handler:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\ReportEvents.cs" region="NeedDataSourceEventHandlerSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\ReportEvents.vb" region="NeedDataSourceEventHandlerSnippet"/>
            </example>
        </member>
        <member name="P:Telerik.Reporting.Report.Width">
            <summary>
            Gets or sets the width of the report.
            </summary>
            <value>
            The width of the report in Units.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Report.StyleSheet">
            <summary>
            Gets the <see cref="T:Telerik.Reporting.Drawing.StyleSheet"/>
            associated with the report.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.StyleSheet"/> object
            representing a collection of style rules.
            </value>
            <remarks>
            The <see cref="P:Telerik.Reporting.Report.StyleSheet"/> property
            of a report can be used to define various types of styles for use
            by the report items.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Report.ExternalStyleSheets">
            <summary>
            Gets the collection of ExternalStyleSheets for the report.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Report.Culture">
            <summary>
            Gets or sets the culture information associated with the report. 
            </summary>
            <value>
            A <see cref="T:System.Globalization.CultureInfo"/> representing the 
            culture supported by the <see cref="T:Telerik.Reporting.Report"/>. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Report.UnitOfMeasure">
            <summary>
            Gets or sets the default unit of measure for the report.
            </summary>
            <value>
            An <see cref="T:Telerik.Reporting.Drawing.UnitType"/> representing
            the default unit of measure for the report.
            </value>
            <remarks>
            All newly created report items will have their locations, sizes, 
            etc. in this <see cref="T:Telerik.Reporting.Drawing.UnitType"/>.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Report.PageSettings">
            <summary>
            Gets or sets the page settings for the 
            <see cref="T:Telerik.Reporting.Report"/> . 
            </summary>
            <value>
            The page settings for the <see cref="T:Telerik.Reporting.Report"/>. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Report.DataSource">
            <summary>
            Gets or sets the data source that the 
            <see cref="T:Telerik.Reporting.Report"/> is displaying data for.
            </summary>
            <value>
            An object that functions as a data source. 
            </value>
            <remarks>
            <para>
            The following data sources are valid:
            </para>
            <ul>
            <li>A <see cref="T:System.Data.DataTable"/></li>
            <li>A <see cref="T:System.Data.DataView"/></li>
            <li>A <see cref="T:System.Data.DataSet"/></li>
            <li>A <see cref="T:System.Data.DataViewManager"/></li>
            <li>Any component that implements the 
            <see cref="T:System.ComponentModel.IListSource"/> interface</li>
            <li>Any component that implements the 
            <see cref="T:System.Collections.IEnumerable"/> interface</li>
            <li>Any component that implements the 
            <see cref="T:System.Data.IDataAdapter"/> interface</li>
            </ul>
            <para>
            If the <B>DataSource</B> reference contains more than one table, 
            you must set the <B>DataMember</B> property a string that specifies 
            the table to bind to. For example, if the <B>DataSource</B> is a 
            <B>DataSet</B> or <B>DataViewManager</B> that contains three tables 
            named <CODE>Customers</CODE>, <CODE>Orders</CODE>, and 
            <CODE>OrderDetails</CODE>, you must specify the table to bind to.
            </para>
            <para>
            Setting the <B>DataSource</B> to an object that does not implement 
            the <B>IListSource</B>, <B>IEnumerable</B>, or <B>IDataAdapter</B> 
            will cause an exception.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Report.Filters">
            <summary>
            Gets a 
            <see cref="T:Telerik.Reporting.FilterCollection"/> 
            that defines the filter expression(s) for the
            <see cref="T:Telerik.Reporting.Report"/>
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.FilterCollection"/> 
            that contains the 
            <see cref="T:Telerik.Reporting.Filter"/> objects for 
            the <B>Report</B>
            </value>
            <remarks>
            Filter expressions limit the data that is displayed to the user 
            after the data is retrieved from the data source.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Report.Sortings">
            <summary>
            Gets a 
            <see cref="T:Telerik.Reporting.SortingCollection"/> 
            that defines the sort column(s), and their type and order for the
            <see cref="T:Telerik.Reporting.Report"/>
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.SortingCollection"/> 
            that contains the 
            <see cref="T:Telerik.Reporting.Sorting"/> objects for the
            <B>Report</B>
            </value>
            <remarks>
            Sort expressions sort the data that is displayed to the user 
            after the data is retrieved from the data source.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Report.Groups">
            <summary>
            Gets a 
            <see cref="T:Telerik.Reporting.GroupCollection"/> 
            that defines the groups for the 
            <see cref="T:Telerik.Reporting.Report"/>
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.GroupCollection"/> 
            that contains the 
            <see cref="T:Telerik.Reporting.Group"/> objects for the <B>Report</B>
            </value>
            <remarks>
            <para>
            Grouping is used to gather all rows that match certain grouping 
            criteria together. Grouping criteria is defined by adding one or
            more <see cref="T:Telerik.Reporting.Grouping"/> objects
            to a <see cref="T:Telerik.Reporting.Group"/>.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Report.ReportParameters">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Report.DocumentName">
            <summary>
            Gets or sets a <see cref="T:System.String"/> representing the name
            of the report document.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the document name. The
            default value is the name of the 
            <see cref="T:Telerik.Reporting.Report"/> this property belongs to.
            </value>
            <remarks>
            <para>
            The value of this property is used to suggest a file name when
            exporting a report to one of the available export formats.
            This property value is not used when exporting from the standalone report designer.
            The report filename will be used instead.
            </para>
            <para>
            Also used to specify the report name (root node) in the document map.
            </para>
            <para>
            A <see cref="T:System.String"/> that starts with "=" is interpreted 
            as an expression to evaluate the document name; otherwise it is 
            interpreted as a literal string. The expression cannot contain any data fields.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Report.PageNumberingStyle">
            <summary>
            Gets or sets a <see cref="T:Telerik.Reporting.PageNumberingStyle"/> 
            for the <see cref="T:Telerik.Reporting.Report"/>.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.PageNumberingStyle"/> representing 
            the page numbering style. The default value is 
            <see cref="F:Telerik.Reporting.PageNumberingStyle.Continue"/>
            </value>
            <remarks>
            <para>
            When the report is part of a 
            <see cref="T:Telerik.Reporting.ReportBook"/>, use this property to
            indicate whether the page numbering / count should start from 1 or continue
            from the last page number / count of the previous report.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Report.Telerik#Reporting#IReportDocument#ReportSources">
            <summary>
            Enumerates the report sources contained in this report document.
            The Report implementation returns a new InstanceReportSource containing the current Report object
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Report.GroupCollectionInternal">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.Group"/>
            objects.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ReportBook">
            <summary>
            Represents a collection of reports logically unified as a single 
            document.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportBook.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.ReportBook"/> class with default 
            settings.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportBook.#ctor(System.Collections.Generic.IEnumerable{Telerik.Reporting.Report})">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.ReportBook"/> class from the provided
            reports.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportBook.#ctor(System.Collections.Generic.IEnumerable{Telerik.Reporting.Report},System.String)">
            <summary>
            Initializes a new instance of the 
            <see cref="T:Telerik.Reporting.ReportBook"/> class from the provided
            reports and document name.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportBook.Reports">
            <summary>
            Gets the collection of reports that are parts of this ReportBook.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportBook.ReportSources">
            <summary>
            Gets the collection of reports that take part in this ReportBook.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportBook.Telerik#Reporting#IReportDocument#Reports">
            <summary>
            Gets the reports contained in the ReportBook.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportBook.TocReportSource">
            <summary>
            Specifies the <see cref="T:Telerik.Reporting.ReportSource"/> for the Table of Contents report.
            </summary>
            <seealso cref="T:Telerik.Reporting.ReportSource"/>
            <seealso cref="T:Telerik.Reporting.UriReportSource"/>
            <seealso cref="T:Telerik.Reporting.TypeReportSource"/>
            <seealso cref="T:Telerik.Reporting.InstanceReportSource"/>
            <seealso cref="T:Telerik.Reporting.XmlReportSource"/>
        </member>
        <member name="P:Telerik.Reporting.ReportBook.TocPosition">
            <summary>
            Specifies the <see cref="T:Telerik.Reporting.ReportBookTocPosition"/> for the Table of Contents in the Report Book.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportBook.DocumentName">
            <summary>
            Gets or sets a <see cref="T:System.String"/> representing the name
            of the document.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the document name. The
            default value is the Type name of the 
            <see cref="T:Telerik.Reporting.ReportBook"/> this property belongs to.
            </value>
            <remarks>
            <para>
            The value of this property is used to suggest a file name when
            exporting to one of the available export formats.
            </para>
            <para>
            A <see cref="T:System.String"/> that starts with "=" is interpreted 
            as an expression to evaluate the document name; otherwise it is 
            interpreted as a literal string.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportBook.Telerik#Reporting#IReportDocument#PageSettings">
            <summary>
            For internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportBook.Telerik#Reporting#IReportDocument#ReportParameters">
            <summary>
            Gets the <see cref="T:Telerik.Reporting.ReportParameter"/>s of the 
            <see cref="T:Telerik.Reporting.ReportBook"/>. Parameters are obtained 
            by merging the parameters of individual reports that have their
            Mergeable property set to true plus adding all non-mergable 
            parameters.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ReportParameterCollectionBase`1">
            <summary>
            Represents a base class for collection of <see cref="T:Telerik.Reporting.IReportParameter"/> objects. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportParameterCollectionBase`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds an enumerable of <see cref="T:Telerik.Reporting.ReportParameter"/> objects to the 
            <see cref="T:Telerik.Reporting.ReportParameterCollection"/>. 
            </summary>
            <param name="enumerable">
            An enumerable of <see cref="T:Telerik.Reporting.ReportParameter"/> objects to add to 
            the <see cref="T:Telerik.Reporting.ReportParameterCollection"/>.
            </param>
            <remarks>
            <para>The <see cref="T:Telerik.Reporting.ReportParameter"/> objects returned from the
            enumerable are appended to the end of the 
            <see cref="T:Telerik.Reporting.ReportParameterCollection"/>.</para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.ReportParameterCollectionBase`1.Contains(System.String)">
            <summary>
            Determines whether the <see cref="T:Telerik.Reporting.ReportParameterCollection"/>
            contains a report parameter with a specific name.
            </summary>
            <param name="name">
            A <see cref="T:System.String"/> that specifies the parameter name for which
            to search the elements of the 
            <see cref="T:Telerik.Reporting.ReportParameterCollection"/>.
            </param>
            <returns>
            Returns a <see cref="T:System.Boolean"/> value indicating whether the
            <see cref="T:Telerik.Reporting.ReportParameterCollection"/> object contains a report
            parameter with the specified name.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.ReportParameterCollectionBase`1.IndexOf(System.String)">
            <summary>
            Determines the index of a specific report parameter in the
            <see cref="T:Telerik.Reporting.ReportParameterCollection"/>.
            </summary>
            <param name="name">The parameter name used to locate the report
            parameter in the <see cref="T:Telerik.Reporting.ReportParameterCollection"/>.</param>
            <returns>The index of report parameter if found in the 
            <see cref="T:Telerik.Reporting.ReportParameterCollection"/>; otherwise, -1.</returns>
        </member>
        <member name="P:Telerik.Reporting.ReportParameterCollectionBase`1.Item(System.String)">
            <summary>
            Gets a report parameter by name.
            </summary>
            <param name="name">The name of the report parameter.</param>
            <returns>A report parameter if found; otherwise null (Nothing) </returns>
        </member>
        <member name="T:Telerik.Reporting.ReportBook.MergedReportParameter">
            <summary>
            Represents a merged parameter, that is many identical parameters
            represented by a single object. All child parameters should have the 
            same Name and Type, which effectively becomes the Name and Type of 
            the MergedReportParameter. The UI of the MergedReportParameter is 
            the UI of its FIRST child parameter.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ReportBookTocPosition">
            <summary>
            Specifies where to position the Table of Contents in the Report Book.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.ReportBookTocPosition.BeforeContent">
            <summary>
            Before the reports in the Report Book.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.ReportBookTocPosition.AfterContent">
            <summary>
            After the reports in the Report Book.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ReportCollection">
            <summary>
            Represents a collection of 
            <see cref="T:Telerik.Reporting.Report"/> objects. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportCollection.AddRange(System.Collections.Generic.IEnumerable{Telerik.Reporting.Report})">
            <summary>
            Adds an array of report objects to the collection. 
            </summary>
            <param name="items">
            A collection of <see cref="T:Telerik.Reporting.Report"/> objects to add to 
            the current collection.
            </param>
            <remarks>
            <para>The <B>Report</B> objects contained in the items array are 
            appended to the end of the collection.</para>
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.ReportCollectionConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ReportConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ReportFooterSection">
            <summary>
            Represents a report footer section. Report footer is displayed at the
            end of a report, but before the last 
            <see cref="T:Telerik.Reporting.PageFooterSection"/> if any.
            </summary>
            <remarks>
            <para>
            If you do not want a <see cref="T:Telerik.Reporting.PageFooterSection"/>
            displayed on the last page set the 
            <see cref="P:Telerik.Reporting.PageSection.PrintOnLastPage"/> property to <B>false</B>.
            </para>
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportFooterSection.PrintAtBottom">
            <summary>
            Gets or sets a value indicating whether the rendering engine should
            print the section at the bottom of the page that contains the section.
            </summary>
            <value>
            A <I>boolean</I> value indicating whether the rendering engine should
            print the section at the bottom of the page that contains the section.
            </value>
            <remarks>When false, the section will be printed right after the preceeding
            section. When true, the section will be printed at the bottom of the
            page that contains the section. All subsequent sections will be moved
            on the next page. If there is no preceeding section on the page,
            the section will print on the top of the page.</remarks>
        </member>
        <member name="T:Telerik.Reporting.ReportHeaderSection">
            <summary>
            Represents a report header section. Report header is displayed at the
            beginning of a report, but after the first
            <see cref="T:Telerik.Reporting.PageHeaderSection"/> if any.
            </summary>
            <remarks>
            <para>
            If you do not want a <see cref="T:Telerik.Reporting.PageHeaderSection"/>
            displayed on the first page set the 
            <see cref="P:Telerik.Reporting.PageSection.PrintOnFirstPage"/> property to <B>false</B>.
            </para>
            </remarks>    
        </member>
        <member name="T:Telerik.Reporting.ReportParameter">
            <summary>
            Represents a report parameter.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportParameter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.ReportParameter"/>  class. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportParameter.#ctor(System.String,Telerik.Reporting.ReportParameterType,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.ReportParameter"/>  class. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportParameter.Name">
            <summary>
            Gets or sets the name of the parameter. Used to access the parameter.
            </summary>
            <remarks>
            Parameter names must be unique in the context of a single report.
            The name must be a valid identifier - may contain only digits (0-9), letters (a-z, A-Z), 
            and underscore sign (_). Must begin with a letter or underscore.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportParameter.Type">
            <summary>
            Gets or sets the data type of the parameter.
            </summary>
            <remarks>
            Determines the type of the values. Acceptable values for each type are listed in <see cref="T:Telerik.Reporting.ReportParameterType"/>.
            The default parameter type is <see cref="F:Telerik.Reporting.ReportParameterType.String"/>.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportParameter.Value">
            <summary>
            Gets or sets the value of the parameter. Can be an Expression that 
            evaluates to an object, value of the allowed types, 
            or <see cref="T:System.Collections.IEnumerable"/> containing values of the allowed types.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportParameter.Mergeable">
            <summary>
            Gets or sets a value indicating whether this parameter should be 
            merged with identical parameters from other reports when this report 
            is part of a <see cref="T:Telerik.Reporting.ReportBook"/>.
            </summary>
            <remarks>
            Controls parameter merging in <see cref="T:Telerik.Reporting.ReportBook"/>. 
            The default value of the <b>Mergeable</b> property is <b>true</b>. 
            Set the <b>Mergeable</b> property to <b>false</b> if you want to prevent a parameter 
            from being merged with its equivalent ones.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportParameter.Text">
            <summary>
            Gets or sets the text for the parameter's automatic UI displayed in the report viewer.
            Can be an Expression that evaluates to a string.
            </summary>
            <remarks>
            The Text property specifies the text for the parameter to be displayed 
            in the report viewer as prompt to the end user. 
            If value for the property is not provided the <see cref="P:Telerik.Reporting.ReportParameter.Name"/> 
            of the parameter is used.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportParameter.Visible">
            <summary>
            Determines whether automatic user interface (UI) prompting for values
            to be generated for the parameter.
            </summary>
            <remarks>
            Specifies whether the parameter will have UI in the parameters area.
            When at least one report parameter has the <b>Visible</b> property turned on, 
            a parameter area is shown as part of the report viewer. 
            If this property is set to <b>false</b>, the parameter must be populated 
            programmatically or at design time.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportParameter.MultiValue">
            <summary>
            Determines if the parameter can hold more then one value.
            </summary>
            <remarks>
            If the value is set to <b>true</b> as a valid value of the parameter is accepted
            or <see cref="T:System.Collections.IEnumerable"/> of values 
            of the specified <see cref="P:Telerik.Reporting.ReportParameter.Type"/> of the parameter.
            Parameters with <b>MultiValue</b> turned on are mainly used with the <b>IN</b> logical operator.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportParameter.AllowNull">
            <summary>
            Determines if the parameter allows no value to be passed from it's
            editor.
            </summary>
            <remarks>
            Only if this property is set to <b>false</b> <c>null</c> (
            <c>Nothing</c> in VB) are considered as valid values of the
            parameter.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportParameter.AllowBlank">
            <summary>
            Gets or sets a value that indicates whether an empty string is a valid value for the parameter.
            Only for parameters of <see cref="P:Telerik.Reporting.ReportParameter.Type"/> <b>String</b>.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportParameter.AvailableValues">
            <summary>
            Gets an object that defines a set of valid values the parameter can accept from.
            </summary>
            <remarks>
            The available values, or valid values, are a set of predefined values 
            which are acceptable as value of the parameter. 
            Each available value may have label that will be displayed if the parameter is visible.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportParameter.AutoRefresh">
            <summary>
            Determines whether to trigger the report preview after changing the value for a parameter.
            Applies only for visible parameters.
            </summary>
            <remarks>
            If this property is set to <b>true</b>, the report viewer will trigger
            the report preview automatically when the parameter value is changed. 
            The parameter should be visible in order to auto preview the report.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.ReportParameterAvailableValues">
            <summary>
            Represents the available values for a <see cref="T:Telerik.Reporting.ReportParameter"/>
            </summary>
            <remarks>
            The available values, or valid values, are a set of predefined values 
            which are acceptable as value of the parameter. 
            Each available value may have label that will be displayed if the parameter is visible.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportParameterAvailableValues.DisplayMember">
            <summary>
            Gets or sets a string that specifies the property of the data source from which to draw the value labels.
            </summary>
            <remarks>
            Specifies a column name, expression, or 
            <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expression</conceptualLink>
            based on the 
            <see cref="P:Telerik.Reporting.ReportParameterAvailableValues.DataSource"/> schema. 
            It is used as label in the value/label pair. 
            If omitted the ValueMember will be used as 
            <see cref="P:Telerik.Reporting.ReportParameterAvailableValues.DisplayMember"/> as well.
            Optional.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportParameterAvailableValues.ValueMember">
            <summary>
            Gets or sets a string that specifies the field of the data source from which to draw the values.
            </summary>
            <remarks>
            Specifies a column name, expression, or
            <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expression</conceptualLink>
            based on the 
            <see cref="P:Telerik.Reporting.ReportParameterAvailableValues.DataSource"/> schema. 
            It is used as value in the value / label pair.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportParameterAvailableValues.DataSource">
            <summary>
            Gets or sets the data source used for retrieving the value / label pairs 
            of the available values.
            </summary>
            <remarks>
            For backwards compatibility reasons Telerik Reporting supports binding directly to 
            IEnumberable/IListSource objects (incl. arrays, collections, DataSet, DataTable, 
            DataView, and DbDataAdapter). 
            Instead consider using the <see cref="T:Telerik.Reporting.ObjectDataSource"/> 
            component that can handle these types of data sources.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.ReportParameterAvailableValues.Filters">
            <summary>
            Gets a FilterCollection that defines the filter expression(s).
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportParameterAvailableValues.Sortings">
            <summary>
            Gets a SortingCollection that defines the sort column(s), and their type and order.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ReportParameterCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.ReportParameter"/> objects. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportParameterCollection.Add(System.String,Telerik.Reporting.ReportParameterType,System.Object)">
            <summary>
            Creates a <see cref="T:Telerik.Reporting.ReportParameter"/> with specific settings and
            adds it to the 
            <see cref="T:Telerik.Reporting.ReportParameterCollection"/>. 
            </summary>
            <param name="name">
            A <see cref="T:System.String"/> value that will be used as 
            <see cref="P:Telerik.Reporting.ReportParameter.Name"/> for the newly created 
            <see cref="T:Telerik.Reporting.ReportParameter"/>.
            </param>
            <param name="parameterType">
            A <see cref="T:Telerik.Reporting.ReportParameterType"/> value that will be used as 
            <see cref="P:Telerik.Reporting.ReportParameter.Type"/> for the newly created 
            <see cref="T:Telerik.Reporting.ReportParameter"/>.
            </param>
            <param name="value">
            A <see cref="T:System.Object"/> value that will be used as 
            <see cref="P:Telerik.Reporting.ReportParameter.Value"/> for the newly created 
            <see cref="T:Telerik.Reporting.ReportParameter"/>. May be expression.
            </param>
            <returns>The newly created and added <see cref="T:Telerik.Reporting.ReportParameter"/>
            </returns>
        </member>
        <member name="M:Telerik.Reporting.ReportParameterCollection.InsertItem(System.Int32,Telerik.Reporting.ReportParameter)">
            <summary>
            Inserts an item to the <see cref="T:Telerik.Reporting.ReportParameterCollectionBase`1"/> at
            the specified index.
            </summary>
            <param name="index">The zero-based index at which item should be
            inserted.</param>
            <param name="item">The <see cref="T:Telerik.Reporting.ReportParameter"/> to insert into
            the <see cref="T:Telerik.Reporting.ReportParameterCollectionBase`1"/>.</param>
        </member>
        <member name="T:Telerik.Reporting.ReportParameterConverter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Reporting.ReportParameterType.Boolean">
            <summary>
            Values of type <see cref="T:System.Boolean"/> are accepted.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.ReportParameterType.DateTime">
            <summary>
            Values of type <see cref="T:System.DateTime"/> are accepted.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.ReportParameterType.Integer">
            <summary>
            Values of type <see cref="T:System.Int16"/>, <see cref="T:System.Int32"/>,
            or <see cref="T:System.Int64"/> are accepted. Internally the values are converted to <see cref="T:System.Int64"/>.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.ReportParameterType.Float">
            <summary>
            Values of type <see cref="T:System.Single"/> or <see cref="T:System.Double"/> are accepted. Internally the values are converted to <see cref="T:System.Double"/>.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.ReportParameterType.String">
            <summary>
            Values of type <see cref="T:System.String"/> are accepted.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportParameterUISettings.Text">
            <summary>
            Gets or sets the text for the parameter to be displayed in the report viewer.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportParameterUISettings.Visible">
            <summary>
            Determines whether the parameter user interface is visible.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportParameterUISettings.MultiValue">
            <summary>
            Determines if the parameter can hold more then one value.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportParameterUISettings.AllowNull">
            <summary>
            Determines if the parameter allows no value to be passed from it's editor.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportParameterUISettings.AllowBlank">
            <summary>
            Determines if the parameter allows an empty string to be passed. Only for parameters of type string.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportParameterUISettings.AvailableValues">
            <summary>
            Gets an object that defines a set of values the parameter can accept from.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ReportSource">
            <summary>
            Provides the base class for a report source. This is an abstract class
            that contains only a collection of parameter values that are passed to the 
            <see cref="T:Telerik.Reporting.IReportDocument"/> object when its instance is initialized.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.ReportSource.Parameters">
            <summary>
            Determines the parameter values that are passed to the <see cref="T:Telerik.Reporting.IReportDocument"/> object when its instance is initialized.
            </summary>
            <remarks>
            The parameter name must match the name of the <see cref="T:Telerik.Reporting.ReportParameter"/> of the <see cref="T:Telerik.Reporting.IReportDocument"/>
            in order the value to be passed correctly.
            If a parameter (available in the report definition) is omitted in this collection, the report will be processed by evaluating the Value property of the Report Parameter in the report definition.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.UriReportSource">
            <summary>
            Represents a report source that loads a report document from a URI.
            </summary>
            <example>
            The following example demonstrates how to create a <strong>UriReportSource</strong>:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\ReportSourceSnippets.cs" region="CreateUriReportSourceSnippet" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\ReportSourceSnippets.vb" region="CreateUriReportSourceSnippet" />
            </example>
        </member>
        <member name="M:Telerik.Reporting.UriReportSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.UriReportSource"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.UriReportSource.Uri">
            <summary>
            Specifies the URI to load the report document from.
            </summary>
            <remarks>
            <para>A URI.</para>
            <para>This property can accept an expression when the report source is used in a <see cref="T:Telerik.Reporting.SubReport"/> item 
            or a <see cref="T:Telerik.Reporting.NavigateToReportAction"/> action.</para>
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.TypeReportSource">
            <summary>
            Represents a report source that allows a report document to be instantiated from an <see cref="P:System.Type.AssemblyQualifiedName"/>.
            </summary>
            <example>
            The following example shows how to create a <see cref="T:Telerik.Reporting.TypeReportSource"/>:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\ReportSourceSnippets.cs" region="CreateTypeReportSourceSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\ReportSourceSnippets.vb" region="CreateTypeReportSourceSnippet"/>
            </example>
        </member>
        <member name="M:Telerik.Reporting.TypeReportSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.TypeReportSource"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.TypeReportSource.TypeName">
            <summary>
            Gets or sets the assembly qualified type name of the report document.
            </summary>
            <remarks>
            <para>Use this property to specify the type name of the report document.
            Must be the assembly qualified name of the <see cref="T:System.Type"/> of the report.</para>
            <para>The target type should implement the 
            <see cref="T:Telerik.Reporting.IReportDocument"/> interface 
            and should have a default (parameterless) constructor. 
            The default constructor is used from the reporting engine to create the report
            instance.</para>
            <para>This property can accept an expression when the report source is used in a <see cref="T:Telerik.Reporting.SubReport"/> item 
            or a <see cref="T:Telerik.Reporting.NavigateToReportAction"/> action.</para>
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.InstanceReportSource">
            <summary>
            This is a legacy report source option. For better performance and compatibility
            use <see cref="T:Telerik.Reporting.TypeReportSource"/>. 
            Represents a report source that contains a reference to an instance of 
            <see cref="T:Telerik.Reporting.IReportDocument"/>.
            </summary>
            <example>
            The following example shows how to create an <see cref="T:Telerik.Reporting.InstanceReportSource"/>:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\ReportSourceSnippets.cs" region="CreateInstanceReportSourceSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\ReportSourceSnippets.vb" region="CreateInstanceReportSourceSnippet"/>
            </example>
        </member>
        <member name="M:Telerik.Reporting.InstanceReportSource.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.InstanceReportSource"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.InstanceReportSource.ReportDocument">
            <summary>
            <see cref="T:Telerik.Reporting.IReportDocument"/> instance for the report source.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.XmlReportSource">
            <summary>
            Represents a report source that contains the XML markup of a report document.
            </summary>
            <example>
            The following example shows how to create a <see cref="T:Telerik.Reporting.XmlReportSource"/>:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\ReportSourceSnippets.cs" region="CreateXmlReportSourceSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\ReportSourceSnippets.vb" region="CreateXmlReportSourceSnippet"/>
            </example>
        </member>
        <member name="M:Telerik.Reporting.XmlReportSource.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Telerik.Reporting.XmlReportSource"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.XmlReportSource.Xml">
            <summary>
            Gets or sets the XML markup of a <see cref="T:Telerik.Reporting.IReportDocument"/>.
            </summary>
            <remarks>
            <para>This property can accept an expression when the report source is used in a <see cref="T:Telerik.Reporting.SubReport"/> item 
            or a <see cref="T:Telerik.Reporting.NavigateToReportAction"/>.</para>
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.ReportSourceCollection">
            <summary>
            Represents a collection of 
            <see cref="T:Telerik.Reporting.ReportSource"/> objects. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportSourceCollection.AddRange(System.Collections.Generic.IEnumerable{Telerik.Reporting.ReportSource})">
            <summary>
            Adds an array of report source objects to the collection. 
            </summary>
            <param name="items">
            A collection of <see cref="T:Telerik.Reporting.ReportSource"/> objects to add to 
            the current collection.
            </param>
            <remarks>
            <para>The <B>ReportSource</B> objects contained in the items array are 
            appended to the end of the collection.</para>
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.ResourceHelper">
            <summary>
            A class for common resource needs.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ResourceKind">
            <summary>
            Specifies the way a resource is loaded.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ResourceResolutionService">
            <summary>
            Default resource resolution service used at run-time.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Shape">
            <summary>
            Represents a shape report item. 
            </summary>    
        </member>
        <member name="P:Telerik.Reporting.Shape.ShapeType">
            <summary>
            Gets or sets the type of the shape displayed in the item.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Shapes.ShapeBase"/> object
            representing the type of the shape displayed in the item.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Shape.Stretch">
            <summary>
            Gets or sets a value indicating whether to stretch the shape in
            the item or not.
            </summary>
            <value>
            <B>true</B> if the shape should be stretched; otherwise <B>false</B>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Shape.Angle">
            <summary>
            Gets or sets the angle of rotation of the shape in degrees.
            </summary>
            <value>
            A <I>double</I> value indicating the angle of rotation in degrees.
            </value>
        </member>
        <member name="T:Telerik.Reporting.SortDirection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Sorting">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.SortingCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.SR">
            <summary>
            Summary description for SR.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.SRCategoryAttribute">
            <summary>
            Summary description for SRCategoryAttribute.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.SubReport">
            <summary>
            Represents a report item used to embed another report into the current 
            report.
            </summary>    
        </member>
        <member name="M:Telerik.Reporting.SubReport.RaiseNeedDataSource(System.Object,System.EventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Reporting.Report.NeedDataSource"/>
            event.
            </summary>
            <param name="sender">
            The subreport being processed.
            </param>
            <param name="e">
            An <see cref="T:System.EventArgs"/> that contains event data.
            </param>
        </member>
        <member name="E:Telerik.Reporting.SubReport.NeedDataSource">
            <summary>
            Occurs at the start of report processing if the inner report has no data source set.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.SubReport.KeepTogether">
            <summary>
            Gets or sets a value indicating whether the rendering engine should
            try to keep the <see cref="T:Telerik.Reporting.SubReport"/> on one page
            if possible.
            </summary>
            <value>
            A <I>boolean</I> value indicating whether the rendering engine should
            try to keep the <see cref="T:Telerik.Reporting.SubReport"/> on one page
            if possible.
            </value>
        </member>
        <member name="P:Telerik.Reporting.SubReport.ReportSource">
            <summary>
            Specifies the <see cref="T:Telerik.Reporting.ReportSource"/> for the sub-report.
            </summary>
            <seealso cref="T:Telerik.Reporting.ReportSource"/>
            <seealso cref="T:Telerik.Reporting.UriReportSource"/>
            <seealso cref="T:Telerik.Reporting.TypeReportSource"/>
            <seealso cref="T:Telerik.Reporting.InstanceReportSource"/>
            <seealso cref="T:Telerik.Reporting.XmlReportSource"/>
        </member>
        <member name="T:Telerik.Reporting.List">
            <summary>
            The list report item represents a free-form layout.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Table">
            <summary>
            The table report item displays detail data, data organized in row groups, or both.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Table.RowGroups">
            <summary>
            Table row groups hierarchy. (Optional) 
            Table row groups are located on the lower-left corner. 
            This area is automatically created when you add a row group. 
            Cells in this area represent members of the row groups hierarchy, 
            and display row group instance values.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Table.ColumnGroups">
            <summary>
            Table column group hierarchy. (Optional) 
            Table column groups are located in the upper-right corner. 
            This area is automatically created when you add a column group. 
            Cells in this area represent members of the column groups hierarchy, 
            and display the column group instance values.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Table.Body">
            <summary>
            Table body area. (Optional) 
            The Table body is located in the lower right corner. 
            The Table body displays detail and grouped data. 
            The scope for the expression is determined by the innermost groups 
            to which the text box belongs. Cells in the Table body display 
            detail data when they are members of a detail row and they 
            represent aggregate data when they are members of a row or column 
            associated with a group. By default, cells in a group row or column 
            that contain simple expressions that do not include an aggregate 
            function, evaluate to the first value in the group.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Table.Corner">
            <summary>
            Table corner area. (Optional) 
            A Table corner is located in the upper-left corner. 
            This area is automatically created when you add both 
            row groups and column groups to a Table item. 
            In this area, you can merge cells and add a label or embed another report item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Table.KeepTogether">
            <summary>
            Gets or sets a value indicating whether the rendering engine should
            try to keep the <see cref="T:Telerik.Reporting.Table"/> on one page if possible.
            </summary>
            <value>
            A <I>boolean</I> value indicating whether the rendering engine should
            try to keep the <see cref="T:Telerik.Reporting.Table"/> on one page if possible.
            </value>
        </member>
        <member name="T:Telerik.Reporting.Crosstab">
            <summary>
            The Crosstab report item displays aggregated data summaries, grouped in rows and columns.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.TableBody">
            <summary>
            Represents the Body of the Table item
            </summary>
        </member>
        <member name="P:Telerik.Reporting.TableBody.Columns">
            <summary>
            Gets the collection of the columns for the Table's Body.
            </summary>
            <remarks>
            Use this collection to define the columns for the TableBody. 
            If specified, the number of the columns should be equal to 
            the number of the leaf groups in the Table.ColumnGroups hierarchy.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.TableBody.Rows">
            <summary>
            Gets the collection of the rows for the Table's Body
            </summary>
            /// <remarks>
            Use this collection to define the rows for the TableBody.
            If specified, the number of the rows should be equal to the
            number of the leaf groups in the Table.RowGroups hierarchy.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.TableBody.RowCollection">
            <summary>
            Represents a collection of TableBodyRows
            </summary>
        </member>
        <member name="T:Telerik.Reporting.TableBody.ColumnCollection">
            <summary>
            Represents a collection of TableBodyColumn
            </summary>
        </member>
        <member name="T:Telerik.Reporting.TableBodyColumn">
            <summary>
            Represents a column in the Table's Body
            </summary>
        </member>
        <member name="P:Telerik.Reporting.TableBodyColumn.Width">
            <summary>
            The width of the TableBodyColumn
            </summary>
        </member>
        <member name="T:Telerik.Reporting.TableBodyRow">
            <summary>
            Represents a row in the Table's Body
            </summary>
        </member>
        <member name="P:Telerik.Reporting.TableBodyRow.Height">
            <summary>
            The height of the TableBodyRow
            </summary>
        </member>
        <member name="M:Telerik.Reporting.TableGroup.Visit(System.Collections.Generic.IList{Telerik.Reporting.TableGroup},System.Int32,Telerik.Reporting.TableGroup.VisitorCallback)">
            <summary>
            Iterates over the TableGroup hierarchy; Returns TRUE
            to break the iteration;
            </summary>
        </member>
        <member name="M:Telerik.Reporting.TableGroup.GetLeafGroups(System.Collections.Generic.IList{Telerik.Reporting.TableGroup})">
            <summary>
            Returns a list of table groups that are leafs in the given group hierarchy
            </summary>
        </member>
        <member name="P:Telerik.Reporting.TableGroup.RowIndex">
            <summary>
            The index of the TableLayout.Row this group starts from.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.TableGroup.ColumnIndex">
            <summary>
            The index of the TableLayout.Column this group starts from.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.TableGroup.ColumnSpan">
            <summary>
            The count of the TableLayout.Columns this group takes.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.TableGroup.RowSpan">
            <summary>
            The count of the TableLayout.Rows this group takes.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.TableGroup.GroupKeepTogether">
            <summary>
            Indicates whether to keep all rows or columns that belong to the current group on one page.
            </summary>
            <value>
            True to keep all rows or columns that belong to the current group on one page; otherwise False.  
            </value>
            <remarks>
            When the GroupKeepTogether is set to True and there is not enough space on the current page,
            the entire group is moved the the top/left of the next page. 
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.TableGroup.PageBreak">
            <summary>
            Gets or sets the page breaking rule for this
            <see cref="T:Telerik.Reporting.TableGroup"/>'s representation,
            either rows or columns.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.PageBreak"/> object specifying the
            page breaking rule for this
            <see cref="T:Telerik.Reporting.TableGroup"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.TableGroup.BookmarkId">
            <summary>
            Gets or sets a bookmark id for this group. 
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the resulting id,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also. 
            When processed should evaluate to an unique value 
            for each processing instance of the group.
            Any duplicated occurrences at runtime get modified in order to avoid duplication in the resulting report.
            </value>
            <remarks>
            BookmarkId must be used along with <see cref="T:Telerik.Reporting.NavigateToBookmarkAction"/> interactive action
            in order to specify the target of the action.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.TableGroup.DocumentMapText">
            <summary>
            Gets or sets a text to be displayed for this group in the document map. 
            </summary>
            <remarks>When defined the document map displays nodes 
            that navigate to the instances of the group.</remarks>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.TableGroup.TocText">
            <summary>
            Gets or sets a text to be displayed for this group in the table of contents. 
            </summary>
            <remarks>When defined the table of contents displays nodes 
            that navigate to the instances of the group.</remarks>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.TableGroup.Visible">
            <summary>
            Gets or sets a value indicating whether the table group is displayed. 
            </summary>
            <value>
            <B>true</B> if the table group is displayed; otherwise,
            <B>false</B>. The default is <B>true</B>.
            </value>
        </member>
        <member name="T:Telerik.Reporting.TableGroup.VisitorCallback">
            <returns>TRUE to stop the current group iteration; otherwise - FALSE</returns>
        </member>
        <member name="T:Telerik.Reporting.TextBox">
            <summary>
            Represents a text box report item. 
            </summary>   
        </member>
        <member name="P:Telerik.Reporting.TextBox.KeepTogether">
            <summary>
            Gets or sets a value indicating whether the rendering engine should
            try to keep the <see cref="T:Telerik.Reporting.TextBox"/> on one page
            if possible.
            </summary>
            <value>
            A <I>boolean</I> value indicating whether the rendering engine should
            try to keep the <see cref="T:Telerik.Reporting.TextBox"/> on one page
            if possible.
            </value>
        </member>
        <member name="P:Telerik.Reporting.TextBox.Value">
            <summary>
            Gets or sets the current text in the text box.
            </summary>
            <value>
            A <see cref="T:System.String"/> that starts with "=" is interpreted as expression 
            to calculate the value of the current TextBox;
            otherwise - literal string.
            </value>
        </member>
        <member name="T:Telerik.Reporting.TocPosition">
            <summary>
            Specifies the position of the Table of Contents relative to the report sections.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.TocPosition.BeforeReportHeader">
            <summary>
            Before the report header section.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.TocPosition.AfterReportHeader">
            <summary>
            After the report header section.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.TocPosition.BeforeReportFooter">
            <summary>
            Before the report footer section.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.TocPosition.AfterReportFooter">
            <summary>
            After the report footer section.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.TocSection">
            <summary>
            Represents a table of contents section.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.TocSection.Position">
            <summary>
            Gets or sets a value indicating where the section should be
            positioned.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.TocPosition"/> object specifying the
            position for the
            <see cref="T:Telerik.Reporting.TocSection"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.TocSection.Title">
            <summary>
            Gets or sets a value which will be displayed at the top of the table of contents section.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.TocSection.TitleStyle">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.Style"/> object 
            specifying the appearance of the table of contents title. 
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Style"/> object specifying
            the item's style. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.TocSection.TitleStyleName">
            <summary>
            Gets or sets the name of the title's global style. 
            </summary>
            <value>
            A string value specifying the style name.
            </value>
            <remarks>
            Global styles are defined through the 
            <see cref="T:Telerik.Reporting.Report"/>'s 
            <see cref="T:Telerik.Reporting.Drawing.StyleSheet"/> property.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.TocSection.Levels">
            <summary>
            Gets the collection of <see cref="T:Telerik.Reporting.TocLevel"/>s that are defined for each Table of Contents level.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.TocLevelCollection">
            <summary>
            Represents a collection of <see cref="T:Telerik.Reporting.TocLevel"/>s.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.IToolTip">
            <summary>
            Represents a tooltip displayed over a report item or a datapoint.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IToolTip.Title">
            <summary>
            Gets or sets a text to be displayed as a tooltip title
            </summary>
        </member>
        <member name="P:Telerik.Reporting.IToolTip.Text">
            <summary>
            Gets or sets a text to be displayed as a tooltip text
            </summary>
        </member>
        <member name="T:Telerik.Reporting.ToolTip">
            <summary>
            Represents a class that defines a tooltip displayed over a report item or a datapoint.
            </summary>
            <remarks>
            <para>
            The <B>Tooltip</B> class consists of <B>Title</B> and <B>Text</B> string properties that can be either static text or expressions.
            </para>
            </remarks>  
        </member>
        <member name="P:Telerik.Reporting.ToolTip.Title">
            <summary>
            Gets or sets a text to be displayed as a tooltip title
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.ToolTip.Text">
            <summary>
            Gets or sets a text to be displayed as a tooltip text
            </summary>
            <value>
            A <see cref="T:System.String"/> started with "=" is interpreted as
            an expression to calculate the real data,
            otherwise - literal string. 
            Supports <conceptualLink target="e7d7b24c-decd-45c2-91b4-0f2b9e28271c">embedded expressions</conceptualLink> also.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Paging.AdjustmentBase.Offset">
            <summary>
            Offset to be applied immediately (on the current page)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.AdjustmentBase.StateOffset">
            <summary>
            Offset to be applied on the next layout cycle (on the next page)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.AdjustmentBase.State">
            <summary>
            Determines the paging logic to be applied on the next layout cycle (on the next page)
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Paging.AbsolutePositionPager.PageContentVertically(System.Int64,System.Int64,System.Int64)">
            <summary>
            Used only when the whole container fits on the current page
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Paging.AbsolutePositionPager.CalculateChildrenVertically(System.Int64,System.Int64,System.Int64)">
            <summary>
            Adjust the item's top position.
            If any of the dependent items are grown and overlaps the current item,
            move it down preserving the smallest vertical distance 
            between this item and the dependent items.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Paging.VerticalStackPagerPreservingSpace">
            <summary>
            Represents the logic that splits text lines between pages
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.IComposition.MeasureContext">
            <summary>
            Graphics for the string measurements
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.IComposition.CurrentVertPosition">
            <summary>
            Used by the group footers with print on every page;
            !!! Relative to the current top !!!
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.InitializationContext.ReservedTop">
            <summary>
            Reserved top space on page inside the parent element the current element cannot occupy
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.InitializationContext.ReservedBottom">
            <summary>
            Reserved bottom space on page inside the parent element the current element cannot occupy
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.InitializationContext.ReservedVerticalSpace">
            <summary>
            Accumulated reserved space from all parents
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.InitializationContext.ReservedLeft">
            <summary>
            Reserved left space on page inside the parent element the current element cannot occupy
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.InitializationContext.ReservedRight">
            <summary>
            Reserved right space on page inside the parent element the current element cannot occupy
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.InitializationContext.ReservedHorizontalSpace">
            <summary>
            Accumulated reserved space from all parents
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.InitializationContext.MinKeepTogetherHeight">
            <summary>
            What space min should be available on the next (or a whole) page in order to move to next page (keep together)
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Paging.PageCompositionBase.SendPhysicalPages">
            <summary>
            Called when the paging of the current page is completed and is ready
            for sending to the client.
            </summary>
            <param name="force"> If true send the page anyway; 
            otherwise only when there is no more free space left on the page</param>
        </member>
        <member name="P:Telerik.Reporting.Paging.PageCompositionBase.MeasureContext">
            <summary>
            For the string measurements
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.PageCompositionBase.CurrentVertPosition">
            <summary>
            Used by the group footers with print on every page;
            !!! Relative to the current top !!!
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.PageSettings.PhysicalPageNumber">
            <summary>
            Number of the page in the output document (including pages from previous reports if ReportBook).
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.ElementPageInfo.ElementBounds">
            <summary>
            In page coordinates.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.ElementPageInfo.ElementClip">
            <summary>
            In page coordinates.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.ElementPageInfo.ClientBounds">
            <summary>
            In page coordinates.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.ElementPageInfo.ClientClip">
            <summary>
            In page coordinates.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.ElementPageInfo.BorderClip">
            <summary>
            In page coordinates.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.ElementPageInfo.AllowedBorders">
            <summary>
            Borders to render on the current page
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.ElementPageInfo.ElementClipped">
            <summary>
            Gets a value indicating if the element is actually clipped.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.ElementPageInfo.ClientClipped">
            <summary>
            Gets a value indicating if the client area is actually clipped.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.TableRegion.EndRowIndex">
            <summary>
            The index of the first row not part of the region
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.TableRegion.EndColumnIndex">
            <summary>
            The index of the first column not part of the region
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Paging.PagingElementBase.OffsetX(System.Int64)">
            <summary>
            Move the item down and right with the given offsets
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Paging.PagingElementBase.ClipToPage(Telerik.Reporting.Processing.Common.RectangleLU)">
            <param name="rect">in absolute coordinates</param>
            <returns>
            The intersection between the rect and the page's rect;
            If rect is empty, returns the page rect.
            </returns>
        </member>
        <member name="P:Telerik.Reporting.Paging.PagingElementBase.VerticalState">
            <summary>
            Determines if a carry from the previous page logic should be applied
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.PagingElementBase.CurrentPageTop">
            <summary>
            Current page Top + reserved top space for this item
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.PagingElementBase.CurrentPageBottom">
            <summary>
            Current page Bottom - reserved bottom space for this item
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Paging.PagingElement.CalculateContent(Telerik.Reporting.Paging.Orientation)">
            <summary>
            
            </summary>
            <param name="orientation"></param>
            <returns>Min distance that the container should preserve</returns>
        </member>
        <member name="M:Telerik.Reporting.Paging.PagingElement.NewPage(Telerik.Reporting.Paging.Orientation,System.Int64,System.Int64,System.Int64)">
            <summary>
            
            </summary>
            <param name="orientation"></param>
            <param name="parentOffset">Parent item client bounds beginning relative to the master report beginning.</param>
            <param name="parentReservedBefore"></param>
            <param name="parentReservedAfter"></param>
        </member>
        <member name="M:Telerik.Reporting.Paging.PagingElement.StartsFromCurrentPage(Telerik.Reporting.Paging.Orientation)">
            <summary>
            Determines whether the item starts from current page
            and continue on the next
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Paging.PagingElement.HitsCurrentPage(Telerik.Reporting.Paging.Orientation)">
            <summary>
            Defines whether to calculate the child items.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.CheckBox.Angle">
            <summary>
            Returns the text rotation angle in degrees.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Paging.ReportSection">
            <summary>
            Report Header/Footer sections
            Detail section
            Group Header/Footer sections 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.Group.fixedHeaderVertOffset">
            <summary>
            Keeps the offsetY for the position of the fixed header on the current page
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.Group.fixedFooterVertOffset">
            <summary>
            Keeps the offsetY for the position of the fixed footer on the current page
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Paging.HtmlLine">
            <summary>
            Implements KeepTogether = true 
            A line always must stay together. 
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.PagingState.MoveToNextPage">
            <summary>
            Indicates that the item should be position on the top
            of the next page (PagingElementBase.VerticalStateOffset - to offset
            from the top)
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Paging.TableCellDimensionFacadeBase.Init(Telerik.Reporting.Paging.ITableCell)">
            <summary>
            Performance opt; 
            The client algorithm should use only one cell at a time if this method is used
            </summary>
            <param name="cell"></param>
        </member>
        <member name="P:Telerik.Reporting.Paging.ITableCellDimensionFacade.LineSpan">
            <summary>
            The count of lines this cell spans on
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.ITableCellDimensionFacade.CellSpan">
            <summary>
            The count of cells on each occupied line this cell spans on
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Paging.ITableDimensionFacade.CellAt(System.Int32,System.Int32)">
            <summary>
            See implementations. Should be used one cell at a time. Performance optimization
            </summary>
            <param name="line"></param>
            <param name="otherDimLine"></param>
            <returns></returns>
        </member>
        <member name="F:Telerik.Reporting.Paging.OneDimInitializationContext.ReservedBegin">
            <summary>
            Reserved top space on page inside the parent element the current element cannot occupy
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.OneDimInitializationContext.ReservedEnd">
            <summary>
            Reserved bottom space on page inside the parent element the current element cannot occupy
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.OneDimInitializationContext.ReservedSpace">
            <summary>
            Accumulated reserved space from all parents
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.SingleDimTable.endLineIndex">
            <summary>
            Zero based index tracking the calculation and output progress (inclusive)
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Paging.SingleDimTable.ShouldKeepTableTogether">
            <summary>
            Try keeping together the header lines + the 1st body line
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.TableLine.size">
            <summary>
            Common layout line size(height/width accordingly for row/column)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.TableLine.begin">
            <summary>
            Common layout line begin(top/left accordingly for row/column) 
            in client coordinates, i.e. coordinates inside the parent table
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Paging.TableLine.beginAdjustment">
            <summary>
            Paging begin adjustment
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Paging.TableLine.ToNextPage(System.Boolean)">
            <summary>
            Creates line adjustment that will carry the line on the next page on the next paging cycle
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Paging.TableLine.Offset(System.Int64,System.Boolean)">
            <summary>
            
            </summary>
            <param name="offset">the offset to be applied</param>
            <param name="offsetContinuousItems">Determines if items continuing from previous lines should be offset also</param>
        </member>
        <member name="P:Telerik.Reporting.Paging.TableLine.Size">
            <summary>
            Width / Height of the table column / row
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Paging.TextBox.LayoutText(System.String,Telerik.Reporting.Drawing.VerticalAlign)">
            <summary>
            Just aligns the text inside the client rectangle without
            any measurements
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Paging.TextBox.MeasureText(System.String,Telerik.Reporting.Drawing.TextFormat)">
            <summary>
            Measures the text bounds inside the ITextContainer.ClientRectangle
            so that further paging / rendering can be applied on the returned bounds.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Paging.TextBox.Angle">
            <summary>
            Returns the text rotation angle in degrees.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Paging.TextLine">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Paging.TocSection">
            <summary>
            Table of Contents section
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Paging.PageAreaBounds">
            <summary>
            Used instead of RectangleRF when reference type needed. 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfAnnotation">
            <summary>
            Represents the base class of all annotations.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfDictionary">
            <summary>
            3.2.6
            A dictionary object is an associative table containing pairs of objects,
            known as the dictionary’s entries. The first element of each entry is
            the key and the second element is the value. The key must be a name
            (unlike dictionary keys in Post-Script, which may be objects of any
            type). The value can be any kind of object, including another
            dictionary. A dictionary entry whose value is null (see Section 3.2.8,
            “Null Object”) is equivalent to an absent entry. (This differs from
            Post-Script, where null behaves like any other object as the value of a
            dictionary entry.) The number of entries in a dictionary is subject to
            an implementation limit; see Appendix C.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfObject">
            <summary>
            Summary description for PdfObject.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfItem">
            <summary>
            The base class of all PDF objects and simple types.
            All simple types (i.e. derived from PdfItem but not from PdfObject)
            must be immutable.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfItem.Clone">
            <summary>
            Creates a copy of this object.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfItem.Copy">
            <summary>
            Implements the copy mechanism. Must be overridden in derived classes.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfItem.WriteObject(Telerik.Reporting.Pdf.IO.PdfWriter)">
            <summary>
            When overridden in a derived class, appends a raw string representation of this object
            to the specified PdfWriter.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfObject.PrepareForFinish">
            <summary>
            When overridden in a derived class, prepares the object to get saved.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfObject.WriteObject(Telerik.Reporting.Pdf.IO.PdfWriter)">
            <summary>
            Saves the stream position. 2nd Edition.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfObject.SetObjectID(System.Int32,System.Int32)">
            <summary>
            ...
            Setting the object identifier makes this object an indirect object,
            i.e. the object gets a PdfReference entry in the PdfReferenceTable.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfObject.OwnerDocument">
            <summary>
            Gets the PdfDocument this object belongs to.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfObject.Reference">
            <summary>
            Gets the indirect reference of this object. If the value is null,
            this object is a direct object.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfObject.ObjectID">
            <summary>
            Gets the object identifier. Returns PdfObjectID.Empty for direct
            objects.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfObject.Document">
            <summary>
            Ssets the PdfDocument this object belongs to.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfObject.IsIndirect">
            <summary>
            Indicates whether the object is an indirect object.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfDictionary.CreateStream(System.Byte[])">
            <summary>
            Creates the stream of this dictionary and initializes it with the specified byte array.
            The function must not be called if the dictionary already has a stream.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfDictionary.WriteDictionaryElement(Telerik.Reporting.Pdf.IO.PdfWriter,Telerik.Reporting.Pdf.PdfName)">
            <summary>
            Writes a key/value pair of this dictionary. This function is
            intended to be overridden in derived classes.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfDictionary.WriteDictionaryStream(Telerik.Reporting.Pdf.IO.PdfWriter)">
            <summary>
            Writes the stream of this dictionary. This function is intended to be overridden
            in a derived class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDictionary.Stream">
            <summary>
            Gets or sets the PDF stream belonging to this dictionary. Returns null if the dictionary has
            no stream. To create the stream, call the CreateStream function.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDictionary.Meta">
            <summary>
            When overridden in a derived class, gets the KeysMeta of this 
            dictionary type.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDictionary.Elements">
            <summary>
            Gets the hashtable containing the elements of this dictionary.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Pdf.PdfAnnotation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfAnnotation.#ctor(Telerik.Reporting.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Pdf.PdfAnnotation"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfAnnotation.Flags">
            <summary>
            Gets or sets the annotation flags of this instance.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfAnnotation.Rectangle">
            <summary>
            Gets or sets the annotation rectangle, defining the location of the annotation
            on the page in default user space units.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfAnnotation.Title">
            <summary>
            Gets or sets the text label to be displayed in the title bar of the annotation’s
            pop-up window when open and active. By convention, this entry identifies
            the user who added the annotation.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfAnnotation.Subject">
            <summary>
            Gets or sets text representing a short description of the subject being
            addressed by the annotation.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfAnnotation.Contents">
            <summary>
            Gets or sets the text to be displayed for the annotation or, if this type of
            annotation does not display text, an alternate description of the annotation’s
            contents in human-readable form.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfAnnotation.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.KeysBase">
            <summary>
            Base class for all dictionary Keys classes.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.Type">
            <summary>
            (Optional) The type of PDF object that this dictionary describes; if present,
            must be Annot for an annotation dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.Subtype">
            <summary>
            (Required) The type of annotation that this dictionary describes.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.Rect">
            <summary>
            (Required) The annotation rectangle, defining the location of the annotation
            on the page in default user space units.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.Contents">
            <summary>
            (Optional) Text to be displayed for the annotation or, if this type of annotation
            does not display text, an alternate description of the annotation’s contents
            in human-readable form. In either case, this text is useful when
            extracting the document’s contents in support of accessibility to users with
            disabilities or for other purposes.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.NM">
            <summary>
            (Optional; PDF 1.4) The annotation name, a text string uniquely identifying it
            among all the annotations on its page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.M">
            <summary>
            (Optional; PDF 1.1) The date and time when the annotation was most recently
            modified. The preferred format is a date string, but viewer applications should be 
            prepared to accept and display a string in any format.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.F">
            <summary>
            (Optional; PDF 1.1) A set of flags specifying various characteristics of the annotation.
            Default value: 0.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.BS">
            <summary>
            (Optional; PDF 1.2) A border style dictionary specifying the characteristics of
            the annotation’s border.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.AP">
            <summary>
            (Optional; PDF 1.2) An appearance dictionary specifying how the annotation
            is presented visually on the page. Individual annotation handlers may ignore
            this entry and provide their own appearances.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.AS">
            <summary>
            (Required if the appearance dictionary AP contains one or more subdictionaries; PDF 1.2)
            The annotation’s appearance state, which selects the applicable appearance stream from 
            an appearance subdictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.Border">
            <summary>
            (Optional) An array specifying the characteristics of the annotation’s border.
            The border is specified as a rounded rectangle.
            In PDF 1.0, the array consists of three numbers defining the horizontal corner 
            radius, vertical corner radius, and border width, all in default user space units.
            If the corner radii are 0, the border has square (not rounded) corners; if the border 
            width is 0, no border is drawn.
            In PDF 1.1, the array may have a fourth element, an optional dash array defining a 
            pattern of dashes and gaps to be used in drawing the border. The dash array is 
            specified in the same format as in the line dash pattern parameter of the graphics state.
            For example, a Border value of [0 0 1 [3 2]] specifies a border 1 unit wide, with
            square corners, drawn with 3-unit dashes alternating with 2-unit gaps. Note that no
            dash phase is specified; the phase is assumed to be 0.
            Note: In PDF 1.2 or later, this entry may be ignored in favor of the BS entry.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.C">
            <summary>
            (Optional; PDF 1.1) An array of three numbers in the range 0.0 to 1.0, representing
            the components of a color in the DeviceRGB color space. This color is used for the
            following purposes:
            • The background of the annotation’s icon when closed
            • The title bar of the annotation’s pop-up window
            • The border of a link annotation
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.A">
            <summary>
            (Optional; PDF 1.1) An action to be performed when the annotation is activated.
            Note: This entry is not permitted in link annotations if a Dest entry is present.
            Also note that the A entry in movie annotations has a different meaning.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.T">
            <summary>
            (Optional; PDF 1.1) The text label to be displayed in the title bar of the annotation’s
            pop-up window when open and active. By convention, this entry identifies
            the user who added the annotation.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.Popup">
            <summary>
            (Optional; PDF 1.3) An indirect reference to a pop-up annotation for entering or
            editing the text associated with this annotation.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.CA">
            <summary>
            (Optional; PDF 1.4) The constant opacity value to be used in painting the annotation.
            This value applies to all visible elements of the annotation in its closed state
            (including its background and border) but not to the popup window that appears when
            the annotation is opened.
            The specified value is not used if the annotation has an appearance stream; in that
            case, the appearance stream must specify any transparency. (However, if the viewer
            regenerates the annotation’s appearance stream, it may incorporate the CA value
            into the stream’s content.)
            The implicit blend mode is Normal.
            Default value: 1.0.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotation.Keys.Subj">
            <summary>
            (Optional; PDF 1.5) Text representing a short description of the subject being
            addressed by the annotation.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfAnnotationFlags">
            <summary>
            Specifies the annotation flags.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotationFlags.Invisible">
            <summary>
            If set, do not display the annotation if it does not belong to one of the standard
            annotation types and no annotation handler is available. If clear, display such an
            unknown annotation using an appearance stream specified by its appearance dictionary,
            if any.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotationFlags.Hidden">
            <summary>
            (PDF 1.2) If set, do not display or print the annotation or allow it to interact
            with the user, regardless of its annotation type or whether an annotation
            handler is available. In cases where screen space is limited, the ability to hide
            and show annotations selectively can be used in combination with appearance
            streams to display auxiliary pop-up information similar in function to online
            help systems.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotationFlags.Print">
            <summary>
            (PDF 1.2) If set, print the annotation when the page is printed. If clear, never
            print the annotation, regardless of whether it is displayed on the screen. This
            can be useful, for example, for annotations representing interactive pushbuttons,
            which would serve no meaningful purpose on the printed page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotationFlags.NoZoom">
            <summary>
            (PDF 1.3) If set, do not scale the annotation’s appearance to match the magnification
            of the page. The location of the annotation on the page (defined by the
            upper-left corner of its annotation rectangle) remains fixed, regardless of the
            page magnification. See below for further discussion.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotationFlags.NoRotate">
            <summary>
            (PDF 1.3) If set, do not rotate the annotation’s appearance to match the rotation
            of the page. The upper-left corner of the annotation rectangle remains in a fixed
            location on the page, regardless of the page rotation. See below for further discussion.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotationFlags.NoView">
            <summary>
            (PDF 1.3) If set, do not display the annotation on the screen or allow it to
            interact with the user. The annotation may be printed (depending on the setting
            of the Print flag) but should be considered hidden for purposes of on-screen
            display and user interaction.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotationFlags.ReadOnly">
            <summary>
            (PDF 1.3) If set, do not allow the annotation to interact with the user. The
            annotation may be displayed or printed (depending on the settings of the
            NoView and Print flags) but should not respond to mouse clicks or change its
            appearance in response to mouse motions.
            Note: This flag is ignored for widget annotations; its function is subsumed by
            the ReadOnly flag of the associated form field.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotationFlags.Locked">
            <summary>
            (PDF 1.4) If set, do not allow the annotation to be deleted or its properties
            (including position and size) to be modified by the user. However, this flag does
            not restrict changes to the annotation’s contents, such as the value of a form
            field.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfAnnotationFlags.ToggleNoView">
            <summary>
            (PDF 1.5) If set, invert the interpretation of the NoView flag for certain events.
            A typical use is to have an annotation that appears only when a mouse cursor is
            held over it.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfAnnotations">
            <summary>
            Represents the annotations array of a page.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfArray">
            <summary>
            Summary description for PdfArray.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfArray.#ctor">
            <summary>
            Initializes a new instance of this class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfArray.Elements">
            <summary>
            Gets the collection containing the elements of this object.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfArray.ArrayElements">
            <summary>
            Represents the elements of an PdfArray.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfArray.ArrayElements.Clone">
            <summary>
            Creates a shallow copy of this object.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfArray.ArrayElements.SetOwner(Telerik.Reporting.Pdf.PdfArray)">
            <summary>
            Moves this instance to another dictionary during object type transformation.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfArray.ArrayElements.GetReal(System.Int32)">
            <summary>
            Converts the specified value to float.
            If the value not exists, the function returns 0.
            If the value is not convertible, the function throws an InvalidCastException.
            If the index is out ouf range, the function throws an ArgumentOutOfRangeException.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfAnnotations.Add(Telerik.Reporting.Pdf.PdfAnnotation)">
            <summary>
            Adds the specified annotation.
            </summary>
            <param name="annotation">The annotation.</param>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfAnnotations.Count">
            <summary>
            Gets the number of annotations in this collection.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfAnnotations.Item(System.Int32)">
            <summary>
            Gets the <see cref="!:PdfSharp.Pdf.Annotations.PdfAnnotation"/> at the specified index.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfAnnotations.Page">
            <summary>
            Gets the page the annotations belongs to.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfLinkAnnotation">
            <summary>
            Represents a link annotation.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfLinkAnnotation.#ctor(Telerik.Reporting.Pdf.PdfRectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Pdf.PdfLinkAnnotation"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfLinkAnnotation.#ctor(Telerik.Reporting.Pdf.PdfDocument,Telerik.Reporting.Pdf.PdfRectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Pdf.PdfLinkAnnotation"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfLinkAnnotation.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfLinkAnnotation.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfLinkAnnotation.Keys.Dest">
            <summary>
            (Optional; not permitted if an A entry is present) A destination to be displayed
            when the annotation is activated.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfLinkAnnotation.Keys.H">
            <summary>
            (Optional; PDF 1.2) The annotation’s highlighting mode, the visual effect to be
            used when the mouse button is pressed or held down inside its active area:
            N (None) No highlighting.
            I (Invert) Invert the contents of the annotation rectangle.
            O (Outline) Invert the annotation’s border.
            P (Push) Display the annotation as if it were being pushed below the surface of the page.
            Default value: I.
            Note: In PDF 1.1, highlighting is always done by inverting colors inside the annotation rectangle.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfLinkAnnotation.Keys.PA">
            <summary>
            (Optional; PDF 1.3) A URI action formerly associated with this annotation. When Web 
            Capture changes an annotation from a URI to a go-to action, it uses this entry to save 
            the data from the original URI action so that it can be changed back in case the target page for 
            the go-to action is subsequently deleted.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfLinkAnnotation.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfTextAnnotation">
            <summary>
            Represents a text annotation
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfTextAnnotation.#ctor(Telerik.Reporting.Pdf.PdfRectangle)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Pdf.PdfTextAnnotation"/> class.
            </summary>
            <param name="linkRectangle"></param>
        </member>
        <member name="T:Telerik.Reporting.Pdf.BitmapHelperBase">
            <summary>
            Classes for handling different Bitmap representation on Windows and Linux.
            Sources: http://www.ece.ualberta.ca/~elliott/ee552/studentAppNotes/2003_w/misc/bmp_file_format/bmp_file_format.htm
            and https://www.fileformat.info/format/bmp/egff.htm
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.BitmapHelperWindows.GetPaletteColors(System.Byte[])">
            <summary>
            The default approach of resolving the number of colors is to read the header on 0x2E offset. Mono implementation doesn't report correctly the palette colors.
            </summary>
            <param name="imageBits"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Pdf.DllFunctions.ScriptLayout(System.Int32,System.Byte[],System.Int32[],System.Int32[])">
            <summary>
            Converts an array of run embedding levels to a map of 
            visual-to-logical position and/or logical-to-visual position.
            </summary>
            <param name="cRuns">[in] Number of runs to process.</param>
            <param name="pbLevel">[in] Pointer to an array, of length cRuns,
            containing run embedding levels. Embedding levels for all runs on 
            the line must be included, ordered logically. For more information, 
            see the Remarks section.</param>
            <param name="piVisualToLogical">[out] Pointer to an array, of 
            length cRuns, in which this function retrieves the run embedding 
            levels reordered to visual order. The first array element 
            represents the run to display at the far left, and subsequent 
            entries should be displayed progressing from left to right. The 
            function sets this parameter to a null pointer if there is no output.
            </param>
            <param name="piLogicalToVisual">[out] Pointer to an array, of 
            length cRuns, in which this function retrieves the visual run 
            positions. The first array element is the relative visual position 
            where the first logical run should be displayed, the leftmost 
            display position being 0. The function sets this parameter to a 
            null pointer if there is no output.</param>
            <returns>Returns 0 if successful. The function returns a nonzero 
            HRESULT value if it does not succeed. The application can test the 
            return value with the SUCCEEDED and FAILED macros.</returns>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Crc32.crc">
            <summary>
            The crc data checksum so far.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Crc32.Reset">
            <summary>
            Resets the CRC32 data checksum as if no update was ever called.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Crc32.Update(System.Int32)">
            <summary>
            Updates the checksum with the int value.
            </summary>
            <param name = "bval">
            the byte is taken as the lower 8 bits of value
            </param>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Crc32.Update(System.Byte[])">
            <summary>
            Updates the checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            buffer an array of bytes
            </param>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Crc32.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Adds the byte array to the data checksum.
            </summary>
            <param name = "buffer">
            the buffer which contains the data
            </param>
            <param name = "offset">
            the offset in the buffer where the data starts
            </param>
            <param name = "length">
            the length of the data
            </param>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Crc32.Value">
            <summary>
            Returns the CRC32 data checksum computed so far.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Crc32.IntValue">
            <summary>
            Returns the CRC32 data checksum computed so far.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.KeyDescriptor">
            <summary>
            Hold information about the value of a key in a dictionary. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.KeyDescriptor.#ctor(Telerik.Reporting.Pdf.KeyInfoAttribute)">
            <summary>
            Initializes a new instance of KeyDescriptor from the specified
            attribute during a KeysMeta. Initializes itself using reflection.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.KeyDescriptor.GetValueType">
            <summary>
            Returns the type of the object to be created as value for the described key.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.KeyDescriptor.Version">
            <summary>
            Gets or sets the PDF version starting with the availability of the
            described key.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Drawing.InternalGraphicsState">
            <summary>
            Represents the internal state of an PdfGraphics object.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.InternalGraphicsState.Transform">
            <summary>
            Gets or sets the current transformation matrix.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Drawing.InternalGraphicsStateStack">
            <summary>
            Represents a stack of PdfGraphicsState and XGraphicsContainer objects.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Drawing.PdfFont">
            <summary>
            Defines an object used to draw glyphs.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Drawing.PdfFont.fontInfo">
            <summary>
            Cache PdfFontInfo to speed up finding the right PdfFontDictionary
            if this font is used more than once.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfFont.GetHeight">
            <summary>
            Returns the line spacing, in pixels, of this font. The line spacing is the vertical distance
            between the base lines of two consecutive lines of text. Thus, the line spacing includes the
            blank space between lines along with the height of the character itself.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfFont.Name">
            <summary>
            Gets the face name of this Font object.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfFont.Size">
            <summary>
            Gets the em-size of this Font object measured in the unit of this
            Font object.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfFont.Bold">
            <summary>
            Indicates whether this PdfFontDictionary object is bold.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfFont.Italic">
            <summary>
            Indicates whether this PdfFontDictionary object is italic.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfFont.Underline">
            <summary>
            Indicates whether this PdfFontDictionary object is underline.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfFont.Strikeout">
            <summary>
            Indicates whether this PdfFontDictionary object is strikeout.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Drawing.PdfFontMetrics">
            <summary>
            Summary description for PdfFontMetrics.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Drawing.PdfGraphics.defaultViewMatrix">
            <summary>
            The transformation matrix from the XGraphics page space to the Graphics world space.
            (The name 'default view matrix' comes from Microsoft OS/2 Presentation Manager. I choose
            this name because I have no better one.)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Drawing.PdfGraphics.internalGraphicsStateStack">
            <summary>
            The graphics state stack.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Drawing.PdfGraphics.transform">
            <summary>
            The transformation matrix from XGraphics world space to page unit space.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfGraphics.#ctor(Telerik.Reporting.Pdf.PdfPageDictionary,System.Drawing.Graphics)">
            <summary>
            Initializes a new instance of the PdfGraphics class for drawing on
            a PDF page and provides a GDI+ Graphics object for measurements.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfGraphics.TranslateTransform(System.Single,System.Single)">
            <summary>
            Applies the specified translation operation to the transformation matrix of this object by 
            prepending it to the object's transformation matrix.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfGraphics.TranslateTransform(System.Single,System.Single,Telerik.Reporting.Pdf.Drawing.PdfMatrixOrder)">
            <summary>
            Applies the specified translation operation to the transformation matrix of this object
            in the specified order.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfGraphics.ResetTransform">
            <summary>
            Resets the transformation matrix of this object to the identity matrix.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfGraphics.Save">
            <summary>
            Saves the current state of this XGraphics object and identifies the saved state with the
            returned PdfGraphicsState object.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfGraphics.Restore(Telerik.Reporting.Pdf.Drawing.PdfGraphicsState)">
            <summary>
            Restores the state of this XGraphics object to the state represented by the specified 
            PdfGraphicsState object.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfGraphics.ResetClip">
            <summary>
            Empties the clip region, i.e. no clipping takes place.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfGraphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image to draw.</param>
            <param name="destRect">The destination rectangle in POINTS.</param>
            <param name="srcRect">The source rectangle in PIXELS.</param>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfGraphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line connecting the two points specified by coordinate pairs.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfGraphics.PathFromRectangle(System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfGraphics.PageSize">
            <summary>
            PDF page size in points
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfGraphics.Transform">
            <summary>
            Gets or sets the transformation matrix.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Drawing.PdfGraphicsState">
            <summary>
            Represents the internal state of an XGraphics object.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Drawing.PdfImage">
            <summary>
            Defines an object used to draw GDI Images.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Drawing.PdfMatrix">
            <summary>
            Represents a 3-by-3 matrix that represents an affine 2D transformation.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Deg2Rad">
            <summary>
            Degree to radiant factor.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Drawing.PdfMatrix.πHalf">
            <summary>
            Half of pi.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the Matrix class with the specified points.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Invert">
            <summary>
            Inverts this PdfMatrix object. Throws an exception if the matrix is not invertible.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Multiply(Telerik.Reporting.Pdf.Drawing.PdfMatrix)">
            <summary>
            Multiplies this matrix with the specified matrix.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Multiply(Telerik.Reporting.Pdf.Drawing.PdfMatrix,Telerik.Reporting.Pdf.Drawing.PdfMatrixOrder)">
            <summary>
            Multiplies this matrix with the specified matrix.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Translate(System.Double,System.Double)">
            <summary>
            Translates the matrix with the specified offsets.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Translate(System.Double,System.Double,Telerik.Reporting.Pdf.Drawing.PdfMatrixOrder)">
            <summary>
            Translates the matrix with the specified offsets.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Scale(System.Double,System.Double)">
            <summary>
            Scales the matrix with the specified scalars.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Scale(System.Double,System.Double,Telerik.Reporting.Pdf.Drawing.PdfMatrixOrder)">
            <summary>
            Scales the matrix with the specified scalars.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Scale(System.Double)">
            <summary>
            Scales the matrix with the specified scalar.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Scale(System.Double,Telerik.Reporting.Pdf.Drawing.PdfMatrixOrder)">
            <summary>
            Scales the matrix with the specified scalar.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Rotate(System.Double)">
            <summary>
            Rotates the matrix with the specified angle.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Rotate(System.Double,Telerik.Reporting.Pdf.Drawing.PdfMatrixOrder)">
            <summary>
            Rotates the matrix with the specified angle.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Shear(System.Double,System.Double)">
            <summary>
            Shears the matrix with the specified scalars.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Shear(System.Double,System.Double,Telerik.Reporting.Pdf.Drawing.PdfMatrixOrder)">
            <summary>
            Shears the matrix with the specified scalars.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.ToMatrix">
            <summary>
            Converts this matrix to a System.Drawing.Drawing2D.Matrix object.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Equals(System.Object)">
            <summary>
            Indicates whether this instance and a specified object are equal.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.op_Explicit(Telerik.Reporting.Pdf.Drawing.PdfMatrix)~System.Drawing.Drawing2D.Matrix">
            <summary>
            Explicitly converts a PdfMatrix to an Matrix.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.op_Explicit(System.Drawing.Drawing2D.Matrix)~Telerik.Reporting.Pdf.Drawing.PdfMatrix">
            <summary>
            Explicitly converts a Matrix to an PdfMatrix.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.op_Equality(Telerik.Reporting.Pdf.Drawing.PdfMatrix,Telerik.Reporting.Pdf.Drawing.PdfMatrix)">
            <summary>
            Determines whether to matrices are equal.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Drawing.PdfMatrix.op_Inequality(Telerik.Reporting.Pdf.Drawing.PdfMatrix,Telerik.Reporting.Pdf.Drawing.PdfMatrix)">
            <summary>
            Determines whether to matrices are not equal.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfMatrix.Elements">
            <summary>
            Gets an array of double values that represents the elements of this matrix.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfMatrix.M11">
            <summary>
            Gets a value from the matrix.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfMatrix.M12">
            <summary>
            Gets a value from the matrix.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfMatrix.M21">
            <summary>
            Gets a value from the matrix.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfMatrix.M22">
            <summary>
            Gets a value from the matrix.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfMatrix.OffsetX">
            <summary>
            Gets the x translation value.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfMatrix.OffsetY">
            <summary>
            Gets the y translation value.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfMatrix.IsIdentity">
            <summary>
            Indicates whether this matrix is the identity matrix.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Drawing.PdfMatrix.IsInvertible">
            <summary>
            Indicates whether this matrix is invertible, i. e. its determinant is not zero.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Drawing.PdfMatrixOrder">
            <summary>
            PdfMatrixOrder
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Drawing.PdfMatrixOrder.Prepend">
            <summary>
            The new operation is applied before the old operation.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Drawing.PdfMatrixOrder.Append">
            <summary>
            The new operation is applied after the old operation.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Filters.ASCII85Decode">
            <summary>
            Implements the ASCII85Decode filter.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Filters.Filter">
            <summary>
            Base class for all stream filters
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Filters.Filter.Encode(System.Byte[])">
            <summary>
            When implemented in a derived class encodes the specified data.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Filters.Filter.Encode(System.String)">
            <summary>
            Encodes a raw string.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Filters.Filter.Decode(System.Byte[],Telerik.Reporting.Pdf.Filters.FilterParms)">
            <summary>
            When implemented in a derived class decodes the specified data.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Filters.Filter.DecodeToString(System.Byte[],Telerik.Reporting.Pdf.Filters.FilterParms)">
            <summary>
            Decodes to a raw string.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Filters.Filter.RemoveWhiteSpace(System.Byte[])">
            <summary>
            Removes all white spaces from the data. The function assumes that the bytes are characters.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Filters.ASCIIHexDecode">
            <summary>
            Implements the ASCIIHexDecode filter.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Filters.Filtering">
            <summary>
            Summary description for Filtering.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Filters.Filtering.GetFilter(System.String)">
            <summary>
            Gets the filter specified by the case sensitive name.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Filters.Filtering.ASCIIHexDecode">
            <summary>
            Gets the filter singleton.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Filters.Filtering.ASCII85Decode">
            <summary>
            Gets the filter singleton.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Filters.Filtering.FlateDecode">
            <summary>
            Gets the filter singleton.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Filters.FlateDecode">
            <summary>
            Implements the FlateDecode filter by wrapping SharpZipLib.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.BitsWriter.Clear">
            <summary>
            Clear buffer.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.BitsWriter.WriteBits(System.Byte,System.Int32)">
            <summary>
            Write bits into the internal buffer.
            </summary>
            <param name="value">Value to get bits from.</param>
            <param name="n">Number of bits.</param>
        </member>
        <member name="P:Telerik.Reporting.Pdf.BitsWriter.BitsLeft">
            <summary>
            Gets number of the bits left in the buffer.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.BitsWriter.IsEmpty">
            <summary>
            Gets value which indicates that buffer is empty (no bits have been written).
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.BitsWriter.IsFull">
            <summary>
            Gets value which indicates whether all bits in the buffer have been written.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.BitsWriter.Data">
            <summary>
            Gets writer data.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.FontDescriptor">
            <summary>
            Base class for all font descriptors.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Fonts.FontDescriptor.FontMetrics">
            <summary>
            Under Construction
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.CMap4">
            <summary>
            CMap format 4: Segment mapping to delta values.
            The Windows standard format.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.CMap4.GlyphIndexToPdfWidth(System.Int32)">
            <summary>
            Converts the width of a glyph identified by its index to PDF design units.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.CMapTable">
            <summary>
            Character To Glyph Index Mapping Table
            This table defines the mapping of character codes to the glyph index 
            values used in the font. It may contain more than one subtable, in 
            order to support more than one character encoding scheme. Character 
            codes that do not correspond to any glyph in the font should be mapped 
            to glyph index 0. The glyph at this location must be a special glyph 
            representing a missing character, commonly known as .notdef.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.TrueTypeTable.Prepare">
            <summary>
            When overridden in a derived class, prepares the font table to be 
            compiled into its binary representation.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.TrueTypeTable.CalculateChecksum">
            <summary>
            Calculates the checksum of a table represented by its bytes.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Fonts.TrueType.CMapTable.symbol">
            <summary>
            Is true for symbol font encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.ControlValueProgramTable">
            <summary>
            This table contains a list of values that can be referenced by 
            instructions. They can be used, among other things, to control 
            characteristics for different glyphs. The length of the table must be 
            an integral number of FWORD units.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.DirectoryEntry">
            <summary>
            Represents an entry in the TableDirectory of a TrueType font program.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Fonts.TrueType.DirectoryEntry.Tag">
            <summary>
            4 -byte tag.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Fonts.TrueType.DirectoryEntry.Checksum">
            <summary>
            CheckSum for this table.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Fonts.TrueType.DirectoryEntry.Offset">
            <summary>
            Offset from beginning of TrueType font file.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Fonts.TrueType.DirectoryEntry.TableLength">
            <summary>
            Actual table length of this table in bytes.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Fonts.TrueType.DirectoryEntry.Padded4ByteLength">
            <summary>
            Gets the table length rounded up to a multiple of 4 bytes.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.FontCollectionProgram">
            <summary>
            Represents a TrueType Collection (.ttc).
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontReader.ReadByte">
            <summary>
            Reads a System.Byte.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontReader.ReadShort">
            <summary>
            Reads a System.Int16.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontReader.ReadUShort">
            <summary>
            Reads a System.UInt16.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontReader.ReadLong">
            <summary>
            Reads a System.Int32.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontReader.ReadULong">
            <summary>
            Reads a System.UInt32.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontReader.ReadFixed">
            <summary>
            Reads a System.Int32.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontReader.ReadFWord">
            <summary>
            Reads a System.Int16.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontReader.ReadUFWord">
            <summary>
            Reads a System.UInt16.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontReader.ReadLongDate">
            <summary>
            Reads a System.Int64.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontReader.ReadString(System.Int32)">
            <summary>
            Reads a System.String with the specified size.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontReader.ReadBytes(System.Int32)">
            <summary>
            Reads a System.Byte[] with the specified size.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontReader.ReadBytes(System.UInt32)">
            <summary>
            Reads a System.Byte[] with the specified size.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontReader.ReadTag">
            <summary>
            Reads a System.Char[4] as System.String.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.TrueTypeCollectionHeader">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.TrueTypeCollectionHeaderVersion1">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.TrueTypeCollectionHeaderVersion2">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.FontDataProviderLinux">
            <summary>
            Class that will provide the font data under Linux. Yet to be implemented.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.FontDescriptorInfo">
            <summary>
            A collection of information that uniquely idendifies a particular font.
            Used to map PdfFontDictionary to Drawing.PdfFontDictionary.
            There is a one to one relationship between a FontDescriptorInfo and a 
            TrueType/OpenType file.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontDescriptorInfo.ToString">
            <summary>
            Returns a string for diagnostic purposes only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.FontHeaderTable">
            <summary>
            Font Header
            This table gives global information about the font. The bounding box 
            values should be computed using only glyphs that have contours. Glyphs 
            with no contours should be ignored for the purposes of these 
            calculations.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontProgram.Decompile">
            <summary>
            Reads all required tables from the font program starting at the 
            specified offset.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontProgram.Compile">
            <summary>
            Compiles the font to its binary representation.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontProgram.GenerateSubSet(System.Collections.Generic.Dictionary{System.Int32,Telerik.Reporting.Pdf.Fonts.TrueType.GlyphInfo})">
            <summary>
            Creates a new font image that is a subset of this font image 
            containing only the specified glyphs.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontProgram.AddTable(Telerik.Reporting.Pdf.Fonts.TrueType.TrueTypeTable)">
            <summary>
            Adds the specified table to this font image.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.FontProgramTable">
            <summary>
            Font Program Table
            This table is similar to the CVT Program, except that it is only run 
            once, when the font is first used. It is used only for FDEFs and IDEFs. 
            Thus the CVT Program need not contain function definitions. However, 
            the CVT Program may redefine existing FDEFs or IDEFs.
            This table is optional. 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.FontWriter">
            <summary>
            Represents a writer for generation of font file streams. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontWriter.Close(System.Boolean)">
            <summary>
            Closes the writer and, if specified, the underlying stream.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontWriter.Close">
            <summary>
            Closes the writer and the underlying stream.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontWriter.WriteByte(System.Byte)">
            <summary>
            Writes the specified value to the font stream.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontWriter.WriteByte(System.Int32)">
            <summary>
            Writes the specified value to the font stream.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontWriter.WriteShort(System.Int16)">
            <summary>
            Writes the specified value to the font stream using big-endian.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontWriter.WriteShort(System.Int32)">
            <summary>
            Writes the specified value to the font stream using big-endian.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontWriter.WriteUShort(System.UInt16)">
            <summary>
            Writes the specified value to the font stream using big-endian.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontWriter.WriteUShort(System.Int32)">
            <summary>
            Writes the specified value to the font stream using big-endian.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontWriter.WriteInt(System.Int32)">
            <summary>
            Writes the specified value to the font stream using big-endian.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.FontWriter.WriteUInt(System.UInt32)">
            <summary>
            Writes the specified value to the font stream using big-endian.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Fonts.TrueType.FontWriter.Stream">
            <summary>
            Gets the underlying stream.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Fonts.TrueType.FontWriter.Position">
            <summary>
            Gets or sets the position within the stream.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.GlyphDataTable">
            <summary>
            This table contains information that describes the glyphs in the font in the TrueType outline format.
            Information regarding the rasterizer (scaler) refers to the TrueType rasterizer. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.GlyphDataTable.Prepare">
            <summary>
            Prepares the font table to be compiled into its binary representation.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.GlyphDataTable.GetGlyphData(System.Int32)">
            <summary>
            Gets the data of the specified glyph.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.GlyphDataTable.GetGlyphSize(System.Int32)">
            <summary>
            Gets the size of the byte array that defines the glyph.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.GlyphDataTable.GetOffset(System.Int32)">
            <summary>
            Gets the offset of the specified glyph relative to the first byte of the font image.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.GlyphDataTable.CompleteGlyphClosure(System.Collections.Generic.Dictionary{System.Int32,Telerik.Reporting.Pdf.Fonts.TrueType.GlyphInfo})">
            <summary>
            Adds for all composite glyphs the glyphs the composite one is made of.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.GlyphDataTable.AddCompositeGlyphs(System.Collections.Generic.Dictionary{System.Int32,Telerik.Reporting.Pdf.Fonts.TrueType.GlyphInfo},System.Int32)">
            <summary>
            If the specifed glyph is a composite glyph add the glyphs it is made of the the glyph table.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.GlyphSubstitutionTable">
            <summary>
            The Glyph Substitution table (GSUB) contains information for 
            substituting glyphs to render the scripts and language systems 
            supported in a font. Many language systems require glyph substitutes. 
            For example, in the Arabic script, the glyph shape that depicts a 
            particular character varies according to its position in a word or text 
            string (see figure 1). In other language systems, glyph substitutes are 
            aesthetic options for the user, such as the use of ligature glyphs in 
            the English language (see Figure 2).
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.HorizontalHeaderTable">
            <summary>
            Horizontal Header Table
            This table contains information for horizontal layout. The values in 
            the minRightSidebearing, minLeftSideBearing and xMaxExtent should be 
            computed using only  glyphs that have contours. Glyphs with no contours 
            should be ignored for the purposes of these calculations. All reserved 
            areas must be set to 0.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.HorizontalMetricsTable">
            <summary>
            Horizontal Metrics Table
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.IndexToLocationTable">
            <summary>
            Index to Location Table
            The indexToLoc table stores the offsets to the locations of the glyphs 
            in the font, relative to the beginning of the glyphData table. In order 
            to compute the length of the last glyph element, there is an extra 
            entry after the last valid index.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.IndexToLocationTable.Prepare">
            <summary>
            Prepares the font table to be compiled into its binary representation.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.MaximumProfileTable">
            <summary>
            This table establishes the memory requirements for this font.
            Fonts with CFF data must use Version 0.5 of this table, specifying only the numGlyphs field.
            Fonts with TrueType outlines must use Version 1.0 of this table, where all data is required.
            Both formats of OpenType require a 'maxp' table because a number of applications call the 
            Windows GetFontData() API on the 'maxp' table to determine the number of glyphs in the font.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.NameTable">
             <summary>
             The naming table allows multilingual strings to be associated with the 
             OpenTypeTM font file. These strings can represent copyright notices, 
             font names, family names, style names, and so on. To keep this table 
             short, the font manufacturer may wish to make a limited set of entries 
             in some small set of languages; later, the font can be "localized" and 
             the strings translated or added. Other parts of the OpenType font file 
             that require these strings can then refer to them simply by their index 
             number. Clients that need a particular string can look it up by its 
             platform ID, character encoding ID, language ID and name ID. Note that 
             some platforms may require single byte character strings, while others 
             may require double byte strings. 
            
             For historical reasons, some applications which install fonts perform 
             version control using Macintosh platform (platform ID 1) strings from 
             the 'name' table. Because of this, we strongly recommend that the 
             'name' table of all fonts include Macintosh platform strings and that 
             the syntax of the version number (name id 5) follows the guidelines 
             given in this document.
             </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.NameTable.NameRecord">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.OS2Table">
            <summary>
            The OS/2 table consists of a set of metrics that are required in 
            OpenType fonts. 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.PostScriptTable">
            <summary>
            Post Script Table
            This table contains additional information needed to use TrueType or 
            OpenTypeTM fonts on PostScript printers. 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Fonts.TrueType.TrueTypeDescriptor">
            <summary>
            The TrueType font descriptor.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.TrueTypeDescriptor.CharCodeToGlyphIndex(System.UInt16)">
            <summary>
            Maps a unicode to the index of the corresponding glyph.
            See OpenType spec "cmap - Character To Glyph Index Mapping Table / Format 4: Segment mapping to delta values"
            for details about this a little bit strange looking algorhitm.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.TrueTypeDescriptor.GlyphIndexToPdfWidth(System.Int32)">
            <summary>
            Converts the width of a glyph identified by its index to PDF design units.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.TrueTypeDescriptor.Initialize">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.TrueTypeFontWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Pdf.Fonts.TrueType.TrueTypeFontWriter"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Fonts.TrueType.TrueTypeFontWriter.WriteTag(System.String)">
            <summary>
            Writes a table name.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.IO.Chars">
            <summary>
            Character table by name.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.IO.DocEncoding">
            <summary>
            An encoder for PDF DocEncoding.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.IO.DocEncoding.AnsiToDoc">
            <summary>
            Converts WinAnsi to DocEncode characters. Incomplete, just maps € and some other characters.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.IO.PdfEncoding">
            <summary>
            Summary description for PdfEncoding.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.IO.PdfEncoding.ToString(System.Single)">
            <summary>
            Converts a float into a string with up to 3 decimal digits and a decimal point.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.IO.PdfEncoding.ToString(System.Drawing.Drawing2D.Matrix)">
            <summary>
            Converts an Matrix into a string with up to 3 decimal digits and a decimal point.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.IO.PdfEncoding.ToString(System.Drawing.Color)">
            <summary>
            Converts an Color into a string with up to 3 decimal digits and a decimal point.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.IO.PdfEncoding.ToStringLiteral(System.Byte[],System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Converts the specified byte array into a byte array representing a
            string literal.
            </summary>
            <param name="bytes">The bytes of the string.</param>
            <param name="unicode">Indicates whether one or two bytes are one
            character.</param>
            <param name="unicodePrefix">Indicates whether to use Unicode prefix FEFF.</param>
            <param name="hex">Indicates whether to create a hexadecimal string
            literal.</param>
            <returns>The PDF bytes.</returns>
        </member>
        <member name="P:Telerik.Reporting.Pdf.IO.PdfEncoding.RawEncoding">
            <summary>
            Gets the ASCII encoding.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.IO.PdfEncoding.WinAnsiEncoding">
            <summary>
            Gets the Windows 1252 (ANSI) encoding.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.IO.PdfEncoding.DocEncoding">
            <summary>
            Gets the PDF DocEncoding encoding.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.IO.PdfEncoding.UnicodeEncoding">
            <summary>
            Gets the UNICODE little-endian encoding.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.IO.PdfEncoding.RawUnicodeEncoding">
            <summary>
            Gets the raw Unicode encoding.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.IO.PdfWriter.IncreaseIndent">
            <summary>
            Increases indent level.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.IO.PdfWriter.DecreaseIndent">
            <summary>
            Decreases indent level.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.IO.PdfWriter.WriteBeginObject(Telerik.Reporting.Pdf.PdfObject)">
            <summary>
            Begins a direct or indirect dictionary or array.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.IO.PdfWriter.WriteEndObject">
            <summary>
            Ends a direct or indirect dictionary or array.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.IO.PdfWriter.IndentBlanks">
            <summary>
            Gets an indent string of current indent.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.IO.PdfWriterMode">
            <summary>
            Determines how the PDF output stream is formatted. Even all formats create valid PDF files,
            only Compact or Standard should be used for production purposes.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.IO.PdfWriterMode.Compact">
            <summary>
            The PDF stream contains no unnecessary characters. This is default in release build.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.IO.PdfWriterMode.Standard">
            <summary>
            The PDF stream contains some superfluous line feeds, but is more readable.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.IO.PdfWriterMode.Indented">
            <summary>
            The PDF stream is indented to reflect the nesting levels of the objects. This is usedful
            for analysing PDF files, but increases the size of the file significantly.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.IO.PdfWriterMode.Verbose">
            <summary>
            The PDF stream is indented to reflect the nesting levels of the objects and contains additional
            information about the PDFsharp objects. Furthermore content streams are not deflated. This 
            is usedful for debugging purposes only and increases the size of the file significantly.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.IO.RawEncoding">
            <summary>
            An encoder for raw strings. The raw encoding is simply the identity relation between
            charachters and bytes. Telerik PDF internally works with raw encoded strings instead of
            byte arrays because strings are much more handy than byte arrays.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.IO.RawUnicodeEncoding">
            <summary>
            An encoder for Unicode strings.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.JavaScriptActionDictionary">
            <summary>
            A JavaScript action (PDF 1.3) causes a script to be compiled and 
            executed by the JavaScript interpreter. Depending on the nature of the 
            script, various interactive form fields in the document may update their 
            values or change their visual appearances. Netscape Communications 
            Corporation’s Client-Side JavaScript Reference and the Adobe JavaScript 
            for Acrobat API Reference (see the Bibliography) give details on the 
            contents and effects of JavaScript scripts. Table 8.90 shows the action 
            dictionary entries specific to this type of action.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.JavaScriptActionDictionary.JS">
            <summary>
            The actual javascript source code.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.JavaScriptActionDictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.JavaScriptActionDictionary.Keys.S">
            <summary>
            (Required) The type of action that this dictionary describes;
             must be JavaScriptNameTree for a JavaScriptNameTree action.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.JavaScriptActionDictionary.Keys.JS">
            <summary>
            (Required) A text string or text stream containing the 
            JavaScriptNameTree script to be executed.
            _Note: PDFDocEncoding or Unicode encoding (the latter identified 
            by the Unicode prefix U+ FEFF) is used to encode the contents 
            of the string or stream. (See implementation _note 126 in 
            Appendix H.)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.JavaScriptActionDictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.KeyType">
            <summary>
            Specifes the type of a key's value in a dictionary.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.KeyInfoAttribute">
            <summary>
            Summary description for KeyInfo.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Metadata.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Metadata.Keys.Type">
            <summary>
            (Optional) The type of PDF object that this dictionary describes; if present,
            must be Annot for an annotation dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Metadata.Keys.Subtype">
            <summary>
            (Required) The type of annotation that this dictionary describes.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Native.NativeMethods">
            <summary>
            Required native Win32 calls. Don't know what to do under Mono.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Native.NativeMethods.LOGFONT">
            <summary>
            Reflected from System.Drawing.SafeNativeMethods+LOGFONT
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.OutputIntent.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.OutputIntent.Keys.Type">
            <summary>
            (Optional; PDF 1.1) The type of PDF object that this dictionary describes; if present, must be OutputIntent for an output intent dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.OutputIntent.Keys.S">
            <summary>
            (Required) The output intent subtype; must be GTS_PDFX for a PDF/X and GTS_PDFA for PDF/A output intent.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.OutputIntent.Keys.OutputCondition">
            <summary>
            (Optional) An ASCII string concisely identifying the intended output device or production condition in human-readable form. This is the preferred method of defining such a string for presentation to the user.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.OutputIntent.Keys.OutputConditionIdentifier">
            <summary>
            (Required) An ASCII string identifying the intended output device or production condition in human- or machine-readable form. If human-readable, this string may be used in lieu of an OutputCondition string for presentation to the user.
            A typical value for this entry would be the name of a production condition maintained in an industry-standard registry such as the ICC Characterization Data Registry. If the designated condition matches that in effect at production time, the production software is responsible for providing the corresponding ICC profile as defined in the registry.
            If the intended production condition is not a recognized standard, the value of this entry may be Custom or an application-specific, machine-readable name. The DestOutputProfileentry defines the ICC profile, and the Info entry is used for further human-readable identification.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.OutputIntent.Keys.RegistryName">
            <summary>
            (Optional) An ASCII string (conventionally a uniform resource identifier, or URI) identifying the registry in which the condition designated by OutputConditionIdentifier is defined.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.OutputIntent.Keys.Info">
            <summary>
            (Required if OutputConditionIdentifier does not specify a standard production condition; optional otherwise) A human-readable text string containing additional information or comments about the intended target device or production condition.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.OutputIntent.Keys.DestOutputProfile">
            <summary>
            (Required if OutputConditionIdentifier does not specify a standard production condition; optional otherwise) An ICC profile stream defining the transformation from the PDF document’s source colors to output device colorants.
            The format of the profile stream is the same as that used in specifying an ICCBased color space. The output transformation uses the profile’s “from CIE” information(BToA in ICC terminology); the “to CIE” (AToB) information can optionally be used to remap source color values to some other destination color space, such as for screen preview or hardcopy proofing.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.OutputIntent.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.Undefined">
            <summary>
            The width or height of the page are set manually and override the PageSize property.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.A0">
            <summary>
            Identifies a pager sheet size of 841 mm times 1189 mm or 33.11 inch times 46.81 inch.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.A1">
            <summary>
            Identifies a pager sheet size of 594 mm times 841 mm or 23.39 inch times 33.1 inch.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.A2">
            <summary>
            Identifies a pager sheet size of 420 mm times 594 mm or 16.54 inch times 23.29 inch.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.A3">
            <summary>
            Identifies a pager sheet size of 297 mm times 420 mm or 11.69 inch times 16.54 inch.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.A4">
            <summary>
            Identifies a pager sheet size of 210 mm times 297 mm or 8.27 inch times 11.69 inch.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.A5">
            <summary>
            Identifies a pager sheet size of 148 mm times 210 mm or 5.83 inch times 8.27 inch.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.RA0">
            <summary>
            Identifies a pager sheet size of 860 mm times 1220 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.RA1">
            <summary>
            Identifies a pager sheet size of 610 mm times 860 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.RA2">
            <summary>
            Identifies a pager sheet size of 430 mm times 610 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.RA3">
            <summary>
            Identifies a pager sheet size of 305 mm times 430 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.RA4">
            <summary>
            Identifies a pager sheet size of 215 mm times 305 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.RA5">
            <summary>
            Identifies a pager sheet size of 153 mm times 215 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.B0">
            <summary>
            Identifies a pager sheet size of 1000 mm times 1414 mm or 39.37 inch times 55.67 inch.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.B1">
            <summary>
            Identifies a pager sheet size of 707 mm times 1000 mm or 27.83 inch times 39.37 inch.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.B2">
            <summary>
            Identifies a pager sheet size of 500 mm times 707 mm or 19.68 inch times 27.83 inch.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.B3">
            <summary>
            Identifies a pager sheet size of 353 mm times 500 mm or 13.90 inch times 19.68 inch.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.B4">
            <summary>
            Identifies a pager sheet size of 250 mm times 353 mm or 9.84 inch times 13.90 inch.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.B5">
            <summary>
            Identifies a pager sheet size of 176 mm times 250 mm or 6.93 inch times 9.84 inch.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.Quarto">
            <summary>
            Identifies a pager sheet size of 10 inch times 8 inch or 254 mm times 203 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.Foolscap">
            <summary>
            Identifies a pager sheet size of 13 inch times 8 inch or 330 mm times 203 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.Executive">
            <summary>
             Identifies a pager sheet size of 10.5 inch times 7.25 inch or 267 mm times 184 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.GovernmentLetter">
            <summary>
            Identifies a pager sheet size of 10.5 inch times 8 inch 267 mm times 203 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.Letter">
            <summary>
            Identifies a pager sheet size of 11 inch times 8.5 inch 279 mm times 216 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.Legal">
            <summary>
            Identifies a pager sheet size of 14 inch times 8.5 inch 356 mm times 216 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.Ledger">
            <summary>
            Identifies a pager sheet size of 17 inch times 11 inch or 432 mm times 279 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.Tabloid">
            <summary>
            Identifies a pager sheet size of 17 inch times 11 inch or 432 mm times 279 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.Post">
            <summary>
            Identifies a pager sheet size of 19.25 inch times 15.5 inch 489 mm times 394 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.Crown">
            <summary>
            20 ×Identifies a pager sheet size of 20 inch times 15 inch or 508 mm times 381 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.LargePost">
            <summary>
            Identifies a pager sheet size of 21 inch times 16.5 inch 533 mm times 419 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.Demy">
            <summary>
            Identifies a pager sheet size of 22.5 inch times 17.5 inch 572 mm times 445 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.Medium">
            <summary>
            Identifies a pager sheet size of 23 inch times 18 inch or 584 mm times 457 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.Royal">
            <summary>
            Identifies a pager sheet size of 25 inch times 20 inch or 635 mm times 508 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.Elephant">
            <summary>
            Identifies a pager sheet size of 28 inch times 23 inch or 711 mm times 584 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.floatDemy">
            <summary>
            Identifies a pager sheet size of 35 inch times 23.5 inch 889 mm times 597 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.QuadDemy">
            <summary>
            Identifies a pager sheet size of 45 inch times 35 inch or × mm times 1143 × 889 mm.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PageSize.STMT">
            <summary>
            Identifies a pager sheet size of 8.5 inch times 5.5 inch 216 mm times 140 mm.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PageSizeConverter.ToSize(Telerik.Reporting.Pdf.PageSize)">
            <summary>
            Converts the specified page size enumeration to a pair of values in point.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfBoolean">
            <summary>
            Represents a direct boolean value.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfBoolean.ToString">
            <summary>
            Returns 'false' or 'true'.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfBoolean.WriteObject(Telerik.Reporting.Pdf.IO.PdfWriter)">
            <summary>
            Writes 'true' or 'false'.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfCatalogDictionary">
            <summary>
            Summary description for PdfCatalogDictionary.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfCatalogDictionary.PrepareForFinish">
            <summary>
            Dispatches PrepareForSave to the objects that need it.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfCatalogDictionary.Outlines">
            <summary>
            Implementation of PdfDocument.Outlines.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfCatalogDictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes; 
            must be CatalogDictionary for the catalog dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.Version">
            <summary>
            (Optional; PDF 1.4) The version of the PDF specification to which the document
            conforms (for example, 1.4) if later than the version specified in the file’s header.
            If the header specifies a later version, or if this entry is absent, the document 
            conforms to the version specified in the header. This entry enables a PDF producer 
            application to update the version using an incremental update.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.Pages">
            <summary>
            (Required; must be an indirect reference) The page tree node that is the root of 
            the document’s page tree.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.PageLabels">
            <summary>
            (Optional; PDF 1.3) A number tree defining the page labeling for the document. 
            The keys in this tree are page indices; the corresponding values are page label dictionaries.
            Each page index denotes the first page in a labeling range to which the specified page 
            label dictionary applies. The tree must include a value for pageindex 0.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.Names">
            <summary>
            (Optional; PDF 1.2) The document’s name dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.Dests">
            <summary>
            (Optional; PDF 1.1; must be an indirect reference) A dictionary of names and 
            corresponding destinations.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.ViewerPreferences">
            <summary>
            (Optional; PDF 1.2) A viewer preferences dictionary specifying the way the document 
            is to be displayed on the screen. If this entry is absent, applications should use
            their own current user preference settings.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.PageLayout">
            <summary>
            (Optional) A name object specifying the page layout to be used when the document is 
            opened:
            SinglePage - Display one page at a time.
            OneColumn - Display the pages in one column.
            TwoColumnLeft - Display the pages in two columns, with oddnumbered pages on the left.
            TwoColumnRight - Display the pages in two columns, with oddnumbered pages on the right.
            TwoPageLeft - (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the left
            TwoPageRight - (PDF 1.5) Display the pages two at a time, with odd-numbered pages on the right.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.PageMode">
            <summary>
            (Optional) A name object specifying how the document should be displayed when opened:
            UseNone - Neither document outline nor thumbnail images visible.
            UseOutlines - Document outline visible.
            UseThumbs - Thumbnail images visible.
            FullScreen - Full-screen mode, with no menu bar, windowcontrols, or any other window visible.
            UseOC - (PDF 1.5) Optional content group panel visible.
            UseAttachments (PDF 1.6) Attachments panel visible.
            Default value: UseNone.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.Outlines">
            <summary>
            (Optional; must be an indirect reference) The outline dictionary that is the root 
            of the document’s outline hierarchy.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.Threads">
            <summary>
            (Optional; PDF 1.1; must be an indirect reference) An array of thread dictionaries 
            representing the document’s article threads.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.OpenAction">
            <summary>
            (Optional; PDF 1.1) A value specifying a destination to be displayed or an action to be 
            performed when the document is opened. The value is either an array defining a destination 
            or an action dictionary representing an action. If this entry is absent, the document
            should be opened to the top of the first page at the default magnification factor.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.AA">
            <summary>
            (Optional; PDF 1.4) An additional-actions dictionary defining the actions to be taken 
            in response to various trigger events affecting the document as a whole.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.URI">
            <summary>
            (Optional; PDF 1.1) A URI dictionary containing document-level information for URI 
            (uniform resource identifier) actions.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.Metadata">
            <summary>
            (Optional; PDF 1.4; must be an indirect reference) A metadata stream 
            containing metadata  for the document.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.StructTreeRoot">
            <summary>
            (Optional; PDF 1.3) The document’s structure tree root dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.MarkInfo">
            <summary>
            (Optional; PDF 1.4) A mark information dictionary containing information
            about the document’s usage of Tagged PDF conventions.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.Lang">
            <summary>
            (Optional; PDF 1.4) A language identifier specifying the natural language for all 
            text in the document except where overridden by language specificationsfor structure 
            elements or marked content. If this entry is absent, the language is considered unknown.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.SpiderInfo">
            <summary>
            (Optional; PDF 1.3) A Web Capture information dictionary containing state information
            used by the Acrobat Web Capture (AcroSpider) plugin extension.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.OutputIntents">
            <summary>
            (Optional; PDF 1.4) An array of output intent dictionaries describing the color 
            characteristics of output devices on which the document might be rendered.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.PieceInfo">
            <summary>
            (Optional; PDF 1.4) A page-piece dictionary associated with the document.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.OCProperties">
            <summary>
            (Optional; PDF 1.5; required if a document contains optional content) The document’s 
            optional content properties dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.Perms">
            <summary>
            (Optional; PDF 1.5) A permissions dictionary that specifies user access permissions 
            for the document.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.Legal">
            <summary>
            (Optional; PDF 1.5) A dictionary containing attestations regarding the content of a 
            PDF document, as it relates to the legality of digital signatures.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfCatalogDictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfContentDictionary">
            <summary>
            Represents the content of a page. PDFsharp supports only one content stream per page.
            If an imported page has an array of content streams, the streams are concatenated to
            one single stream.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfContentDictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfContentDictionary.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfStream.Keys">
            <summary>
            Common keys for all streams.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfStream">
            <summary>
            Base class for all PDF stream objects.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfStream.owner">
            <summary>
            The dictionary the stream belongs to.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfStream.#ctor(System.Byte[],Telerik.Reporting.Pdf.PdfDictionary)">
            <summary>
            A .NET string can contain char(0) as a valid character.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfStream.SetOwner(Telerik.Reporting.Pdf.PdfDictionary)">
            <summary>
            Moves this instance to another dictionary during object type transformation.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfStream.ToString">
            <summary>
            Returns the strem content a raw string.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfStream.Value">
            <summary>
            Get the bytes of the stream as they are, i.e. if one or more filters exists the bytes are
            not unfiltered.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfStream.UnfilteredValue">
            <summary>
            Gets the value of the stream unfiltered. The stream content is not modified by this operation.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfStream.Keys">
            <summary>
            Common keys for all streams.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfStream.Keys.Length">
            <summary>
            (Required) The number of bytes from the beginning of the line following the keyword
            stream to the last byte just before the keywordendstream. (There may be an additional
            EOL marker, preceding endstream, that is not included in the count and is not logically
            part of the stream data.)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfStream.Keys.Filter">
            <summary>
            (Optional) The name of a filter to be applied in processing the stream data found between
            the keywords stream and endstream, or an array of such names. Multiple filters should be
            specified in the order in which they are to be applied.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfStream.Keys.DecodeParms">
            <summary>
            (Optional) A parameter dictionary or an array of such dictionaries, used by the filters
            specified by Filter. If there is only one filter and that filter has parameters, DecodeParms
            must be set to the filter’s parameter dictionary unless all the filter’s parameters have
            their default values, in which case the DecodeParms entry may be omitted. If there are 
            multiple filters and any of the filters has parameters set to nondefault values, DecodeParms
            must be an array with one entry for each filter: either the parameter dictionary for that
            filter, or the null object if that filter has no parameters (or if all of its parameters have
            their default values). If none of the filters have parameters, or if all their parameters
            have default values, the DecodeParms entry may be omitted.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfStream.Keys.F">
            <summary>
            (Optional; PDF 1.2) The file containing the stream data. If this entry is present, the bytes
            between stream and endstream are ignored, the filters are specified by FFilter rather than
            Filter, and the filter parameters are specified by FDecodeParms rather than DecodeParms.
            However, the Length entry should still specify the number of those bytes. (Usually, there are
            no bytes and Length is 0.)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfStream.Keys.FFilter">
            <summary>
            (Optional; PDF 1.2) The name of a filter to be applied in processing the data found in the
            stream’s external file, or an array of such names. The same rules apply as for Filter.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfStream.Keys.FDecodeParms">
            <summary>
            (Optional; PDF 1.2) A parameter dictionary, or an array of such dictionaries, used by the
            filters specified by FFilter. The same rules apply as for DecodeParms.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfStream.Keys.DL">
            <summary>
            Optional; PDF 1.5) A non-negative integer representing the number of bytes in the decoded
            (defiltered) stream. It can be used to determine, for example, whether enough disk space is
            available to write a stream to a file.
            This value should be considered a hint only; for some stream filters, it may not be possible
            to determine this value precisely.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfStream.EmbeddedFontFileKeys.Length1">
            <summary>
            (Required for Type 1 and TrueType fonts) The length in bytes of the clear-text portion
            of the Type 1 font program (see below), or the entire TrueType font program, after it
            has been decoded using the filters specified by the stream’s Filter entry, if any.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfStream.EmbeddedFontFileKeys.Length2">
            <summary>
            (Required for Type 1 fonts) The length in bytes of the encrypted portion of the Type 1
            font program (see below) after it has been decoded using the filters specified by the
            stream’s Filter entry.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfStream.EmbeddedFontFileKeys.Length3">
            <summary>
            (Required for Type 1 fonts) The length in bytes of the fixed-content portion of the
            Type 1 font program (see below) after it has been decoded using the filters specified
            by the stream’s Filter entry. If Length3 is 0, it indicates that the 512 zeros and
            cleartomark have not been included in the FontFile font program and must be added.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfStream.EmbeddedFontFileKeys.Subtype">
            <summary>
            (Required if referenced from FontFile3; PDF 1.2) A name specifying the format of the
            embedded font program. The name must be Type1C for Type 1 compact fonts,
            CIDFontType0C for Type 0 compact CIDFonts, or OpenType for OpenType fonts.
            When additional font formats are added to PDF, more values will be defined for
            Subtype.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfStream.EmbeddedFontFileKeys.Metadata">
            <summary>
            (Optional; PDF 1.4) A metadata stream containing metadata for the embedded font
            program (see Section 10.2.2, “Metadata Streams”).
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfContentDictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfContents">
            <summary>
            Represents an array of PDF content streams of a page.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfContents.AppendContent">
            <summary>
            Appends a new content stream and returns it.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfDate">
            <summary>
            Represents a direct date value.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfDate.ToString">
            <summary>
            Returns the value in the PDF date format.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfDate.WriteObject(Telerik.Reporting.Pdf.IO.PdfWriter)">
            <summary>
            Writes the value in the PDF date format.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfDate.ParseDateTime(System.String,System.DateTime)">
            <summary>
            Parses a PDF date string.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.DictionaryElements.GetValueType(System.String)">
            <summary>
            Returns the type of the object to be created as value of the specified key.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.DictionaryElements.GetValue(System.String,Telerik.Reporting.Pdf.CreationOptions)">
            <summary>
            Gets the value for the specified key. If the value does not exists, it is optionally created.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.DictionaryElements.SetName(System.String,System.String)">
            <summary>
            Sets the specified name value.
            If the value doesn't start with a slash, it is added automatically.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.DictionaryElements.GetName(System.String)">
            <summary>
            Converts the specified value to a name.
            If the value not exists, the function returns the empty string.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.DictionaryElements.GetInteger(System.String,System.Boolean)">
            <summary>
            Converts the specified value to integer.
            If the value not exists, the function returns 0.
            If the value is not convertible, the function throws an InvalidCastException.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.DictionaryElements.GetString(System.String,System.Boolean)">
            <summary>
            Converts the specified value to String.
            If the value not exists, the function returns the empty string.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.DictionaryElements.GetRectangle(System.String,System.Boolean)">
            <summary>
            Converts the specified value to PdfRectangle.
            If the value not exists, the function returns an empty rectangle.
            If the value is not convertible, the function throws an InvalidCastException.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.DictionaryElements.KeyNames">
            <summary>
            Gets all keys currently in use in this dictionary as an array
            of PdfName objects.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.DictionaryElements.Item(Telerik.Reporting.Pdf.PdfName)">
            <summary>
            Gets or sets an entry in the dictionary identified by a PdfName object.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfDocument.AddPage">
            <summary>
            Creates a new page and adds it to this document.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfDocument.PrepareForFinish">
            <summary>
            Dispatches PrepareForSave to the objects that need it.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDocument.Outlines">
            <summary>
            Gets the root of the outline (or bookmark) tree.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDocument.Pages">
            <summary>
            Get the pages dictionary.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDocument.CatalogDictionary">
            <summary>
            Gets the PdfCatalogDictionary of the current document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDocument.PdfReferenceTable">
            <summary>
            Gets the cross-reference table of the current document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDocument.ExtGStateTable">
            <summary>
            Gets the document ExtGState table that holds all form state objects
            used in the current document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDocument.FontTable">
            <summary>
            Gets the document font table that holds all fonts used in the current document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDocument.ImageTable">
            <summary>
            Gets the document gdiImage table that holds all images used in the
            current document.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary">
            <summary>
            Summary description for PdfDocumentInformationDictionary.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.Creator">
            <summary>
            Gets or sets the creator application.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.Producer">
            <summary>
            Gets the producer application.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.CreationDate">
            <summary>
            Gets or sets the creation date.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.ModificationDate">
            <summary>
            Gets or sets the modification date.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.Keys.Title">
            <summary>
            (Optional; PDF 1.1) The document’s title.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.Keys.Author">
            <summary>
            (Optional) The name of the person who created the document.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.Keys.Subject">
            <summary>
            (Optional; PDF 1.1) The subject of the document.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.Keys.Keywords">
            <summary>
            (Optional; PDF 1.1) Keywords associated with the document.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.Keys.Creator">
            <summary>
            (Optional) If the document was converted to PDF from another format,
            the name of the application (for example, empira MigraDoc®) that created the
            original document from which it was converted.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.Keys.Producer">
            <summary>
            (Optional) If the document was converted to PDF from another format,
            the name of the application (for example, this library) that converted it to PDF.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.Keys.CreationDate">
            <summary>
            (Optional) The date and time the document was created, in human-readable form.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.Keys.ModDate">
            <summary>
            (Required if PieceInfo is present in the document catalog; otherwise optional; PDF 1.1)
            The date and time the document was most recently modified, in human-readable form.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.Keys.Trapped">
            <summary>
            (Optional; PDF 1.3) A name object indicating whether the document has been modified 
            to include trapping information.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfDocumentInformationDictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfDocumentOptions">
            <summary>
            Represents a set of document generation options.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.FontEmbeddingKind.None">
            <summary>
            Does not embed fonts.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.FontEmbeddingKind.Subset">
            <summary>
            Embeds only used subsets of the fonts.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.FontEmbeddingKind.Full">
            <summary>
            Fully embeds fonts.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary">
            <summary>
            Represents an extended graphics state object.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys">
            <summary>
            Common keys for all streams.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.Type">
            <summary>
            (Optional) The type of PDF object that this dictionary describes;
            must be ExtGState for a graphics state parameter dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.LW">
            <summary>
            (Optional; PDF 1.3) The line width (see “Line Width” on page 185).
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.LC">
            <summary>
            (Optional; PDF 1.3) The line cap style.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.LJ">
            <summary>
            (Optional; PDF 1.3) The line join style.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.ML">
            <summary>
            (Optional; PDF 1.3) The miter limit.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.D">
            <summary>
            (Optional; PDF 1.3) The line dash pattern, expressed as an array of the form
            [dashArray dashPhase], where dashArray is itself an array and dashPhase is an integer.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.RI">
            <summary>
            (Optional; PDF 1.3) The name of the rendering intent.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.OP">
            <summary>
            (Optional) A flag specifying whether to apply overprint. In PDF 1.2 and earlier,
            there is a single overprint parameter that applies to all painting operations.
            Beginning with PDF 1.3, there are two separate overprint parameters: one for stroking 
            and one for all other painting operations. Specifying an OP entry sets both parameters
            unless there is also an op entry in the same graphics state parameter dictionary, in
            which case the OP entry sets only the overprint parameter for stroking.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.op">
            <summary>
            (Optional; PDF 1.3) A flag specifying whether to apply overprintfor painting operations
            other than stroking. If this entry is absent, the OP entry, if any, sets this parameter.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.OPM">
            <summary>
            (Optional; PDF 1.3) The overprint mode.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.Font">
            <summary>
            (Optional; PDF 1.3) An array of the form [font size], where font is an indirect
             reference to a font dictionary and size is a number expressed in text space units.
             These two objects correspond to the operands of the Tf operator; however,
             the first operand is an indirect object reference instead of a resource name.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.BG">
            <summary>
            (Optional) The black-generation function, which maps the interval [0.0 1.0]
            to the interval [0.0 1.0].
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.BG2">
            <summary>
            (Optional; PDF 1.3) Same as BG except that the value may also be the name Default,
            denoting the black-generation function that was in effect at the start of the page.
            If both BG and BG2 are present in the same graphics state parameter dictionary, 
            BG2 takes precedence.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.UCR">
            <summary>
            (Optional) The undercolor-removal function, which maps the interval
            [0.0 1.0] to the interval [-1.0 1.0].
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.UCR2">
            <summary>
            (Optional; PDF 1.3) Same as UCR except that the value may also be the name Default,
            denoting the undercolor-removal function that was in effect at the start of the page.
            If both UCR and UCR2 are present in the same graphics state parameter dictionary, 
            UCR2 takes precedence.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.CA">
            <summary>
            (Optional; PDF 1.4) The current stroking alpha constant, specifying the constant 
            shape or constant opacity value to be used for stroking operations in the transparent
            imaging model.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.ca">
            <summary>
            (Optional; PDF 1.4) Same as CA, but for nonstroking operations.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.AIS">
            <summary>
            (Optional; PDF 1.4) The alpha source flag (“alpha is shape”), specifying whether 
            the current soft mask and alpha constant are to be interpreted as shape values (true)
            or opacity values (false).
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.TK">
            <summary>
            (Optional; PDF 1.4) The text knockout flag, which determines the behavior of 
            overlapping glyphs within a text object in the transparent imaging model.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateDictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateTable">
            <summary>
            Contains all used ExtGState objects of a document.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfResourceTable">
            <summary>
            Base class for FontTable, ImageTable, FormXObjectTable etc.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateTable.strokes">
            <summary>
            Maps from alpha values (range "0" to "1000") to PdfExtendedGraphicsStateDictionary objects.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateTable.#ctor(Telerik.Reporting.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of this class, which is a singleton for each document.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateTable.GetStrokeState(System.Single)">
            <summary>
            Gets a PdfExtendedGraphicsStateDictionary with the key 'CA' set to the specified alpha value.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfExtendedGraphicsStateTable.GetFillState(System.Single)">
            <summary>
            Gets a PdfExtendedGraphicsStateDictionary with the key 'ca' set to the specified alpha value.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary">
            <summary>
            A PDF font descriptor specifies metrics and other attributes of a simple font, 
            as distinct from the metrics of individual glyphs.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes; must be
            FontDescriptor for a font trueTypeDescriptor.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.FontName">
            <summary>
            (Required) The PostScript name of the font. This name should be the same as the 
            value of BaseFont in the font or DESCENDANT dictionary that refers to this font trueTypeDescriptor.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.FontFamily">
            <summary>
            (Optional; PDF 1.5; strongly recommended for Type 3 fonts in Tagged PDF documents)
            A string specifying the preferred font family name. For example, for the font 
            Times Bold Italic, the FontFamily is Times.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.FontStretch">
            <summary>
            (Optional; PDF 1.5; strongly recommended for Type 3 fonts in Tagged PDF documents)
            The font stretch value. It must be one of the following names (ordered from 
            narrowest to widest): UltraCondensed, ExtraCondensed, Condensed, SemiCondensed, 
            Normal, SemiExpanded, Expanded, ExtraExpanded or UltraExpanded.
            Note: The specific interpretation of these values varies from font to font. 
            For example, Condensed in one font may appear most similar to Normal in another.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.FontWeight">
            <summary>
            (Optional; PDF 1.5; strongly recommended for Type 3 fonts in Tagged PDF documents)
            The weight (thickness) component of the fully-qualified font name or font specifier.
            The possible values are 100, 200, 300, 400, 500, 600, 700, 800, or 900, where each
            number indicates a weight that is at least as dark as its predecessor. A value of 
            400 indicates a normal weight; 700 indicates bold.
            Note: The specific interpretation of these values varies from font to font. 
            For example, 300 in one font may appear most similar to 500 in another.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.Flags">
            <summary>
            (Required) A collection of flags defining various characteristics of the font.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.FontBBox">
            <summary>
            (Required, except for Type 3 fonts) A rectangle (see Section 3.8.4, “Rectangles”),
            expressed in the glyph coordinate system, specifying the font bounding box. This 
            is the smallest rectangle enclosing the shape that would result if all of the 
            glyphs of the font were placed with their origins coincident and then filled.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.ItalicAngle">
            <summary>
            (Required) The angle, expressed in degrees counterclockwise from the vertical, of
            the dominant vertical strokes of the font. (For example, the 9-o’clock position is 90 
            degrees, and the 3-o’clock position is –90 degrees.) The value is negative for fonts 
            that slope to the right, as almost all italic fonts do.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.Ascent">
            <summary>
            (Required, except for Type 3 fonts) The maximum height above the baseline reached 
            by glyphs in this font, excluding the height of glyphs for accented characters.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.Descent">
            <summary>
            (Required, except for Type 3 fonts) The maximum depth below the baseline reached 
            by glyphs in this font. The value is a negative number.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.Leading">
            <summary>
            (Optional) The spacing between baselines of consecutive lines of text.
            Default value: 0.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.CapHeight">
            <summary>
            (Required for fonts that have Latin characters, except for Type 3 fonts) The vertical
            coordinate of the top of flat capital letters, measured from the baseline.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.XHeight">
            <summary>
            (Optional) The font’s x height: the vertical coordinate of the top of flat nonascending
            lowercase letters (like the letter x), measured from the baseline, in fonts that have 
            Latin characters. Default value: 0.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.StemV">
            <summary>
            (Required, except for Type 3 fonts) The thickness, measured horizontally, of the dominant 
            vertical stems of glyphs in the font.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.StemH">
            <summary>
            (Optional) The thickness, measured vertically, of the dominant horizontal stems 
            of glyphs in the font. Default value: 0.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.AvgWidth">
            <summary>
            (Optional) The average width of glyphs in the font. Default value: 0.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.MaxWidth">
            <summary>
            (Optional) The maximum width of glyphs in the font. Default value: 0.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.MissingWidth">
            <summary>
            (Optional) The width to use for character codes whose widths are not specified in a 
            font dictionary’s Widths array. This has a predictable effect only if all such codes 
            map to glyphs whose actual widths are the same as the value of the MissingWidth entry.
            Default value: 0.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.FontFile">
            <summary>
            (Optional) A stream containing a Type 1 font program.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.FontFile2">
            <summary>
            (Optional; PDF 1.1) A stream containing a TrueType font program.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.FontFile3">
            <summary>
            (Optional; PDF 1.2) A stream containing a font program whose format is specified 
            by the Subtype entry in the stream dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.CharSet">
            <summary>
            (Optional; meaningful only in Type 1 fonts; PDF 1.1) A string listing the character
            names defined in a font subset. The names in this string must be in PDF syntax—that is,
            each name preceded by a slash (/). The names can appear in any order. The name .notdef
            should be omitted; it is assumed to exist in the font subset. If this entry is absent,
            the only indication of a font subset is the subset tag in the FontName entry.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfFontDescriptorDictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfFontDescriptorFlags">
            <summary>
            The PDF font descriptor flags.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorFlags.FixedPitch">
            <summary>
            All glyphs have the same width (as opposed to proportional or variable-pitch
            fonts, which have different widths).
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorFlags.Serif">
            <summary>
            Glyphs have serifs, which are short strokes drawn at an angle on the top and
            bottom of glyph stems. (Sans serif fonts do not have serifs.)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorFlags.Symbolic">
            <summary>
            Font contains glyphs outside the Adobe standard Latin character set. This
            flag and the Nonsymbolic flag cannot both be set or both be clear.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorFlags.Script">
            <summary>
            Glyphs resemble cursive handwriting.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorFlags.Nonsymbolic">
            <summary>
            Font uses the Adobe standard Latin character set or a subset of it.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorFlags.Italic">
            <summary>
            Glyphs have dominant vertical strokes that are slanted.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorFlags.AllCap">
            <summary>
            Font contains no lowercase letters; typically used for display purposes,
            such as for titles or headlines.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorFlags.SmallCap">
            <summary>
            Font contains both uppercase and lowercase letters. The uppercase letters are
            similar to those in the regular version of the same typeface family. The glyphs
            for the lowercase letters have the same shapes as the corresponding uppercase
            letters, but they are sized and their proportions adjusted so that they have the
            same size and stroke weight as lowercase glyphs in the same typeface family.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontDescriptorFlags.ForceBold">
            <summary>
            Determines whether bold glyphs are painted with extra pixels even at very small
            text sizes.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfFontInfo">
            <summary>
            A collection of information that uniquely idendifies a particular 
            PDF font. Two PDF fonts are equal if and only if their font imageInfo 
            objects are equal.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfFontInfo.#ctor(Telerik.Reporting.Pdf.Drawing.PdfFont)">
            <summary>
            Initializes a new instance of PdfFontSelector from an PdfFontDictionary.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfFontInfo.ToString">
            <summary>
            Returns a string for diagnostic purposes only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfFontInfo.Name">
            <summary>
            Gets the (generated) resource name of the font. In our own PDF 
            files equal fonts share the same resource name in all contents
            streams.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontInfo.FontType.TrueType">
            <summary>
            TrueType with WinAnsi encoding.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontInfo.FontType.Type0">
            <summary>
            TrueType with Identity-H encoding (unicode).
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfFontTable">
            <summary>
            Contains all used fonts of a document.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontTable.fonts">
            <summary>
            Map from PdfFontInfo to PdfFontDictionary.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfFontTable.#ctor(Telerik.Reporting.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of this class, which is a singleton for each document.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfFontTable.GetFont(Telerik.Reporting.Pdf.Drawing.PdfFont)">
            <summary>
            Gets a PdfFontDictionary from an Drawing.PdfFontDictionary. 
            If no PdfFontDictionary already exists, a new one is created.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfFontTable.GetDescriptor(Telerik.Reporting.Pdf.Drawing.PdfFont)">
            <summary>
            Gets the FontDescriptor identified by the specified FontDescriptorInfo. 
            If no such objects exists, a new FontDescriptor is created and
            added to the stock.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfFontType0Dictionary">
            <summary>
            Represents a Type0 composite font with Identity-H encoding.
            Contains PdfCIDFontType2Dictionary and PdfToUnicodeCMapDictionary.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfFontType0Dictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfFontType0Dictionary.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes;
            must be Font for a font dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.Keys.Subtype">
            <summary>
            (Required) The type of font; must be Type0 for a Type 0 font.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.Keys.BaseFont">
            <summary>
            (Required) The PostScript name of the font. In principle, this
            is an arbitrary name, since there is no font program
            associated directly with a Type 0 font dictionary. The
            conventions described here ensure maximum compatibility with
            existing Acrobat products. If the descendant is a Type 0
            DESCENDANT, this name should be the concatenation of the 
            DESCENDANT’s BaseFont name, a hyphen, and the CMap name given in
            the Encoding entry (or the CMapName entry in the CMap). If the
            descendant is a Type 2 DESCENDANT, this name should be the same
            as the DESCENDANT’s BaseFont name.            
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.Keys.Encoding">
            <summary>
            (Required) The name of a predefined CMap, or a stream 
            containing a CMap that maps character codes to font numbers
            and CIDs. If the descendant is a Type 2 DESCENDANT whose
            associated TrueType font program is not embedded in the PDF
            file, the Encoding entry must be a predefined CMap name (see 
            “Glyph Selection in CIDFonts” on page 408).            
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.Keys.DescendantFonts">
            <summary>
            (Required) A one-element array specifying the DESCENDANT 
            dictionary that is the descendant of this Type 0 font.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.Keys.ToUnicode">
            <summary>
            (Optional; PDF 1.2) A stream containing a CMap file that maps
            character codes to Unicode values.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfFontType0Dictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary">
            <summary>
            Represents a CIDFontType2 descendant font.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.#ctor(Telerik.Reporting.Pdf.PdfFontType0Dictionary)">
            <summary>
            Initializes a new instance of PdfFontDictionary from an PdfFontDictionary.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.WidthsArray">
            <summary>
            Gets a PdfArray containing all pages of this document. The array must not be modified.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary 
            describes; must be Font for a font dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.Keys.Subtype">
            <summary>
            (Required) The type of font; CIDFontType0 or CIDFontType2.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.Keys.BaseFont">
            <summary>
            (Required) The PostScript name of the font. For Type 0 
            CIDFonts, this is usually the value of the CIDFontName entry
            in the font program. For Type 2 CIDFonts, it is derived the
            same way as for a simple TrueType font; see Section 5.5.2,
            “TrueType Fonts.” In either case, the name can have a subset
            prefix if appropriate; see Section 5.5.3, “Font Subsets.”            
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.Keys.CIDSystemInfo">
            <summary>
            (Required) A dictionary containing entries that define the 
            character collection of the font. See Table 5.13 on page 
            406.            
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.Keys.FontDescriptor">
            <summary>
            (Required; must be an indirect reference) A font descriptor
            describing the font’s default metrics other than its glyph
            widths (see Section 5.7, “Font Descriptors”).            
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.Keys.DW">
            <summary>
            (Optional) The default width for glyphs in the font (see
            “Glyph Metrics in CIDFonts” on page 409). Default value: 1000.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.Keys.W">
            <summary>
            (Optional) A description of the widths for the glyphs in the 
            font. The array’s elements have a variable format that can
            specify individual widths for consecutive CIDs or one width
            for a range of CIDs (see “Glyph Metrics in CIDFonts” on page
            409). Default value: none (the DW value is used for all
            glyphs).
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.Keys.DW2">
            <summary>
            (Optional; applies only to CIDFonts used for vertical writing)
            An array of two numbers specifying the default metrics for
            vertical writing (see “Glyph Metrics in CIDFonts” on page 409).
            Default value: [880 ?1000].
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.Keys.W2">
            <summary>
            (Optional; applies only to CIDFonts used for vertical writing)
            A description of the metrics for vertical writing for the 
            glyphs in the font (see “Glyph Metrics in CIDFonts” on page
            409). Default value: none (the DW2 value is used for all 
            glyphs).
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.Keys.CIDToGIDMap">
            <summary>
            (Optional; Type 2 CIDFonts only) A specification of the 
            mapping from CIDs to glyph indices. If the value is a stream,
            the bytes in the stream contain the mapping from CIDs to glyph
            indices: the glyph index for a particular CID value c is a
            2-byte value stored in bytes 2 ? c and 2 ? c + 1, where the 
            first byte is the high-order byte. If the value of CIDToGIDMap
            is a name, it must be Identity, indicating that the mapping
            between CIDs and glyph indices is the identity mapping. 
            Default value: Identity. 
            
            This entry may appear only in a Type 2 font whose 
            associated True-Type font program is embedded in the PDF file.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.PdfCIDSystemInfoDictionary">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.PdfCIDSystemInfoDictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.PdfCIDSystemInfoDictionary.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.PdfCIDSystemInfoDictionary.Keys.Registry">
            <summary>
            (Required) A string identifying the issuer of the character 
            collection—for example, Adobe. For information about assigning
            a registry identifier, contact the Adobe Solutions Network or
            consult the ASN Web site (see the Bibliography).            
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.PdfCIDSystemInfoDictionary.Keys.Ordering">
            <summary>
            (Required) A string that uniquely names the character 
            collection within the specified registry—for example, Japan1.            
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.PdfCIDSystemInfoDictionary.Keys.Supplement">
            <summary>
            (Required) The supplement number of the character collection. 
            An original character collection has a supplement number of 0.
            Whenever additional CIDs are assigned in a character 
            collection, the supplement number is increased. Supplements do
            not alter the ordering of existing CIDs in the character
            collection. This value is not used in determining 
            compatibility between character collections.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfCIDFontType2Dictionary.PdfCIDSystemInfoDictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfToUnicodeCMapDictionary">
            <summary>
            Represents a ToUnicode map for composite font.
            http://partners.adobe.com/public/developer/en/acrobat/5411.ToUnicode.pdf
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfFontType0Dictionary.PdfToUnicodeCMapDictionary.PrepareForFinish">
            <summary>
            Creates the ToUnicode map from the CMapInfo.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfHeader">
            <summary>
            Summary description for PdfHeader.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfHeader.BinaryHint">
            <summary>
            If a PDF file contains binary data, as most do (see Section 3.1,
            “Lexical Conventions”), it is recommended that the header line be
            immediately followed by a comment line containing at least four
            binary characters—that is, characters whose codes are 128 or
            greater. This ensures proper behavior of file transfer applications
            that inspect data near the beginning of a file to determine whether
            to treat the file’s contents as text or as binary.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfHeader.GetHeader(System.Int32)">
            <summary>
            3.4.1
            Returns the file header of the PDF file.
            </summary>
            <param name="version">The version of the PDF specification.</param>
            <returns>The file header of the PDF file.</returns>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfImageDictionary">
            <summary>
            Represents an PdfImageDictionary
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfXObjectDictionary">
            <summary>
            Base class for all PDF external objects.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfXObjectDictionary.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfImageDictionary.#ctor(Telerik.Reporting.Pdf.PdfDocument,Telerik.Reporting.Pdf.Drawing.PdfImage,Telerik.Reporting.Pdf.BitmapHelperBase)">
            <summary>
            Initializes a new instance of PdfImageDictionary from an PdfImage.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfImageDictionary.ToString">
            <summary>
            Returns 'Image'.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfImageDictionary.InitializeJpeg">
            <summary>
            Creates the keys for a JPEG image.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfImageDictionary.InitializeNonJpeg">
            <summary>
            Creates the keys for a FLATE image.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfImageDictionary.ReadTrueColorMemoryBitmap(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Reads images that are returned from GDI+ without color palette.
            </summary>
            <param name="components">4 (32bpp RGB), 3 (24bpp RGB, 32bpp ARGB)</param>
            <param name="bits">8</param>
            <param name="hasAlpha">true (ARGB), false (RGB)</param>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfImageDictionary.PdfImage">
            <summary>
            Gets the underlying Drawing.PdfImageDictionary object.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfImageDictionary.Keys">
            <summary>
            Common keys for all streams.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.Type">
            <summary>
            (Optional) The type of PDF object that this dictionary describes;
            if present, must be XObject for an image XObject.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.Subtype">
            <summary>
            (Required) The type of XObject that this dictionary describes;
            must be Drawingimage for an image XObject.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.Width">
            <summary>
            (Required) The width of the image, in samples.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.Height">
            <summary>
            (Required) The height of the image, in samples.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.ColorSpace">
            <summary>
            (Required for images, except those that use the JPXDecode filter; not allowed for image masks)
            The color space in which image samples are specified; it can be any type of color space except
            Pattern. If the image uses the JPXDecode filter, this entry is optional:
            • If ColorSpace is present, any color space specifications in the JPEG2000 data are ignored.
            • If ColorSpace is absent, the color space specifications in the JPEG2000 data are used.
              The Decode array is also ignored unless ImageMask is true.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.BitsPerComponent">
            <summary>
            (Required except for image masks and images that use the JPXDecode filter)
            The number of bits used to represent each color component. Only a single value may be specified;
            the number of bits is the same for all color components. Valid values are 1, 2, 4, 8, and 
            (in PDF 1.5) 16. If ImageMask is true, this entry is optional, and if specified, its value 
            must be 1.
            If the image stream uses a filter, the value of BitsPerComponent must be consistent with the 
            size of the data samples that the filter delivers. In particular, a CCITTFaxDecode or JBIG2Decode 
            filter always delivers 1-bit samples, a RunLengthDecode or DCTDecode filter delivers 8-bit samples,
            and an LZWDecode or FlateDecode filter delivers samples of a specified size if a predictor function
            is used.
            If the image stream uses the JPXDecode filter, this entry is optional and ignored if present.
            The bit depth is determined in the process of decoding the JPEG2000 image.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.Intent">
            <summary>
            (Optional; PDF 1.1) The name of a color rendering intent to be used in rendering the image.
            Default value: the current rendering intent in the graphics state.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.ImageMask">
            <summary>
            (Optional) A flag indicating whether the image is to be treated as an image mask.
            If this flag is true, the value of BitsPerComponent must be 1 and Mask and ColorSpace should
            not be specified; unmasked areas are painted using the current nonstroking color.
            Default value: false.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.Mask">
            <summary>
            (Optional except for image masks; not allowed for image masks; PDF 1.3)
            An image XObject defining an image mask to be applied to this image, or an array specifying 
            a range of colors to be applied to it as a color key mask. If ImageMask is true, this entry
            must not be present.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.Decode">
            <summary>
            (Optional) An array of numbers describing how to map image samples into the range of values
            appropriate for the image’s color space. If ImageMask is true, the array must be either
            [0 1] or [1 0]; otherwise, its length must be twice the number of color components required 
            by ColorSpace. If the image uses the JPXDecode filter and ImageMask is false, Decode is ignored.
            Default value: see “Decode Arrays”.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.Interpolate">
            <summary>
            (Optional) A flag indicating whether image interpolation is to be performed. 
            Default value: false.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.Alternates">
            <summary>
            (Optional; PDF 1.3) An array of alternate image dictionaries for this image. The order of 
            elements within the array has no significance. This entry may not be present in an image 
            XObject that is itself an alternate image.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.SMask">
            <summary>
            (Optional; PDF 1.4) A subsidiary image XObject defining a soft-mask image to be used as a 
            source of mask shape or mask opacity values in the transparent imaging model. The alpha 
            source parameter in the graphics state determines whether the mask values are interpreted as
            shape or opacity. If present, this entry overrides the current soft mask in the graphics state,
            as well as the image’s Mask entry, if any. (However, the other transparencyrelated graphics 
            state parameters—blend mode and alpha constant—remain in effect.) If SMask is absent, the 
            image has no associated soft mask (although the current soft mask in the graphics state may
            still apply).
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.SMaskInData">
            <summary>
            (Optional for images that use the JPXDecode filter, meaningless otherwise; PDF 1.5)
            A code specifying how soft-mask information encoded with image samples should be used:
            0 If present, encoded soft-mask image information should be ignored.
            1 The image’s data stream includes encoded soft-mask values. An application can create
              a soft-mask image from the information to be used as a source of mask shape or mask 
              opacity in the transparency imaging model.
            2 The image’s data stream includes color channels that have been preblended with a 
              background; the image data also includes an opacity channel. An application can create
              a soft-mask image with a Matte entry from the opacity channel information to be used as
              a source of mask shape or mask opacity in the transparency model. If this entry has a 
              nonzero value, SMask should not be specified.
            Default value: 0.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.Name">
            <summary>
            (Required in PDF 1.0; optional otherwise) The name by which this image XObject is 
            referenced in the XObject subdictionary of the current resource dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.StructParent">
            <summary>
            (Required if the image is a structural content item; PDF 1.3) The integer key of the 
            image’s entry in the structural parent tree.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.ID">
            <summary>
            (Optional; PDF 1.3; indirect reference preferred) The digital identifier of the image’s
            parent Web Capture content set.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.OPI">
            <summary>
            (Optional; PDF 1.2) An OPI version dictionary for the image. If ImageMask is true, 
            this entry is ignored.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.Metadata">
            <summary>
            (Optional; PDF 1.4) A metadata stream containing metadata for the image.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageDictionary.Keys.OC">
            <summary>
            (Optional; PDF 1.5) An optional content group or optional content membership dictionary,
            specifying the optional content properties for this image XObject. Before the image is
            processed, its visibility is determined based on this entry. If it is determined to be 
            invisible, the entire image is skipped, as if there were no Do operator to invoke it.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.MonochromeMask">
            <summary>
            Helper class for creating bitmap masks (8 pels per byte).
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.MonochromeMask.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a bitmap mask.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.MonochromeMask.StartLine(System.Int32)">
            <summary>
            Starts a new line.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.MonochromeMask.AddPel(System.Boolean)">
            <summary>
            Adds a pel to the current line.
            </summary>
            <param name="isTransparent"></param>
        </member>
        <member name="M:Telerik.Reporting.Pdf.MonochromeMask.AddPel(System.Int32)">
            <summary>
            Adds a pel from an alpha mask value.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.MonochromeMask.MaskData">
            <summary>
            Returns the bitmap mask that will be written to PDF.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfImageInfo">
            <summary>
            An object that uniquely identifies a particular PdfImageDictionary. 
            Used for identical image caching.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfImageInfo.#ctor(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Creates a new instance of the PdfImageInfo object used for hashing
            equivalent images.
            </summary>
            <param name="originalImage">The image.</param>
            <param name="srcRect">The source rectangle in PIXELS.</param>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfImageInfo.ComputeHash">
            <summary>
            Computes a hash value based on the binary image data and the source
            rectangle. These two elements uniquely identify a PdfImageInfo.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfImageInfo.OriginalImage">
            <summary>
            The image.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfImageInfo.SrcRect">
            <summary>
            The source rectangle from the OriginalImage in PIXELS.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfImageInfo.IsEntireImage">
            <summary>
            Specifies whether the entire image should be drawn. This is used
            to draw the image directly, instead of creating a new bitmap to
            draw a portion of the image.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfImageTable">
            <summary>
            Contains all used images of a document.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfImageTable.images">
            <summary>
            Map from PdfImageInfo to PdfImageDictionary.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfImageTable.#ctor(Telerik.Reporting.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of this class, which is a singleton for each document.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfImageTable.GetImageDictionary(Telerik.Reporting.Pdf.PdfImageInfo)">
            <summary>
            Gets a PdfImageDictionary from an PdfImageDictionary. 
            If no PdfImageDictionary already exists, a new one is created.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfInteger">
            <summary>
            Summary description for PdfInteger.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfInteger.WriteObject(Telerik.Reporting.Pdf.IO.PdfWriter)">
            <summary>
            Writes the integer as string.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfLiteral">
            <summary>
            Represents text that is written 'as it is' into the PDF stream.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfLiteral.#ctor(System.String)">
            <summary>
            Initializes a new instance with the specified string.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfName">
            <summary>
            3.2.4
            A name object is an atomic symbol uniquely defined by a sequence of
            characters. Uniquely defined means that any two name objects made up of
            the same sequence of characters are identically the same object. Atomic
            means that a name has no internal structure; although it is defined by
            a sequence of characters, those characters are not considered elements
            of the name. A slash character (/) introduces a name. The slash is not
            part of the name but is a prefix indicating that the following sequence
            of characters constitutes a name. There can be no white-space
            characters between the slash and the first character in the name. The
            name may include any regular characters, but not delimiter or 
            white-space characters (see Section 3.1, “Lexical Conventions”).
            Uppercase and lowercase letters are considered distinct: /A and /a are
            different names.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfName.ToString">
            <summary>
            Returns the name. The string always begins with a slash.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfName.Value">
            <summary>
            Returns the value of the PdfName. This class must behave like a
            value type. Therefore it cannot be changed (like System.String).
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfName.PdfNameComparer">
            <summary>
            Implements a comparer that compares PdfName objects.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfNameDictionary">
            <summary>
            Some categories of objects in a PDF file can be referred to by name 
            rather than by object reference. The correspondence between names and 
            objects is established by the document’s name dictionary (PDF 1.2), 
            located by means of the Names entry in the document’s catalog 
            (see Section 3.6.1, “Document Catalog”). Each entry in this dictionary 
            designates the root of a name tree (Section 3.8.5, “Name Trees”) 
            defining names for a particular category of objects.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfNameDictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfNameDictionary.Keys.JavaScript">
            <summary>
            (Optional; PDF 1.3) A name tree mapping name strings to 
            document-level JavaScript actions (see “JavaScriptNameTree Actions” 
            on page 709).
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfNameDictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfNameTreeDictionary">
            <summary>
            A name tree is constructed of nodes, each of which is a dictionary 
            object. Table 3.33 shows the entries in a node dictionary. 
            The nodes are of three kinds, depending on the specific entries they 
            contain. The tree always has exactly one root node, which contains a 
            single entry: either Kids or Names but not both. If the root node has a 
            Names entry, it is the only node in the tree. If it has a Kids entry, 
            each of the remaining nodes is either an intermediate node, containing 
            a Limitsentry and a Kids entry, or a leaf node, containing a Limits 
            entry and a Namesentry.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfNameTreeDictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfNameTreeDictionary.Keys.Names">
            <summary>
            (Root and leaf nodes only; required in leaf nodes; present in the 
            root node if and only if Kidsis not present) An array of the form
            [ key1 value1 key2 value2 … keyn valuen ] where each keyi is a 
            string and the corresponding valuei is the object associated with 
            that key. The keys are sorted in lexical order, as described below.            
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfNameTreeDictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfNumber">
            <summary>
            Base class for direct number values (not yet used, maybe superfluous).
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfObjectID">
            <summary>
            3.2.9 Indirect Objects
            Any object in a PDF file may be labeled as an indirect object. This 
            gives the object a unique object identifier by which other objects can
            refer to it (for example, as an element of an array or as the value of
            a dictionary entry). The object identifier consists of two parts:
            • A positive integer object number. Indirect objects are often numbered
            sequentially within a PDF file, but this is not required; object 
            numbers may be assigned in any arbitrary order.
            • A non-negative integer generation number. In a newly created file,
            all indirect objects have generation numbers of 0. Nonzero generation
            numbers may be introduced when the file is later updated; see Sections
            3.4.3, “Cross-Reference Table,” and 3.4.5, “Incremental Updates.”
            Together, the combination of an object number and a generation number
            uniquely identifies an indirect object. The object retains the same
            object number and generation number throughout its existence, even if
            its value is modified.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfObjectID.Empty">
            <summary>
            Represents the empty object identifier.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfObjectID.IsEmpty">
            <summary>
            Indicates whether this object is an empty object identifier.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfOutline">
            <summary>
            Represents an outline item in the outlines tree. An outline is also knows as a bookmark.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfOutline.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Pdf.PdfOutline"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfOutline.#ctor(Telerik.Reporting.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Pdf.PdfOutline"/> class.
            </summary>
            <param name="document">The document.</param>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfOutline.PrepareForFinish">
            <summary>
            Creates key/values pairs according to the object structure.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfOutline.OpenCount">
            <summary>
            The total number of open descendants at all lower levels.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfOutline.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfOutline.DestinationPage">
            <summary>
            Gets or sets the destination page.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfOutline.Left">
            <summary>
            Gets or sets the destination left coordinate on the destination page
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfOutline.Top">
            <summary>
            Gets or sets the destination top coordinate on the destination page
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfOutline.Expanded">
            <summary>
            Gets or sets whether the outline item is opened (or expanded).
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfOutline.Style">
            <summary>
            Gets or sets the style.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfOutline.TextColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfOutline.Outlines">
            <summary>
            Gets the outline collection of this node.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfOutline.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfOutline.PdfOutlineCollection">
            <summary>
            Represents a collection of outlines.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfOutline.PdfOutlineCollection.Add(Telerik.Reporting.Pdf.PdfOutline)">
            <summary>
            Adds the specified outline.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfOutline.PdfOutlineCollection.IndexOf(Telerik.Reporting.Pdf.PdfOutline)">
            <summary>
            Gets the index of the specified outline.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfOutline.PdfOutlineCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfOutline.PdfOutlineCollection.HasOutline">
            <summary>
            Indicates whether the outline has at least one entry.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfOutline.PdfOutlineCollection.Count">
            <summary>
            Gets the number of entries in this collection.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfOutline.PdfOutlineCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Telerik.Reporting.Pdf.PdfOutline"/> at the specified index.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfOutline.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutline.Keys.Type">
            <summary>
            (Optional) The type of PDF object that this dictionary describes; if present,
            must be Outlines for an outline dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutline.Keys.Title">
            <summary>
            (Required) The text to be displayed on the screen for this item.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutline.Keys.Parent">
            <summary>
            (Required; must be an indirect reference) The parent of this item in the outline hierarchy.
            The parent of a top-level item is the outline dictionary itself.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutline.Keys.Prev">
            <summary>
            (Required for all but the first item at each level; must be an indirect reference)
            The previous item at this outline level.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutline.Keys.Next">
            <summary>
            (Required for all but the last item at each level; must be an indirect reference)
            The next item at this outline level.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutline.Keys.First">
            <summary>
            (Required if the item has any descendants; must be an indirect reference)
             The first of this item’s immediate children in the outline hierarchy.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutline.Keys.Last">
            <summary>
            (Required if the item has any descendants; must be an indirect reference)
            The last of this item’s immediate children in the outline hierarchy.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutline.Keys.Count">
            <summary>
            (Required if the item has any descendants) If the item is open, the total number of its 
            open descendants at all lower levels of the outline hierarchy. If the item is closed, a 
            negative integer whose absolute value specifies how many descendants would appear if the 
            item were reopened.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutline.Keys.Dest">
            <summary>
            (Optional; not permitted if an A entry is present) The destination to be displayed when this 
            item is activated.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutline.Keys.A">
            <summary>
            (Optional; not permitted if an A entry is present) The destination to be displayed when 
            this item is activated.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutline.Keys.SE">
            <summary>
            (Optional; PDF 1.3; must be an indirect reference) The structure element to which the item 
            refers.
            Note: The ability to associate an outline item with a structure element (such as the beginning 
            of a chapter) is a PDF 1.3 feature. For backward compatibility with earlier PDF versions, such
            an item should also specify a destination (Dest) corresponding to an area of a page where the
            contents of the designated structure element are displayed.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutline.Keys.C">
            <summary>
            (Optional; PDF 1.4) An array of three numbers in the range 0.0 to 1.0, representing the 
            components in the DeviceRGB color space of the color to be used for the outline entry’s text.
            Default value: [0.0 0.0 0.0].
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutline.Keys.F">
            <summary>
            (Optional; PDF 1.4) A set of flags specifying style characteristics for displaying the outline
            item’s text. Default value: 0.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfOutline.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfOutlineStyle">
            <summary>
            Specifies the font style for the outline (bookmark) text.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutlineStyle.Regular">
            <summary>
            Regular font.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutlineStyle.Italic">
            <summary>
            Italic font.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutlineStyle.Bold">
            <summary>
            Bold font.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfOutlineStyle.BoldItalic">
            <summary>
            Bold and italic font.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfPageDictionary">
            <summary>
            Summary description for PdfPageDictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.RenderContent">
            <summary>
            The content stream currently used by an PdfGraphics object for rendering.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfPageDictionary.#ctor(System.Int32,Telerik.Reporting.Pdf.PdfDocument)">
            <summary>
            Initializes a new page. The page must be added to a document before
            it can be used.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfPageDictionary.GetFontName(Telerik.Reporting.Pdf.Drawing.PdfFont,Telerik.Reporting.Pdf.PdfFontDictionary@)">
            <summary>
            Gets the resource name of the specified font within this page.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfPageDictionary.GetImageName(Telerik.Reporting.Pdf.Drawing.PdfImage)">
            <summary>
            Gets the resource name of the specified gdiImage within this page.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfPageDictionary.AddDocumentLink(Telerik.Reporting.Pdf.PdfRectangle,Telerik.Reporting.Pdf.PdfReference,System.Single,System.Single)">
            <summary>
            Adds an intra document link.
            </summary>
            <param name="rect">The rect.</param>
            <param name="destinationPage">The destination page.</param>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfPageDictionary.AddWebLink(Telerik.Reporting.Pdf.PdfRectangle,System.String)">
            <summary>
            Adds a link to the Web.
            </summary>
            <param name="rect">The rect.</param>
            <param name="url">The URL.</param>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfPageDictionary.AddFileLink(Telerik.Reporting.Pdf.PdfRectangle,System.String)">
            <summary>
            Adds a link to a file.
            </summary>
            <param name="rect">The rect.</param>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfPageDictionary.Width">
            <summary>
            Gets or sets the width of the page. If orientation is Landscape, this function applies to
            the height.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfPageDictionary.Height">
            <summary>
            Gets or sets the height of the page. If orientation is Landscape, this function applies to
            the width.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfPageDictionary.Size">
            <summary>
            Gets or sets one of the predefined standard sizes like.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfPageDictionary.Orientation">
            <summary>
            Gets or sets the orientation of the page. The default value PageOrientation.Portrait.
            If an imported page has a /Rotate value that satisfys the formula 90 + n * 180 the 
            orientation is set to PageOrientation.Landscape.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfPageDictionary.Document">
            <summary>
            Gets or sets the PdfDocument this page belongs to.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfPageDictionary.MediaBox">
            <summary>
            Gets or sets the media box directly. XGrahics is not prepared to
            work with a media box with an origin other than (0,0).
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfPageDictionary.Contents">
            <summary>
            Gets the array of content streams of the page.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfPageDictionary.Annotations">
            <summary>
            Gets the annotations array of this page.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfPageDictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfPageDictionary.PageOrientation">
            <summary>
            Specifies the orientation of a page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.PageOrientation.Portrait">
            <summary>
            The default page orientation.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.PageOrientation.Landscape">
            <summary>
            The width and height of the page are reversed.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfPageDictionary.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfPageDictionary.InheritablePageKeys">
            <summary>
            Predefined keys common to PdfPageDictionary and PdfPagesDictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.InheritablePageKeys.Resources">
            <summary>
            (Required; inheritable) A dictionary containing any resources required by the page. 
            If the page requires no resources, the value of this entry should be an empty dictionary.
            Omitting the entry entirely indicates that the resources are to be inherited from an 
            ancestor node in the page tree.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.InheritablePageKeys.MediaBox">
            <summary>
            (Required; inheritable) A rectangle, expressed in default user space units, defining the 
            boundaries of the physical medium on which the page is intended to be displayed or printed.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.InheritablePageKeys.CropBox">
            <summary>
            (Optional; inheritable) A rectangle, expressed in default user space units, defining the 
            visible region of default user space. When the page is displayed or printed, its contents 
            are to be clipped (cropped) to this rectangle and then imposed on the output medium in some
            implementationdefined manner. Default value: the value of MediaBox.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.InheritablePageKeys.Rotate">
            <summary>
            (Optional; inheritable) The number of degrees by which the page should be rotated clockwise 
            when displayed or printed. The value must be a multiple of 90. Default value: 0.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes;
            must be Page for a page object.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.Parent">
            <summary>
            (Required; must be an indirect reference)
            The page tree node that is the immediate parent of this page object.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.LastModified">
            <summary>
            (Required if PieceInfo is present; optional otherwise; PDF 1.3) The date and time
            when the page’s contents were most recently modified. If a page-piece dictionary
            (PieceInfo) is present, the modification date is used to ascertain which of the 
            application data dictionaries that it contains correspond to the current content
            of the page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.BleedBox">
            <summary>
            (Optional; PDF 1.3) A rectangle, expressed in default user space units, defining the 
            region to which the contents of the page should be clipped when output in a production
            environment. Default value: the value of CropBox.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.TrimBox">
            <summary>
            (Optional; PDF 1.3) A rectangle, expressed in default user space units, defining the
            intended dimensions of the finished page after trimming. Default value: the value of 
            CropBox.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.ArtBox">
            <summary>
            (Optional; PDF 1.3) A rectangle, expressed in default user space units, defining the
            extent of the page’s meaningful content (including potential white space) as intended
            by the page’s creator. Default value: the value of CropBox.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.BoxColorInfo">
            <summary>
            (Optional; PDF 1.4) A box color information dictionary specifying the colors and other 
            visual characteristics to be used in displaying guidelines on the screen for the various
            page boundaries. If this entry is absent, the application should use its own current 
            default settings.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.Contents">
            <summary>
            (Optional) A content stream describing the contents of this page. If this entry is absent, 
            the page is empty. The value may be either a single stream or an array of streams. If the 
            value is an array, the effect is as if all of the streams in the array were concatenated,
            in order, to form a single stream. This allows PDF producers to create gdiImage objects and
            other resources as they occur, even though they interrupt the content stream. The division
            between streams may occur only at the boundaries between lexical tokens but is unrelated
            to the page’s logical content or organization. Applications that consume or produce PDF 
            files are not required to preserve the existing structure of the Contents array.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.Group">
            <summary>
            (Optional; PDF 1.4) A group attributes dictionary specifying the attributes of the page’s 
            page group for use in the transparent imaging model.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.Thumb">
            <summary>
            (Optional) A stream object defining the page’s thumbnail gdiImage.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.B">
            <summary>
            (Optional; PDF 1.1; recommended if the page contains article beads) An array of indirect
            references to article beads appearing on the page. The beads are listed in the array in 
            natural reading order.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.Dur">
            <summary>
            (Optional; PDF 1.1) The page’s display duration (also called its advance timing): the 
            maximum length of time, in seconds, that the page is displayed during presentations before
            the viewer application automatically advances to the next page. By default, the viewer does 
            not advance automatically.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.Trans">
            <summary>
            (Optional; PDF 1.1) A transition dictionary describing the transition effect to be used 
            when displaying the page during presentations.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.Annots">
            <summary>
            (Optional) An array of annotation dictionaries representing annotations associated with 
            the page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.AA">
            <summary>
            (Optional; PDF 1.2) An additional-actions dictionary defining actions to be performed 
            when the page is opened or closed.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.Metadata">
            <summary>
            (Optional; PDF 1.4) A metadata stream containing metadata for the page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.PieceInfo">
            <summary>
            (Optional; PDF 1.3) A page-piece dictionary associated with the page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.StructParents">
            <summary>
            (Required if the page contains structural content items; PDF 1.3)
            The integer key of the page’s entry in the structural parent tree.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.ID">
            <summary>
            (Optional; PDF 1.3; indirect reference preferred) The digital identifier of
            the page’s parent Web Capture content set.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.PZ">
            <summary>
            (Optional; PDF 1.3) The page’s preferred zoom (magnification) factor: the factor 
            by which it should be scaled to achieve the natural display magnification.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.SeparationInfo">
            <summary>
            (Optional; PDF 1.3) A separation dictionary containing information needed
            to generate color separations for the page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.Tabs">
            <summary>
            (Optional; PDF 1.5) A name specifying the tab order to be used for annotations
            on the page. The possible values are R (row order), C (column order),
            and S (structure order).
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.TemplateInstantiated">
            <summary>
            (Required if this page was created from a named page object; PDF 1.5)
            The name of the originating page object.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.PresSteps">
            <summary>
            (Optional; PDF 1.5) A navigation node dictionary representing the first node
            on the page.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.UserUnit">
            <summary>
            (Optional; PDF 1.6) A positive number giving the size of default user space units,
            in multiples of 1/72 inch. The range of supported values is implementation-dependent.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.VP">
            <summary>
            (Optional; PDF 1.6) An array of viewport dictionaries specifying rectangular regions 
            of the page.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfPageDictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfPagesDictionary">
            <summary>
            Summary description for PdfPagesDictionary.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfPagesDictionary.Add">
            <summary>
            Creates a new PdfPageDictionary, adds it to this document, and retruns it.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfPagesDictionary.Insert(System.Int32,Telerik.Reporting.Pdf.PdfPageDictionary)">
            <summary>
            Inserts the specified PdfPageDictionary at the specified position to this document and retruns a may be new PdfPageDictionary object.
            The value returned is a new object if the inserted page comes from a foreign document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfPagesDictionary.Count">
            <summary>
            Gets the number of pages.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfPagesDictionary.PagesArray">
            <summary>
            Gets a PdfArray containing all pages of this document. The array must not be modified.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfPagesDictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfPagesDictionary.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPagesDictionary.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes; 
            must be Pages for a page tree node.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPagesDictionary.Keys.Parent">
            <summary>
            (Required except in root node; must be an indirect reference)
            The page tree node that is the immediate parent of this one.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPagesDictionary.Keys.Kids">
            <summary>
            (Required) An array of indirect references to the immediate children of this node.
            The children may be page objects or other page tree nodes.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfPagesDictionary.Keys.Count">
            <summary>
            (Required) The number of leaf nodes (page objects) that are descendants of this node 
            within the page tree.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfPagesDictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfReal">
            <summary>
            Represents a direct real value.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfReal.ToString">
            <summary>
            Returns the real number as string.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfReal.WriteObject(Telerik.Reporting.Pdf.IO.PdfWriter)">
            <summary>
            Writes the real value with up to three digits.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfRectangle">
            <summary>
            Represents a PDF rectangle value, that is internally an array with 4 real values.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfRectangle.Empty">
            <summary>
            Represents an empty PdfRectangle.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.#ctor">
            <summary>
            Initializes a new instance of the PdfRectangle class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the PdfRectangle class with two points specifying
            two diagonally opposite corners. Notice that in contrast to GDI+ convention the 
            3rd and the 4th parameter specify a point and not a width. This is so much confusing
            that this function is for internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.#ctor(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the PdfRectangle class with two points specifying
            two diagonally opposite corners.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.#ctor(System.Drawing.PointF,System.Drawing.SizeF)">
            <summary>
            Initializes a new instance of the PdfRectangle class with the specified location and size.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.#ctor(Telerik.Reporting.Pdf.PdfRectangle)">
            <summary>
            Initializes a new instance of the PdfRectangle class with the specified PdfRectangle.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.#ctor(Telerik.Reporting.Pdf.PdfArray)">
            <summary>
            Initializes a new instance of the PdfRectangle class with the specified PdfArray.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.Equals(System.Object)">
            <summary>
            Tests whether the specified object is a PdfRectangle and has equal coordinates.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.op_Equality(Telerik.Reporting.Pdf.PdfRectangle,Telerik.Reporting.Pdf.PdfRectangle)">
            <summary>
            Tests whether two structures have equal coordinates.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.op_Inequality(Telerik.Reporting.Pdf.PdfRectangle,Telerik.Reporting.Pdf.PdfRectangle)">
            <summary>
            Tests whether two structures differs in one or more coordinates.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.Contains(System.Drawing.PointF)">
            <summary>
            Determines if the specified point is contained within this PdfRectangle.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.Contains(System.Single,System.Single)">
            <summary>
            Determines if the specified point is contained within this PdfRectangle.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.Contains(System.Drawing.RectangleF)">
            <summary>
            Determines if the rectangular region represented by rect is entirely contained within this PdfRectangle.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.Contains(Telerik.Reporting.Pdf.PdfRectangle)">
            <summary>
            Determines if the rectangular region represented by rect is entirely contained within this PdfRectangle.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.ToString">
            <summary>
            Returns the rectangle as a string in the form «[x1 y1 x2 y2]».
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfRectangle.WriteObject(Telerik.Reporting.Pdf.IO.PdfWriter)">
            <summary>
            Writes the rectangle.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfRectangle.IsEmpty">
            <summary>
            Tests whether all coordinate are zero.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfRectangle.X1">
            <summary>
            Gets or sets the x-coordinate of the first corner of this PdfRectangle.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfRectangle.Y1">
            <summary>
            Gets or sets the y-coordinate of the first corner of this PdfRectangle.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfRectangle.X2">
            <summary>
            Gets or sets the x-coordinate of the second corner of this PdfRectangle.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfRectangle.Y2">
            <summary>
            Gets or sets the y-coordinate of the second corner of this PdfRectangle.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfRectangle.Width">
            <summary>
            Gets X2 - X1.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfRectangle.Height">
            <summary>
            Gets Y2 - Y1.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfRectangle.Location">
            <summary>
            Gets or sets the coordinates of the first point of this PdfRectangle.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfRectangle.Size">
            <summary>
            Gets or sets the size of this PdfRectangle.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfReference">
            <summary>
            3.4.3
            Summary description for PdfReference.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfReference.#ctor(Telerik.Reporting.Pdf.PdfObject)">
            <summary>
            Initializes a new PdfReference instance for the specified indirect
            object.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfReference.WriteObject(Telerik.Reporting.Pdf.IO.PdfWriter)">
            <summary>
            Writes an indirect reference.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfReference.ToString">
            <summary>
            Gets a string representing the object identifier.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfReference.ByteOffset">
            <summary>
            The byte offset is a 10-digit number, padded with leading zeros if
            necessary, giving the number of bytes from the beginning of the
            file to the beginning of the object.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfReference.Document">
            <summary>
            Gets or sets the document this object belongs to.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfReference.PdfReferenceComparer">
            <summary>
            Implements a comparer that compares PdfReference objects by their PdfObjectID.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfReferenceTable">
            <summary>
            3.4.3
            The cross-reference referenceTable contains information that permits random
            access to indirect objects within the file so that the entire file need
            not be read to locate any particular object.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfReferenceTable.Add(Telerik.Reporting.Pdf.PdfObject)">
            <summary>
            Adds a PdfObject to the table.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfReferenceTable.GetNextObjectNumber">
            <summary>
            Returns the next free object number.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfReferenceTable.WriteObject(Telerik.Reporting.Pdf.IO.PdfWriter,System.Collections.Generic.ICollection{Telerik.Reporting.Pdf.PdfReference})">
            <summary>
            Writes the cross-reference table section in the pdf stream.
            </summary>
            
            <param name="writer"></param>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfReferenceTable.Item(Telerik.Reporting.Pdf.PdfObjectID)">
            <summary>
            Gets a cross reference entry from an object identifier.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfResourceMapDictionary">
            <summary>
            Base class for all dictionaries that map resource names to objects.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfResourcesDictionary">
            <summary>
            Represents a PDF resource object.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfResourcesDictionary.resources">
            <summary>
            Maps all PDFsharp resources to their local resource names.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfResourcesDictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfResourcesDictionary.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfResourcesDictionary.Keys.ExtGState">
            <summary>
            (Optional) A dictionary that maps resource names to graphics
            state parameter dictionaries.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfResourcesDictionary.Keys.ColorSpace">
            <summary>
            (Optional) A dictionary that maps each resource name to either the name of a
            device-dependent color space or an array describing a color space.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfResourcesDictionary.Keys.Pattern">
            <summary>
            (Optional) A dictionary that maps each resource name to either the name of a
            device-dependent color space or an array describing a color space.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfResourcesDictionary.Keys.Shading">
            <summary>
            (Optional; PDF 1.3) A dictionary that maps resource names to shading dictionaries.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfResourcesDictionary.Keys.XObject">
            <summary>
            (Optional) A dictionary that maps resource names to external objects.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfResourcesDictionary.Keys.Font">
            <summary>
            (Optional) A dictionary that maps resource names to font dictionaries.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfResourcesDictionary.Keys.ProcSet">
            <summary>
            (Optional) An array of predefined procedure set names.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfResourcesDictionary.Keys.Properties">
            <summary>
            (Optional; PDF 1.2) A dictionary that maps resource names to property list
            dictionaries for marked content.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfResourcesDictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfStringEncoding">
            <summary>
            Determines the encoding of a PdfString or PdfStringObject.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfStringFlags">
            <summary>
            Internal wrapper for PdfStringEncoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfString">
            <summary>
            Represents a direct text string value.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfString.ToString">
            <summary>
            Returns the string.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfString.WriteObject(Telerik.Reporting.Pdf.IO.PdfWriter)">
            <summary>
            Writes the string DocEncoded.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfTrailerDictionary">
            <summary>
            3.4.4
            The trailer of a PDF file enables an application reading the file to
            quickly find the cross-reference table and certain special objects.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfTrailerDictionary.#ctor(Telerik.Reporting.Pdf.PdfDocument)">
            <summary>
            Initializes a new instance of PdfTrailerDictionary.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfTrailerDictionary.Root">
            <summary>
            (Required; must be an indirect reference)
            The catalog dictionary for the PDF document contained in the file.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfTrailerDictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfTrailerDictionary.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfTrailerDictionary.Keys.Size">
            <summary>
            (Required; must not be an indirect reference) The total number of entries in the file’s 
            cross-reference table, as defined by the combination of the original section and all
            update sections. Equivalently, this value is 1 greater than the highest object number
            used in the file.
            Note: Any object in a cross-reference section whose number is greater than this value is
            ignored and considered missing.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfTrailerDictionary.Keys.Prev">
            <summary>
            (Present only if the file has more than one cross-reference section; must not be an indirect
            reference) The byte offset from the beginning of the file to the beginning of the previous 
            cross-reference section.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfTrailerDictionary.Keys.Root">
            <summary>
            (Required; must be an indirect reference) The catalog dictionary for the PDF document
            contained in the file.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfTrailerDictionary.Keys.Encrypt">
            <summary>
            (Required if document is encrypted; PDF 1.1) The document’s encryption dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfTrailerDictionary.Keys.Info">
            <summary>
            (Optional; must be an indirect reference) The document’s information dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfTrailerDictionary.Keys.ID">
            <summary>
            (Optional, but strongly recommended; PDF 1.1) An array of two strings constituting
            a file identifier for the file. Although this entry is optional, 
            its absence might prevent the file from functioning in some workflows
            that depend on files being uniquely identified.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfTrailerDictionary.Keys.XRefStm">
            <summary>
            (Optional) The byte offset from the beginning of the file of a cross-reference stream.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfTrailerDictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfTransparencyDictionary">
            <summary>
            Represents a PDF transparency group XObject dictionary.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.PdfTransparencyDictionary.#ctor">
            <summary>
            Initializes a new instance of PdfTransparencyDictionary with default transparency values.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfTransparencyDictionary.Keys">
            <summary>
            Predefined keys for this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfTransparencyDictionary.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes;
            must be Group for a group XObject.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfTransparencyDictionary.Keys.S">
            <summary>
            (Required) The group subtype, which identifies the type of group whose attributes
            this dictionary describes; must be Transparency for a transparency group.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfTransparencyDictionary.Keys.CS">
            <summary>
            (Required) The group color space, which is used for the following purposes:
            - As the color space into which colors are converted when painted into the group;
            - As the blending color space in which objects are composited within the group;
            - As the color space of the group as a whole when it in turn is painted as an
            object onto its backdrop.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfTransparencyDictionary.Keys.I">
            <summary>
            (Optional) A flag specifying whether the transparency group is isolated.
            If this flag is true, objects within the group are composited against a
            fully transparent initial backdrop; if false, they are composited against
            the group’s backdrop. The default value is false.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfTransparencyDictionary.Keys.K">
            <summary>
            (Optional) A flag specifying whether the transparency group is a knockout group.
            If this flag is false, later objects within the group are composited with earlier
            ones with which they overlap; if true, they are composited with the group’s initial
            backdrop and overwrite any earlier overlapping objects. The default value is false.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.HideToolbar">
            <summary>
            Gets or sets HideToolbar.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.HideMenubar">
            <summary>
            Gets or sets HideMenubar.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.HideWindowUI">
            <summary>
            Gets or sets HideWindowUI.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.FitWindow">
            <summary>
            Gets or sets FitWindow.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.CenterWindow">
            <summary>
            Gets or sets CenterWindow.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.DisplayDocTitle">
            <summary>
            Gets or sets DisplayDocTitle.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.Direction">
            <summary>
            Gets or sets Direction.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.PrintScaling">
            <summary>
            Gets or sets PrintScaling.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.RenderToolTips">
            <summary>
            Gets or sets RenderToolTips. False by default.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.Meta">
            <summary>
            Gets the KeysMeta of this dictionary type.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.Keys">
            <summary>
            Predefined keys of this dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.Keys.Type">
            <summary>
            (Required) The type of PDF object that this dictionary describes; 
            must be ViewerPreferences for the ViewerPreferences dictionary.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.Keys.HideToolbar">
            <summary>
            (Optional) A flag specifying whether to hide the viewer 
            application’s tool bars when the document is active. 
            Default value: false.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.Keys.HideMenubar">
            <summary>
            (Optional) A flag specifying whether to hide the viewer 
            application’s menu bar when the document is active. 
            Default value: false.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.Keys.HideWindowUI">
            <summary>
            (Optional) A flag specifying whether to hide user interface 
            elements in the document’s window (such as scroll bars and 
            navigation controls), leaving only the document’s contents 
            displayed. Default value: false.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.Keys.FitWindow">
            <summary>
            (Optional) A flag specifying whether to resize the document’s 
            window to fit the size of the first displayed page. Default 
            value: false.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.Keys.CenterWindow">
            <summary>
            (Optional) A flag specifying whether to position the document’s 
            window in the center of the screen. Default value: false.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.Keys.DisplayDocTitle">
            <summary>
            (Optional; PDF 1.4) A flag specifying whether the window’s title 
            bar should display the document title taken from the Title entry 
            of the document information dictionary (see Section 10.2.1, 
            “Document Information Dictionary”). If false, the title bar 
            should instead display the name of the PDF file containing the 
            document. Default value: false.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.Keys.Direction">
            <summary>
            (Optional; PDF 1.3) The predominant reading order for text: 
                L2R Left to right
                R2L Right to left (including vertical writing systems, such 
                    as Chinese, Japanese, and Korean)
            This entry has no direct effect on the document’s contents or 
            page numbering but can be used to determine the relative 
            positioning of pages when displayed side by side or printed 
            n-up. Default value: L2R.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.Keys.PrintScaling" -->
        <member name="F:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.Keys.RenderToolTips">
            <summary>
            (Optional) A flag specifying whether to render the text annotations that are generated to represent tooltips.
            Default value: False.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.PdfViewerPreferencesDictionary.Keys.Meta">
            <summary>
            Gets the KeysMeta for these keys.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.ViewerDirection">
            <summary>
            The predominant reading order for text. This entry has no direct effect 
            on the document’s contents or page numbering but can be used to 
            determine the relative positioning of pages when displayed side by side 
            or printed n-up.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.ViewerDirection.L2R">
            <summary>
            Left to right.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.ViewerDirection.R2L">
            <summary>
            Right to left (including vertical writing systems, such as Chinese, 
            Japanese, and Korean).
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.ViewerPrintScaling">
            <summary>
            The page scaling option to be selected when a print dialog is displayed 
            for this document.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.ViewerPrintScaling.None">
            <summary>
            Indicates that the print dialog should reflect no page scaling.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.ViewerPrintScaling.AppDefault">
            <summary>
            Indicates that applications should use the current print scaling.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRenderer.InitialGraphicsStackLevel">
            <summary>
            The q/Q nesting level is 0.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRenderer.PageSpaceGraphicsStackLevel">
            <summary>
            The q/Q nesting level is 1.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRenderer.WorldSpaceGraphicsStackLevel">
            <summary>
            The q/Q nesting level is 2.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRenderer.clipLevel">
            <summary>
            The nesting level of the PDF graphics state stack when the clip
            region was set to non empty. Because of the way PDF is made the
            clip region can only be reset at this level.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRenderer.pdfGraphicsStateStack">
            <summary>
            The graphical state stack.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRenderer.pdfRendererGraphicsState">
            <summary>
            The current graphical state.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRenderer.defaultViewMatrix">
            <summary>
            The final transformation from the world space to the default page
            space.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.AppendPath(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Appends the content of a GraphicsPath object.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.BeginGraphicMode">
            <summary>
            Begins the graphic mode (i.e. ends the text mode).
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.GetContent">
            <summary>
            Gets the content created by this renderer.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.GetFontName(Telerik.Reporting.Pdf.Drawing.PdfFont,Telerik.Reporting.Pdf.PdfFontDictionary@)">
            <summary>
            Gets the resource name of the specified font within this page or form.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.SaveState">
            <summary>
            Saves the current graphical state.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.RestoreState">
            <summary>
            Restores the previous graphical state.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.BeginPageContentStream">
            <summary>
            Initializes the default view transformation, i.e. the 
            transformation from the user page space to the PDF page space.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.EndPageContentStream">
            <summary>
            Ends the content stream, i.e. ends the text mode and balances the
            graphic state stack.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.RealizeCurrentTransform">
            <summary>
            Realizes the current transformation matrix, if necessary.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.Update(Telerik.Reporting.Pdf.Drawing.PdfFont,System.Drawing.Brush,System.Int32)">
            <summary>
            Makes the specified pdfFont and brush to the current graphics objects.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.Update(Telerik.Reporting.Pdf.Drawing.PdfImage)">
            <summary>
            Makes the specified gdiImage to the current graphics object.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.GetImageName(Telerik.Reporting.Pdf.Drawing.PdfImage)">
            <summary>
            Gets the resource name of the specified gdiImage within this page or form.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.Save(Telerik.Reporting.Pdf.Drawing.PdfGraphicsState)">
            <summary>
            Clones the current graphics state and push it on a stack.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.ResetClip">
            <summary>
            Sets the clip path empty. Only possible if graphic state level has
            the same value as it has when the first time SetClip was invoked.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.AppendPartialArc(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Telerik.Reporting.Pdf.Rendering.PdfRenderer.PathStart,Telerik.Reporting.Pdf.Rendering.PdfRenderer.XMatrix)">
            <summary>
            Appends one or up to five Bézier curves that interpolate the arc.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.Quatrant(System.Double,System.Boolean,System.Boolean)">
            <summary>
            Gets the quadrant (0 through 3) of the specified angle. If the angle lies on an edge
            (0, 90, 180, etc.) the result depends on the details how the angle is used.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.AppendPartialArcQuadrant(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,Telerik.Reporting.Pdf.Rendering.PdfRenderer.PathStart,Telerik.Reporting.Pdf.Rendering.PdfRenderer.XMatrix)">
            <summary>
            Appends a Bézier curve for an arc within a quadrant.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Strokes a single connection of two points.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRenderer.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Strokes a series of connected points.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Rendering.PdfRenderer.OwnerDocument">
            <summary>
            Gets the owning PdfDocument of this page or form.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Rendering.PdfRenderer.Resources">
            <summary>
            Gets the PdfResourcesDictionary of this page or form.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Rendering.PdfRenderer.Size">
            <summary>
            Gets the size of this page or form.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Rendering.PdfRenderer.PathStart">
            <summary>
            Indicates how to handle the first point of a path.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRenderer.PathStart.MoveTo1st">
            <summary>
            Set the current position to the first point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRenderer.PathStart.LineTo1st">
            <summary>
            Draws a line to the first point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRenderer.PathStart.Ignore1st">
            <summary>
            Ignores the first point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRenderer.Calc.Deg2Rad">
            <summary>
            Degree to radiant factor.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRenderer.Calc.πHalf">
            <summary>
            Half of pi.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Rendering.PdfRendererGraphicsState">
            <summary>
            Represents the current PDF graphics state.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRendererGraphicsState.currentCtm">
            <summary>
            The current transformation matrix.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRendererGraphicsState.unupdatedCtm">
            <summary>
            The unupdated current transformation matrix.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Rendering.PdfRendererGraphicsState.shouldUpdateCtm">
            <summary>
            A flag indicating whether the CTM must be realized.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRendererGraphicsState.MultiplyTransform(Telerik.Reporting.Pdf.Drawing.PdfMatrix,Telerik.Reporting.Pdf.Drawing.PdfMatrixOrder)">
            <summary>
            Modifies the current transformation matrix.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Rendering.PdfRendererGraphicsState.RealizeCtm">
            <summary>
            Realizes the Current Transformation Matrix.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Signatures.ByteRangeComposer">
            <summary>
            Defines a class used for composing a byte range from a specified multiple <see cref="T:Telerik.Reporting.Pdf.Signatures.SourcePart"/> instances of a <see cref="T:Telerik.Reporting.Pdf.Signatures.ISourceStream"/>.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Signatures.ByteRangeComposer.Compose">
            <summary>
            Composes the byte range.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Signatures.ByteRangeComposer.Length">
            <summary>
            Gets the calculated length from all source parts.
            </summary>
            <value>The length.</value>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Signatures.FileSourceStream">
            <summary>
            Defines a class used for reading a document source in a <see cref="T:System.IO.Stream"/> format.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Signatures.ISourceStream">
            <summary>
            Defines an interface used for reading a document source.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Signatures.ISourceStream.Read(System.Byte[],System.Int32,System.Int64,System.Int32)">
            <summary>
            Reads the specified output buffer.
            </summary>
            <param name="outputBuffer">The output buffer.</param>
            <param name="outputBufferPosition">The output buffer position.</param>
            <param name="streamOffset">The stream offset.</param>
            <param name="length">The length.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Signatures.FileSourceStream.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Pdf.Signatures.FileSourceStream"/> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Signatures.FileSourceStream.Read(System.Byte[],System.Int32,System.Int64,System.Int32)">
            <summary>
             Reads a reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
            <param name="outputBuffer">
            An array of bytes. When this method returns, the buffer contains the specified
            byte array with the values between offset and (streamOffset + length - 1) replaced by
            the bytes read from the current source.
            </param>
            <param name="outputBufferPosition">The zero-based byte offset in outputBuffer at which to begin storing the data read from the current stream.</param>
            <param name="streamOffset">The zero-based byte offset in buffer at which to begin read from the current stream.</param>
            <param name="length">The maximum number of bytes to be read from the current stream.</param>
            <returns>The total number of bytes read into the buffer.</returns>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Signatures.Signature">
            <summary>
            Defines a class used for signing and verifying a digital signature.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Signatures.Signature.#ctor(Telerik.Reporting.Pdf.PdfDocument,Telerik.Reporting.Pdf.PdfPageDictionary,Telerik.Reporting.Pdf.Signatures.SignatureExportInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Pdf.Signatures.Signature"/> class.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Signatures.SignatureSubFilterNames.ADBE_X509_RSA_SHA1">
            <summary>
            Gets the name of the x509 rsa sha1 sub filter.
            </summary>
            <value>Sub filter.</value>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Signatures.SignatureSubFilterNames.ADBE_PKCS7_SHA1">
            <summary>
            Gets the name of the pkcs7 sub filter.
            </summary>
            <value>Sub filter.</value>
        </member>
        <member name="F:Telerik.Reporting.Pdf.Signatures.SignatureSubFilterNames.ADBE_PKCS7_DETACHED">
            <summary>
            Gets the name of the pkcs7 detached sub filter.
            </summary>
            <value>Sub filter.</value>
        </member>
        <member name="T:Telerik.Reporting.Pdf.Signatures.SourcePart">
            <summary>
            Defines a class used for determining what part of a <see cref="T:Telerik.Reporting.Pdf.Signatures.ISourceStream"/> should be read.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Pdf.Signatures.SourcePart.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.Pdf.Signatures.SourcePart"/> class.
            </summary>
            <param name="offset">The offset.</param>
            <param name="length">The length.</param>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Signatures.SourcePart.Offset">
            <summary>
            Gets or sets the offset.
            </summary>
            <value>The offset.</value>
        </member>
        <member name="P:Telerik.Reporting.Pdf.Signatures.SourcePart.Length">
            <summary>
            Gets or sets the length.
            </summary>
            <value>The length.</value>
        </member>
        <member name="T:Telerik.Reporting.Drawing.FontExtensions">
            <summary>
            Font class extensions
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Drawing.FontExtensions.GetStyle(Telerik.Reporting.Drawing.Font)">
            <summary>
            Gets the FontStyle style.
            </summary>
            <returns>FontStyle</returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.Common.IHtmlLayoutElement.IsStartElement">
            <summary>
            Determines if the element is the first element 
            produced from the layout of the html node
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Common.IHtmlLayoutElement.IsEndElement">
            <summary>
            Determines if the element is the first element 
            produced from the layout of the html node
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Common.IHtmlLayoutElement.ClientBaseline">
            <summary>
            Baseline according to client rectangle
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Common.LUnit">
            <summary>
            Layout unit helper class
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Common.LUnit.FromMm(System.Single)">
            <summary>
            Converts mm to hundreds of mm
            </summary>
            <param name="mm"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Common.LUnit.ToMm(System.Int64)">
            <summary>
            Converts hundreds of mm to mm
            </summary>
            <param name="layoutUnits"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.Common.Measurements">
            <summary>
            Item measurements in layout units (LUnit)
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Common.Measurements.Offset(System.Int64,System.Int64)">
            <summary>
            Move the item down and right with the given offsets
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Common.Measurements.Expand(System.Int64,System.Int64)">
            <summary>
            Enlarge the item with the given size 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Common.Measurements.Width">
            <summary>
            Sections and groups are always report-wide
            so they have to work with Report.Measurement.Width 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Common.PointLU">
            <summary>
            Point of layout units
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Common.RectangleLU">
            <summary>
            Rectangle of RoundedFloats
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Common.ReportObjectExtensions.FontToString(Telerik.Reporting.ReportObject)">
            <summary>
            Font.ToString() implementation 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Common.RoundedFloat">
            <summary>
            Use this class to perform a floating point comparison with precision of 0.01
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Common.SizeLU">
            <summary>
            Size of layout units
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.IDataObject">
            <summary>
            Provides unified access to a single data record from a data source.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.IDataObject.GetProperties">
            <summary>
            Returns a collection of the available properties 
            for the underlying object. To get the actual data object
            use <see cref="P:Telerik.Reporting.Processing.IDataObject.RawData"/>. 
            </summary>
            <value>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> with the properties 
            of the underlying data object.
            </value>
        </member>
        <member name="M:Telerik.Reporting.Processing.IDataObject.TryGetValue(System.String,System.Object@)">
            <summary>
            Gets the value of the specified member.
            </summary>
            <param name="member">The name of the member to get.</param>
            <param name="value">
            When this method returns, contains the value associated with the specified member, if the key is found; 
            otherwise, <b>null</b> (<b>Nothing</b>). This parameter is passed uninitialized.</param>
            <returns><b>true</b> if the member exists; otherwise <b>false</b>.</returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.IDataObject.Number">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.IDataObject.Item(System.String)">
            <summary>
            Gets the value of the specified member.
            </summary>
            <remarks>
            Depending on the type of the data source the member may refer 
            to a <see cref="T:System.Data.DataColumn"/> (when the report is bound to a 
            <see cref="T:System.Data.DataTable"/> or <see cref="T:System.Data.DataSet"/>) or a public property
            (when bound to an <see cref="T:System.Collections.IEnumerable"/> or 
            a <see cref="T:System.ComponentModel.ITypedList"/>). 
            </remarks>
            <param name="member">The name of the member</param>
            <value>The value of the member.</value>
        </member>
        <member name="P:Telerik.Reporting.Processing.IDataObject.RawData">
            <summary>
            Gets the actual object that the current IDataObject wraps.
            </summary>
            <remarks>
            Depending on the type of the data source the member may refer 
            to a <see cref="T:System.Data.DataRow"/> (when the report is bound to a 
            <see cref="T:System.Data.DataTable"/> or <see cref="T:System.Data.DataSet"/>) or an object
            (when bound to an <see cref="T:System.Collections.IEnumerable"/>).
            </remarks>
            <value>The actual data.</value>
        </member>
        <member name="T:Telerik.Reporting.Processing.IDataGroupMember">
            <summary>
            Provides an unified access to the data of a group member
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.IDataGroupMember.EnumerateRawData">
            <summary>
            Enumerates all data items (details) that belongs to the current group member.
            </summary>
            <returns>A set of raw data items that belongs to the current group member.</returns>
            <example>
            The following example, uses the <b>IDataGroupMember.EnumerateRawData()</b> to display the detail items for each member of the Country group.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\IDataGroupMemberSnippets.cs" region="EnumerateRawData" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\IDataGroupMemberSnippets.vb" region="EnumerateRawData" />
            </example>
        </member>
        <member name="F:Telerik.Reporting.Processing.Data.DataMember.extendedValues">
            <summary>
            access only using the ExtendedValues property
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Data.DataModeling.Interfaces.ISimpleMeasure.IsExpandable">
            <summary>
            Gets a value indicating if the type of the measure has child measures.
            Used only when the measure is retrieved from other pp domain (RS scenario)
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Data.KeyUtils.ComparePaths(Telerik.Reporting.Processing.Data.Key[],Telerik.Reporting.Processing.Data.Key[])">
            <summary>
            = 0 - Paths are equal
            less than 0 - path1 is subpath on path2
            greater than 0 - path2 is subpath on path1
            </summary>
            <param name="path1"></param>
            <param name="path2"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Data.DynamicMemberExpression.#ctor(System.String,System.Object,System.String)">
            <summary>
            Tests dedicated constructor
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Data.MultidimensionalQuery">
            <summary>
            Represents a multidimensional query
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Data.AxisDefCollection">
            <summary>
            Represents a collection of AxisDef-s
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Data.AxisDef">
            <summary>
            Represents an axis in the multidimensional query
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Data.ResultSet.#ctor(System.String)">
            <summary>
            This constructor is for test purposes only
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Telerik.Reporting.Processing.Data.ResultSet.CellAt(System.Collections.Generic.IList{Telerik.Reporting.Processing.Data.IDataMember})">
            <summary>
            cells[axis0_member, axis1_member,..axisN_member]
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Data.ResultSet.CellAt(System.Collections.Generic.IList{Telerik.Reporting.Processing.Data.IDataMember},System.Boolean)">
            <summary>
            cells[axis0_member, axis1_member,..axisN_member]
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Data.ResultSet.Axes">
            <summary>
            axis0, axis1, axisN
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Data.CellDataMemberContainer">
            <summary>
            Caches CellDataMembers (Body data)
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Data.SeedDataAdapter.CollectGroupBy(System.Collections.Generic.IList{Telerik.Reporting.Processing.Data.MemberDef},System.Collections.Generic.HashSet{Telerik.Reporting.Expressions.ExpressionNode})">
            <summary>
            
            </summary>
            <param name="members"></param>
            <param name="expressions"></param>
            <returns>true if Detail group is not encountered, otherwise false</returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.Data.SeedDataAdapter.SeedRoot">
            <summary>
            Test purposes only!
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Data.SeedDataAdapter.SeedExpression">
            <summary>
            Test purposes only!
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Expressions.EmbeddedExpressionsParser.Split(System.String)">
            <summary>
            Parses the input string on constants and embedded expressions.
            </summary>
            <param name="text">input string</param>
            <returns>generated list of expression/const terms</returns>
            <exception cref="T:Telerik.Reporting.Processing.Expressions.EmbeddedExpressionsException">Exception is thrown 
            when the input sting is not valid sequence of constants 
            and embedded expressions</exception>
        </member>
        <member name="M:Telerik.Reporting.Processing.Expressions.EmbeddedExpressionsParser.Parse(System.String,System.Func{System.String,System.String})">
            <summary>
            Parses the input string on constants and embedded expressions
            generates list containing only the expressions.
            </summary>
            <param name="text">input string</param>
            <returns>generated list of expressions</returns>
            <exception cref="T:Telerik.Reporting.Processing.Expressions.EmbeddedExpressionsException">Exception is thrown 
            when the input sting is not valid sequence of constants 
            and embedded expressions</exception>
        </member>
        <member name="M:Telerik.Reporting.Processing.Expressions.EmbeddedExpressionsParser.Validate(System.String)">
            <summary>
            Determines if the input string is a valid sequence of constants and
            embedded expressions 
            </summary>
            <param name="text">input string</param>
            <returns>true if valid, else false</returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.Expressions.ExpressionTreePostProcessor">
            <summary>
            Substitutes some of the general usage ExpressionNodes with Reporting specific nodes.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Expressions.ExecXNode">
            <summary>
            This node represents Exec function with more than one data scope
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ExtensionInfo">
            <summary>
            Store info for an extension
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.ExtensionInfo.CreateInstance">
            <summary>
            create and get an instance of extensionType
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.ExtensionInfo.PrepareDeviceInfo(System.Collections.Hashtable)">
            <summary>
            Combines the default parameter values with the values passed by the user
            with type check
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ExtensionInfo.DefaultParameterValues">
            <summary>
            Extension parameter values coming from the extension definition - The ExtensionParameterAttribute
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ExtensionInfo.MergedParameterValues">
            <summary>
            DefaultParameterValues merged with any specific values like the configuration values
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ExtensionInfo.ExplicitParameterValues">
            <summary>
            Parameter values explicitly set in configuration
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ExtensionInfoCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.ExtensionInfoCollection.IndexOf(System.String)">
            <param name="name">Case insensitive name</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.ExtensionInfoCollection.Contains(System.String)">
            <param name="name">Case insensitive name</param>
        </member>
        <member name="P:Telerik.Reporting.Processing.ExtensionInfoCollection.Item(System.String)">
            <param name="name">Case insensitive name</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.ExtensionManagerBase.Load(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a list of core(Telerik provided) IExtension types.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.BitmapUtils.ImageToByteArray(System.Drawing.Image)">
            <summary>
            Converts an image to a byte array in BMP format
            </summary>
            <param name="tileBitmap"></param>
            <returns>Bitmap with BMP ImageFormat</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.BitmapUtils.ConvertToPngBytes(System.Byte[])">
            <summary>
            Converts an image bytes in JPG, BMP, etc. to a PNG byte array.
            </summary>
            <param name="tileImageBytes">image bytes received from the tile provider</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.BitmapUtils.Stitch(System.Drawing.Image,System.Drawing.Image,System.Drawing.Point)">
            <summary>
            Creates a new bitmap, stitching bitmap2 to bitmap1 at the specified position.
            </summary>
            <param name="bitmap1"></param>
            <param name="bitmap2"></param>
            <param name="position"></param>
            <returns>the produced bitmap</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.DistanceCalculator.CalcDistance(Telerik.Reporting.Location,Telerik.Reporting.Location)">
            <summary>
            Calculates the distance between two points in kilometers.
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.DistanceCalculator.CalcExtentWidth(Telerik.Reporting.Extent)">
            <summary>
            Calculates the extent width (difference between longitude coordinates) in kilometers, measuring it in the middle 
            between the two latitude coordinates
            </summary>
            <param name="extent"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.DistanceCalculator.CalcExtentHeight(Telerik.Reporting.Extent)">
            <summary>
            Calculates the difference between latitude coordinates in kilometers, using the minimum longitude as X.        
            </summary>
            <param name="extent"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.ExtentExtensions.Contains(Telerik.Reporting.Extent,Telerik.Reporting.Extent)">
            <summary>
            Determines if the rectangular region represented by ext is entirely contained within this Extent region.
            </summary>
            <param name="ext1"></param>
            <param name="ext2"></param>
            <returns>True if ext is contained in this Extent</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.ExtentExtensions.Intersects(Telerik.Reporting.Extent,Telerik.Reporting.Extent)">
            <summary>
            Determines if this extent intersects with ext.
            </summary>
            <param name="ext1"></param>
            <param name="ext2"></param>
            <returns>True if ext intersects this Extent</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.ExtentExtensions.IsAPoint(Telerik.Reporting.Extent)">
            <summary>
            Determines if the extent coordinates are the same, e.g. it is a single point.
            </summary>
            <param name="extent"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.GeoLocation.Latitude">
            <summary>
            Location.Latitude
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.GeoLocation.Longitude">
            <summary>
            Location.Longitude
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.GeoLocation.Location">
            <summary>
            The location (Latitude/Longitude) of the returned point.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.GeoLocation.RequestQuery">
            <summary>
            The query string used to request the current location
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.GeoLocation.GeoRequest">
            <summary>
            The request that is used to get he current result.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.GeoLocation.Name">
            <summary>
            The location name as returned from the server.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.GeoLocation.ExpDate">
            <summary>
            Tile expiration date
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.GeoLocation.Error">
            <summary>
            String containing the error thrown during the download.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.MapQuestLocationProvider.MaxResultsCount">
            <summary>
             MapQuest returns the center of the default country (USA) when not able to find a location.
             REF: http://developer.mapquest.com/web/products/forums/-/message_boards/view_message/417276        
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.MapQuestOpenAPILocationProvider.MaxResultsCount">
            <summary>
             In contrast with Licensed API, Open API returns valid XML with status 0 when not able to find a location.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.ProjectionExtensions.GetExtentBounds(Telerik.Reporting.IProjection,Telerik.Reporting.Extent,System.Drawing.RectangleF)">
            <summary>
            Returns the bounds of the current extent according to the world bounds.
            </summary>
            <param name="proj"></param>
            <param name="extent"></param>
            <param name="worldBounds">Usually calculated by the GetWorldBounds() method</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.ProjectionExtensions.GetWorldBounds(Telerik.Reporting.IProjection,Telerik.Reporting.Extent,System.Drawing.RectangleF)">
            <summary>
            If the extent takes the given bounds calculates the bounds of the entire world.
            </summary>
            <param name="proj"></param>
            <param name="extent"></param>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.ProjectionExtensions.FixExtentIntoBounds(Telerik.Reporting.IProjection,Telerik.Reporting.Extent,System.Drawing.RectangleF)">
            <summary>
            Ensures that the given extent is conformant with the supplied bounds
            </summary>
            <param name="proj"></param>
            <param name="extent"></param>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.BingTileProvider.TileXYToQuadKey(System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts tile XY coordinates into a QuadKey at a specified level of detail.
            </summary>
            <param name="tileX">Tile X coordinate.</param>
            <param name="tileY">Tile Y coordinate.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <returns>A string containing the QuadKey.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.BingTileProvider.LatLongToQuadKey(System.Double,System.Double,System.Int32)">
            <summary>
            Returns the QuadKey by given Latitude, Longitude and Level of Detail
            </summary>
            <param name="latitude">Latitude of the point, in degrees.</param>
            <param name="longitude">Longitude of the point, in degrees.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <returns>A string containing the QuadKey.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.BingTileSystem.QuadKeyToTileXY(System.String,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Converts a QuadKey into tile XY coordinates.
            </summary>
            <param name="quadKey">QuadKey of the tile.</param>
            <param name="tileX">Output parameter receiving the tile X coordinate.</param>
            <param name="tileY">Output parameter receiving the tile Y coordinate.</param>
            <param name="levelOfDetail">Output parameter receiving the level of detail.</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.BingTileSystem.QuadKeyToTileExtent(System.String)">
            <summary>
            Returns the latitude/longitude extent of a given tyle by quad key.
            </summary>
            <param name="quadKey"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.BingTileSystem.GetSubQuadKeys(System.String)">
            <summary>
            Returns the dependent 4 quad keys of a given quad key.
            </summary>
            <param name="quadKey">key referencing a tile</param>
            <returns>the keys of the sub tiles referenced by the passed quadKey</returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.ThrowExceptionTileProvider">
            <summary>
            Class used only for testing purposes.
            When GetTilesAsync is called, it will throw an System.Net.WebException if the TileUrl is invalid.
            Otherwise it will return an image as if a regular WebTileProvider.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.GoogleMapsTileProvider.LatLongToTileXYTest(System.Double,System.Double,System.Int32)">
            <summary>
            For TEST purposes only
            </summary>
            <param name="latitude"></param>
            <param name="longitude"></param>
            <param name="levelOfDetail"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.MapQuestTileProvider.LatLongToTileXYTest(System.Double,System.Double,System.Int32)">
            <summary>
            For TEST purposes only
            </summary>
            <param name="latitude"></param>
            <param name="longitude"></param>
            <param name="levelOfDetail"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileHelper.Clip(System.Double,System.Double,System.Double)">
            <summary>
            Clips a number to the specified minimum and maximum values.
            </summary>
            <param name="n">The number to clip.</param>
            <param name="minValue">Minimum allowable value.</param>
            <param name="maxValue">Maximum allowable value.</param>
            <returns>The clipped value.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileHelper.MapSize(System.Int32)">
            <summary>
            Determines the map width and height (in pixels) at a specified level
            of detail.
            </summary>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <returns>The map width and height in pixels.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileHelper.MapSizeInTiles(System.Int32)">
            <summary>
            Returns the map size in tiles.
            </summary>
            <param name="levelOfDetail"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileHelper.GroundResolution(System.Double,System.Int32)">
            <summary>
            Determines the ground resolution (in meters per pixel) at a specified
            latitude and level of detail.
            </summary>
            <param name="latitude">Latitude (in degrees) at which to measure the
            ground resolution.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <returns>The ground resolution, in meters per pixel.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileHelper.MapScale(System.Double,System.Int32,System.Int32)">
            <summary>
            Determines the map scale at a specified latitude, level of detail,
            and screen resolution.
            </summary>
            <param name="latitude">Latitude (in degrees) at which to measure the
            map scale.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <param name="screenDpi">Resolution of the screen, in dots per inch.</param>
            <returns>The map scale, expressed as the denominator N of the ratio 1 : N.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileHelper.LatLongToPixelXY(System.Double,System.Double,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Converts a point from latitude/longitude WGS-84 coordinates (in degrees)
            into pixel XY coordinates at a specified level of detail.
            </summary>
            <param name="latitude">Latitude of the point, in degrees.</param>
            <param name="longitude">Longitude of the point, in degrees.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <param name="pixelX">Output parameter receiving the X coordinate in pixels.</param>
            <param name="pixelY">Output parameter receiving the Y coordinate in pixels.</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileHelper.PixelXYToLatLong(System.Int32,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Converts a pixel from pixel XY coordinates at a specified level of detail
            into latitude/longitude WGS-84 coordinates (in degrees).
            </summary>
            <param name="pixelX">X coordinate of the point, in pixels.</param>
            <param name="pixelY">Y coordinates of the point, in pixels.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <param name="latitude">Output parameter receiving the latitude in degrees.</param>
            <param name="longitude">Output parameter receiving the longitude in degrees.</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileHelper.PixelXYToTileXY(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Converts pixel XY coordinates into tile XY coordinates of the tile containing
            the specified pixel.
            </summary>
            <param name="pixelX">Pixel X coordinate.</param>
            <param name="pixelY">Pixel Y coordinate.</param>
            <param name="tileX">Output parameter receiving the tile X coordinate.</param>
            <param name="tileY">Output parameter receiving the tile Y coordinate.</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileHelper.TileXYToPixelXY(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Converts tile XY coordinates into pixel XY coordinates of the upper-left pixel
            of the specified tile.
            </summary>
            <param name="tileX">Tile X coordinate.</param>
            <param name="tileY">Tile Y coordinate.</param>
            <param name="pixelX">Output parameter receiving the pixel X coordinate.</param>
            <param name="pixelY">Output parameter receiving the pixel Y coordinate.</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileHelper.LatLongToTileXY(System.Double,System.Double,System.Int32)">
            <summary>
            Converts Latitude/Longitude coordinates into tile XY coordinates of the tile containing
            the specified point.
            </summary>
            <param name="latitude">Latitude of the point, in degrees.</param>
            <param name="longitude">Longitude of the point, in degrees.</param>
            <param name="levelOfDetail">Level of detail, from 1 (lowest detail)
            to 23 (highest detail).</param>
            <param name="tileX">Output parameter receiving the tile X coordinate.</param>
            <param name="tileY">Output parameter receiving the tile Y coordinate.</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileHelper.TileXYToLatLong(System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts tile XY coordinates to Latitude/Longitude coordinates according to the specified level of details.
            </summary>
            <param name="tileX">tile X coordinate</param>
            <param name="tileY">tile Y coordinate</param>
            <param name="levelOfDetail">level of detail</param>
            <returns>Location(latitude, longitude)</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileHelper.TileXYToLatLong_BR(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the BOTTOM-RIGHT latitude/longitude coordinates of a given tile according to the specified level of details.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="levelOfDetail"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileHelper.TileXYToExtent(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the latitude/longitude extent of a given tile for a specified level of detail.
            </summary>
            <param name="tileX"></param>
            <param name="tileY"></param>
            <param name="levelOfDetail"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.TileImage">
            <summary>
            image abstraction
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileInfo.SetExtent(Telerik.Reporting.Extent)">
            <summary>
            Sets the Latitude/Longitude values of the supplied TileImage.
            </summary>
            <param name="info"></param>
            <param name="extent"></param>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.TileInfo.Url">
            <summary>
            Subdomain-templated Url that identifies the tile.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.TileInfo.LatitudeMin">
            <summary>
            TileExtent.LatitudeMin
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.TileInfo.LongitudeMin">
            <summary>
            TileExtent.LongitudeMin
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.TileInfo.LatitudeMax">
            <summary>
            TileExtent.LatitudeMax
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.TileInfo.LongitudeMax">
            <summary>
            TileExtent.LongitudeMax
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.TileImage.Data">
            <summary>
            The image stream returned from the provider
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.TileImage.ExpDate">
            <summary>
            Tile expiration date
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileImageExtensions.SaveToFile(Telerik.Reporting.Processing.Mapping.TileImage,System.String)">
            <summary>
            DEBUG purposes only!
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.TileImageExtensions.CopyTileInfoFields(Telerik.Reporting.Processing.Mapping.TileImage,Telerik.Reporting.Processing.Mapping.TileInfo)">
            <summary>
            Copies the URL and the extent properties from the passed TileInfo to the TileImage instance.
            </summary>
            <param name="tileImage"></param>
            <param name="tileInfo"></param>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.TilePoint">
            <summary>
            Struct defining a tile position
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.CreateStream">
            <summary>
            Used by the rendering extension to obtain a stream.
            </summary>
            <param name="name">The name of the stream.</param>
            <param name="extension">The type of the rendering extension.</param>
            <param name="encoding">The encoding used by the stream.</param>
            <param name="mimeType">The MIME type of the stream.</param>
            <returns>The stream to be used by the Reporting engine.</returns>
            <remarks>The stream created by the CreateStream delegate is used by the Reporting 
            engine and for best performance it is not advisable to be closed.</remarks>
        </member>
        <member name="T:Telerik.Reporting.Processing.EvaluateHeaderFooterExpressions">
            <summary>
            Delegate used to re-evaluate the page header and 
            footer sections for each generated page.
            </summary>
            <param name="pageNumber">The current page number.</param>
            <param name="pageCount">The total page count.</param>
            <param name="report">The report to be evaluated.</param>
        </member>
        <member name="T:Telerik.Reporting.Processing.PageLayoutInfo">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.RenderingContextKeys.ProcessedPageCount">
            <summary>
            The number of pages that the renderer has processed
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.RenderingContextKeys.RenderPageNumber">
            <summary>
            Page number that will be used in expressions (affected by reset)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.RenderingContextKeys.RenderPageCount">
            <summary>
            Page count that will be used in expressions (affected by reset)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.RenderingContextKeys.OutputPageCount">
            <summary>
            The count of the physical pages sent to the writer
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.PageCountExpressionLocator.NeedTotalPageCount(System.Collections.Generic.IEnumerable{Telerik.Reporting.Processing.Report})">
            <summary>
            Returns true if even one of the reports needs a page count.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.RendererNotAvailableException">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ReportProcessingException">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.RenderingResult">
            <summary>
            Represents a result of the report rendering.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.RenderingResult.DocumentName">
            <summary>
            Gets the name of the created document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.RenderingResult.MimeType">
            <summary>
            Gets the MIME type of the document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.RenderingResult.Extension">
            <summary>
            Gets the file extension of the document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.RenderingResult.Encoding">
            <summary>
            Gets the character encoding of the document.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.RenderingResult.DocumentBytes">
            <summary>
            Gets a byte array that contains the rendered report.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.RenderingResult.Errors">
            <summary>
            Gets an array of exceptions that has occurred during the report processing.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.RenderingResult.HasErrors">
            <summary>
            Gets a value that indicates whether the collection contains errors.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.RenderingResult.PageCount">
            <summary>
            Gets a value that indicates the total number of pages in the generated document.
            </summary>
            <remarks>
            For formats supporting pagination, the total number of pages is calculated by the rendering engine according to the report's page settings.
            For formats not supporting pagination, e.g. XLS, XLSX, CSV, the property will return a default value of 0.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.Processing.ReportProcessor">
            <summary>
            Represents the object responsible for printing and rendering Reports.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportProcessor.CountPages(System.Collections.Generic.IList{Telerik.Reporting.Processing.Report},Telerik.Reporting.Processing.IRenderingContext,System.Collections.Hashtable,Telerik.Reporting.Processing.ExtensionInfo)">
            <summary>
            Calculates the total page count and records it in the rendering context.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportProcessor.#ctor">
            <summary>
            Initializes a new instance of the ReportProcessor class. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportProcessor.Print(Telerik.Reporting.IReportDocument,System.Drawing.Printing.PrinterSettings)">
            <summary>
            Prints a report document using the specified printer settings.
            </summary>
            <param name="reportDocument">
            Specifies an instance of a report document to print.
            Both <see cref="T:Telerik.Reporting.Report"/>
            and <see cref="T:Telerik.Reporting.ReportBook"/>
            documents are supported.
            </param>
            <param name="printerSettings">
            Specifies the printer settings to be used when printing the document.
            If null or invalid settings are specified, the Print Dialog appears.
            </param>
            <remarks>
            To prevent the Print Dialog from appearing, you should specify valid
            printer settings to this method.
            <example>
            This example illustrates how to prevent the standard Print Dialog from
            appearing in a batch print operation or when printing from a service.
            <code lang="CS" title="C#">
            // Create an instance of the report to print.
            IReportDocument reportDocument = new MyReport();
            // Obtain the settings of the default printer.
            PrinterSettings printerSettings = new PrinterSettings();
            // Adjust the printer settings if necessary...
            
            // Print the report using the printer settings.
            ReportProcessor.Print(reportDocument, printerSettings);
            </code>
            <code lang="VB" title="VB">
            ' Create an instance of the report to print.
            Dim reportDocument As IReportDocument = New MyReport()
            ' Obtain the settings of the default printer.
            Dim printerSettings As New PrinterSettings()
            ' Adjust the printer settings if necessary...
            
            ' Print the report using the printer settings.
            ReportProcessor.Print(reportDocument, printerSettings)
            </code>
            </example>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportProcessor.Render(System.String,Telerik.Reporting.IReportDocument,System.Collections.Hashtable,System.String@,System.String@,System.Text.Encoding@)">
            <summary>
            Renders a report in the specified format
            </summary>
            <param name="format">Export format</param>
            <param name="report">Report document to render.</param>
            <param name="deviceInfo">Contains parameters to pass to the rendering extension.</param>
            <param name="mimeType">The MIME type of the result buffer.</param>
            <param name="extension">The file extension of the result buffer.</param>
            <param name="encoding">The character encoding of the result buffer.</param>
            <returns>Byte array that contains the rendered report.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportProcessor.Render(System.String,Telerik.Reporting.IReportDocument,System.Collections.Hashtable,System.String@,System.String@,System.String@,System.Text.Encoding@)">
            <summary>
            Renders a report in the specified format
            </summary>
            <param name="format">Export format</param>
            <param name="report">Report document to render.</param>
            <param name="deviceInfo">Contains parameters to pass to the rendering extension.</param>
            <param name="mimeType">The MIME type of the result buffer.</param>
            <param name="documentName">The name of the created document.</param>
            <param name="extension">The file extension of the result buffer.</param>
            <param name="encoding">The character encoding of the result buffer.</param>
            <returns>Byte array that contains the rendered report.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportProcessor.Render(System.String,Telerik.Reporting.IReportDocument,System.Collections.Hashtable,Telerik.Reporting.Processing.CreateStream)">
            <summary>
            Renders a report in the specified format
            </summary>
            <param name="format">Export format</param>
            <param name="report">Report document to render</param>
            <param name="deviceInfo">Contains parameters to pass to the rendering extension.</param>
            <param name="createStreamCallback">The delegate function to call to get a stream to render into.</param>
            <returns>True if the rendering succeeds.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportProcessor.Render(System.String,Telerik.Reporting.IReportDocument,System.Collections.Hashtable,Telerik.Reporting.Processing.CreateStream,System.String@)">
            <summary>
            Renders a report in the specified format
            </summary>
            <param name="format">Export format</param>
            <param name="reportDocument">Report document to render</param>
            <param name="deviceInfo">Contains parameters to pass to the rendering extension.</param>
            <param name="createStreamCallback">The delegate function to call to get a stream to render into.</param>
            <param name="documentName">The name of the created document.</param>
            <returns>True if the rendering succeeds.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportProcessor.PrintReport(Telerik.Reporting.ReportSource,System.Drawing.Printing.PrinterSettings)">
            <summary>
            Prints a report document using the specified printer settings.
            </summary>
            <param name="reportSource">
            Specifies the <see cref="T:Telerik.Reporting.ReportSource"/> for the report document to print.
            </param>
            <param name="printerSettings">
            Specifies the printer settings to be used when printing the document.
            If null or invalid settings are specified, the Print Dialog appears.
            </param>
            <remarks>
            To prevent the Print Dialog from appearing, you should specify valid
            printer settings to this method.
            <example>
            This example illustrates how to prevent the standard Print Dialog from
            appearing in a batch print operation or when printing from a service.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\ReportProcessorSnippets.cs" region="PrintNoUI"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\ReportProcessorSnippets.vb" region="PrintNoUI"/>
            </example>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportProcessor.PrintReport(Telerik.Reporting.ReportSource,System.Drawing.Printing.PrinterSettings,System.String)">
            <summary>
            Prints a report document using the specified printer settings and output format.
            </summary>
            <param name="reportSource">
            Specifies the <see cref="T:Telerik.Reporting.ReportSource"/> for the report document to print.
            </param>
            <param name="printerSettings">
            Specifies the printer settings to be used when printing the document.
            If null or invalid settings are specified, the Print Dialog appears.
            </param>
            <param name="outputFormat">
            Specifies the output format to be used when printing the document.
            If not specified, the EMF format will be used.
            </param>
            <remarks>
            To prevent the Print Dialog from appearing, you should specify valid
            printer settings to this method.
            <example>
            This example illustrates how to prevent the standard Print Dialog from
            appearing in a batch print operation or when printing from a service.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\ReportProcessorSnippets.cs" region="PrintNoUI"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\ReportProcessorSnippets.vb" region="PrintNoUI"/>
            </example>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportProcessor.ProcessReportSource(Telerik.Reporting.ReportSource,Telerik.Reporting.Processing.IRenderingContext)">
            <summary>
            Processes an IReportDocument.
            </summary>
            <param name="reportSource">The <see cref="T:Telerik.Reporting.ReportSource"/> for the report document to process.</param>
            <param name="context"></param>
            <returns>If the IReportDocument is normal single report, then a List 
            with one element (the report itself) is returned. If the 
            IReportDocument is a ReportBook, then a List with all of its reports 
            is returned.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportProcessor.RenderReport(System.String,Telerik.Reporting.ReportSource,System.Collections.Hashtable)">
            <summary>
            Renders a report in the specified format
            </summary>
            <param name="format">Export format.
            See <conceptualLink target="935C2C81-69FB-4EE7-B104-C317A615D294">Rendering Extensions</conceptualLink>
            help article for available export formats.</param>
            <param name="reportSource">The <see cref="T:Telerik.Reporting.ReportSource"/> for the report document to render.</param>
            <param name="deviceInfo">Contains parameters to pass to the rendering extension.</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportProcessor.RenderReport(System.String,Telerik.Reporting.ReportSource,System.Collections.Hashtable,Telerik.Reporting.Processing.CreateStream,System.String@)">
            <summary>
            Renders a report in the specified format
            </summary>
            <param name="format">Export format.
            See <conceptualLink target="935C2C81-69FB-4EE7-B104-C317A615D294">Rendering Extensions</conceptualLink>
            help article for available export formats.</param>
            <param name="reportSource">The <see cref="T:Telerik.Reporting.ReportSource"/> for the report document to render.</param>
            <param name="deviceInfo">Contains parameters to pass to the rendering extension.</param>
            <param name="createStreamCallback">The delegate function to call to get a stream to render into.</param>
            <param name="documentName">The name of the created document.</param>
            <returns>True if the rendering succeeds.</returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.ReportProcessor.PrintController">
            <summary>
            Specifies a print controller to be used when printing a Report.
            If a null value is specified, a default print controller is used,
            which displays the Print Progress dialog.
            </summary>
            <remarks>
            If you need a better control over the printing process, or simply
            to customize the appearance of the print UI, you should specify
            a custom print controller to this method.
            <example>
            This example shows how to customize the title of the Print Progress
            dialog with a custom provided print controller.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\ReportProcessorSnippets.cs" region="PrintControllerWithCustomTitle" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\ReportProcessorSnippets.vb" region="PrintControllerWithCustomTitle" />
            </example>
            To prevent the print UI from appearing, you should specify valid
            printer settings and a standard print controller to this method.
            <example>
            This example illustrates how to prevent the print UI from appearing
            in a batch print operation or when printing from a service.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\ReportProcessorSnippets.cs" region="PrintNoUI" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\ReportProcessorSnippets.vb" region="PrintNoUI" />
            </example>
            </remarks>
        </member>
        <member name="E:Telerik.Reporting.Processing.ReportProcessor.Error">
            <summary>
            Occurs when a processing exception is raised.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.IRenderingContext.ResolvedReportDocument">
            <summary>
            If not provided, will be created and destroyed internally
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.IRenderingContext.Parameters">
            <summary>
            Precalculated processing parameters coming from the viewers.
            Will be calculated internally if not provided
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.TestReportProcessor">
            <summary>
            For test purposes only
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.AbsolutePositionLayout.MeasureChildItems(Telerik.Reporting.Processing.IMeasureContext,Telerik.Reporting.Processing.Common.SizeLU)">
            <summary>
            Measures all children and returns true if any child needs to resize
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.AbsolutePositionLayout.MeasureHorizontalContent(System.Int64)">
            <summary>
            Adjust the item's left position.
            If any of the dependent items are grown and overlaps the current item,
            move it right preserving the smallest horizontal distance 
            between this item and the dependent items.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.AbsolutePositionLayout.MeasureVerticalContent(System.Int64)">
            <summary>
            Adjust the item's top position.
            If any of the dependent items are grown and overlaps the current item,
            move it down preserving the smallest vertical distance 
            between this item and the dependent items.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Accessibility.SR">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.BarcodeName">
            <summary>
              Looks up a localized string similar to Barcode.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.ChartName">
            <summary>
              Looks up a localized string similar to Obsolete chart.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.CheckBoxName">
            <summary>
              Looks up a localized string similar to Check box.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.CheckBoxStatus">
            <summary>
              Looks up a localized string similar to Status {0}.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.DetailsSectionName">
            <summary>
              Looks up a localized string similar to Details section.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.GraphName">
            <summary>
              Looks up a localized string similar to Graph.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.HtmlTextBoxName">
            <summary>
              Looks up a localized string similar to HTML text box.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.MapName">
            <summary>
              Looks up a localized string similar to Map.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.NavigateToBookmarkAction">
            <summary>
              Looks up a localized string similar to navigate to bookmark.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.NavigateToReportAction">
            <summary>
              Looks up a localized string similar to navigate to report.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.NavigateToURLAction">
            <summary>
              Looks up a localized string similar to navigate to URL.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.PageFooterName">
            <summary>
              Looks up a localized string similar to Page footer.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.PageHeaderName">
            <summary>
              Looks up a localized string similar to Page header.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.PanelName">
            <summary>
              Looks up a localized string similar to Panel.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.PerformsAction">
            <summary>
              Looks up a localized string similar to Performs a {0} action..
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.PictureBoxName">
            <summary>
              Looks up a localized string similar to Picture box.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.ReportFooterName">
            <summary>
              Looks up a localized string similar to Report footer.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.ReportHeaderName">
            <summary>
              Looks up a localized string similar to Report header.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.ReportName">
            <summary>
              Looks up a localized string similar to Report.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.ShapeName">
            <summary>
              Looks up a localized string similar to Shape.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.SortingAction">
            <summary>
              Looks up a localized string similar to sorting.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.SubReportName">
            <summary>
              Looks up a localized string similar to Subreport.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.TableContainsRowsCols">
            <summary>
              Looks up a localized string similar to Contains {0} rows and {1} columns.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.TableName">
            <summary>
              Looks up a localized string similar to Table.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.TableOfContentsItemName">
            <summary>
              Looks up a localized string similar to Table of contents item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.TableOfContentsName">
            <summary>
              Looks up a localized string similar to Table of contents.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.TextBoxName">
            <summary>
              Looks up a localized string similar to Text box.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Accessibility.SR.ToggleVisibilityAction">
            <summary>
              Looks up a localized string similar to toggle visibility.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.AssemblyNameUtils.IsMatch(System.Reflection.AssemblyName,System.Reflection.AssemblyName)">
            <summary>
            Matches two assembly names by their properties. Source assembly name can be partially defined.
            </summary>
            <param name="source">Partially defined assembly name</param>
            <param name="target">Completely defined assembly name</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.ReportItemBase">
            <summary>
            Represents a processing report item.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.LayoutElement">
            <summary>
            Base class for all processing instances of report items.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.LayoutElement.MeasureCore(Telerik.Reporting.Processing.IMeasureContext,Telerik.Reporting.Processing.Common.SizeLU)">
            <summary>
            Provides the core measuring logic.
            </summary>
            <remarks>
            Override this method if have to provide custom measuring logic. 
            Items usually override MeasureContent.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Processing.LayoutElement.MeasureContent(Telerik.Reporting.Processing.IMeasureContext,Telerik.Reporting.Processing.Common.SizeLU)">
            <summary>
            Items usually override this method.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.LayoutElement.ArrangeCore(Telerik.Reporting.Processing.IMeasureContext,Telerik.Reporting.Processing.Common.RectangleLU)">
            <summary>
            Provides the core arrangement logic.
            </summary>
            <remarks>
            Override this method if have to provide custom arrangement logic. 
            Items usually override ArrangeContent.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Processing.LayoutElement.ArrangeContent(Telerik.Reporting.Processing.IMeasureContext,Telerik.Reporting.Processing.Common.RectangleLU)">
            <summary>
            Items usually override this method.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.LayoutElement.ParentElement">
            <summary>
            Gets the parent element of the current layout element.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.ProcessingElement.Evaluate(System.Object)">
            <summary>
            If the value is string that starts with =, it is considered as an expression string and
            is parsed, evaluated against the current data item and returns the result of the exp; 
            otherwise returns the value as is.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.ProcessingElement.Exception">
            <summary>
            Gets or sets the exception that has occurred during the processing.
            </summary>
            <remarks>
            Use this property in a <see cref="T:Telerik.Reporting.ErrorEventHandler"/> handler to inspect or clear
            the current processing error.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Processing.ProcessingElement.Report">
            <summary>
            Nested report's Report points to itself - 
            not the master report.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ProcessingElement.Culture">
            <summary>
            Gets the CultureInfo instance associated with this report item.
            </summary>
            <value>
            An CultureInfo instance associated with this item.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Processing.ProcessingElement.DataObject">
            <summary>
            Gets the <see cref="T:Telerik.Reporting.Processing.IDataObject"/> that is bound to this report item.
            </summary>
            <value>
            An <see cref="T:Telerik.Reporting.Processing.IDataObject"/> associated with this item.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Processing.ProcessingElement.DataName">
            <summary>
            A name that would identify the data context 
            among sibling items in the parent data context.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ProcessingElement.ElementCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportItemBase.ResetValue">
            <summary>
            Used by page sections to prepare the item for the next processing.
            The Image rendering (as of now) reuse the only instance of the page
            sections and reevaluate them for every page it renders.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ReportItemBase.Bookmark">
            <summary>
            Gets or sets a bookmark label to be displayed for the processing instance of this item. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ReportItemBase.BookmarkId">
            <summary>
            Gets or sets a bookmark id for this processing instance of the item. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ReportItemBase.DocumentMapText">
            <summary>
            Gets or sets a text to be displayed in the document map for this processing instance of the item. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ReportItemBase.TocText">
            <summary>
            Gets or sets a text to be displayed in the table of contents for this processing instance of the item. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ReportItemBase.Action">
            <summary>
            Gets or sets an interactive action associated with this processing instance of the item. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ReportItemBase.ToolTip">
            <summary>
            For Binding purposes
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ReportItemBase.AccessibleDescription">
            <summary>
            Gets or sets the accessible description for the current report item.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ITableCellInternal">
            <summary>
            Extends ITableCell with read/write functionality
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ITableCell">
            <summary>
            Provides an interface for accessing a processing <see cref="T:Telerik.Reporting.Processing.Table"/> cell.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ITableCell.RowIndex">
            <summary>
            Gets the index of the row that contains the cell.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ITableCell.ColumnIndex">
            <summary>
            Gets the index of the column that contains the cell.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ITableCell.RowSpan">
            <summary>
            Gets a value that indicates the total number of rows that the cell spans within the table.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ITableCell.ColumnSpan">
            <summary>
            Gets a value that indicates the total number of columns that the cell spans within the table.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ITableCell.Table">
            <summary>
            Gets the <see cref="T:Telerik.Reporting.Processing.Table"/> this cell belongs to.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Processing.Table"/> object which the item belongs to.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Processing.ITableCell.Item">
            <summary>
            Gets the <see cref="T:Telerik.Reporting.Processing.ReportItem"/> in the cell.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.IBookmarkNode">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.IBookmarkNode.Id">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.IBookmarkNode.Page">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.IBookmarkNode.Text">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.IBookmarkNode.BookmarkNodes">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.IBookmarkNode.X">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.IBookmarkNode.Y">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Chart">
            <summary>
            Summary description for ReportItem class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.DataItem.DataSource">
            <summary>
            Gets or sets the data source that the <see cref="T:Telerik.Reporting.Processing.Table"/> is displaying data for.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.DataItem.NoDataMessage">
            <summary>
            Gets or sets the current data item no data message.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.DataItem.NoDataStyle">
            <summary>
            Gets a <see cref="T:Telerik.Reporting.Drawing.Style"/> object 
            specifying the appearance of the no data message. 
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.Drawing.Style"/> object specifying
            the items' style. 
            </value>
        </member>
        <member name="P:Telerik.Reporting.Processing.DataItem.RenderNoData">
            <summary>
            Indicates if the NoDataMessage will be rendered instead of the actual item content.
            </summary>
            <value>True if the NoDataMessage will be rendered. Otherwise false.</value>
        </member>
        <member name="P:Telerik.Reporting.Processing.Imaging.IImageContainer.ImageKey">
            <summary>
            Null ImageKey specifies that the container is empty
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.CheckBox">
            <summary>
            CheckBox
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.TextItemBase">
            <summary>
            Base class for TextBox and CheckBox classes
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.TextItemBase.Format">
            <summary>
            Gets or sets the character(s) that specify how text is formatted.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.ITextContainer.Clear">
            <summary>
            When in a page section, a single processing text item is re-evaluated for each page;
            so we should clear the previous lines (created at the previous measure);
            otherwise the old text will appear as well.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ILayoutElementContainer">
            <summary>
            Represents an item that may contain other <see cref="T:Telerik.Reporting.Processing.LayoutElement"/>s
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ILayoutElementContainer.Children">
            <summary>
            Gets a read-only enumeration containing the immediate children of the current container. 
            </summary>
            <example>
            This example shows how to access all children of a container in a ItemDataBinding event handler.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\Access_Processing_Instances_Children_Snippets.cs" region="Using_ILayoutElementContainer_Children_Snippet" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\Access_Processing_Instances_Children_Snippets.vb" region="Using_ILayoutElementContainer_Children_Snippet" />
            </example>
        </member>
        <member name="M:Telerik.Reporting.Processing.CheckBox.GetCheckMarkObject">
            <summary>
            Returns one of the three image objects from the definition item 
            based on the current Value. The object can be Image, string, byte[], 
            etc.
            </summary>
            <returns>One of the three image objects from the definition item 
            based on the current Value.
            </returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.CheckBox.Value">
            <summary>
            Gets or sets the value of the processing instance of the check box.
            Can be set directly to <see cref="T:System.Windows.Forms.CheckState"/> value.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.CheckBoxUtil">
            <summary>
            CheckBoxUtil
            </summary>    
        </member>
        <member name="M:Telerik.Reporting.Processing.CheckBoxUtil.CreateDefaultImage(System.Windows.Forms.CheckState)">
            <summary>
            Returns one of the three default images based on the passed value.
            </summary>
            <returns>
            One of the three default images based on the current Value
            </returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.CheckBoxUtil.GetCheckMarkObject(Telerik.Reporting.CheckBox,System.Windows.Forms.CheckState)">
            <summary>
            Returns one of the three image objects from the definition item 
            based on the current Value. The object can be Image, string, byte[], 
            etc.
            </summary>
            <returns>One of the three image objects from the definition item 
            based on the current Value.
            </returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.DefaultGraphicsHelper">
            <summary>
            Default graphics helper to be used on Windows
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.DetailSection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ReportSection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ReportSectionBase.CanShrink">
            <summary>
            Gets or sets a value indicating whether the 
            <see cref="T:Telerik.Reporting.Processing.Panel"/> 
            will shrink if a child item is shrunk or hidden.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ReportSection.PrintAtBottom">
            <summary>
            Gets or sets a value indicating whether the rendering engine should
            print the section at the bottom of the page that contains the section.
            </summary>
            <remarks>
            Applicable for GroupFooter and ReportFooter sections only.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Processing.DocumentMap.AddNode(System.String,System.String,System.String)">
            <summary>
            Creates new node with the provided bookmarkId, documentMapText, 
            and tocText strings that CANNOT contain other bookmarks
            </summary>
            <returns>Returns the created bookmark node</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.DocumentMap.BeginNode(System.String,System.String,System.String)">
            <summary>
            Creates new node that CAN contain 
            other bookmarks and the subsequent bookmarks will be added inside it
            </summary>
            <returns>Returns the created bookmark node</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.DocumentMap.EndNode">
            <summary>
            Ends the current bookmark: all subsequent bookmarks will be added
            to the PARENT of the ended bookmark node
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.DocumentMapProvider.BuildDocumentMap(System.Object,System.Collections.Generic.IEnumerable{Telerik.Reporting.Processing.IBookmarkNode},System.Boolean)">
            <summary>
            Builds document map structure from the bookmarks.
            </summary>
            <param name="root">Node where all generated nodes will be added.</param>
            <param name="bookmarks">Source bookmarks.</param>
            <param name="documentMapAvailable">Indicates whether there are document map nodes 
            among the bookmarks.</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.DocumentParametersManager`1.#ctor(Telerik.Reporting.ReportSource,Telerik.Reporting.Processing.IProcessingContext,Telerik.Reporting.Processing.IParameterValueParser)">
            <summary>
            Used from report viewers. (Resolve the report document without applying parameters.)
            </summary>
            <param name="definition"></param>
            <param name="initialValues">From report source</param>
            <param name="historyValues">From history</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.DocumentParametersManager`1.#ctor(Telerik.Reporting.Processing.ResolvedReportDocument,Telerik.Reporting.Processing.IProcessingContext,Telerik.Reporting.Processing.IParameterValueParser)">
            <summary>
            Used from report viewers. (Resolve the report document without applying parameters.)
            </summary>
            <param name="definition"></param>
            <param name="initialValues">From report source</param>
            <param name="historyValues">From history</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.DynamicLayoutEngine.Layout(Telerik.Reporting.Processing.ILayoutContainer)">
            <summary>
            
            </summary>
            <param name="container">container which children need to be arranged</param>
        </member>
        <member name="T:Telerik.Reporting.Processing.ElementTreeHelper">
            <summary>
            Provides utility methods that perform common tasks involving nodes in a LayoutElement tree.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.ElementTreeHelper.GetChildElements(Telerik.Reporting.Processing.LayoutElement)">
            <summary>
            Returns all immediate child layout elements within a specified parent.
            </summary>
            <param name="parent">The parent element.</param>
            <returns>
            Enumerable of all layout elements having the specified parent. 
            If the parent does not have children, an empty enumeration is returned.
            </returns>
            <example>
            This example shows how to access all children of a parent layout element in a ItemDataBinding event handler.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\Access_Processing_Instances_Children_Snippets.cs" region="Using_ElementTreeHelper_GetChildElements_Snippet" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\Access_Processing_Instances_Children_Snippets.vb" region="Using_ElementTreeHelper_GetChildElements_Snippet" />
            </example>
        </member>
        <member name="M:Telerik.Reporting.Processing.ElementTreeHelper.GetChildByIndex(Telerik.Reporting.Processing.LayoutElement,System.Int32)">
            <summary>
            Returns the immediate child layout element within a specified parent at specified index.
            </summary>
            <param name="parent">The parent element to search within.</param>
            <param name="index">The zero-based index of the child to get.</param>
            <returns>Layout element having the specified parent at the specified index.</returns>
            <example>
            This example shows how to access a child by index in a ItemDataBinding event handler.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\Access_Processing_Instances_Children_Snippets.cs" region="Using_ElementTreeHelper_IndexOfChildWithName_And_GetChildByIndex_Snippet" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\Access_Processing_Instances_Children_Snippets.vb" region="Using_ElementTreeHelper_IndexOfChildWithName_And_GetChildByIndex_Snippet" />
            </example>
        </member>
        <member name="M:Telerik.Reporting.Processing.ElementTreeHelper.GetChildByName(Telerik.Reporting.Processing.LayoutElement,System.String)">
            <summary>
            Returns the first immediate child layout element within a specified parent having a specified name.
            </summary>
            <param name="parent">The parent element to search within.</param>
            <param name="name">The name to search for.</param>
            <returns>Layout element having the specified name and parent.</returns>
            <example>
            This example shows how to get a child by name in a ItemDataBinding event handler.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\Access_Processing_Instances_Children_Snippets.cs" region="Using_ElementTreeHelper_GetChildByName_Snippet" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\Access_Processing_Instances_Children_Snippets.vb" region="Using_ElementTreeHelper_GetChildByName_Snippet" />
            </example>
        </member>
        <member name="M:Telerik.Reporting.Processing.ElementTreeHelper.ContainsChildWithName(Telerik.Reporting.Processing.LayoutElement,System.String)">
            <summary>
            Determines whether a parent layout element contains immediate child having a specified name.
            </summary>
            <param name="parent">The parent element to search within.</param>
            <param name="name">The name to search for.</param>
            <returns>
            <b>true</b> if an layout element having the specified parent and name is found;
            Otherwise, <b>false</b>.
            </returns>
            <example>
            This example shows how to determine if a child with name is contained in a ItemDataBinding event handler.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\Access_Processing_Instances_Children_Snippets.cs" region="Using_ElementTreeHelper_ContainsChildWithName_Snippet" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\Access_Processing_Instances_Children_Snippets.vb" region="Using_ElementTreeHelper_ContainsChildWithName_Snippet" />
            </example>
        </member>
        <member name="M:Telerik.Reporting.Processing.ElementTreeHelper.IndexOfChildWithName(Telerik.Reporting.Processing.LayoutElement,System.String)">
            <summary>
            Returns the zero-based index of the first occurrence of a layout element 
            with a specified name within a parent.
            </summary>
            <param name="parent">The parent element to search within.</param>
            <param name="name">The name to search for.</param>
            <returns>The zero-based index of the first occurrence of a layout element 
            having the specified name within the specified parent.</returns>
            <example>
            This example shows how to get the index of a child in a ItemDataBinding event handler.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\Access_Processing_Instances_Children_Snippets.cs" region="Using_ElementTreeHelper_IndexOfChildWithName_And_GetChildByIndex_Snippet" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\Access_Processing_Instances_Children_Snippets.vb" region="Using_ElementTreeHelper_IndexOfChildWithName_And_GetChildByIndex_Snippet" />
            </example>
        </member>
        <member name="M:Telerik.Reporting.Processing.ElementTreeHelper.FindChildByName(Telerik.Reporting.Processing.LayoutElement,System.String,System.Boolean)">
            <summary>
            Searches for all layout elements with a specified name within a specified parent.
            </summary>
            <param name="parent">The parent element to search within.</param>
            <param name="name">The name to search for.</param>
            <param name="searchAllChildren">If <b>true</b>, all descendants within the specified parent 
            are matched (deep search). Otherwise, only immediate children are matched.</param>
            <returns>
            Array containing all matching by name children / descendants. 
            If no elements are found an empty array is returned
            </returns>
            <example>
            This example shows how to find all children with name in a ItemDataBinding event handler.
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\Access_Processing_Instances_Children_Snippets.cs" region="Using_ElementTreeHelper_FindChildByName_Snippet" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\Access_Processing_Instances_Children_Snippets.vb" region="Using_ElementTreeHelper_FindChildByName_Snippet" />
            </example>
        </member>
        <member name="T:Telerik.Reporting.Processing.FontInfo">
            <summary>
            Can create and hold font measurements needed to measure and draw strings with some font 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.GraphicalUtility">
            <summary>
            Provide common conversions and operations during measurement and drawing.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.GraphicalUtility.PointToGraphicalUnit(System.Drawing.GraphicsUnit,System.Single)">
            <summary>
            Returns coefficient to convert value in points to value in some graphicalUnit
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.GraphicalUtility.PixelToGraphicalUnit(System.Drawing.GraphicsUnit,System.Single)">
            <summary>
            Returns coefficient to convert value in pixels to value in some graphicalUnit
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.GraphicalUtility.DrawRepeatedScaledImage(System.Drawing.Graphics,System.Drawing.Image,Telerik.Reporting.Drawing.BackgroundRepeat,System.Drawing.RectangleF,System.Drawing.SizeF,System.Drawing.GraphicsUnit)">
            <summary>
            
            </summary>
            <param name="graphics"></param>
            <param name="image"></param>
            <param name="repeat"></param>
            <param name="bounds">The resulting drawn image bounds in mm or device-dependent pixels, depending on the graphicsUnit parameter</param>
            <param name="imageSize"></param>
            <param name="graphicsUnit"></param>
        </member>
        <member name="M:Telerik.Reporting.Processing.GraphicalUtility.CreateDrawStringFormat">
            <summary>
            Calling method must dispose the returned FormatString
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.Graphing.Axes.GraphAxis.LabelAngle">
            <summary>
            Gets or sets the angle in degrees at which the axis labels are rotated.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.Axes.IAngularAxisLabelArranger.CalculateRadius(System.Double,System.Double,System.Single,System.Drawing.SizeF)">
            <summary>
            Calculates the radius of the angular axis for the given label size, angel and outer/max R.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Graphing.DataPointArrangers.BarArranger.slots">
            <summary>
            the number of DataPoint slots in the current Category
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Graphing.DataPointLabelArrangers.AngularCategoryLabelArranger">
            <summary>
            Arranges the labels according to the angle. 
            Used when the AngularAxis is CategoryAxis (Rose).
            Also used with the Pie
            The labels' text is always horizontal
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.DataPointLabelArrangers.DataPointArrangerHelper.ArrangeLabel(Telerik.Reporting.Processing.Primitives.TextElement,System.Drawing.PointF,Telerik.Reporting.Processing.Graphing.DataPointLabelArrangers.DataPointArrangerHelper.HorizontalLabelAlignment,Telerik.Reporting.Processing.Graphing.DataPointLabelArrangers.DataPointArrangerHelper.VerticalLabelAlignment,System.Single,System.Single)">
            <summary>
            Arranges a text label around a given point
            </summary>
            <param name="label">the label to be arranged</param>
            <param name="goalPoint">the destination point</param>
            <param name="horizontalPosition">the label's relative horizontal position according to the goal point</param>
            <param name="verticalPosition">the label's relative vertical position according to the goal point</param>
            <param name="labelAngle">the angle on which the label will be rotated</param>
            <param name="tiltAngle">the angle on which the calculations will be shifted. 
            This calculations will be performed as if the coordinate system is rotated on tiltAngle degrees</param>
        </member>
        <member name="T:Telerik.Reporting.Processing.Graphing.DataPointLabelArrangers.HorizontalCategoryLabelArranger">
            <summary>
            Performs arrangements on series having their X value as main (Bars)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Graphing.DataPointLabelArrangers.RadialCategoryLabelArranger">
            <summary>
            Arranges the labels according to the angle. 
            Used when the RadialAxis is CategoryAxis
            Rotates the labels along according to the DataPoint's angle
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Graphing.DataPointLabelArrangers.VerticalCategoryLabelArranger">
            <summary>
            Performs arrangements on series having their Y value as main (Columns)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Graphing.DataPointLabelsVerticalDistributor">
            <summary>
            Class for distributing vertically overlapping data point labels. Currently enabled only on the Polar BarSeries (PieChart)
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.ExpressionUtils.FormatExpressionString(System.String,System.String)">
            <summary>
            returns "='(' + expr1 + '; ' + expr2 + ')'"
            </summary>
            <param name="expr1"></param>
            <param name="expr2"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.Graphing.GraphArea.PlotAreaBounds">
            <summary>
            MapDesigner only. TODO: needs revision
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.LabelConnectorArranger.CalculateMinDistanceFromLabel(Telerik.Reporting.Drawing.IFont)">
            <summary>
            Returns the minimum distance in mm between the datapoint and the label that would allow to draw a connector
            </summary>
            <returns></returns>
        </member>
        <member name="F:Telerik.Reporting.Processing.Graphing.GraphBuilder.parentMap">
            <summary>
            Indentifies the parent group for a given group;
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Graphing.GraphBuilder.categoryScaleByDim">
            <summary>
            Indicates which category scales a given category group should update (IncludeInRange);
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Graphing.GraphBuilder.seriesBuildersBySeriesDim">
            <summary>
            Indicates which series a given category group should update (IncludeInRange);
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Graphing.GraphBuilder.categoryScaleData">
            <summary>
            Contains the data per category scale;
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.GraphBuilder.Dfs(System.Collections.Generic.IEnumerable{Telerik.Reporting.IGraphGroup},System.Predicate{Telerik.Reporting.IGraphGroup})">
            Returns True to stop the traversal; otherwise returns false.
        </member>
        <member name="M:Telerik.Reporting.Processing.GroupHierarchyWalker`1.GetSize(`0)">
            <remarks>
            For groups in the Table.ColumnGroups hierarchy this method usually returns the Width of the presenter/item (if any);
            For groups in the Table.RowGroups hierarchy this method usually returns the Height of the presenter/item (if any); 
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Processing.GroupHierarchyWalker`1.GetNextLevelOffset(`0)">
            <summary>
            Returns the offset to the next group level
            </summary>
            <param name="group">current level's group</param>
            <remarks>
            For groups in the Table.ColumnGroups hierarchy this method usually returns the Height of the presenter/item (if any);
            For groups in the Table.RowGroups hierarchy this method usually returns the Width of the presenter/item (if any); 
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Processing.GroupHierarchyWalker`1.GetMinSize(`0)">
            <summary>
            Returns the size of the 1st available/visible leaf group
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Graphing.GridLines.GraphGridLine.Model">
            <summary>
            For design time purposes: the object to be selected thus shown in the property grid
            when a grid line is selected/clicked on the graph design surface.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.Legend.GraphLegend.GetShouldDrawEllipsis">
            <summary>
            Used for test purposes.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Graphing.Legend.VerticalGraphLegendItemArranger">
            <summary>
            Arrange items down then across.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Graphing.Legend.HorizontalGraphLegendItemArranger">
            <summary>
            Arrange items across then down.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.PolarUtils.GetPointOnALineByFraction(System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>
            Gets the point along a line between two points, offset by supplied fraction between 0 and 1
            </summary>
            <param name="a">start point</param>
            <param name="b">end point</param>
            <param name="offset">[0 - 1]. 0 means starting point, 1 - ending point.</param>
            <returns>PointF</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.PolarUtils.GetPointOnALineByLength(System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>
            Gets the point along a line between two points, offset by a part of their measured distance
            </summary>
            <param name="a">start point</param>
            <param name="b">end point</param>
            <param name="segmentLength">part of the distance between the two points</param>
            <returns>Starting point if A coincides with B, or Point(NaN, NaN) if the passed segment length is greater than the points distance</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.PolarUtils.GetIntersectionPointsOfLineAndCircle(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <param name="p1">line starting point</param>
            <param name="p2">line ending point</param>
            <param name="sc">circle center</param>
            <param name="r">circle radius</param>
            <returns>crossing points</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.Scales.CategoryScale.#ctor(System.Collections.Generic.IList{System.Object})">
            <summary>
            This method is for testing purposes only.
            </summary>
            <param name="categories">A storage for the categories</param>
            <remarks>Do not push any categories through the list! Use the IncludeInRange() method instead.</remarks>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.Scales.CategoryScale.ToIndex(System.Object)">
            <summary>
            1-based index of the category
            </summary>
            <param name="category"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.Graphing.Scales.NumericalScaleBase.Range">
            <summary>
            For testing purposes only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Graphing.Scales.NumericalScaleBase.DataMin">
            <summary>
            The smallest value of the input domain
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Graphing.Scales.NumericalScaleBase.DataMax">
            <summary>
            The biggest value of the input domain
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.Scales.NumericalScale.GetMajorStep">
            <summary>
            Internal for test purposes only
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.Graphing.SeriesBuilders.GraphSeriesBuilder.RuntimeIndex">
            <summary>
            After build is completed, exposes the count of the generated runtime series
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Graphing.Series.GraphSeries.ModelIndex">
            <summary>
            For ordering the runtime series according to the item's definition
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Graphing.Series.GraphSeries.RuntimeIndex">
            <summary>
            For ordering the runtime series according to the item's definition
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.Series.GraphSeries.CalculatePoint(System.Object,System.Object,Telerik.Reporting.Processing.Graphing.Scales.IScale,System.Object,Telerik.Reporting.Processing.Graphing.DataPointArrangers.IDataPointArranger,System.Int32,System.Single@,System.Single@)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="category">Categorizes the value, ex. (x, y) -or- (y, x)</param>
            <param name="scale"></param>
            <param name="zeroValue"></param>
            <param name="arranger"></param>
            <param name="cookie"></param>
            <param name="v0"></param>
            <param name="v1"></param>
        </member>
        <member name="P:Telerik.Reporting.Processing.Graphing.Series.GraphSeries.DataPointAdjustingBorders">
            <summary>
            An artificial 1px border, used to avoid the white space between the series (see #219644)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Graphing.Series.ILineSeries.MinMarkerSize">
            <summary>
            in [millimeters]
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Graphing.Series.ILineSeries.MaxMarkerSize">
            <summary>
            in [millimeters]
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Graphing.Series.DataPoint.IsValid">
            <summary>
            Determines the validity of the point raw value against the scale domain.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Graphing.Series.DataPoint.IsInView">
            <summary>
            Determines if the the visibility of the point value
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.AreaMultilinePresenterBase.GetMissingValuePoints(System.Int32,System.Collections.Generic.IList{System.Drawing.PointF},System.Collections.Generic.IList{System.Drawing.PointF})">
            <summary>
            Iterates through the points until finding a valid top-bottom pair of points.
            </summary>
            <param name="startIndex">index of the last point pair with valid (non-NaN) values</param>
            <param name="points0">bottom points</param>
            <param name="points1">top points</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.SmoothAreaMultilinePresenter.CreateFigure(System.Collections.Generic.IList{System.Drawing.PointF})">
            <summary>
            Produces path figure based on provided points.
            </summary>
            <param name="points">Contains the top and bottom points for the whole figure</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.Graphing.CardinalSpline">
            <summary>
            Canonical spline - Charles Petzold impl
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.CardinalSpline.CalculateSplinePoints(System.Collections.Generic.IList{System.Drawing.PointF},System.Single,System.Single,System.Boolean,System.Collections.Generic.IList{System.Drawing.PointF})">
            <summary>
            A canonical/cardinal spline is a sequence of individual curves joined to form a larger curve.
            </summary>
            <param name="points">The points that define the curve.</param>
            <param name="tension">The amount of curvature.</param>
            <param name="tolerance">
            The accuracy of the polyline approximation to the spline. 
            Each line segment of the polyline approximation has an (extremely) approximate 
            length of Tolerance device-independent units (of 1/96th inch). 
            The default value is 0.25, indicating that each line segment is roughly 1/400th inch in length.
            Having smaller tolerance will produce smoother curve while increasing the number of the spline points;
            having greater tolerance will produce a curve will less points, though the line may become jagged
            </param>
            <param name="isClosed">Indicates whether to close the splain</param>
            <param name="splinePoints">The collection of the points for the polyline that describes the spline</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.CardinalSpline.CalculateSplinePoints(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Single)">
            <summary>
            See Petzold, "Programming Microsoft Windows with C#", pages 645-646 or 
                Petzold, "Programming Microsoft Windows with Microsoft Visual Basic .NET", pages 638-639
            for derivation of the following formulas:
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.BezierSpline.CalculateCurveControlPoints(System.Collections.Generic.IList{System.Drawing.PointF},System.Collections.Generic.IList{System.Drawing.PointF}@,System.Collections.Generic.IList{System.Drawing.PointF}@)">
            <summary>
            Get open-ended Bezier Spline Control Points.
            </summary>
            <param name="points">Input Bezier spline points.</param>
            <param name="firstControlPoints">Output First Control points array of points.Count - 1 length.</param>
            <param name="secondControlPoints">Output Second Control points array of points.Count - 1 length.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="points"/> parameter must be not null.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="points"/> array must containg at least two points.</exception>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.BezierSpline.GetFirstControlPoints(System.Single[])">
            <summary>
            Solves a tridiagonal system for one of coordinates (x or y) of first Bezier control points.
            </summary>
            <param name="rhs">Right hand side vector.</param>
            <returns>Solution vector.</returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.Group">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.GroupSection">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.HtmlElement.IsStartElement">
            <summary>
            Determines if the element is the first element 
            produced from the layout of the html node
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.HtmlElement.IsEndElement">
            <summary>
            Determines if the element is the first element 
            produced from the layout of the html node
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.HtmlElement.ClientBaseline">
            <summary>
            Baseline according to client rectangle
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.HtmlTextElement">
            <summary>
            Summary description for HTMLRenderItem.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.HtmlTextBox">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.HtmlTextBox.IsValidXhtml(System.String)">
            <summary>
            Determines if the provided value is valid xhtml that <see cref="T:Telerik.Reporting.Processing.HtmlTextBox"/> can parse.
            If the provided value is an expression, true is returned.
            </summary>
            <param name="value">The XTHML value.</param>
            <returns>True if the XHTML is valid.</returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.HtmlTextBox.KeepTogether">
            <summary>
            Indicates whether the rendering engine should
            try to keep the item on one page if possible.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.HtmlTextBox.Value">
            <summary>
            Gets or sets the value of the <see cref="T:Telerik.Reporting.Processing.HtmlTextBox"/> item
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.HtmlTextBox.IsValueCalculated">
            <summary>
            Determines whether the value of the current <c>HtmlTextBox</c>
            is calculated from an expression, or is a static text (label)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Imaging.ImageInfo.Width">
            <summary>
            Image width, in pixels
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Imaging.ImageInfo.Height">
            <summary>
            Image height, in pixels
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Imaging.ImageUtils.LoadData(System.String)">
            <summary>
            Loads image data form absolute local path or URL
            </summary>
            <param name="filePath">absolute local path or URL</param>
            <returns>Byte array representing the image data</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Imaging.ImageUtils.ResolveRelativeImagePath(System.Object,System.Func{Telerik.Reporting.Interfaces.IPathResolver})">
            <summary>
            If the image is relative path, resolve it to absolute path using the 
            provided IPathResolver getter.
            </summary>
            <param name="image"></param>
            <param name="getPathResolver"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Imaging.ImageUtils.ResolveRelativeImagePath(System.String,System.Func{Telerik.Reporting.Interfaces.IPathResolver})">
            <summary>
            If the path to the image is relative, resolve it to absolute path using the 
            provided IPathResolver getter.
            </summary>
            <param name="imagePath"></param>
            <param name="getPathResolver"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.ClientFocusableItem.Name">
            <summary>
            The name of the item: textbox, graph, table, etc.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ClientFocusableItem.Description">
            <summary>
            Meaningful description for the item - evaluated from item definition.AccessibleDescription for AccessibleItems, text value for SearchItems
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.AccessibleItem">
            <summary>
            Represents a processed AccessibleItem that will be used in a viewer
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.AccessibleItem.BookmarkId">
            <summary>
            The bookmark Id of the accessible element, if available.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.SearchableItem">
            <summary>
            Represents a processed SearchableItem that will be used in a viewer
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.IAction">
            <summary>
            Represents a processed interactive action associated with a report item
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.IAction.ReportItemName">
            <summary>
            The name of the report item associated with the action
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ActionBase">
            <summary>
            Base class for processed interactive actions.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ActionBase.ReportItemName">
            <summary>
            The name of the report item associated with the action.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.NavigateToReportAction">
            <summary>
            Represent a processed interactive action that navigates the report viewer to another report.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.NavigateToReportAction.ReportSource">
            <summary>
            The resolved <see cref="T:Telerik.Reporting.ReportSource"/> instance.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.NavigateToBookmarkAction">
            <summary>
            Represent a processed interactive action that navigates the report viewer to a predefined bookmark in the same report.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.NavigateToBookmarkAction.TargetBookmarkId">
            <summary>
            Gets the target bookmark of the action.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.NavigateToUrlAction">
            <summary>
            Represent a processed interactive action that opens a URL.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.NavigateToUrlAction.Url">
            <summary>
            Gets the URL that will be opened when the action is executed.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.NavigateToUrlAction.Target">
            <summary>
            Gets the string representation of <see cref="T:Telerik.Reporting.UrlTarget"/> types. 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.CustomAction">
            <summary>
            Represents a processed interactive action that contains evaluated parameter collection.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.CustomAction.Parameters">
            <summary>
            Gets the collection of evaluated name-value parameter pairs.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ActionInfo.Action">
            <summary>
            The Action that will be executed.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.PartialOrder`1.GetNodeAndParents(`0)">
            <summary>
            Returns list containing the item node (index 0), and its parent node (index 1), and its parent node (index 2)...
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.ProcessingIdentifierAction">
            <summary>
            Represents an base class for an interactive action that affects one or more report items or groups.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ProcessingIdentifierAction.Targets">
            <summary>
            Collection of affected targets associated with the action.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.SinglePositionInteractiveInfo`1.ZOrder">
            <summary>
            Z-order of the Action. Determines which of two overlapping actions is hit.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.SortingOrder">
            <summary>
            Enumeration that defines the sorting order of the <see cref="T:Telerik.Reporting.Processing.SortingAction"/>.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.SortingAction">
            <summary>
            Represents a processed interactive action that has toggled sorting of one or more data items and groups.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.SortingAction.SortingExpression">
            <summary>
            Gets an expression that defines the action sorting.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.SortingAction.SortingOrder">
            <summary>
            Gets the currently applied <see cref="T:Telerik.Reporting.Processing.SortingOrder"/> from the action.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ToggleVisibilityAction">
            <summary>
            Represents a processed interactive action that has toggled the visibility of one or more data items and groups.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ToggleVisibilityAction.InitialDisplayExpandedMark">
            <summary>
            Gets the state of the expand/collapse mark by definition.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ToggleVisibilityAction.Toggled">
            <summary>
            Gets the currently applied toggle state of the action.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ToolTip">
            <summary>
            Represents a processed tooltip class that will be shown in a viewer
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ToolTip.ReportItemName">
            <summary>
            The name of the report item associated with the action
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ToolTip.Title">
            <summary>
            The tooltip title
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ToolTip.Text">
            <summary>
            The tooltip text content
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.IParameterValueParser">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.IParameterValueParser.Parse(System.String,System.String)">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.ITable.GetCell(System.Int32,System.Int32)">
            <summary>
            Gets an <see cref="T:Telerik.Reporting.Processing.ITableCell"/> at the specified row and column index.
            </summary>
            <remarks>
            This method should be used <b>after</b> the <see cref="T:Telerik.Reporting.Processing.Table"/> item is data bound.
            </remarks>
            <example>
            The following code snippet demonstrates a sample usage of the <b>GetCell</b> method:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\ProcessingTableSnippets.cs" region="Table_GetCell_Snippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\ProcessingTableSnippets.vb" region="Table_GetCell_Snippet"/>
            </example>
            <param name="rowIndex"></param>
            <param name="columnIndex"></param>
            <returns><see cref="T:Telerik.Reporting.Processing.ITableCell"/></returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.ITable.Rows">
            <summary>
            Gets a list of <see cref="T:Telerik.Reporting.Processing.TableRow"/> objects that represents the rows in a <see cref="T:Telerik.Reporting.Processing.Table"/> item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ITable.Columns">
            <summary>
            Gets a list of <see cref="T:Telerik.Reporting.Processing.TableColumn"/> objects that represents the columns in a <see cref="T:Telerik.Reporting.Processing.Table"/> item.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ItemAggregatesExtractor">
            <summary>
            Collects all aggregates for a given data item recursively, in order
            to prepare a MDQuery.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ItemFactory">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.LayoutItem">
            <summary>
            Represents the child items of an absolute container
            which dependencies will be determined
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.LayoutDependencies">
            <summary>
            Represents the layout dependencies of the child items 
            inside absolute position layout container
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.InteractiveMap">
            <summary>
            Used by MapDesigner only
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Map.SetLocationProvider(Telerik.Reporting.Processing.Mapping.ILocationProvider)">
            <summary>
            internal for test purposes only
            </summary>
            <param name="provider">The LocationProvider instance used for geocoding</param>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.InteractiveMapArea">
            <summary>
            Used by MapDesigner only
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.MapArea.Extent">
            <summary>
            Used by the MapDesigner
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.MapScaleLegendItem.CalculateMapSegment(System.Double,System.Double,Telerik.Reporting.Processing.Mapping.MapScaleLegendUnit@)">
            <summary>
            Calculates the nearest segment value of the given map and viewport in mapExtent units.
            Changes the SI units of the mapExtentWidth if needed.
            </summary>
            <param name="viewportSegment"></param>
            <param name="viewportWidth"></param>
            <param name="mapExtentWidth">the width of the map extent in SIUnits</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.MapScaleLegendItem.CalculateViewportSegment(System.Int32,System.Double,System.Double)">
            <summary>
            Calculates the viewport segment size in mm, based on the previously calculated map segment.
            </summary>
            <param name="mapSegment"></param>
            <param name="viewportWidth"></param>
            <param name="mapExtentWidth"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Graphing.Series.IShapeDataPoint.EvaluateColorValue(Telerik.Reporting.Processing.IEvaluationContext)">
            <summary>
            Evaluates the color value from the data.
            </summary>
            <param name="context"></param>
            <returns>ColorValue as double or double.NaN if the data is null</returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.CoordinateConverters.ICoordinateConverter">
            <summary>
            Interface which must be implemented by any coordinate converter.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.CoordinateConverters.ICoordinateConverter.ConvertBack(System.Collections.Generic.IEnumerable{Telerik.Reporting.Location})">
            <summary>
            Convert from the collection of coordinates are given
            in the form specific for the coordinate system other than WGS 1984
            to the collection of the WGS 1984 coordinates.
            </summary>
            <param name="collection">Collection of coordinates are given
            in the form specific for the coordinate system.</param>
            <returns>Converted collection.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.CoordinateConverters.ICoordinateConverter.ConvertTo(System.Collections.Generic.IEnumerable{Telerik.Reporting.Location})">
            <summary>
            Convert from the collection of coordinates are given
            in the WGS 1984 coordinates to the form specific for the coordinate 
            system other than WGS 1984.
            </summary>
            <param name="collection">Collection of coordinates are given
            in the form specific for the coordinate system.</param>
            <returns>Converted collection.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.CoordinateConverters.ICoordinateConverter.FromLocation(Telerik.Reporting.Location)">
            <summary>
            Converts from the latitude/longitude to the representation 
            specific for the coordinate system other than WGS 1984.
            </summary>
            <param name="location">Location to be converter.</param>
            <returns>Coordinate system location.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.CoordinateConverters.ICoordinateConverter.ToString(Telerik.Reporting.Location)">
            <summary>
            Converts Location to Coordinate system specific string.
            </summary>
            <param name="location">Location.</param>
            <returns>Coordinate system specific string.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.CoordinateConverters.ICoordinateConverter.ToLocation(System.Object)">
            <summary>
            Converts from the coordinate system specific object to
            the WGS 1984 latitude/longitude.
            </summary>
            <param name="coordinates">Coordinate system specific object.</param>
            <returns>Location.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedData.#ctor(Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedPropertySet)">
            <summary>
            Initializes a new instance of the ExtendedData class.
            </summary>
            <param name="propertySet">Set of the extended properties this extended data can operates with.</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedData.Clone">
            <summary>
            Clones current instance.
            </summary>
            <returns>The clone.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedData.GetValue(System.String)">
            <summary>
            Gets value of the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>Property value.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedData.HasValue(System.String)">
            <summary>
            Gets value which indicates whether extended data
            contains specified property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>True - when extended data contains specified property. Otherwise - false.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedData.TryGetValue(System.String,System.Object@)">
            <summary>
            Tries to get the underlying value by given property name.
            </summary>
            <param name="propertyName"></param>
            <param name="value"></param>
            <returns>false if not found</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedData.SetDefaults">
            <summary>
            Set default value to every extended property. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedData.SetValue(System.String,System.Object)">
            <summary>
            Sets value of the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyValue">Value to be set.</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedData.SetValue(System.String,System.Object,System.Boolean)">
            <summary>
            Sets value of the property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyValue">Value to be set.</param>
            <param name="fireEvent">Indicates whether the layout changed event should be fired.</param>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedData.Data">
            <summary>
            Return reference to self.
            This property can be used within Binding in XAML to implement
            binding which reflect extended property changes.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedData.PropertySet">
            <summary>
            Gets set of the extended properties this extended data can operates with.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedProperty">
            <summary>
            Represents extended property of the map shape.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedProperty.propertyName">
            <summary>
            Name of the property.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedProperty.displayName">
            <summary>
            Display name of the property (KML).
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedProperty.propertyType">
            <summary>
            Type of the property.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedProperty.defaultValue">
            <summary>
            Default value of the property.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedProperty.#ctor(System.String,System.String,System.Type,System.Object)">
            <summary>
            Initializes a new instance of the ExtendedProperty class.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="displayName">Display name of the property.</param>
            <param name="propertyType">Type of the property.</param>
            <param name="defaultValue">Default value.</param>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedProperty.Name">
            <summary>
            Gets name of the property.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedProperty.Type">
            <summary>
            Gets type of the property.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedProperty.Default">
            <summary>
            Gets default value.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedPropertySet">
            <summary>
            Represents set of the extended properties.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedPropertySet.#ctor">
            <summary>
            Initializes a new instance of the ExtendedPropertySet class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedPropertySet.Parse(System.String)">
            <summary>
            Converts a String representation of the ExtendedPropertySet into the equivalent ExtendedPropertySet class.
            </summary>
            <param name="source">The String representation of the ExtendedPropertySet class.</param>
            <returns>The equivalent ExtendedPropertySet class.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedPropertySet.RegisterProperty(System.String,System.String,System.Type,System.Object)">
            <summary>
            Register new property.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="displayName">Display name of the property.</param>
            <param name="propertyType">Type of the property.</param>
            <param name="defaultValue">Default value.</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedPropertySet.PrepareCoordinates(System.String)">
            <summary>
            Prepares coordinates string.
            </summary>
            <param name="coordinates">Coordinates.</param>
            <returns>Prepared coordinates.</returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedPropertySet.Item(System.String)">
            <summary>
            Gets extended property definition.
            </summary>
            <param name="propertyName">Name of the extended property.</param>
            <returns>Extended property definition or null.</returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedPropertySetConverter">
            <summary>
            Converts instances of other types to and from instances of ExtendedPropertySet. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedPropertySetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Gets a value that indicates whether this type converter can convert from a given type. 
            </summary>
            <param name="context">ITypeDescriptorContext for this call.</param>
            <param name="sourceType">Type being queried for support.</param>
            <returns>True if this converter can convert from the specified type; false otherwise.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedPropertySetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Attempts to convert to a Point3DCollection from the given object. 
            </summary>
            <param name="context">The ITypeDescriptorContext for this call.</param>
            <param name="culture">The CultureInfo which is respected when converting.</param>
            <param name="value">The object to convert to an instance of ExtendedPropertySet. </param>
            <returns>ExtendedPropertySet that was constructed.</returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.DbfEncoding">
            <summary>
            Represents the DbfEncoding class.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingBase">
            <summary>
            Represents the DbfEncodingBase class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingBase.GetByteCount(System.Char[],System.Int32,System.Int32)">
            <summary>
            Calculates the number of bytes produced by encoding a set of characters from the specified character array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="index">The zero-based index of the first character to encode.</param>
            <param name="count">The number of characters to encode.</param>
            <returns>The number of bytes produced by encoding the specified characters.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingBase.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Encodes a set of characters from the specified character array into the specified byte array.
            </summary>
            <param name="chars">The character array containing the set of characters to encode.</param>
            <param name="charIndex">The zero-based index of the first character to encode.</param>
            <param name="charCount">The number of characters to encode.</param>
            <param name="bytes">The byte array to contain the resulting sequence of bytes.</param>
            <param name="byteIndex">The zero-based index at which to start writing the resulting sequence of bytes.</param>
            <returns>The actual number of bytes written into bytes.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingBase.GetCharCount(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Calculates the number of characters produced by decoding a sequence of bytes from the specified byte array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="index">The zero-based index of the first byte to decode.</param>
            <param name="count">The number of bytes to decode.</param>
            <returns>The number of characters produced by decoding the specified sequence of bytes.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingBase.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Decodes a sequence of bytes from the specified byte array into the specified character array.
            </summary>
            <param name="bytes">The byte array containing the sequence of bytes to decode.</param>
            <param name="byteIndex">The zero-based index of the first byte to decode.</param>
            <param name="byteCount">The number of bytes to decode.</param>
            <param name="chars">The character array to contain the resulting set of characters.</param>
            <param name="charIndex">The zero-based index at which to start writing the resulting set of characters.</param>
            <returns>The actual number of characters written into chars.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingBase.GetMaxByteCount(System.Int32)">
            <summary>
            Calculates the maximum number of bytes produced by encoding the specified number of characters.
            </summary>
            <param name="charCount">The number of characters to encode.</param>
            <returns>The maximum number of bytes produced by encoding the specified number of characters.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingBase.GetMaxCharCount(System.Int32)">
            <summary>
            Calculates the maximum number of characters produced by decoding the specified number of bytes.
            </summary>
            <param name="byteCount">The number of bytes to decode.</param>
            <returns>The maximum number of characters produced by decoding the specified number of bytes.</returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp1250">
            <summary>
            Represents the DBF encoding for code page 1250.
            Provides encoding capabilities for the Central European (Windows) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp1250.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp1251">
            <summary>
            Represents the DBF encoding for code page 1251.
            Provides encoding capabilities for the Cyrillic (Windows) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp1251.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp1252">
            <summary>
            Represents the DBF encoding for code page 1252.
            Provides encoding capabilities for the Western European (Windows) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp1252.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp1253">
            <summary>
            Represents the DBF encoding for code page 1253.
            Provides encoding capabilities for the Greek (Windows) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp1253.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp1254">
            <summary>
            Represents the DBF encoding for code page 1254.
            Provides encoding capabilities for the Turkish (Windows) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp1254.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp437">
            <summary>
            Represents the DBF encoding for code page 437.
            Provides encoding capabilities for the OEM United States encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp437.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp737">
            <summary>
            Represents the DBF encoding for code page 737.
            Provides encoding capabilities for the Greek (DOS) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp737.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp850">
            <summary>
            Represents the DBF encoding for code page 850.
            Provides encoding capabilities for the Western European (DOS) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp850.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp852">
            <summary>
            Represents the DBF encoding for code page 852.
            Provides encoding capabilities for the Central European (DOS) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp852.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp857">
            <summary>
            Represents the DBF encoding for code page 857 class.
            Provides encoding capabilities for the Turkish (DOS) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp857.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp861">
            <summary>
            Represents the DBF encoding for code page 861.
            Provides encoding capabilities for the Icelandic (DOS) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp861.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp865">
            <summary>
            Represents the DBF encoding for code page 865.
            Provides encoding capabilities for the Nordic (DOS) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp865.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp866">
            <summary>
            Represents the DBF encoding for code page 866.
            Provides encoding capabilities for the Cyrillic (DOS) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingCp866.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingMac">
            <summary>
            Represents the DbfEncodingMac class.
            Provides encoding capabilities for the Western European (Mac) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingMac.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingMacCE">
            <summary>
            Represents the DbfEncodingMacCE class.
            Provides encoding capabilities for the Central European (Mac) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingMacCE.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingMacCyrillic">
            <summary>
            Represents the DbfEncodingMacCyrillic class.
            Provides encoding capabilities for the Cyrillic (Mac) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingMacCyrillic.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingMacGreek">
            <summary>
            Represents the DbfEncodingMacGreek class.
            Provides encoding capabilities for the Greek (Mac) encoding under Silverlight.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DbfDataReader.Encodings.DbfEncodingMacGreek.WebName">
            <summary>
            Gets the name registered with the Internet Assigned Numbers Authority (IANA) for the current encoding.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType">
            <summary>
            The ESRI shape type definitions.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType.NullShape">
            <summary>
            Null Shape.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType.Point">
            <summary>
            Point.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType.Polyline">
            <summary>
            Polyline.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType.Polygon">
            <summary>
            Polygon.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType.Multipoint">
            <summary>
            Multipoint.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType.PointZ">
            <summary>
            PointZ.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType.PolylineZ">
            <summary>
            PolylineZ.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType.PolygonZ">
            <summary>
            PolygonZ.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType.MultipointZ">
            <summary>
            MultipointZ.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType.PointM">
            <summary>
            PointM.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType.PolylineM">
            <summary>
            PolylineM.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType.PolygonM">
            <summary>
            PolygonM.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType.MultipointM">
            <summary>
            MultipointM.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ESRIShapeType.Multipatch">
            <summary>
            Multipatch.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReader">
            <summary>
            Represents the ShapeFileReader class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReader.Read(System.IO.Stream)">
            <summary>
            Reads ESRI shape file from a stream.
            </summary>
            <param name="shapeStream">Stream of ESRI shape file.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReader.Read(System.IO.Stream,System.IO.Stream)">
            <summary>
            Reads ESRI shape file from the shape file and dbf file stream.
            </summary>
            <param name="shapeStream">Stream of ESRI shape file.</param>
            <param name="dbfStream">Stream of DBF file.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReader.Read(System.IO.Stream,System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads ESRI shape file from the shape file and dbf file stream.
            </summary>
            <param name="shapeStream">Stream of ESRI shape file.</param>
            <param name="dbfStream">Stream of DBF file.</param>
            <param name="encoding">DBF-file encoding.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReader.Read(System.IO.Stream,System.IO.Stream,Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedPropertySet)">
            <summary>
            Reads ESRI shape file from the shape file and dbf file stream.
            </summary>
            <param name="shapeStream">Stream of ESRI shape file.</param>
            <param name="dbfStream">Stream of DBF file.</param>
            <param name="extendedPropertySet">The ExtendedPropertySet for data from dbf-file.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReader.Read(System.IO.Stream,System.IO.Stream,Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedPropertySet,Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.CoordinateConverters.ICoordinateConverter)">
            <summary>
            Reads ESRI shape file from the shape file and dbf file stream.
            </summary>
            <param name="shapeStream">Stream of ESRI shape file.</param>
            <param name="dbfStream">Stream of DBF file.</param>
            <param name="extendedPropertySet">The ExtendedPropertySet for data from dbf-file.</param>
            <param name="coordinateConverter">The Coordinate Converter.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReader.Read(System.IO.Stream,System.IO.Stream,Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedPropertySet,System.Text.Encoding)">
            <summary>
            Reads ESRI shape file from the shape file and dbf file stream.
            </summary>
            <param name="shapeStream">Stream of ESRI shape file.</param>
            <param name="dbfStream">Stream of DBF file.</param>
            <param name="extendedPropertySet">The ExtendedPropertySet for data from dbf-file.</param>
            <param name="encoding">DBF-file encoding.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReader.Read(System.IO.Stream,System.IO.Stream,Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.DataExtensions.ExtendedPropertySet,System.Text.Encoding,Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.CoordinateConverters.ICoordinateConverter)">
            <summary>
            Reads ESRI shape file from the shape file and dbf file stream.
            </summary>
            <param name="shapeStream">Stream of ESRI shape file.</param>
            <param name="dbfStream">Stream of DBF file.</param>
            <param name="extendedPropertySet">The ExtendedPropertySet for data from dbf-file.</param>
            <param name="encoding">DBF-file encoding.</param>
            <param name="coordinateConverter">The Coordinate Converter.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReader.Read(Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReaderParameters)">
            <summary>
            Reads ESRI shape file according to specified parameters.
            </summary>
            <param name="parameters">The parameters of shape-file reader.</param>
            <returns>List of elements that will be placed on an information layer.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReader.ReadSchema(System.IO.Stream,System.Text.Encoding)">
            <summary>
            Reads only the DBF schema without iterating through the whole DBF file.
            </summary>        
            <param name="dbfStream">A stream instance initialized with the .dbf file.</param>
            <param name="encoding">The .dbf encoding if known.</param>
            <returns>ExtendedPropertySet or null if the DbfStream is invalid.</returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReaderParameters">
            <summary>
            Represents the parameters of shape-file reader.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReaderParameters.ShapeStream">
            <summary>
            Stream of ESRI shape file.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReaderParameters.DbfStream">
            <summary>
            Stream of DBF file.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReaderParameters.Encoding">
            <summary>
            DBF-file encoding.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeFileReaderParameters.ExtendedPropertySet">
            <summary>
            The ExtendedPropertySet for data from dbf-file.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeSourceType">
            <summary>
            Determines shape source type for the MapShapeReader class instance.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeSourceType.Auto">
            <summary>
            Shape source type will be resolved automatically.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeSourceType.Kml">
            <summary>
            KML file source type.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Processing.Mapping.Spatial.ShapeFile.ShapeSourceType.ShapeFile">
            <summary>
            ESRI shape-file shape source type.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.WktParser.GetTrimmedContent(System.String)">
            <summary>
            Returns the element content trimmed by leading and ending parentheses 
            </summary>
            <param name="wktElement">valid WKT element</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.MetafileUtils.CalcMetafileSizeCore(System.Drawing.SizeF)">
            <param name="size">in mm</param>
            <returns>size in 0.01mm (GDICompatible)</returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.OrderedList`1">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.OSContext">
            <summary>
            Implementation for .NET Framework under Windows
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.PageSection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Panel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Panel.CanShrink">
            <summary>
            Gets or sets a value indicating whether the 
            <see cref="T:Telerik.Reporting.Processing.Panel"/> 
            will shrink if a child item is shrunk or hidden.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Parameter">
            <summary>
            Represents a processing instance of a ReportParameter.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Parameter.#ctor">
            <summary>
            Initializes a new instance of the Parameter class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Parameter.Name">
            <summary>
            Gets or sets the Name of the parameters
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Parameter.Type">
            <summary>
            Gets or sets the type of the parameter.
            </summary>
            <remarks>
            The string that represents the parameter type should be the <see cref="P:System.Type.FullName"/> 
            of the CLR type corresponding to the ReportParameterType.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Processing.Parameter.Text">
            <summary>
            Gets or sets the text for the parameter to be displayed in the report viewer.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Parameter.Multivalue">
            <summary>
            Determines if the parameter can hold more then one value.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Parameter.AllowNull">
            <summary>
            Determines if the parameter allows no value to be passed from it's editor.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Parameter.AllowBlank">
            <summary>
            Determines if the parameter allows an empty string to be passed. Only for parameters of type string.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Parameter.IsVisible">
            <summary>
            Determines if the parameter should be displayed in the report viewer.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Parameter.AutoRefresh">
            <summary>
            Determines whether the report viewer should auto-update the report
            when the parameter value is changed.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Parameter.HasChildParameters">
            <summary>
            Gets or sets a value indicating whether other parameters depend on the current parameter.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Parameter.ChildParameters">
            <summary>
            Gets or sets IDs of all parameters that depend on the current parameter.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Parameter.AvailableValues">
            <summary>
            Gets or sets the list of the available values for the current parameter.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Parameter.Value">
            <summary>
            Gets or sets the value of the parameter.
            </summary>
            <remarks>
            Value should of the allowed types, or <see cref="T:System.Collections.IEnumerable"/> containing values of the allowed types.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Processing.Parameter.ID">
            <summary>
            Gets or sets the ID of the parameter.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Parameter.Label">
            <summary>
            Gets the label of the parameter. Returns a string that contains the label
            of the current parameter's <see cref="P:Telerik.Reporting.Processing.Parameter.Value"/> or an array of strings that contains
            the labels of all values when <b>multivalue</b> parameter.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ParameterValue">
            <summary>
            Represents a parameter value.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ParameterValue.Name">
            <summary>
            Gets or sets the name of the ParameterValue.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.ParameterValue.Value">
            <summary>
            Gets or sets the value of the ParameterValue.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.ParametersMap.AddParameterToMap(System.String,System.Boolean,System.Int32)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="mergeable"></param>
            <param name="reportIndex"></param>
            <returns>Parameter ID</returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.IParameterBucket">
            <summary>
            Provides information about parameter occurrences in reports
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.PictureBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.PictureWatermarkSettings.PageWidth">
            <summary>
            Page width, in mm
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.PictureWatermarkSettings.PageHeight">
            <summary>
            Page height, in mm
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.PreviousSearchEngine">
            <summary>
            Collects all aggregates for a given data item recursively, in order
            to prepare a MDQuery.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Primitives.ArcSegment.Size">
            <summary>
            Radius - not the circle's size
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ProcessingInstanceIdentifier">
            <summary>
            Immutable object that identifies a processing instance inside the (master)? report
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.RenderingFormat">
            <summary>
            Represents the rendering format a report is exported to.
            All available build-in formats are listed at <a href="https://docs.telerik.com/reporting/configuring-rendering-extensions"/>
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.RenderingFormat.#ctor(System.String)">
            <summary>
            Creates an instance of the RenderingFormat type.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.RenderingFormat.Name">
            <summary>
            Gets or sets the name of the current rendering format.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Report">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Report.RaiseError(Telerik.Reporting.Processing.ProcessingElement,System.Exception)">
            <summary>
            Returns True if should cancel the current report processing; otherwise false.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Report.DataSource">
            <summary>
            Gets or sets the data source that the <see cref="T:Telerik.Reporting.Processing.Report"/> is displaying data for.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Report.Parameters">
            <summary>
            Returns a collection of runtime report <see cref="T:Telerik.Reporting.Processing.Parameter"/>s.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Report.DocumentName">
            <summary>
            Gets or sets a <see cref="T:System.String"/> representing the name
            of the report document.
            </summary>
            <value>
            A <see cref="T:System.String"/> representing the document name. The
            default value is the name of the 
            <see cref="T:Telerik.Reporting.Report"/> this property belongs to.
            </value>
            <remarks>
            <para>
            The value of this property is used to suggest a file name when
            exporting a report to one of the available export formats.
            </para>
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportExpressionContext.#ctor(System.Type,Telerik.Reporting.Processing.AssemblyRefManager)">
            <summary>
            Used to evaluate expressions before the processing stage (like parameters).
            </summary>
            <param name="reportType"></param>
        </member>
        <member name="T:Telerik.Reporting.Processing.ReportFunctionLoader">
            <summary>
            Functions defined in the current report should not be visible at design time
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.ReportParametersManager`1.OrderParameters">
            <summary>
            Internal for test purposes only
            </summary>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.ResolvedReportDocument.Reports">
            <summary>
            Flattened enumerable of all resolved repors except the TOC report
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.ResXResourceManager">
            <summary>
            Allows resource localization via RESX files.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.MatchItem.Index">
            <summary>
            Current index of the item. Used to ensure order for items with equal position.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.MatchItem.Text">
            <summary>
            Used by WPF template for binding
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.MatchItem.PageInfo">
            <summary>
            Used by WPF template for binding
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.SearchHelper.GetClosestIndex(System.String,System.Int32)">
            <summary>
            Returns the closest index of word separator char around a given index. Used to trim the result to the closest word.
            </summary>
            <param name="data">the string content</param>
            <param name="index">the index, around which the search is performed.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.Processing.Shape">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.Table">
            <summary>
            Represents a processing <B>Table</B> item.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Table.GetCell(System.Int32,System.Int32)">
            <summary>
            Gets an <see cref="T:Telerik.Reporting.Processing.ITableCell"/> at the specified row and column index.
            </summary>
            <remarks>
            This method should be used <b>after</b> the <see cref="T:Telerik.Reporting.Processing.Table"/> item is data bound.
            </remarks>
            <example>
            The following code snippet demonstrates a sample usage of the <b>GetCell</b> method:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\ProcessingTableSnippets.cs" region="Table_GetCell_Snippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\ProcessingTableSnippets.vb" region="Table_GetCell_Snippet"/>
            </example>
            <param name="rowIndex"></param>
            <param name="columnIndex"></param>
            <returns><see cref="T:Telerik.Reporting.Processing.ITableCell"/></returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.Table.ColumnHeaderRowCount">
            <summary>
            Number of the rows reserved for the column headers
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Table.RowHeaderColumnCount">
            <summary>
            Number of the columns reserved for the column headers
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Table.Rows">
            <summary>
            Gets a list of <see cref="T:Telerik.Reporting.Processing.TableRow"/> objects that represents the rows in a <see cref="T:Telerik.Reporting.Processing.Table"/> item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.Table.Columns">
            <summary>
            Gets a list of <see cref="T:Telerik.Reporting.Processing.TableColumn"/> objects that represents the columns in a <see cref="T:Telerik.Reporting.Processing.Table"/> item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.LinesKeepTogetherInfo.StartIndex">
            <summary>
            The keep together region first line index
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.LinesKeepTogetherInfo.EndIndex">
            <summary>
            The keep together region end line index
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.TableCellHelper.EnsureNotMerged(Telerik.Reporting.Processing.ITableCell)">
            <summary>
            Currently cells can only be merged but not split
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.TableColumn">
            <summary>
            Represents a column in the <see cref="T:Telerik.Reporting.Processing.Table"/> item.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.TableColumn.GetCell(System.Int32)">
            <summary>
            Gets an <see cref="T:Telerik.Reporting.Processing.ITableCell"/> at the specified row index.
            </summary>
            <remarks>
            This method should be used <b>after</b> the <see cref="T:Telerik.Reporting.Processing.Table"/> item is data bound. 
            </remarks>
            <example>
            The following code snippet demonstrates a sample usage of the <b>GetCell</b> method:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\ProcessingTableSnippets.cs" region="TableColumn_GetCell_Snippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\ProcessingTableSnippets.vb" region="TableColumn_GetCell_Snippet"/>
            </example>
            <param name="rowIndex"></param>
            <param name="columnIndex"></param>
            <returns>An <see cref="T:Telerik.Reporting.Processing.ITableCell"/> instance.</returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.TableColumn.Index">
            <summary>
            Gets the index of the current <b>TableColumn</b> in the <see cref="P:Telerik.Reporting.Processing.Table.Columns"/> 
            collection of the <see cref="T:Telerik.Reporting.Processing.Table"/> item.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.TableRow">
            <summary>
            Represents a row in the <see cref="P:Telerik.Reporting.Processing.TableRow.Table"/> item.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.TableRow.GetCell(System.Int32)">
            <summary>
            Gets an <see cref="T:Telerik.Reporting.Processing.ITableCell"/> at the specified column index.
            </summary>
            <remarks>
            This method should be used <b>after</b> the <see cref="T:Telerik.Reporting.Processing.Table"/> item is data bound. 
            </remarks>
            <example>
            The following code snippet demonstrates a sample usage of the <b>GetCell</b> method:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\Processing\ProcessingTableSnippets.cs" region="TableRow_GetCell_Snippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\Processing\ProcessingTableSnippets.vb" region="TableRow_GetCell_Snippet"/>
            </example>
            <param name="columnIndex"></param>
            <returns>An <see cref="T:Telerik.Reporting.Processing.ITableCell"/> instance.</returns>
        </member>
        <member name="P:Telerik.Reporting.Processing.TableRow.Index">
            <summary>
            Gets the index of the current <b>TableRow</b> in the <see cref="P:Telerik.Reporting.Processing.Table.Rows"/> collection of the <see cref="T:Telerik.Reporting.Processing.Table"/> item.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.TextBox">
            <summary>
            
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.TextBox.Value">
            <summary>
            Gets or sets the value of the TextBox item
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.TextBox.Text">
            <summary>
            Gets the formatted value of the current TextBox processing item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.TextBox.IsValueCalculated">
            <summary>
            Determines whether the value of the current TextBox
            is calculated from an expression, or is a static text (label)
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.TextBoxUtil.FillTextElement(Telerik.Reporting.Processing.ITextContainer,System.Drawing.RectangleF,Telerik.Reporting.Processing.IMeasureContext)">
            <summary>
            Splits the text into text lines and adds them 
            to the text container's child elements.
            </summary>        
        </member>
        <member name="M:Telerik.Reporting.Processing.TextBoxUtil.AdjustTextLines(Telerik.Reporting.Processing.ITextContainer,System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Calculates the vertical alignment of the text lines and sets the measurements.
            </summary>
            <param name="textContainer"></param>
            <param name="bounds"></param>
            <param name="textBounds"></param>
        </member>
        <member name="M:Telerik.Reporting.Processing.TextRenderer.CalcLinesCount(System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="height">Available height</param>
            <param name="lineHeight">Single line height</param>
            <returns>The count of the lines that fit inside the available height</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.TextRenderer.SplitText(Telerik.Reporting.Processing.IMeasureContext,System.String,Telerik.Reporting.Drawing.IFont,System.Drawing.RectangleF,System.Single,Telerik.Reporting.Drawing.TextFormat,System.Boolean,System.Drawing.RectangleF@)">
            <summary>
            Splits the text according to the bounds rectangle.
            </summary>
            <param name="angle">In degrees</param>        
        </member>
        <member name="M:Telerik.Reporting.Processing.TextRenderer.SplitText(Telerik.Reporting.Processing.IMeasureContext,System.String,System.Boolean,Telerik.Reporting.Drawing.IFont,System.Drawing.RectangleF,Telerik.Reporting.Drawing.TextFormat,Telerik.Reporting.Processing.TextRenderer.DrawTextContext,System.Drawing.RectangleF@)">
            <summary>
            Main split text method.
            </summary>        
        </member>
        <member name="M:Telerik.Reporting.Processing.TextRenderer.GetHorzAlign(Telerik.Reporting.Drawing.TextFormat)">
            <summary>
            Changes horizontal alignment if the text is right-to-left.
            </summary>        
        </member>
        <member name="M:Telerik.Reporting.Processing.TextRenderer.CalcTextAlign(System.Drawing.RectangleF,System.Drawing.RectangleF,System.Single,System.Single,Telerik.Reporting.Drawing.TextFormat)">
            <summary>
            Calculates the alignment offset for the text lines.
            </summary>
            <param name="bounds"></param>
            <param name="textBounds"></param>
            <param name="lineSpacing"></param>
            <param name="angle">In degrees.</param>
            <param name="horizintalAlignment"></param>
            <param name="verticalAlignment"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.TextRenderer.CalculateQuadrant(System.Single)">
            <summary>
            Determines in which quadrant is the angle:
                         |
             Q2(180-269) |  Q3(270-359)
                         |
            --------------------------
                         |
             Q1(90-179)  |  Q0 (0-89)
                         |
            </summary>
            <param name="angleRad"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.TextRenderer.CreateDrawingFormat(Telerik.Reporting.Drawing.TextFormat)">
            <summary>
            Creates the string format used for drawing.
            </summary>
            <param name="textFormat">The original string format of the report item.</param>
        </member>
        <member name="M:Telerik.Reporting.Processing.TextRenderer.TextLineInfo.Calculate(Telerik.Reporting.Processing.TextRenderer.DrawTextContext,System.Drawing.PointF,System.Single)">
            <summary>
            Calculates the rectangles of the rotated text line:
            TextBounds and TextBoundingRect.
            </summary>            
        </member>
        <member name="M:Telerik.Reporting.Processing.TextRenderer.TextLineInfo.Rotate(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Rotates the text bounds at 180 degrees.
            </summary>
            <param name="bounds"></param>
            <param name="rect"></param>
        </member>
        <member name="P:Telerik.Reporting.Processing.TextRenderer.TextLineInfo.TextBounds">
            <summary>
            Rectangle in which to draw the text after rotating the graphics.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.TextRenderer.TextLineInfo.TextBoundingRect">
            <summary>
            Rectangle which surrounds the rotated text in the original graphics state.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.TextRenderer.DrawTextContext.IsPointValid(System.Drawing.RectangleF,System.Drawing.PointF)">
            <summary>
            Checks whether the point is inside the bounds.
            </summary>
            <param name="bounds"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.TextRenderer.DrawTextContext.GetDistance(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Determines the distance between two points.
            </summary>
            <param name="p1"></param>
            <param name="p2"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.TextRenderer.DrawTextContext.GetLineWidthInfo(System.Int32)">
            <summary>
            Calculates the corresponding to the line number width.
            </summary>
            <param name="lineNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.Timer.#ctor(System.String)">
            <summary>
            Creates a named timer; started immediately and stopped on disposing; displays trace info
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.Timer.#ctor(System.Diagnostics.Stopwatch)">
            <summary>
            Start/stop an external timer without any traces
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.TocItem.Text">
            <summary>
            Gets the formatted value of the current TextBox processing item.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.TocItem.IsValueCalculated">
            <summary>
            Determines whether the value of the current TextBox
            is calculated from an expression, or is a static text (label)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.TocSection">
            <summary>
            Represents a processing <B>Table of Contents</B> section.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.TocSection.Position">
            <summary>
            Gets or sets a value indicating where the section should be
            positioned.
            </summary>
            <value>
            A <see cref="T:Telerik.Reporting.TocPosition"/> object specifying the
            position for the
            <see cref="T:Telerik.Reporting.TocSection"/>.
            </value>
        </member>
        <member name="P:Telerik.Reporting.Processing.TocSection.Title">
            <summary>
            Gets or sets a value which will be displayed at the top of the table of contents section.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.UniqueDataItemPathsResolver.EnsureUniqueNames(Telerik.Reporting.Report)">
            <summary>
            Fills determined unique names each Group/TableGroup without name.
            </summary>
            <param name="report">The target report</param>
        </member>
        <member name="T:Telerik.Reporting.Processing.UserIdentity">
            <summary>
            Represents a user identity context of the report.
            <a href="https://docs.microsoft.com/en-us/dotnet/api/system.security.principal.iidentity?view=netframework-4.7.2"/>
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.UserIdentity.#ctor">
            <summary>
            Creates an instance of the UserIdentity type.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.UserIdentity.Current">
            <summary>
            Gets or sets the current user identity context of the report.
            </summary>
            <remarks>
            For the server viewer technologies it will be resolved automatically.
            The developer can override the default resolving mechanism.
            It can be retrieved both by this static member
            and with expression like =UserIdentity.Name
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Processing.UserIdentity.AuthenticationType">
            <summary>
            Gets or sets the type of authentication used.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.UserIdentity.IsAuthenticated">
            <summary>
            Gets or sets a value that indicates whether the user has been authenticated.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.UserIdentity.Name">
            <summary>
            Gets or sets the name of the current user.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Processing.UserIdentity.Context">
            <summary>
            Gets or sets the context collection for storing and retrieving user objects. The stored objects must be serializable so they can be persisted in the storage.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Processing.XhtmlValidator">
            <summary>
            Provide methods for XHTML validation
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Processing.XhtmlValidator.IsValidXhtml(System.String)">
            <summary>
            Determines if the provided markup is valid XHTML that <see cref="T:Telerik.Reporting.Processing.HtmlTextBox"/> can parse.
            If the provided value is an expression, true is returned.
            </summary>
            <param name="markup">The XHTML markup.</param>
            <returns>True if the XHTML is valid.</returns>
        </member>
        <member name="M:Telerik.Reporting.Processing.XhtmlValidator.ValidateXhtml(System.String)">
            <summary>
            Determines if the provided markup is valid XHTML that <see cref="T:Telerik.Reporting.Processing.HtmlTextBox"/> can parse.
            If the XHTML parse operation fail exception is thrown.
            If the provided value is an expression, no exception is thrown.
            </summary>
            <param name="markup">The XHTML markup.</param>
        </member>
        <member name="M:Telerik.Reporting.RtfRendering.DocumentRtf.Telerik#Reporting#RtfRendering#IFramesManager#SetBoundsOnFrame(Telerik.Reporting.Rtf.Frame,System.Drawing.RectangleF)">
            <summary>
            
            </summary>
            <param name="bounds"></param>
            <returns>True if additional frame is created</returns>
        </member>
        <member name="M:Telerik.Reporting.RtfRendering.HtmlUtils.GetFontSizeFromMargin(System.Single)">
            <param name="margin">The needed margin in Mm</param>
            <returns>Proper font size in points</returns>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.RtfFrameReport">
            <summary>
            RtfFrameReport -- hidden, used by the dispatcher.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.RtfReport">
            <summary>
            The dispatcher RTF rendering extension.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.Leaf">
            <summary>
            Leaf
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.RenderingElement">
            <summary>
            RenderingElement
            </summary>
        </member>
        <member name="M:Telerik.Reporting.RtfRendering.Table.RenderingElement.Render(Telerik.Reporting.RtfRendering.Table.ContextSettings)">
            <summary>
            Implements the common rendering logic for all rtf rendering items.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.RtfRendering.Table.RenderingElement.CalculateMinDistances(System.Collections.Generic.List{Telerik.Reporting.RtfRendering.Table.RenderingElement})">
            <summary>
            Calculates the minimal distance from the above and left standing 
            items.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.RtfRendering.Table.RenderingElement.AdjustPosition">
            <summary>
            Adjusts the item position so that the minimal 
            distance from the items above and to the left is preserved.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.RtfRendering.Table.RenderingElement.AdjustVerticalPosition">
            <summary>
            Adjusts the item position so that the minimal 
            distance from the items above is preserved.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.RtfRendering.Table.RenderingElement.AdjustHorizontalPosition">
            <summary>
            Adjusts the item position so that the minimal 
            distance from the items to the left is preserved.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.CheckBox">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.RenderingElementContainer">
            <summary>
            RenderingElementContainer
            </summary>
        </member>
        <member name="M:Telerik.Reporting.RtfRendering.Table.RenderingElementContainer.AttachChildElements(Telerik.Reporting.RtfRendering.Table.LayoutInfo)">
            <summary>
            For each child element, determines in which cell it will fall and
            links it to that cell. If the element spans several rows/columns the
            target cell is merged.
            </summary>
            <param name="layoutInfo"></param>
        </member>
        <member name="M:Telerik.Reporting.RtfRendering.Table.RenderingElementContainer.Intersects(Telerik.Reporting.Drawing.RectangleU,Telerik.Reporting.Drawing.RectangleU,Telerik.Reporting.Drawing.UnitType,System.Single)">
            <summary>
            Checks whether two rectangles intersect with each other 
            using the specified measurement unit and precision.
            </summary>
            <param name="rect1"></param>
            <param name="rect2"></param>
            <param name="workingUnit"></param>
            <param name="precision"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.RtfRendering.Table.RenderingElementContainer.LRTBComparer(Telerik.Reporting.RtfRendering.Table.RenderingElement,Telerik.Reporting.RtfRendering.Table.RenderingElement)">
            <summary>
            Compares items to arrange them in Left-Right Top-Bottom order.
            </summary>
            <param name="item1"></param>
            <param name="item2"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.ContextSettings">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.Group">
            <summary>
            Group
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.RenderingElementProxy">
            <summary>
            RenderingElementProxy
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.LayoutEngine">
            <summary>
            LayoutEngine
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.LayoutInfo">
            <summary>
            LayoutInfo
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.Panel">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.PictureBox">
            <summary>
            PictureBox
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.RenderingElementCollection">
            <summary>
            RenderingElementCollection
            </summary>
        </member>
        <member name="M:Telerik.Reporting.RtfRendering.Table.Report.RenderPageSections">
            <summary>
            These are the REAL Word PageHeader and PageFooter so I can render 
            them only if I am not part of a ReportBook. If I am part of a report 
            book and each report in the book has different PageHeader/PageFooter 
            then which one should it be. The simple answer is no one.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.RtfRendering.Table.Report.InsertTrialMessage">
            <summary>
            See the summary of RenderPageSections for more info.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.RtfRendering.Table.Report.ReplaceHeaderFooterExpressions">
            <summary>
            Replace the PageNumber and PageCount with XML 1.0 friendly non-character
            symbols which will not be present in the text otherwise.
            The RtfWriter will replace those symbols later on with 
            the special Word's control strings and let Word do the rest.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.ReportSection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.RtfTableReport">
            <summary>
            RtfTableReport -- hidden, used by the dispatcher.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.RtfRendering.Table.TableRenderingElement.Width">
            <summary>
            RTF Hack -- it renders borders insanely and we have to recalculate.
            Otherwise the table/crosstab's right/bottom borders are cannot fit
            into the container and are clipped/invisible.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.RtfRendering.Table.TableRenderingElement.Height">
            <summary>
            RTF Hack -- it renders borders insanely and we have to recalculate.
            Otherwise the table/crosstab's right/bottom borders cannot fit
            into the container and are clipped/invisible.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.RtfRendering.Table.TextBox">
            <summary>
            RtfTextBox
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Attribute">
            <summary>
            Represents an RTF control word. A control word is a specially formatted 
            command that RTF uses to mark printer control codes and information that 
            applications use to manage documents. A control word cannot be longer 
            than 32 characters. 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Node">
            <summary>
            Represents the base class for all RTF nodes.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Node.Prepare">
            <summary>
            When overriden in a derived class this methods should perform all
            preparation before the Node is written, i.e. set Attribute values, 
            prepare child nodes, etc.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Node.Write(Telerik.Reporting.Rtf.IO.RtfWriter)">
            <summary>
            When overridden in a derived class, saves the current node to the 
            specified RtfWriter.
            </summary>
            <param name="writer">The RtfWriter to which you want to save.
            </param>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Node.SetDocumentRecursive(Telerik.Reporting.Rtf.Document)">
            <summary>
            Sets the document of the node.
            </summary>
            <param name="document">The document of the node.</param>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Node.CheckParentingCycle(Telerik.Reporting.Rtf.Node,Telerik.Reporting.Rtf.Node)">
            <summary>
            Checks whether there is a circular reference between two nodes.
            If the toFind node is encountered anywhere going up from the bottom 
            node an ArgumentException is thrown.
            </summary>
            <param name="bottom">The node from which to start climbing up the 
            parent-child hierarchy.</param>
            <param name="toFind">The control to look for.</param>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Node.Nodes">
            <summary>
            Gets the child nodes of this node.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Node.NodeCollection">
            <summary>
            Represents the collection of nodes belonging to a node.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Attribute.ValidateName">
            <summary>
            Validate the name of the attribute.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Attribute.ValidateValue">
            <summary>
            Validate the value of the attribute.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Attribute.ValidateLength">
            <summary>
            Validates the length of the attribute.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Attribute.Name">
            <summary>
            Gets or sets the name of the attribute.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Attribute.Value">
            <summary>
            Gets or sets an optional value for the attribute.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Rtf.Element.WriteAttributes(Telerik.Reporting.Rtf.IO.RtfWriter)" -->
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.Rtf.Element.WriteContent(Telerik.Reporting.Rtf.IO.RtfWriter)" -->
        <member name="P:Telerik.Reporting.Rtf.Element.Attributes">
            <summary>
            Gets the attributes of this node.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Border.AdjustedWidth">
            <summary>
            Width adjusted for MS Word behavior. For example when you set a
            double border and specify a width of 1pt, Word makes it 3pt --
            1pt for each line and 1pt for the space between etc. Use this for
            writing the actual value to the writer.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Cell">
            <summary>
            Represents a table cell. The table cell is just a weird kind of
            paragraph with some additional attributes that need to be written
            in the row's definition.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Group">
            <summary>
            Represents a RTF Group. Groups are enclosed in braces.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Paragraph.AddTextRun(System.String,System.Boolean)">
            <summary>
            Adds a TextRun with the specified text to the paragraph. If 
            copyStyle is true then the text run is initialized 
            with the paragraph properties, such as Font, Color, BackgroundColor.
            </summary>
            <param name="text">The text for the TextRun.</param>
            <param name="copyStyle">Indicates whether to initialize
            the new text run with the paragraph style properties.</param>
            <returns>The TextRun that was added.</returns>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Paragraph.AddTextRun(System.String,System.String,System.Single,System.Drawing.FontStyle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Adds a TextRun with the specified text to the paragraph. If 
            copyStyleFromParagraph is true then the text run is initialized 
            with the paragraph properties. Otherwise, it is left default.
            </summary>
            <param name="text">The text for the TextRun.</param>
            <param name="fontName">The font name for the TextRun.</param>
            <param name="fontSize">The font size in points for the TextRun.</param>
            <param name="fontStyle">The font style for the TextRun.</param>
            <param name="color">The text color for the TextRun.</param>
            <param name="backgroundColor">The background color of the TextRun.</param>
            <returns>The TextRun that was added.</returns>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Paragraph.FontSize">
            <summary>
            The font size in points.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Cell.OriginalPaddingBottom">
            <summary>
            Needed because of the "Picture Cell with BottomPadding" MS Word bug.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Cell.CellDef">
            <summary>
            Cell defintion. The thing written as part of the row before cells'
            content begins.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.Cell.CellDef.HorizontalMergeMaster">
            <summary>
            The first cell in a range of table cells to be merged.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.Cell.CellDef.HorizontalMergeSlave">
            <summary>
            Contents of the table cell are merged with those of the 
            preceding cell.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.Cell.CellDef.VerticalMergeMaster">
            <summary>
            The first cell in a range of table cells to be vertically 
            merged.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.Cell.CellDef.VerticalMergeSlave">
            <summary>
            Contents of the table cell are vertically merged with those of 
            the preceding cell.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Telerik.Reporting.Rtf.Cell.CellDef.PadLeft" -->
        <member name="M:Telerik.Reporting.Rtf.Cell.CellDef.PrepareMerging">
             <summary>
             This method adds merging information to the cell depending on
             several factors. Here is a simple example of a 3x3 merged range: 
            
             With RTF control words:
             |------|------|------|
             |clmgf |clmrg |clmrg |
             |clvmgf|clvmgf|clvmgf|
             |------|------|------|
             |clmgf |clmrg |clmrg |
             |clvmrg|clvmrg|clvmrg|  
             |------|----- |------|
             |clmgf |clmrg |clmrg |
             |clvmrg|clvmrg|clvmrg|
             |------|----- |------|
            
             Legend: HM = Horizontal Master
                     VM = Vertical Master
                     HS = Horizontal Slave
                     VS = Vertical Slave
             |------|------|------|
             |HM    |HS    |HS    |
             |VM    |VM    |VM    |
             |------|------|------|
             |HM    |HS    |HS    |
             |VS    |VS    |VS    |  
             |------|----- |------|
             |HM    |HS    |HS    |
             |VS    |VS    |VS    |
             |------|----- |------|
             
             </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Cell.CellDef.InFirstRow">
            <summary>
            Indicates whether the cell is in the top row of the merged range.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Cell.CellDef.InLastRow">
            <summary>
            Indicates whether the cell is in the bottom row of the merged range.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Cell.CellDef.InFirstColumn">
            <summary>
            Indicates whether the cell is in the leftmost column of the 
            merged range.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Cell.CellDef.InLastColumn">
            <summary>
            Indicates whether the cell is in the rightmost column of the 
            merged range.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Cell.CellDef.MergedHorizontally">
            <summary>
            Returns true if the cell takes part in a horizontally merged 
            range. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Cell.CellDef.MergedVertically">
            <summary>
            Returns true if the cell takes part in a horizontally merged 
            range. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Cell.CellDef.IsMergeMaster">
            <summary>
            Returns true if the cell is the merge target, i.e. the top left
            cell in the range.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Cell.CellDef.IsHorizontalMergeMaster">
            <summary>
            Returns true if the cell is in the same column as the merge 
            target.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Cell.CellDef.IsVerticalMergeMaster">
            <summary>
            Returns true if the cell is in the same row as the merge target.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Cell.CellDef.IsHorizontalMergeSlave">
            <summary>
            Return true is the cell is right of its merge target.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Cell.CellDef.IsVerticalMergeSlave">
            <summary>
            Returns true if the cell is below its merge target.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Cell.CellDef.CellBorder">
            <summary>
            A border used for table cells. The only difference is the
            StartElement which begins with "cl".
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Convert">
            <summary>
            Utility class for conversions.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Convert.MmToTwips(System.Single)">
            <summary>
            Converts mm to twips. 
            1in = 72pt = 1440twips
            1in = 2.54cm = 25.4mm
            1mm = 1440/25.4
            </summary>
            <param name="mm">The amount in points.</param>
            <returns>The amount in twips.</returns>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Destination">
            <summary>
            Certain control words, referred to as destinations, mark the beginning 
            of a collection of related text that could appear at another position, 
            or destination, within the document. Destinations may also be text that 
            is used (but should not appear) within the document at all. Destinations 
            added after the RTF Specification published in the March 1987 Microsoft 
            Systems Journal may be preceded by the control symbol \* (backslash 
            asterisk). This control symbol identifies destinations whose related 
            text should be ignored if the RTF reader does not recognize the 
            destination control word. (RTF writers should follow the convention of 
            using this control symbol when adding new destinations or groups.) 
            Destinations whose related text should be inserted into the document 
            even if the RTF reader does not recognize the destination should not use 
            \*. All destinations that were not included in the March 1987 revision 
            of the RTF Specification are shown with \* as part of the control word. 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Flag">
            <summary>
            An attribute without value.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.DeviceCapsParams">
            <summary>
            DeviceCapsParams
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Document">
            <summary>
            Represents a RTF document. An entire RTF file is considered 
            a group and must be enclosed in braces.
            http://msdn2.microsoft.com/en-us/library/aa140298(office.10).aspx
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Frame.AdjustBoundsForBorders(System.Drawing.Rectangle)">
            <summary>
            Adjusts the bounds of the frame taking into account how MS Word
            renders frames with borders.
            </summary>
            <param name="bounds"></param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Frame.Location">
            <summary>
            Gets or sets the location of the frame in millimeters.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Frame.Size">
            <summary>
            Gets or sets the size of the frame in millimeters.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Header">
            <summary>
            Represents and RTF document header.
            http://msdn2.microsoft.com/en-us/library/aa140301(office.10).aspx
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.HorizontalAlign">
            <summary>
            Specifies the vertical alignment of an object or text in a report item.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.HorizontalAlign.Left">
            <summary>
            Specifies that the object is aligned to the left.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.HorizontalAlign.Center">
            <summary>
            Specifies that the object is aligned to the center.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.HorizontalAlign.Right">
            <summary>
            Specifies that the object is aligned to the right.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.HorizontalAlign.Justify">
            <summary>
            Specifies that the object is justified.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.ImageUtils.CreateGraphics(System.Drawing.Image)">
            <summary>
            Creates a Graphics for drawing in the specified image with the 
            given unit of measure.
            </summary>
            <param name="image">The image to draw to.</param>
            <param name="graphicsUnit">The unit of measure for the Graphics.</param>
            <returns>A Graphics object that will draw in the supplied image.</returns>
        </member>
        <member name="M:Telerik.Reporting.Rtf.ImageUtils.GetMetafileBounds(System.Drawing.SizeF)">
            <summary>
            Returns a GDICompatible metafile size.
            </summary>
            <param name="originalSize">The desired size in millimeters.</param>
            <returns>A RectangleF representing a metafile bounds in 100ths of an millimeter.</returns>
        </member>
        <member name="T:Telerik.Reporting.Rtf.IO.RtfWriter">
            <summary>
            Represents a StreamWriter for writing RTF documents.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.IO.RtfWriter.#ctor(System.IO.Stream)">
            <summary>
            Creates a new instance of the RtfWriter in Compact writing mode 
            with the given stream.
            </summary>
            <param name="stream">The stream to write to.</param>
        </member>
        <member name="M:Telerik.Reporting.Rtf.IO.RtfWriter.#ctor(System.IO.Stream,Telerik.Reporting.Rtf.IO.RtfWriterMode)">
            <summary>
            Creates a new instance of the RtfWriter with the given RtfWriterMode
            and the given stream.
            </summary>
            <param name="stream">The stream to write to.</param>
            <param name="writerMode">The writer mode.</param>
        </member>
        <member name="M:Telerik.Reporting.Rtf.IO.RtfWriter.StartGroup(Telerik.Reporting.Rtf.Group)">
            <summary>
            Starts a new RTF group.
            </summary>
            <param name="owner">The entity that starts the group.</param>
        </member>
        <member name="M:Telerik.Reporting.Rtf.IO.RtfWriter.EndGroup(Telerik.Reporting.Rtf.Group)">
            <summary>
            Ends the owner's group and all groups inside it.
            </summary>
            <param name="owner">The entity that ends the group.</param>
        </member>
        <member name="M:Telerik.Reporting.Rtf.IO.RtfWriter.WriteAttribute(Telerik.Reporting.Rtf.Attribute)">
            <summary>
            Writes an attribute.
            </summary>
            <param name="attribute">The Attribute to write.</param>
        </member>
        <member name="M:Telerik.Reporting.Rtf.IO.RtfWriter.WriteNestedTablesCompatibility">
            <summary>
            Writes info for older readers that do not understand nested tables.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.IO.RtfWriter.WriterMode">
            <summary>
            Gets the writer mode.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.IO.RtfWriter.CurrentGroup">
            <summary>
            Gets the Group that is on top of the group stack.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.IO.RtfWriter.CurrentGroupLevel">
            <summary>
            Gets the current group level (zero-based). Return -1 if the group
            stack is empty.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.IO.RtfWriterMode">
            <summary>
            The RtfWriter mode specifies how an RtfWriter should output content.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.IO.RtfWriterMode.Compact">
            <summary>
            The RTF stream contains no unnecessary characters. This is default 
            in release build.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.IO.RtfWriterMode.Structured">
            <summary>
            The RTF stream is structured so that it is human-readable. This is 
            default in debug build.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Page">
            <summary>
            Represents a document page. (RTF section)
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.PageFooter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.PageHeader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Picture.GetCenteredLocation(System.Drawing.SizeF,System.Drawing.SizeF)">
            <summary>
            Calculates (in mm) where the origin of the image should be so that 
            it is centered with respect to the container.
            </summary>
            <param name="containerSize">The size of the container.</param>
            <param name="imageSize">The size of the image.</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Picture.SizeMode">
            <summary>
            The sizing mode of the picture.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Picture.BackgroundRepeat">
            <summary>
            The repeat mode of the background picture.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Row">
            <summary>
            Represents a table row
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Row.AdjustCellPaddingForPictures">
            <summary>
            Yet another MS Word issue is alleviated by this method.
            When there is an image in the row there should not be any
            bottom padding because word stretches everything a lot.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Row.WriteHeader(Telerik.Reporting.Rtf.IO.RtfWriter)">
            <summary>
            Writes the header of a row. Used by a table after its end or by
            the nested table properties at the end of a row.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Row.WriteNestedTableProperites(Telerik.Reporting.Rtf.IO.RtfWriter)">
            <summary>
            Writes the nested table properties at the end of a row is nested.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Row.WriteCellDefinitions(Telerik.Reporting.Rtf.IO.RtfWriter)">
            <summary>
            Writes the cell definitions only -- without the actual cell
            contents. Used by a nested table to "repeat" its parent row 
            definitions at the end of the table.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Row.WriteCellContent(Telerik.Reporting.Rtf.IO.RtfWriter)">
            <summary>
            Writes the cell content.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Row.CellCollection">
            <summary>
            CellCollection 
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.Table">
            <summary>
            Represents a RTF Table.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Rtf.Table.CompressTable">
            <summary>
            Removes the ghost columns/rows served by the crosstab.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Table.IsNested">
            <summary>
            Nested tables are the weirdest shit of all. PURE BRAINFUCK.
            Repeat the contents of the parent row after this table is 
            finished in order for the older readers to understand the 
            table. See the specification example for more info. Also 
            check out Apache FOP (http://xmlgraphics.apache.org/fop/) to 
            see their implementation as a reference.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.Table.ParentRow">
            <summary>
            Returns the row that contains the cell that contains this table.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.RowCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.TextFlow">
            <summary>
            Represents the text flow of a table cell.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.TextFlow.Normal">
            <summary>
            Text in a cell flows from left to right and top to bottom 
            (default).
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.TextFlow.RightToLeft">
            <summary>
            Text in a cell flows right to left and top to bottom.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.TextFlow.CounterClockwise">
            <summary>
            Text in a cell flows left to right and bottom to top. Represents 
            rotation by -90 degrees.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.TextFlow.Vertical">
            <summary>
            Text in a cell flows left to right and top to bottom, 
            vertical.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Rtf.TextFlow.Clockwise">
            <summary>
            Text in a cell flows top to bottom and right to left
            , vertical. Represents rotation by 90 degrees.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Rtf.TextRun">
            <summary>
            Represents a text run in a paragraph.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Rtf.TextRun.FontSize">
            <summary>
            The font size in points.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.CacheFactory.CreateFileCache">
            <summary>
            Creates a new instance of file cache in a temp folder that will store cached data.
            </summary>
            <returns>The newly created cache instance.</returns>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.CacheFactory.CreateFileCache(System.String)">
            <summary>
            Creates a new instance of file cache that will store cached data in a directory of the file system.
            </summary>
            <param name="directory">The directory path that will be used from the cache as repository.</param>
            <returns>The newly created cache instance.</returns>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.CacheFactory.CreateDatabaseCache(System.String,System.String)">
            <summary>
            Creates new instance of database cache that will store cached data in a database.
            </summary>
            <param name="backendName">Specifies which database engine should be used.</param>
            <param name="connectionString">A connection string that should be used to connect to the cache database</param>
            <returns>The newly created cache instance.</returns>
            <remarks>In order to use a database cache you should firstly use the Database Cache Configuration Tool 
            in order to create the underplaying database and its schema.<br />
            Note that the database cache implementation relies on the Telerik OpenAccess 
            so the following OpenAccess core libraries should be referenced: Telerik.OpenAccess.dll, Telerik.OpenAccess.35.Extensions.dll .
            Proper assembly binding redirects might apply.<br />
            See also: <conceptualLink target="5f8e6a6f-1160-4d59-9554-fe3a14e2a286">Configuring the Database Cache Provider</conceptualLink></remarks>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.PersistableObject.Delete(System.String)">
            <summary>
            Deletes a key-value from the storage
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:Telerik.Reporting.Services.ConfigSectionReportServiceConfiguration">
            <summary>
            Report service configuration that upon creation reads the restReportService
            configuration element from the application configuration file.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.ReportServiceConfiguration">
            <summary>
            Default implementation of the <see cref="T:Telerik.Reporting.Services.IReportServiceConfiguration"/> interface.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.IReportServiceConfiguration">
            <summary>
            Represents an object containing all dependencies and setting
            which the REST report service needs to operate.
            </summary>
            <seealso cref="T:Telerik.Reporting.Services.ReportServiceConfiguration"/>
        </member>
        <member name="P:Telerik.Reporting.Services.IReportServiceConfiguration.HostAppId">
            <summary>
            Gets or sets the unique constant name of the application hosting the reports service.
            </summary>
            <remarks>
            When not set the report service utilizes
            the <a href="https://msdn.microsoft.com/en-us/library/vstudio/system.appdomainsetup.applicationname(v=vs.100).aspx">
            AppDomainSetup.ApplicationName Property</a>
            for the current application domain. 
            This however is not sufficient for each application setup.
            Set a value for this property in order to provide an unique name among all apps
            implementing the report service that will be deployed in the same environment.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Services.IReportServiceConfiguration.WorkerCount">
            <summary>
            Gets or sets a value determining the count of the worker threads
            that render the report documents.
            </summary>
            <remarks>
            By default the worker threads count is equal to the count of the available
            logical processors on the machine.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Services.IReportServiceConfiguration.ClientSessionTimeout">
            <summary>
            Gets or sets a value in minutes indicating how long a client session
            will be preserved in the service storage after the last interaction
            from this client.
            </summary>
            <remarks>
            The value must be greater than zero. 
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Services.IReportServiceConfiguration.ReportSharingTimeout">
            <summary>
            Gets or sets a value in minutes indicating how long a rendered
            report document from a client will be viable for reuse on subsequent
            document requests from the same or other clients.
            </summary>
            <remarks>
            The value must be greater or equal to zero. A zero value will
            prevent rendered report document reuse.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Services.IReportServiceConfiguration.Storage">
            <summary>
            Gets or sets an <see cref="T:Telerik.Reporting.Cache.Interfaces.IStorage"/>
            implementation instance that will be used for internal storage from the report service.
            </summary>
            <remarks>
            Use this property setter in order to provide a storage instance.
            May be one of the built-in storage implementations or a custom implementation.
            This is mandatory setting without defaults.
            </remarks>
            <seealso cref="T:Telerik.Reporting.Cache.MsSqlServerStorage"/>
            <seealso cref="T:Telerik.Reporting.Cache.StackExchangeRedis.RedisStorage"/>
            <seealso cref="T:Telerik.Reporting.Cache.File.FileStorage"/>
            <seealso cref="T:Telerik.Reporting.Cache.Database.DatabaseStorage"/>
        </member>
        <member name="P:Telerik.Reporting.Services.IReportServiceConfiguration.ReportResolver">
            <summary>
            Gets or sets an <see cref="T:Telerik.Reporting.Services.Engine.IReportResolver"/>
            implementation instance that will be used for report resolving from the service.
            </summary>
            <remarks>
            Use this property setter in order to provide a report resolver instance.
            May be one of the built-in report resolvers or a custom implementation resolver. 
            Built-in resolvers may be chained.
            This is mandatory setting without defaults.
            </remarks>
            <seealso cref="T:Telerik.Reporting.Services.Engine.IReportResolver"/>
            <seealso cref="T:Telerik.Reporting.Services.WebApi.ReportFileResolver"/>
            <seealso cref="T:Telerik.Reporting.Services.WebApi.ReportTypeResolver"/>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Services.ReportServiceConfiguration.#ctor">
            <summary>
            Creates an instance of the ReportServiceConfiguration class.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.ReportServiceConfiguration.HostAppId">
            <summary>
            Gets or sets the unique constant name of the application hosting the reports service.
            </summary>
            <remarks>
            When not set the report service utilizes
            the <a href="https://msdn.microsoft.com/en-us/library/vstudio/system.appdomainsetup.applicationname(v=vs.100).aspx">
            AppDomainSetup.ApplicationName Property</a>
            for the current application domain. 
            This however is not sufficient for each application setup.
            Set a value for this property in order to provide an unique name among all apps
            implementing the report service that will be deployed in the same environment.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Services.ReportServiceConfiguration.WorkerCount">
            <summary>
            Gets or sets a value determining the count of the worker threads
            that render the report documents.
            </summary>
            <remarks>
            By default the worker threads count is eqal to the count of the available
            locigal processors on the machine.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Services.ReportServiceConfiguration.ClientSessionTimeout">
            <summary>
            Gets or sets a value in minutes indicating how long a client session
            will be preserved in the service storage after the last interaction
            from this client.
            </summary>
            <remarks>
            The value must be greater than zero. The default value is 15 minutes
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Services.ReportServiceConfiguration.ReportSharingTimeout">
            <summary>
            Gets or sets a value in minutes indicating how long a rendered
            report document from a client will be viable for reuse on subsequent
            document requests from the same or other clients.
            </summary>
            <remarks>
            The value must be greater or equal to zero. A zero value will
            prevent rendered report document reuse. The default value is zero.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.Services.ReportServiceConfiguration.Storage">
            <summary>
            Gets or sets an <see cref="T:Telerik.Reporting.Cache.Interfaces.IStorage"/>
            implementation instance that will be used for internal storage from the report service.
            </summary>
            <remarks>
            Use this property setter in order to provide a storage instance.
            May be one of the built-in storage implementations or a custom implementation.
            This is mandatory setting without defaults.
            </remarks>
            <seealso cref="T:Telerik.Reporting.Cache.MsSqlServerStorage"/>
            <seealso cref="T:Telerik.Reporting.Cache.StackExchangeRedis.RedisStorage"/>
            <seealso cref="T:Telerik.Reporting.Cache.File.FileStorage"/>
            <seealso cref="T:Telerik.Reporting.Cache.Database.DatabaseStorage"/>
        </member>
        <member name="P:Telerik.Reporting.Services.ReportServiceConfiguration.ReportResolver">
            <summary>
            Gets or sets an <see cref="T:Telerik.Reporting.Services.Engine.IReportResolver"/>
            implementation instance that will be used for report resolving from the service.
            </summary>
            <remarks>
            Use this property setter in order to provide a report resolver instance.
            May be one of the built-in report resolvers or a custom implementation resolver. 
            Built-in resolvers may be chained.
            This is mandatory setting without defaults.
            </remarks>
            <seealso cref="T:Telerik.Reporting.Services.Engine.IReportResolver"/>
            <seealso cref="!:Telerik.Reporting.Services.WebApi.ReportFileResolver"/>
            <seealso cref="!:Telerik.Reporting.Services.WebApi.ReportTypeResolver"/>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Services.ConfigSectionReportServiceConfiguration.#ctor">
            <summary>
            Creates an instance of the ConfigSectionReportServiceConfiguration type 
            and populates any configuration properties that are setup in the config file.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.PersistableObject`1">
            <summary>
            Persistable object identified by Key object (K)
            </summary>
            <typeparam name="K">Key object type</typeparam>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.DocumentMapNodeModel">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.HttpError">
            <summary>
            Defines a class for storing error information.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.HttpError.Message">
            <summary>
            Gets or sets the high-level, user-visible message explaining the cause of the error.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.HttpError.ExceptionMessage">
            <summary>
            Gets or sets the message of the <see cref="T:System.Exception"/> if available.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.HttpError.ExceptionType">
            <summary>
            Gets or sets the type of the <see cref="T:System.Exception"/> if available.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.HttpError.StackTrace">
            <summary>
            Gets or sets the stack trace information associated with this instance if available.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.ErrorInfo">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.ErrorInfo.#ctor(System.String,System.Net.HttpStatusCode)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.ErrorInfo.#ctor(System.Net.HttpStatusCode)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.ErrorInfo.Message">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.ErrorInfo.StatusCode">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.IReportResolver">
            <summary>
            Represents a resolver that creates <see cref="T:Telerik.Reporting.ReportSource"/> from a string representation of a report document reference
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportResolver.Resolve(System.String)">
            <summary>
            Creates a <see cref="T:Telerik.Reporting.ReportSource"/> based on its string representation.
            </summary>
            <param name="report">The string representation of a report document reference</param>
            <remarks>
            Supported from the engine are <see cref="T:Telerik.Reporting.TypeReportSource"/> and <see cref="T:Telerik.Reporting.UriReportSource"/>
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.IReportResolverProvider">
            <summary>
            Represents an object which creates instances of particular report resolver implementation.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportResolverProvider.CreateReportResolver">
            <summary>
            Creates an instance of report resolver.
            </summary>
            <returns>The newly created report resolver instance.</returns>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportResolverProvider.Initialize(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes the provider instance with parameters used 
            to configure each newly created report resolver instance
            </summary>
            <param name="parameters">Dictionary of name-value pairs
            representing report resolver configuration parameters.</param>
        </member>
        <member name="T:Telerik.Reporting.Services.GetDocumentEventArgs">
            <summary>
            Provides data for the GetDocument API call modification.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.GetDocumentEventArgs.#ctor(System.Byte[],System.String,System.String,System.Boolean,System.String)">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.GetDocumentEventArgs.Bytes">
            <summary>
            The document bytes
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.GetDocumentEventArgs.DocumentName">
            <summary>
            The document name
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.GetDocumentEventArgs.Extension">
            <summary>
            The document extension
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.GetDocumentEventArgs.HasError">
            <summary>
            If an error occurred while generating the document
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.GetDocumentEventArgs.ErrorMessage">
            <summary>
            The error message if error occurred
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.PageContentEncoderFactory">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.IPageContentEncoder">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.IReportEngine">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.ListRenderingExtensions">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.RegisterClient">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.UnregisterClient(System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.GetParameters(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.CreateReportInstance(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.GetReportInstanceKey(System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.DeleteReportInstance(System.String,System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.CreateDocument(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,System.String,System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.DeleteDocument(System.String,System.String,System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.GetDocumentInfo(System.String,System.String,System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.GetDocument(System.String,System.String,System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.GetPage(System.String,System.String,System.String,System.Int32)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.GetResource(System.String,System.String,System.String,System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.ExecuteIntaractiveAction(System.String,System.String,System.String,System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.GetDocumentRenderingFormat(System.String,System.String,System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.GetPageLayoutInfo(System.String,System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IReportEngine.GetSearchResults(System.String,System.String,System.String,Telerik.Reporting.Services.Engine.SearchArgs)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.IReportEngine.ParameterValueParser">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.ExtensionInfo">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.ExtensionInfo.Name">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.ExtensionInfo.LocalizedName">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.InvalidReportException">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.InvalidReportException.#ctor(System.String,System.Object[])">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.InvalidParameterException">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.InvalidParameterException.#ctor(System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.InvalidClientException">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.InvalidClientException.#ctor(System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.InvalidRenderingArgsException">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.InvalidRenderingArgsException.#ctor(System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.InvalidInstanceException">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.InvalidInstanceException.#ctor(System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.InvalidDocumentException">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.InvalidDocumentException.#ctor(System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.DocumentRenderException">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.DocumentRenderException.#ctor(System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.IntaractiveActionNotFound">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IntaractiveActionNotFound.#ctor(System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.ResourceNotFoundException">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.ResourceNotFoundException.#ctor(System.String,System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.DocumentInfo">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.DocumentInfo.DocumentReady">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.DocumentInfo.PageCount">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.DocumentInfo.BookmarkNodes">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.DocumentInfo.DocumentMapAvailable">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.DocumentInfo.DocumentMapNodes">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.PageData">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.PageData.PageReady">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.PageData.PageNumber">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.PageData.PageContent">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.PageData.PageStyles">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.PageData.PageActions">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.PageData.PageLayout">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.BookmarkNode">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.BookmarkNode.#ctor">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.BookmarkNode.ToString">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.BookmarkNode.Items">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.BookmarkNode.Text">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.BookmarkNode.Id">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.BookmarkNode.Page">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.BookmarkNode.X">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.BookmarkNode.Y">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.BookmarkNode.Telerik#Reporting#Processing#IBookmarkNode#BookmarkNodes">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.RenderingResource">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.RenderingResource.Name">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.RenderingResource.Extension">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.RenderingResource.MimeType">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.RenderingResource.Bytes">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.RenderingResource.Info">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.DocumentData">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Services.Engine.DocumentData.Bytes">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Services.Engine.DocumentData.MimeType">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Services.Engine.DocumentData.Extension">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Services.Engine.DocumentData.HasError">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Services.Engine.DocumentData.ErrorMessage">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Services.Engine.DocumentData.DocumentName">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.ClientSearchableItem">
            <summary>
            Telerik internal use only
            Lightweight class for retrieving the search results
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.ClientSearchableItem.Id">
            <summary>
            The Id associated with the DOM element in the HTML markup
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.ClientSearchableItem.Description">
            <summary>
            Textual description for displaying in the search dialog
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.ClientSearchableItem.Page">
            <summary>
            Page number
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.SearchArgs">
            <summary>
            Represents the arguments passed to the GetSearchResults method of the <see cref="T:Telerik.Reporting.Services.Engine.IReportEngine"/>
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.SearchArgs.SearchToken">
            <summary>
            The token used to perform the search
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.SearchArgs.MatchCase">
            <summary>
            Determines if the search is case-sensitive
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.SearchArgs.MatchWholeWord">
            <summary>
            Determines if the search should respect whole words only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.SearchArgs.UseRegularExpressions">
            <summary>
            Determines if the search token represents a regular expression
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.IReportServiceConfigurationExtensions">
            <summary>
            Provides static (Shared in Visual Basic) extension methods for objects that implement the <see cref="T:Telerik.Reporting.Services.IReportServiceConfiguration"/> interface.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.IReportServiceConfigurationExtensions.Validate(Telerik.Reporting.Services.IReportServiceConfiguration)">
            <summary>
            Validates an object representing a report service configuration.
            </summary>
            <param name="configuration">The object that should be validated.</param>
            <remarks>
            This method is used internally from the report service.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.IThreadContext">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.IThreadContext.Apply">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.CreateDocumentEventArgs">
            <summary>
            Provides data for the GetDocument API call modification.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.CreateDocumentEventArgs.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.CreateDocumentEventArgs.Extension">
            <summary>
            The document extension
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Services.CreateDocumentEventArgs.DeviceInfo">
            <summary>
            The device info
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.ReportEngine.RenderReportDocument(System.String)">
            <summary>
            Called from the worker threads.
            </summary>
            <param name="pendingRenderingId"></param>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.ReportEngine.ParameterValueParser">
            <summary>
            If specified will be used to parse each parameter value before using.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.ReportEngineFactory">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.ReportEngineFactory.CreateReportEngine(Telerik.Reporting.Services.IReportServiceConfiguration)">
            <summary>
            Telerik internal use only
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.ResourcesEngine">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.StorageFactory">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.StorageFactory.CreateStorage(Telerik.Reporting.Cache.Interfaces.ICache)">
            <summary>
            Telerik internal use only.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.TaskQueue">
            <summary>
            Represents a thread-safe (synchronized) in-memory generic Queue that automatically processes
            the contained items using a user-supplied delegate. Note that while traditional use of the 
            Queue (using Enqueue and Dequeue) will behave as expected, using more than one thread for
            processing removes any guarantee of the order in which queued items are processed.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.TaskQueue.#ctor">
            <summary>
            Initializes a new ProcessQueue that is empty and has the default capacity and the specified 
            number of worker threads.
            </summary>
            <param name="operation">The action to take on queued items.</param>
            <param name="threadCount">The number of worker threads to create.</param>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.TaskQueue.Stop">
            <summary>
            Stops (suspends) automatic processing of queued items.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.TaskQueue.Start">
            <summary>
            Starts automatic processing of queued items.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.TaskQueue.SetThreadCount(System.Int32)">
            <summary>
            Sets the number of worker threads in use by this ProcessQueue, and allocates or deallocates threads 
            as necessary.
            </summary>
            <param name="threadCount">The number of threads to use for this ProcessQueue</param>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.TaskQueue.TryDequeue(System.String@)">
            <summary>
            Attempts to retrieve the next item from the ProcessQueue if one exists. If one does not exist, value is set to its default value.
            </summary>
            <param name="value">The container for the next value in the ProcessQueue. If none exists, this variable will be set to its default.</param>
            <returns>True if the ProcessQueue contained an item, False if it did not.</returns>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.TaskQueue.Enqueue(System.String)">
            <summary>
            Adds an item to the end of the processing queue.
            </summary>
            <param name="item">The item to add</param>
        </member>
        <member name="P:Telerik.Reporting.Services.Engine.TaskQueue.ThreadCount">
            <summary>
            Gets the number of worker threads in use by this ProcessQueue. Use SetThreadCount to change this value.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.TaskQueue.WorkerThread">
            <summary>
            Encapsulates a .NET Thread object and manages the WaitHandles associated with controlling its behavior
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.TaskQueue.WorkerThread.Pause">
            <summary>
            Clears the signaling WaitHandle, causing the thread to pause after completing its current
            iteration
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.TaskQueue.WorkerThread.Signal">
            <summary>
            Sets the signaling WaitHandle, causing it to resume operation (if paused)
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Services.Engine.TaskQueue.WorkerThread.ThreadProc">
            <summary>
            The overall thread method, consisting of an infinite loop that exits upon signaling the abort event
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Services.Engine.Utils">
            <summary>
            Internal use only
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SQLite.Async.SQLiteConnectionPool.Reset">
            <summary>
            Closes all connections managed by this pool.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SQLite.Async.SQLiteConnectionPool.ApplicationSuspended">
            <summary>
            Call this method when the application is suspended.
            </summary>
            <remarks>Behaviour here is to close any open connections.</remarks>
        </member>
        <member name="P:Telerik.Reporting.SQLite.Async.SQLiteConnectionPool.Shared">
            <summary>
            Gets the singleton instance of the connection tool.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.SQLite.SQLiteConnection">
            <summary>
            Represents an open connection to a SQLite database.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.SQLite.SQLiteConnection.preserveDuringLinkMagic">
            <summary>
            Used to list some code that we want the MonoTouch linker
            to see, but that we never want to actually execute.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.#ctor(System.String,System.Boolean)">
            <summary>
            Constructs a new SQLiteConnection and opens a SQLite database specified by databasePath.
            </summary>
            <param name="databasePath">
            Specifies the path to the database file.
            </param>
            <param name="storeDateTimeAsTicks">
            Specifies whether to store DateTime properties as ticks (true) or strings (false). You
            absolutely do want to store them as Ticks in all new projects. The default of false is
            only here for backwards compatibility. There is a *significant* speed advantage, with no
            down sides, when setting storeDateTimeAsTicks = true.
            </param>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.#ctor(System.String,Telerik.Reporting.SQLite.SQLiteOpenFlags,System.Boolean)">
            <summary>
            Constructs a new SQLiteConnection and opens a SQLite database specified by databasePath.
            </summary>
            <param name="databasePath">
            Specifies the path to the database file.
            </param>
            <param name="openFlags"></param>
            <param name="storeDateTimeAsTicks">
            Specifies whether to store DateTime properties as ticks (true) or strings (false). You
            absolutely do want to store them as Ticks in all new projects. The default of false is
            only here for backwards compatibility. There is a *significant* speed advantage, with no
            down sides, when setting storeDateTimeAsTicks = true.
            </param>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.GetMapping(System.Type,Telerik.Reporting.SQLite.CreateFlags)">
            <summary>
            Retrieves the mapping that is automatically generated for the given type.
            </summary>
            <param name="type">
            The type whose mapping to the database is returned.
            </param>         
            <param name="createFlags">
            Optional flags allowing implicit PK and indexes based on naming conventions
            </param>     
            <returns>
            The mapping represents the schema of the columns of the database and contains 
            methods to set and get properties of objects.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.GetMapping``1">
            <summary>
            Retrieves the mapping that is automatically generated for the given type.
            </summary>
            <returns>
            The mapping represents the schema of the columns of the database and contains 
            methods to set and get properties of objects.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.DropTable``1">
            <summary>
            Executes a "drop table" on the database.  This is non-recoverable.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.CreateTable``1(Telerik.Reporting.SQLite.CreateFlags)">
            <summary>
            Executes a "create table if not exists" on the database. It also
            creates any specified indexes on the columns of the table. It uses
            a schema automatically generated from the specified type. You can
            later access this schema by calling GetMapping.
            </summary>
            <returns>
            The number of entries added to the database schema.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.CreateTable(System.Type,Telerik.Reporting.SQLite.CreateFlags)">
            <summary>
            Executes a "create table if not exists" on the database. It also
            creates any specified indexes on the columns of the table. It uses
            a schema automatically generated from the specified type. You can
            later access this schema by calling GetMapping.
            </summary>
            <param name="ty">Type to reflect to a database table.</param>
            <param name="createFlags">Optional flags allowing implicit PK and indexes based on naming conventions.</param>  
            <returns>
            The number of entries added to the database schema.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.CreateIndex(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates an index for the specified table and column.
            </summary>
            <param name="indexName">Name of the index to create</param>
            <param name="tableName">Name of the database table</param>
            <param name="columnName">Name of the column to index</param>
            <param name="unique">Whether the index should be unique</param>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.CreateIndex(System.String,System.String,System.Boolean)">
            <summary>
            Creates an index for the specified table and column.
            </summary>
            <param name="tableName">Name of the database table</param>
            <param name="columnName">Name of the column to index</param>
            <param name="unique">Whether the index should be unique</param>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.CreateIndex``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean)">
            <summary>
            Creates an index for the specified object property.
            e.g. CreateIndex&lt;Client&gt;(c => c.Name);
            </summary>
            <typeparam name="T">Type to reflect to a database table.</typeparam>
            <param name="property">Property to index</param>
            <param name="unique">Whether the index should be unique</param>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.NewCommand">
            <summary>
            Creates a new SQLiteCommand. Can be overridden to provide a sub-class.
            </summary>
            <seealso cref="M:Telerik.Reporting.SQLite.SQLiteCommand.OnInstanceCreated(System.Object)"/>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.CreateCommand(System.String,System.Object[])">
            <summary>
            Creates a new SQLiteCommand given the command text with arguments. Place a '?'
            in the command text for each of the arguments.
            </summary>
            <param name="cmdText">
            The fully escaped SQL.
            </param>
            <param name="args">
            Arguments to substitute for the occurences of '?' in the command text.
            </param>
            <returns>
            A <see cref="T:Telerik.Reporting.SQLite.SQLiteCommand"/>
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Execute(System.String,System.Object[])">
            <summary>
            Creates a SQLiteCommand given the command text (SQL) with arguments. Place a '?'
            in the command text for each of the arguments and then executes that command.
            Use this method instead of Query when you don't expect rows back. Such cases include
            INSERTs, UPDATEs, and DELETEs.
            You can set the Trace or TimeExecution properties of the connection
            to profile execution.
            </summary>
            <param name="query">
            The fully escaped SQL.
            </param>
            <param name="args">
            Arguments to substitute for the occurences of '?' in the query.
            </param>
            <returns>
            The number of rows modified in the database as a result of this execution.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Query``1(System.String,System.Object[])">
            <summary>
            Creates a SQLiteCommand given the command text (SQL) with arguments. Place a '?'
            in the command text for each of the arguments and then executes that command.
            It returns each row of the result using the mapping automatically generated for
            the given type.
            </summary>
            <param name="query">
            The fully escaped SQL.
            </param>
            <param name="args">
            Arguments to substitute for the occurences of '?' in the query.
            </param>
            <returns>
            An enumerable with one result for each row returned by the query.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.DeferredQuery``1(System.String,System.Object[])">
            <summary>
            Creates a SQLiteCommand given the command text (SQL) with arguments. Place a '?'
            in the command text for each of the arguments and then executes that command.
            It returns each row of the result using the mapping automatically generated for
            the given type.
            </summary>
            <param name="query">
            The fully escaped SQL.
            </param>
            <param name="args">
            Arguments to substitute for the occurences of '?' in the query.
            </param>
            <returns>
            An enumerable with one result for each row returned by the query.
            The enumerator will call sqlite3_step on each call to MoveNext, so the database
            connection must remain open for the lifetime of the enumerator.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Query(Telerik.Reporting.SQLite.TableMapping,System.String,System.Object[])">
            <summary>
            Creates a SQLiteCommand given the command text (SQL) with arguments. Place a '?'
            in the command text for each of the arguments and then executes that command.
            It returns each row of the result using the specified mapping. This function is
            only used by libraries in order to query the database via introspection. It is
            normally not used.
            </summary>
            <param name="map">
            A <see cref="T:Telerik.Reporting.SQLite.TableMapping"/> to use to convert the resulting rows
            into objects.
            </param>
            <param name="query">
            The fully escaped SQL.
            </param>
            <param name="args">
            Arguments to substitute for the occurences of '?' in the query.
            </param>
            <returns>
            An enumerable with one result for each row returned by the query.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.DeferredQuery(Telerik.Reporting.SQLite.TableMapping,System.String,System.Object[])">
            <summary>
            Creates a SQLiteCommand given the command text (SQL) with arguments. Place a '?'
            in the command text for each of the arguments and then executes that command.
            It returns each row of the result using the specified mapping. This function is
            only used by libraries in order to query the database via introspection. It is
            normally not used.
            </summary>
            <param name="map">
            A <see cref="T:Telerik.Reporting.SQLite.TableMapping"/> to use to convert the resulting rows
            into objects.
            </param>
            <param name="query">
            The fully escaped SQL.
            </param>
            <param name="args">
            Arguments to substitute for the occurences of '?' in the query.
            </param>
            <returns>
            An enumerable with one result for each row returned by the query.
            The enumerator will call sqlite3_step on each call to MoveNext, so the database
            connection must remain open for the lifetime of the enumerator.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Table``1">
            <summary>
            Returns a queryable interface to the table represented by the given type.
            </summary>
            <returns>
            A queryable object that is able to translate Where, OrderBy, and Take
            queries into native SQL.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Get``1(System.Object)">
            <summary>
            Attempts to retrieve an object with the given primary key from the table
            associated with the specified type. Use of this method requires that
            the given type have a designated PrimaryKey (using the PrimaryKeyAttribute).
            </summary>
            <param name="pk">
            The primary key.
            </param>
            <returns>
            The object with the given primary key. Throws a not found exception
            if the object is not found.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Get``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Attempts to retrieve the first object that matches the predicate from the table
            associated with the specified type. 
            </summary>
            <param name="predicate">
            A predicate for which object to find.
            </param>
            <returns>
            The object that matches the given predicate. Throws a not found exception
            if the object is not found.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Find``1(System.Object)">
            <summary>
            Attempts to retrieve an object with the given primary key from the table
            associated with the specified type. Use of this method requires that
            the given type have a designated PrimaryKey (using the PrimaryKeyAttribute).
            </summary>
            <param name="pk">
            The primary key.
            </param>
            <returns>
            The object with the given primary key or null
            if the object is not found.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Find(System.Object,Telerik.Reporting.SQLite.TableMapping)">
            <summary>
            Attempts to retrieve an object with the given primary key from the table
            associated with the specified type. Use of this method requires that
            the given type have a designated PrimaryKey (using the PrimaryKeyAttribute).
            </summary>
            <param name="pk">
            The primary key.
            </param>
            <param name="map">
            The TableMapping used to identify the object type.
            </param>
            <returns>
            The object with the given primary key or null
            if the object is not found.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Find``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            Attempts to retrieve the first object that matches the predicate from the table
            associated with the specified type. 
            </summary>
            <param name="predicate">
            A predicate for which object to find.
            </param>
            <returns>
            The object that matches the given predicate or null
            if the object is not found.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.BeginTransaction">
            <summary>
            Begins a new transaction. Call <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.Commit"/> to end the transaction.
            </summary>
            <example cref="T:System.InvalidOperationException">Throws if a transaction has already begun.</example>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.SaveTransactionPoint">
            <summary>
            Creates a savepoint in the database at the current point in the transaction timeline.
            Begins a new transaction if one is not in progress.
            
            Call <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.RollbackTo(System.String)"/> to undo transactions since the returned savepoint.
            Call <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.Release(System.String)"/> to commit transactions after the savepoint returned here.
            Call <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.Commit"/> to end the transaction, committing all changes.
            </summary>
            <returns>A string naming the savepoint.</returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Rollback">
            <summary>
            Rolls back the transaction that was begun by <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.BeginTransaction"/> or <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.SaveTransactionPoint"/>.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.RollbackTo(System.String)">
            <summary>
            Rolls back the savepoint created by <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.BeginTransaction"/> or SaveTransactionPoint.
            </summary>
            <param name="savepoint">The name of the savepoint to roll back to, as returned by <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.SaveTransactionPoint"/>.  If savepoint is null or empty, this method is equivalent to a call to <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.Rollback"/></param>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.RollbackTo(System.String,System.Boolean)">
            <summary>
            Rolls back the transaction that was begun by <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.BeginTransaction"/>.
            </summary>
            <param name="savepoint"></param>
            <param name="noThrow">true to avoid throwing exceptions, false otherwise</param>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Release(System.String)">
            <summary>
            Releases a savepoint returned from <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.SaveTransactionPoint"/>.  Releasing a savepoint 
               makes changes since that savepoint permanent if the savepoint began the transaction,
               or otherwise the changes are permanent pending a call to <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.Commit"/>.
            
            The RELEASE command is like a COMMIT for a SAVEPOINT.
            </summary>
            <param name="savepoint">The name of the savepoint to release.  The string should be the result of a call to <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.SaveTransactionPoint"/></param>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Commit">
            <summary>
            Commits the transaction that was begun by <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.BeginTransaction"/>.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.RunInTransaction(System.Action)">
            <summary>
            Executes <paramref name="action"/> within a (possibly nested) transaction by wrapping it in a SAVEPOINT. If an
            exception occurs the whole transaction is rolled back, not just the current savepoint. The exception
            is rethrown.
            </summary>
            <param name="action">The <see cref="T:System.Action"/> to perform within a transaction. <paramref name="action"/> can contain any number
            of operations on the connection but should never call <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.BeginTransaction"/> or
            <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.Commit"/>.
            </param>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.InsertAll(System.Collections.IEnumerable)">
            <summary>
            Inserts all specified objects.
            </summary>
            <param name="objects">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of the objects to insert.
            </param>
            <returns>
            The number of rows added to the table.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.InsertAll(System.Collections.IEnumerable,System.String)">
            <summary>
            Inserts all specified objects.
            </summary>
            <param name="objects">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of the objects to insert.
            </param>
            <param name="extra">
            Literal SQL code that gets placed into the command. INSERT {extra} INTO ...
            </param>
            <returns>
            The number of rows added to the table.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.InsertAll(System.Collections.IEnumerable,System.Type)">
            <summary>
            Inserts all specified objects.
            </summary>
            <param name="objects">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of the objects to insert.
            </param>
            <param name="objType">
            The type of object to insert.
            </param>
            <returns>
            The number of rows added to the table.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Insert(System.Object)">
            <summary>
            Inserts the given object and retrieves its
            auto incremented primary key if it has one.
            </summary>
            <param name="obj">
            The object to insert.
            </param>
            <returns>
            The number of rows added to the table.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.InsertOrReplace(System.Object)">
            <summary>
            Inserts the given object and retrieves its
            auto incremented primary key if it has one.
            If a UNIQUE constraint violation occurs with
            some pre-existing object, this function deletes
            the old object.
            </summary>
            <param name="obj">
            The object to insert.
            </param>
            <returns>
            The number of rows modified.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.InsertOrIgnore(System.Object)">
            <summary>
            Inserts the given object and retrieves its
            auto incremented primary key if it has one.
            If a UNIQUE constraint violation occurs with
            some pre-existing object, this function does nothing.
            </summary>
            <param name="obj">
            The object to insert.
            </param>
            <returns>
            The number of rows added.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Insert(System.Object,System.Type)">
            <summary>
            Inserts the given object and retrieves its
            auto incremented primary key if it has one.
            </summary>
            <param name="obj">
            The object to insert.
            </param>
            <param name="objType">
            The type of object to insert.
            </param>
            <returns>
            The number of rows added to the table.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.InsertOrReplace(System.Object,System.Type)">
            <summary>
            Inserts the given object and retrieves its
            auto incremented primary key if it has one.
            If a UNIQUE constraint violation occurs with
            some pre-existing object, this function deletes
            the old object.
            </summary>
            <param name="obj">
            The object to insert.
            </param>
            <param name="objType">
            The type of object to insert.
            </param>
            <returns>
            The number of rows modified.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Insert(System.Object,System.String)">
            <summary>
            Inserts the given object and retrieves its
            auto incremented primary key if it has one.
            </summary>
            <param name="obj">
            The object to insert.
            </param>
            <param name="extra">
            Literal SQL code that gets placed into the command. INSERT {extra} INTO ...
            </param>
            <returns>
            The number of rows added to the table.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Insert(System.Object,System.String,System.Type)">
            <summary>
            Inserts the given object and retrieves its
            auto incremented primary key if it has one.
            </summary>
            <param name="obj">
            The object to insert.
            </param>
            <param name="extra">
            Literal SQL code that gets placed into the command. INSERT {extra} INTO ...
            </param>
            <param name="objType">
            The type of object to insert.
            </param>
            <returns>
            The number of rows added to the table.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Update(System.Object)">
            <summary>
            Updates all of the columns of a table using the specified object
            except for its primary key.
            The object is required to have a primary key.
            </summary>
            <param name="obj">
            The object to update. It must have a primary key designated using the PrimaryKeyAttribute.
            </param>
            <returns>
            The number of rows updated.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Update(System.Object,System.Type)">
            <summary>
            Updates all of the columns of a table using the specified object
            except for its primary key.
            The object is required to have a primary key.
            </summary>
            <param name="obj">
            The object to update. It must have a primary key designated using the PrimaryKeyAttribute.
            </param>
            <param name="objType">
            The type of object to insert.
            </param>
            <returns>
            The number of rows updated.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.UpdateAll(System.Collections.IEnumerable)">
            <summary>
            Updates all specified objects.
            </summary>
            <param name="objects">
            An <see cref="T:System.Collections.Generic.IEnumerable`1"/> of the objects to insert.
            </param>
            <returns>
            The number of rows modified.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Delete(System.Object)">
            <summary>
            Deletes the given object from the database using its primary key.
            </summary>
            <param name="objectToDelete">
            The object to delete. It must have a primary key designated using the PrimaryKeyAttribute.
            </param>
            <returns>
            The number of rows deleted.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.Delete``1(System.Object)">
            <summary>
            Deletes the object with the specified primary key.
            </summary>
            <param name="primaryKey">
            The primary key of the object to delete.
            </param>
            <returns>
            The number of objects deleted.
            </returns>
            <typeparam name='T'>
            The type of object.
            </typeparam>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteConnection.DeleteAll``1">
            <summary>
            Deletes all the objects from the specified table.
            WARNING WARNING: Let me repeat. It deletes ALL the objects from the
            specified table. Do you really want to do that?
            </summary>
            <returns>
            The number of objects deleted.
            </returns>
            <typeparam name='T'>
            The type of objects to delete.
            </typeparam>
        </member>
        <member name="P:Telerik.Reporting.SQLite.SQLiteConnection.BusyTimeout">
            <summary>
            Sets a busy handler to sleep the specified amount of time when a table is locked.
            The handler will sleep multiple times until a total time of <see cref="P:Telerik.Reporting.SQLite.SQLiteConnection.BusyTimeout"/> has accumulated.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.SQLite.SQLiteConnection.TableMappings">
            <summary>
            Returns the mappings from types to tables that the connection
            currently understands.
            </summary>
        </member>
        <member name="P:Telerik.Reporting.SQLite.SQLiteConnection.IsInTransaction">
            <summary>
            Whether <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.BeginTransaction"/> has been called and the database is waiting for a <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.Commit"/>.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.SQLite.IDataReader">
            <summary>
            See tests.
            </summary>
            <example>
            using (var r = cmd.ExecuteReader(map))
            {
               while (r.Read())
               {
                   object value;
                   if (r.TryGetValue("col1", out value))
                   {
                       // use value
                   }
               }
            }
            </example>
        </member>
        <member name="M:Telerik.Reporting.SQLite.IDataReader.Read">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.SQLite.IDataReader.TryGetValue(System.String,System.Object@)">
            <summary>
            Reads a value from the current record.
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.SQLite.PreparedSqlLiteInsertCommand">
            <summary>
            Since the insert never changed, we only need to prepare once.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SQLite.SQLiteCommand.OnInstanceCreated(System.Object)">
             <summary>
             Invoked every time an instance is loaded from the database.
             </summary>
             <param name="obj">
             The newly created object.
             </param>
             <remarks>
             This can be overridden in combination with the <see cref="M:Telerik.Reporting.SQLite.SQLiteConnection.NewCommand"/>
             method to hook into the life-cycle of objects.
            
             Type safety is not possible because MonoTouch does not support virtual generic methods.
             </remarks>
        </member>
        <member name="T:Telerik.Reporting.SQLite.SQLiteConnectionString">
            <summary>
            Represents a parsed connection string.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.SQLite.TableQuery`1.CompileNullBinaryExpression(System.Linq.Expressions.BinaryExpression,Telerik.Reporting.SQLite.TableQuery{`0}.CompileResult)">
            <summary>
            Compiles a BinaryExpression where one of the parameters is null.
            </summary>
            <param name="expression"></param>
            <param name="parameter">The non-null parameter</param>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.ShowMessage(System.String,System.String,System.Int32)">
            <summary>
            Method's argument and return type are set to int to avoid referencing Windows.Forms namespace.
            </summary>
            <param name="text"></param>
            <param name="caption"></param>
            <param name="buttons">(int)MessageBoxButtons</param>
            <returns>(int)DialogResult</returns>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.InitBodyRowsColumns(Telerik.Reporting.TableBody,System.Int32,System.Int32,Telerik.Reporting.Drawing.SizeU,System.Collections.Generic.IList{Telerik.Reporting.Drawing.Unit}@,System.Collections.Generic.IList{Telerik.Reporting.Drawing.Unit}@)">
            <summary>
            Calculates the size of the rows and columns of the Body based on the 
            Body's Rows/Columns or the size of the report items inside of the Body.
            </summary>
            <param name="body">The Body of the table to process</param>
            <param name="rowCount">
            The number of the rows according to the number of the leaf row groups.
            </param>
            <param name="columnCount">
            The number of the columns according to the number of the leaf column groups.
            </param>
            <param name="defaultSize">
            The default size is applied to rows/columns 
            which size cannot be calculated (ex. cells have span, etc.)
            </param>
            <param name="bodyRows">Output list that contains the dimensions of the rows.</param>
            <param name="bodyColumns">Output list that contains the dimensions of the columns.</param>
            <returns>
            True if the body's rows/columns need to be updated; otherwise False.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.UpdateTableAndContentSize">
            <summary>
            Calculates the total table size and the related row/col sizes
            </summary>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.LayoutContent">
            <summary>
            Calculates the size of the rows/columns based on their table ratios
            and updates the cell bounds.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.DeleteColumnGroup(System.Boolean,System.Boolean)">
            <summary>
            Deletes the first selected column group.
            </summary>
            <param name="silent">
            FALSE to ask if to delete the group and the related rows/column as well;
            TRUE to use the value of the <paramref name="deleteRelated"/> parameter.
            </param>
            <param name="deleteRelated">
            TRUE to delete the related rows/colums as well; otherwise FALSE.
            </param>
            <returns>
            TRUE if any group was deleted; otherwise FALSE.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.DeleteRowGroup(System.Boolean,System.Boolean)">
            <summary>
            Deletes the first selected row group.
            </summary>
            <param name="silent">
            FALSE to ask if to delete the group and the related rows/column as well;
            TRUE to use the value of the <paramref name="deleteRelated"/> parameter.
            </param>
            <param name="deleteRelated">
            TRUE to delete the related rows/colums as well; otherwise FALSE.
            </param>
            <returns>
            TRUE if any group was deleted; otherwise FALSE.
            </returns>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.GetHeaderLabelItem(System.Int32,System.Int32)">
            <summary>
            Returns the report item suitable for a header label of the given cell; otherwise returns null.
            Used by SetHeaderLabelText and for test purposes.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.DeleteCellsAtRow(Telerik.Reporting.TableCellContainer,System.Int32)">
            <remarks>
            If deleting 2+ rows, always do this from the bottom to the top rows. (reverse iteration)
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.DeleteCellsAtColumn(Telerik.Reporting.TableCellContainer,System.Int32)">
            <remarks>
            If deleting 2+ columns, always do this from the right to the left columns. (reverse iteration)
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.DeleteColumns(System.Boolean,System.Boolean)">
            <summary>
            DELETE RELATED GROUPS argument is respected only if SILENT
            </summary>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.DeleteRows(System.Boolean,System.Boolean)">
            <summary>
            Deletes the currently selected rows.
            </summary>
            <param name="silent">
            FALSE - ask (shows UI) if to delete the related dynamic groups; 
            TRUE - not to ask and perform accordingly to the <paramref name="deleteRelatedGroups"/> parameter.</param>
            <param name="deleteRelatedGroups">
            TRUE to delete the related dynamic groups; otherwise FALSE. This parameter
            takes effect only of the <paramref name="silent"/> parameter is TRUE.
            </param>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.IsCellSelected(Telerik.Reporting.TableLayout.Cell)">
            <summary>
            Determines whether the current cell is selected.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.SelectSingleCell(System.Int32,System.Int32,Telerik.Reporting.SelectionMode)">
            <remarks>
            Call this method always from outside the TableLayout class.
            Otherwise always use the SelectCellsInternal() method.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.SetSelectedCells(System.Collections.Generic.IList{Telerik.Reporting.TableLayout.Cell})">
            <remarks>
            Call this method always from outside the TableLayout class.
            Otherwise always use the SelectCellsInternal() method.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.GetSingleSelectedDynamicColumnGroup">
            <summary>
            Returns the single selected dynamic column table group;
            Returns NULL if only static column groups or 2+ different cols 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.GetSingleSelectedDynamicRowGroup">
            <summary>
            Returns the single selected dynamic row table group;
            Returns NULL if only static row groups 
            or 2+ different dynamic row groups are selected at once
            </summary>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.GetFirstDynamicAncestor(Telerik.Reporting.TableLayout.Cell,System.Boolean)">
            <summary>
            Walks up the hierarchy and returns the 1st met dynamic ancestor.
            </summary>
            <param name="columnGroupHierarchy">TRUE - looks in the column group hierarchy; otherwise - looks in the row group hierarchy</param>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.TableMember.GetMinSize">
            <summary>
            Returns the min size that the member may be shrinked to
            if the whole table is shrinked. 
            </summary>
        </member>
        <member name="M:Telerik.Reporting.TableLayout.TableMember.GetMinSizeNotRelative">
            <summary>
            Returns the min size that the member may be shrinked to
            if only this row is shrinked. 
            </summary>
        </member>
        <member name="P:Telerik.Reporting.TableLayout.TableMember.Size">
            <remarks>
            Setting the member's Size will change the Table's size as well.
            </remarks>
        </member>
        <member name="P:Telerik.Reporting.TableLayout.TableMember.TableRatio">
            <summary>
            Indicates what portion of the whole table size is this member
            (member size / table size)
            </summary>
        </member>
        <member name="M:Telerik.Reporting.UIHelper.Allow(System.String,System.String)">
            <summary>
            Determines if a ShowMessage dialog is answered with OK or Cancel. True = OK.
            </summary>
            <param name="text"></param>
            <param name="caption"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.UIHelper.ShowMessage(System.String,System.String,System.Int32)">
            <summary>
            Displays a ShowMessage dialog and returns the DialogResult as int to be used in .Core
            </summary>
            <param name="text"></param>
            <param name="caption"></param>
            <param name="buttons">MessageBoxButtons enum member as int</param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.Utils.DataDirectDrivers.DriverDescriptor">
            <summary>
            Class, describing the files to be copied and registered. Includes x64 and x86 distribution sets and some additional files.
            The aliases are prefixed with R0/R6 and suffixed with the current driver version.
            Based on DataDirect file list description here: http://media.datadirect.com/download/docs/odbc64/readme/winread.htm
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Utils.DataDirectDrivers.DriverDescriptor.DriverNameMapX64">
            <summary>
            The drivers list for 64-bit distribution
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Utils.DataDirectDrivers.DriverDescriptor.DriverNameMapX86">
            <summary>
            The drivers list for 32-bit distribution (includes all the names in 64-bit distribution)
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Utils.DataDirectDrivers.DriverDescriptor.LinkedDriverFiles">
            <summary>
            Linked files that must be copied if the key driver is installed.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Utils.DataDirectDrivers.DriverDescriptor.AdditionalDriverFiles">
            <summary>
            Additional files are always copied to the target directory. Some of them might need prefix.
            </summary>
        </member>
        <member name="F:Telerik.Reporting.Utils.DataDirectDrivers.DriverDescriptor.RootLegalFiles">
            <summary>
            Mandatory legal files, placed in root directory
            http://media.datadirect.com/download/docs/odbc/distgde/index.html#page/distguide%2Ffiles-you-must-distribute-for-all-drivers.html%23
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Utils.DataDirectDrivers.CopyToAnotherTargetAction">
            <summary>
            Action used when a file must be copied to another location different from TargetDir
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Utils.DataDirectDrivers.CopyToAnotherTargetAction.CopyMode">
            <summary>
            Determines if the file must be copied or moved to the other location
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Utils.DataDirectDrivers.DriverRegEntryBase.RootDirectory">
            <summary>
            Returns the Root directory, assuming that ALL drivers are using the root\platform\drivername.dll pattern (as it is in documentation)
            </summary>
        </member>
        <member name="P:Telerik.Reporting.Utils.DataDirectDrivers.ImpalaWireProtocolDriverRegEntry.SqlLevelOverride">
            <summary>
            This value is "0" according to the documentation, but in the Registry the Progress Installer sets "1".
            </summary>
        </member>
        <member name="M:Telerik.Reporting.Utils.DataDirectDrivers.OdbcDriversUnblocker.Unblock(System.Data.IDbConnection)">
            <summary>
            Extension method for unblocking OdbcConnection
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Telerik.Reporting.Utils.DataDirectDrivers.OdbcDriversUnblocker.IsBrandedOdbcDriverUsed(System.Data.Odbc.OdbcConnection,System.String@)">
            <summary>
            Checks if the driver starts with R0/R6, contains current DRIVER_VERSION and it's a known driver name, registered in DriverDescriptor
            </summary>
            <param name="connection"></param>
            <param name="prefix"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Utils.DataDirectDrivers.OdbcDriversUnblocker.UnblockConnection(System.Data.Odbc.OdbcConnection,System.String)">
            <summary>
            Uses reflection to find and call the method OdbcConnectionHandle.SetConnectionAttribute3, which calls the ODBC32 SQLSetConnectAttrW method.
            OdbcConnectionHandle class is internal and cannot be used directly.
            </summary>
            <param name="connection"></param>
        </member>
        <member name="M:Telerik.Reporting.Utils.EnumHelper.GetAttributeOfType``1(System.Enum)">
            <summary>
            Gets the first attribute occurrence of particular attribute type.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumVal">The enum value.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Reporting.Utils.ImageUtils.MimeTypeFromImageFormat(System.Drawing.Imaging.ImageFormat)">
            <summary>
            For info please see http://www.w3schools.com/media/media_mimeref.asp
            </summary>
        </member>
        <member name="T:Telerik.Reporting.Writing.AccessibleImageAdornerActionWriter">
            <summary>
            Returns the bounds of the whole item, associated with the action, as adorner bounds.
            </summary>
        </member>
        <member name="T:Telerik.Reporting.XamlRendering.DocumentModel.XmlWriting.AccessibilityElementAttributeWriter">
            <summary>
            Class that appends accessibility attributes to an existing element
            </summary>
        </member>
        <member name="M:Telerik.Reporting.XamlRendering.DocumentWriting.IElementWriter.WriteContent(Telerik.Reporting.Processing.LayoutElement,Telerik.Reporting.Paging.ElementPageInfo,System.Boolean)">
            <summary>
            Writes the content of an XAML element
            </summary>
            <param name="element">The element whose contents will be written</param>
            <param name="pageInfo">Element disposition (bounds, clip, etc.) onto the page</param>
            <param name="isOverlapped">Determines if the element contents will be overlapped
            in a subsequent method so no interactivity markup should be rendered
            <example>
            When rendering item with assigned action and tooltip, the action element 
            will overlap its parent element bounds and the tooltip have to be rendered 
            in WriteAction() method
            </example>
            </param>
        </member>
        <member name="M:Telerik.Reporting.XamlRendering.DocumentWriting.TextLineWriter.IsValidSearchableItem(Telerik.Reporting.Processing.TextItemBase)">
            <summary>
            Search description should be returned only for checkbox or textboxes with angle != 0.
            </summary>
            <param name="textItem"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Reporting.ReportPackager">
            <summary>
            Packages and unpackages report documents in TRDP format. This is a zipped, XML-based file
            format for representing report documents. Starting with Telerik Reporting Q2 2016, the TRDP have
            become the default target file format for Telerik Report Designer and Telerik Report Server.
            </summary>
            <example>
            The following example demonstrates how to package a report definition instance:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\ReportPackagerSnippets.cs" region="CreatePackageFromClrReportSnippet" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\ReportPackagerSnippets.vb" region="CreatePackageFromClrReportSnippet" />
            The following example demonstrates how to package a XML report definition:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\ReportPackagerSnippets.cs" region="CreatePackageFromXmlReportSnippet" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\ReportPackagerSnippets.vb" region="CreatePackageFromXmlReportSnippet" />
            The following example demonstrates how to unpackage a .TRDP report definition:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\ReportPackagerSnippets.cs" region="UnpackageTrdpSnippet" />
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\ReportPackagerSnippets.vb" region="UnpackageTrdpSnippet" />
            </example>
        </member>
        <member name="M:Telerik.Reporting.ReportPackager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.ReportPackager"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.ReportPackager.Package(Telerik.Reporting.IReportDocument,System.IO.Stream)">
            <summary>
            Packages the specified report instance and writes 
            the package to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="report">The <see cref="T:Telerik.Reporting.Report"/> object to package.</param>
            <param name="targetStream">The target stream to write the packaged document.</param>
            <remarks>
            Use the <i>targetStream</i> parameter to specify an object that derives from the <see cref="T:System.IO.Stream"/> class,
            which is designed to write to streams. Classes that derive from the <see cref="T:System.IO.Stream"/> class include: 
            <see cref="T:System.IO.BufferedStream"/>, <see cref="T:System.IO.FileStream"/>, <see cref="T:System.IO.MemoryStream"/>, etc.
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Telerik.Reporting.ReportPackager.Package(System.String,System.IO.Stream)" -->
        <member name="M:Telerik.Reporting.ReportPackager.Unpackage(System.IO.Stream)">
            <summary>
            Unpackages the TRDP document contained by the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="packageStream">The stream that contains the package to unpackage.</param>
            <returns>The <see cref="N:Telerik.Reporting"/> object being deserialized.</returns>
            <remarks>
            Use the <i>packageStream</i> parameter to specify an object that derives from the <see cref="T:System.IO.Stream"/> class,
            which is designed to write to streams. Classes that derive from the <see cref="T:System.IO.Stream"/> class include: 
            <see cref="T:System.IO.BufferedStream"/>, <see cref="T:System.IO.FileStream"/>, <see cref="T:System.IO.MemoryStream"/>, etc.
            </remarks>
        </member>
        <member name="M:Telerik.Reporting.ReportPackager.UnpackageDocument(System.IO.Stream)">
            <summary>
            Unpackages the TRDP and TRBP documents contained by the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="packageStream">The stream that contains the package to unpackage.</param>
            <returns>The <see cref="N:Telerik.Reporting"/> object being deserialized.</returns>
            <remarks>
            Use the <i>packageStream</i> parameter to specify an object that derives from the <see cref="T:System.IO.Stream"/> class,
            which is designed to write to streams. Classes that derive from the <see cref="T:System.IO.Stream"/> class include: 
            <see cref="T:System.IO.BufferedStream"/>, <see cref="T:System.IO.FileStream"/>, <see cref="T:System.IO.MemoryStream"/>, etc.
            </remarks>
        </member>
        <member name="T:Telerik.Reporting.XmlSerialization.ReportXmlSerializer">
            <summary>
            Serializes and deserializes objects into and from XML.
            This class is dedicated for serializing and deserializing objects
            only from the <see cref="N:Telerik.Reporting"/> namespace.
            </summary>
            <example>
            <para>The following example demonstrates how to create a report definition, how to serialize and deserialize it in XML and the corresponding XML output.</para>
            <para>
            <title>Creating the report definition:</title>
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\XmlSerializationSnippets.cs" region="ReportDefinitionSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\XmlSerializationSnippets.vb" region="ReportDefinitionSnippet"/>
            </para>
            <para>
            <title>Serialize the report definition to an XML file: </title>
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\XmlSerializationSnippets.cs" region="XmlWriterSerializationSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\XmlSerializationSnippets.vb" region="XmlWriterSerializationSnippet"/>
            </para>
            <para>
            <title>Deserialize the report definition from a file: </title>
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\XmlSerializationSnippets.cs" region="XmlReaderDeserializationSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\XmlSerializationSnippets.vb" region="XmlReaderDeserializationSnippet"/>
            </para>
            <para>
            <title>Serialized Report Definition in XML </title>
            <code lang="XML" source="CodeSnippets\CS\Report1.xml"/>
            </para>
            </example>
        </member>
        <member name="M:Telerik.Reporting.XmlSerialization.ReportXmlSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Reporting.XmlSerialization.ReportXmlSerializer"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Reporting.XmlSerialization.ReportXmlSerializer.Serialize(System.IO.TextWriter,System.Object)">
            <summary>
            Serializes the specified value and writes the XML document to the specified <see cref="T:System.IO.TextWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.IO.TextWriter"/> used to write the XML document.</param>
            <param name="value">The value to serialize.</param>
            <remarks>
            In the <i>textWriter</i> parameter, specify an object that derives from the abstract <see cref="T:System.IO.TextWriter"/> class.
            Classes that derive from the <see cref="T:System.IO.TextWriter"/> class include: 
            <see cref="T:System.IO.StreamWriter"/>, <see cref="T:System.IO.StringWriter"/>, etc.
            </remarks>
            <example>
            The following examples serializes an object using a <see cref="T:System.IO.TextWriter"/>:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\XmlSerializationSnippets.cs" region="TextWriterSerializationSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\XmlSerializationSnippets.vb" region="TextWriterSerializationSnippet"/>
            </example>
        </member>
        <member name="M:Telerik.Reporting.XmlSerialization.ReportXmlSerializer.Serialize(System.IO.Stream,System.Object)">
            <summary>
            Serializes the specified value and writes the XML document to the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> used to write the XML document.</param>
            <param name="value">The value to serialize.</param>
            <remarks>
            Use the <i>stream</i> parameter to specify an object that derives from the abstract 
            <see cref="T:System.IO.Stream"/> class. Classes that derive from the <see cref="T:System.IO.Stream"/> class include: 
            <see cref="T:System.IO.BufferedStream"/>, <see cref="T:System.IO.FileStream"/>, <see cref="T:System.IO.MemoryStream"/>, etc.
            </remarks>
            <example>
            The following examples serializes an object using a <see cref="T:System.IO.Stream"/>:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\XmlSerializationSnippets.cs" region="StreamSerializationSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\XmlSerializationSnippets.vb" region="StreamSerializationSnippet"/>
            </example>
        </member>
        <member name="M:Telerik.Reporting.XmlSerialization.ReportXmlSerializer.Serialize(System.String,System.Object)">
            <summary>
            Serializes the specified value and writes the XML document to a file with the specified file name.
            </summary>
            <param name="fileName">The file which you want to write to. The <see cref="T:Telerik.Reporting.XmlSerialization.ReportXmlSerializer"/> creates a file at the specified path
            and writes to it in XML 1.0 text syntax. The <i>fileName</i> must be a file system path.</param>
            <param name="value">The value to serialize.</param>
            <example>
            The following example serializes an object using a file path:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\XmlSerializationSnippets.cs" region="FilePathSerializationSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\XmlSerializationSnippets.vb" region="FilePathSerializationSnippet"/>
            </example>
        </member>
        <member name="M:Telerik.Reporting.XmlSerialization.ReportXmlSerializer.Serialize(System.Xml.XmlWriter,System.Object)">
            <summary>
            Serializes the specified value and writes the XML document to the specified <see cref="T:System.Xml.XmlWriter"/>.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> used to write the XML document.</param>
            <param name="value">The value to serialize.</param>
            <remarks>
            In the <i>xmlWriter</i> parameter, specify an object that derives from the abstract
            <see cref="T:System.Xml.XmlWriter"/> class. For example you can use the <see cref="T:System.Xml.XmlTextWriter"/> class.
            </remarks>
            <example>
            The following example serializes an object using a <see cref="T:System.Xml.XmlWriter"/>:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\XmlSerializationSnippets.cs" region="XmlWriterSerializationSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\XmlSerializationSnippets.vb" region="XmlWriterSerializationSnippet"/>
            </example>
        </member>
        <member name="M:Telerik.Reporting.XmlSerialization.ReportXmlSerializer.Deserialize(System.IO.TextReader)">
            <summary>
            Deserializes the XML document contained by the specified <see cref="T:System.IO.TextReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.IO.TextReader"/> that contains the XML document to deserialize.</param>
            <returns>The <see cref="N:Telerik.Reporting"/> object being deserialized.</returns>
            <remarks>
            Classes that inherit from <see cref="T:System.IO.TextReader"/> include <see cref="T:System.IO.StringReader"/> and <see cref="T:System.IO.StreamReader"/>. If you 
            are using a <see cref="T:System.IO.StreamReader"/> to deserialize an object, you must construct the <see cref="T:System.IO.StreamReader"/> with an
            appropriate <see cref="T:System.Text.Encoding"/>. The encoding specified by the XML document is ignored.
            </remarks>
            <example>
            The following example deserializes an object using a <see cref="T:System.IO.TextReader"/>:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\XmlSerializationSnippets.cs" region="TextReaderSerializationSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\XmlSerializationSnippets.vb" region="TextReaderSerializationSnippet"/>
            </example>
        </member>
        <member name="M:Telerik.Reporting.XmlSerialization.ReportXmlSerializer.Deserialize(System.IO.Stream)">
            <summary>
            Deserializes the XML document contained by the specified <see cref="T:System.IO.Stream"/>.
            </summary>
            <param name="stream">The <see cref="T:System.IO.Stream"/> that contains the XML document to deserialize.</param>
            <returns>The <see cref="N:Telerik.Reporting"/> object being deserialized.</returns>
            <remarks>
            Use the <i>stream</i> parameter to specify an object that derives from the <see cref="T:System.IO.Stream"/> class,
            which is designed to write to streams. Classes that derive from the <see cref="T:System.IO.Stream"/> class include: 
            <see cref="T:System.IO.BufferedStream"/>, <see cref="T:System.IO.FileStream"/>, <see cref="T:System.IO.MemoryStream"/>, etc.
            </remarks>
            <example>
            The following example deserializes an object using a <see cref="T:System.IO.Stream"/>:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\XmlSerializationSnippets.cs" region="StreamDeserializationSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\XmlSerializationSnippets.vb" region="StreamDeserializationSnippet"/>
            </example>
        </member>
        <member name="M:Telerik.Reporting.XmlSerialization.ReportXmlSerializer.Deserialize(System.String)">
            <summary>
            Deserializes the XML document from the specified URI.
            </summary>
            <param name="intputUri">The URI for the file containing the XML data.</param>
            <returns>The <see cref="N:Telerik.Reporting"/> object being deserialized.</returns>
            <example>
            The following example deserializes an object using a URI:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\XmlSerializationSnippets.cs" region="InputUriDeserializationSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\XmlSerializationSnippets.vb" region="InputUriDeserializationSnippet"/>
            </example>
        </member>
        <member name="M:Telerik.Reporting.XmlSerialization.ReportXmlSerializer.Deserialize(System.Xml.XmlReader)">
            <summary>
            Deserializes the XML document contained by the specified <see cref="T:System.Xml.XmlReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> that contains the XML document to deserialize.</param>
            <returns>The <see cref="N:Telerik.Reporting"/> object being deserialized.</returns>
            <example>
            The following example deserializes an object using a <see cref="T:System.Xml.XmlReader"/>:
            <code lang="C#" source="CodeSnippets\CS\API\Telerik\Reporting\XmlSerializationSnippets.cs" region="XmlReaderDeserializationSnippet"/>
            <code lang="VB" source="CodeSnippets\VB\API\Telerik\Reporting\XmlSerializationSnippets.vb" region="XmlReaderDeserializationSnippet"/>
            </example>
        </member>
    </members>
</doc>
